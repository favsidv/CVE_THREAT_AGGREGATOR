,Titre du bulletin (ANSSI),Type de bulletin,Date de publication,Identifiant CVE,Score CVSS,Base Severity,Type CWE,Score EPSS,Lien du bulletin (ANSSI),Description,Éditeur,Produit,Versions affectées
1469,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2023-52497,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

erofs: fix lz4 inplace decompression

Currently EROFS can map another compressed buffer for inplace
decompression, that was used to handle the cases that some pages of
compressed data are actually not in-place I/O.

However, like most simple LZ77 algorithms, LZ4 expects the compressed
data is arranged at the end of the decompressed buffer and it
explicitly uses memmove() to handle overlapping:
  __________________________________________________________
 |_ direction of decompression --> ____ |_ compressed data _|

Although EROFS arranges compressed data like this, it typically maps two
individual virtual buffers so the relative order is uncertain.
Previously, it was hardly observed since LZ4 only uses memmove() for
short overlapped literals and x86/arm64 memmove implementations seem to
completely cover it up and they don't have this issue.  Juhyung reported
that EROFS data corruption can be found on a new Intel x86 processor.
After some analysis, it seems that recent x86 processors with the new
FSRM feature expose this issue with ""rep movsb"".

Let's strictly use the decompressed buffer for lz4 inplace
decompression for now.  Later, as an useful improvement, we could try
to tie up these two buffers together in the correct order.",Linux,Linux,"0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9"
1489,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-36953,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: vgic-v2: Check for non-NULL vCPU in vgic_v2_parse_attr()

vgic_v2_parse_attr() is responsible for finding the vCPU that matches
the user-provided CPUID, which (of course) may not be valid. If the ID
is invalid, kvm_get_vcpu_by_id() returns NULL, which isn't handled
gracefully.

Similar to the GICv3 uaccess flow, check that kvm_get_vcpu_by_id()
actually returns something and fail the ioctl if not.",Linux,Linux,"7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab"
1501,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26585,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

tls: fix race between tx work scheduling and socket close

Similarly to previous commit, the submitting thread (recvmsg/sendmsg)
may exit as soon as the async crypto handler calls complete().
Reorder scheduling the work before calling complete().
This seems more logical in the first place, as it's
the inverse order of what the submitting thread will do.",Linux,Linux,"a42055e8d2c30d4decfc13ce943d09c7b9dad221, a42055e8d2c30d4decfc13ce943d09c7b9dad221, a42055e8d2c30d4decfc13ce943d09c7b9dad221, a42055e8d2c30d4decfc13ce943d09c7b9dad221, a42055e8d2c30d4decfc13ce943d09c7b9dad221"
1500,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-36904,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: Use refcount_inc_not_zero() in tcp_twsk_unique().

Anderson Nascimento reported a use-after-free splat in tcp_twsk_unique()
with nice analysis.

Since commit ec94c2696f0b (""tcp/dccp: avoid one atomic operation for
timewait hashdance""), inet_twsk_hashdance() sets TIME-WAIT socket's
sk_refcnt after putting it into ehash and releasing the bucket lock.

Thus, there is a small race window where other threads could try to
reuse the port during connect() and call sock_hold() in tcp_twsk_unique()
for the TIME-WAIT socket with zero refcnt.

If that happens, the refcnt taken by tcp_twsk_unique() is overwritten
and sock_put() will cause underflow, triggering a real use-after-free
somewhere else.

To avoid the use-after-free, we need to use refcount_inc_not_zero() in
tcp_twsk_unique() and give up on reusing the port if it returns false.

[0]:
refcount_t: addition on 0; use-after-free.
WARNING: CPU: 0 PID: 1039313 at lib/refcount.c:25 refcount_warn_saturate+0xe5/0x110
CPU: 0 PID: 1039313 Comm: trigger Not tainted 6.8.6-200.fc39.x86_64 #1
Hardware name: VMware, Inc. VMware20,1/440BX Desktop Reference Platform, BIOS VMW201.00V.21805430.B64.2305221830 05/22/2023
RIP: 0010:refcount_warn_saturate+0xe5/0x110
Code: 42 8e ff 0f 0b c3 cc cc cc cc 80 3d aa 13 ea 01 00 0f 85 5e ff ff ff 48 c7 c7 f8 8e b7 82 c6 05 96 13 ea 01 01 e8 7b 42 8e ff <0f> 0b c3 cc cc cc cc 48 c7 c7 50 8f b7 82 c6 05 7a 13 ea 01 01 e8
RSP: 0018:ffffc90006b43b60 EFLAGS: 00010282
RAX: 0000000000000000 RBX: ffff888009bb3ef0 RCX: 0000000000000027
RDX: ffff88807be218c8 RSI: 0000000000000001 RDI: ffff88807be218c0
RBP: 0000000000069d70 R08: 0000000000000000 R09: ffffc90006b439f0
R10: ffffc90006b439e8 R11: 0000000000000003 R12: ffff8880029ede84
R13: 0000000000004e20 R14: ffffffff84356dc0 R15: ffff888009bb3ef0
FS:  00007f62c10926c0(0000) GS:ffff88807be00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020ccb000 CR3: 000000004628c005 CR4: 0000000000f70ef0
PKRU: 55555554
Call Trace:
 <TASK>
 ? refcount_warn_saturate+0xe5/0x110
 ? __warn+0x81/0x130
 ? refcount_warn_saturate+0xe5/0x110
 ? report_bug+0x171/0x1a0
 ? refcount_warn_saturate+0xe5/0x110
 ? handle_bug+0x3c/0x80
 ? exc_invalid_op+0x17/0x70
 ? asm_exc_invalid_op+0x1a/0x20
 ? refcount_warn_saturate+0xe5/0x110
 tcp_twsk_unique+0x186/0x190
 __inet_check_established+0x176/0x2d0
 __inet_hash_connect+0x74/0x7d0
 ? __pfx___inet_check_established+0x10/0x10
 tcp_v4_connect+0x278/0x530
 __inet_stream_connect+0x10f/0x3d0
 inet_stream_connect+0x3a/0x60
 __sys_connect+0xa8/0xd0
 __x64_sys_connect+0x18/0x20
 do_syscall_64+0x83/0x170
 entry_SYSCALL_64_after_hwframe+0x78/0x80
RIP: 0033:0x7f62c11a885d
Code: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a3 45 0c 00 f7 d8 64 89 01 48
RSP: 002b:00007f62c1091e58 EFLAGS: 00000296 ORIG_RAX: 000000000000002a
RAX: ffffffffffffffda RBX: 0000000020ccb004 RCX: 00007f62c11a885d
RDX: 0000000000000010 RSI: 0000000020ccb000 RDI: 0000000000000003
RBP: 00007f62c1091e90 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000296 R12: 00007f62c10926c0
R13: ffffffffffffff88 R14: 0000000000000000 R15: 00007ffe237885b0
 </TASK>",Linux,Linux,"ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d, ec94c2696f0bcd5ae92a553244e4ac30d2171a2d"
1499,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-52846,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

hsr: Prevent use after free in prp_create_tagged_frame()

The prp_fill_rct() function can fail.  In that situation, it frees the
skb and returns NULL.  Meanwhile on the success path, it returns the
original skb.  So it's straight forward to fix bug by using the returned
value.",Linux,Linux,"451d8123f89791bb628277c0bdb4cae34a3563e6, 451d8123f89791bb628277c0bdb4cae34a3563e6, 451d8123f89791bb628277c0bdb4cae34a3563e6, 451d8123f89791bb628277c0bdb4cae34a3563e6, 451d8123f89791bb628277c0bdb4cae34a3563e6, 451d8123f89791bb628277c0bdb4cae34a3563e6"
1498,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-47291,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: fix another slab-out-of-bounds in fib6_nh_flush_exceptions

While running the self-tests on a KASAN enabled kernel, I observed a
slab-out-of-bounds splat very similar to the one reported in
commit 821bbf79fe46 (""ipv6: Fix KASAN: slab-out-of-bounds Read in
 fib6_nh_flush_exceptions"").

We additionally need to take care of fib6_metrics initialization
failure when the caller provides an nh.

The fix is similar, explicitly free the route instead of calling
fib6_info_release on a half-initialized object.",Linux,Linux,"f88d8ea67fbdbac7a64bfa6ed9a2ba27bb822f74, f88d8ea67fbdbac7a64bfa6ed9a2ba27bb822f74, f88d8ea67fbdbac7a64bfa6ed9a2ba27bb822f74, f88d8ea67fbdbac7a64bfa6ed9a2ba27bb822f74"
1497,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35949,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: make sure that WRITTEN is set on all metadata blocks

We previously would call btrfs_check_leaf() if we had the check
integrity code enabled, which meant that we could only run the extended
leaf checks if we had WRITTEN set on the header flags.

This leaves a gap in our checking, because we could end up with
corruption on disk where WRITTEN isn't set on the leaf, and then the
extended leaf checks don't get run which we rely on to validate all of
the item pointers to make sure we don't access memory outside of the
extent buffer.

However, since 732fab95abe2 (""btrfs: check-integrity: remove
CONFIG_BTRFS_FS_CHECK_INTEGRITY option"") we no longer call
btrfs_check_leaf() from btrfs_mark_buffer_dirty(), which means we only
ever call it on blocks that are being written out, and thus have WRITTEN
set, or that are being read in, which should have WRITTEN set.

Add checks to make sure we have WRITTEN set appropriately, and then make
sure __btrfs_check_leaf() always does the item checking.  This will
protect us from file systems that have been corrupted and no longer have
WRITTEN set on some of the blocks.

This was hit on a crafted image tweaking the WRITTEN bit and reported by
KASAN as out-of-bound access in the eb accessors. The example is a dir
item at the end of an eb.

  [2.042] BTRFS warning (device loop1): bad eb member start: ptr 0x3fff start 30572544 member offset 16410 size 2
  [2.040] general protection fault, probably for non-canonical address 0xe0009d1000000003: 0000 [#1] PREEMPT SMP KASAN NOPTI
  [2.537] KASAN: maybe wild-memory-access in range [0x0005088000000018-0x000508800000001f]
  [2.729] CPU: 0 PID: 2587 Comm: mount Not tainted 6.8.2 #1
  [2.729] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
  [2.621] RIP: 0010:btrfs_get_16+0x34b/0x6d0
  [2.621] RSP: 0018:ffff88810871fab8 EFLAGS: 00000206
  [2.621] RAX: 0000a11000000003 RBX: ffff888104ff8720 RCX: ffff88811b2288c0
  [2.621] RDX: dffffc0000000000 RSI: ffffffff81dd8aca RDI: ffff88810871f748
  [2.621] RBP: 000000000000401a R08: 0000000000000001 R09: ffffed10210e3ee9
  [2.621] R10: ffff88810871f74f R11: 205d323430333737 R12: 000000000000001a
  [2.621] R13: 000508800000001a R14: 1ffff110210e3f5d R15: ffffffff850011e8
  [2.621] FS:  00007f56ea275840(0000) GS:ffff88811b200000(0000) knlGS:0000000000000000
  [2.621] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  [2.621] CR2: 00007febd13b75c0 CR3: 000000010bb50000 CR4: 00000000000006f0
  [2.621] Call Trace:
  [2.621]  <TASK>
  [2.621]  ? show_regs+0x74/0x80
  [2.621]  ? die_addr+0x46/0xc0
  [2.621]  ? exc_general_protection+0x161/0x2a0
  [2.621]  ? asm_exc_general_protection+0x26/0x30
  [2.621]  ? btrfs_get_16+0x33a/0x6d0
  [2.621]  ? btrfs_get_16+0x34b/0x6d0
  [2.621]  ? btrfs_get_16+0x33a/0x6d0
  [2.621]  ? __pfx_btrfs_get_16+0x10/0x10
  [2.621]  ? __pfx_mutex_unlock+0x10/0x10
  [2.621]  btrfs_match_dir_item_name+0x101/0x1a0
  [2.621]  btrfs_lookup_dir_item+0x1f3/0x280
  [2.621]  ? __pfx_btrfs_lookup_dir_item+0x10/0x10
  [2.621]  btrfs_get_tree+0xd25/0x1910

[ copy more details from report ]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1496,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53213,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net: usb: lan78xx: Fix double free issue with interrupt buffer allocation

In lan78xx_probe(), the buffer `buf` was being freed twice: once
implicitly through `usb_free_urb(dev->urb_intr)` with the
`URB_FREE_BUFFER` flag and again explicitly by `kfree(buf)`. This caused
a double free issue.

To resolve this, reordered `kmalloc()` and `usb_alloc_urb()` calls to
simplify the initialization sequence and removed the redundant
`kfree(buf)`.  Now, `buf` is allocated after `usb_alloc_urb()`, ensuring
it is correctly managed by  `usb_fill_int_urb()` and freed by
`usb_free_urb()` as intended.",Linux,Linux,"a6df95cae40bee555e01a37b4023ce8e97ffa249, a6df95cae40bee555e01a37b4023ce8e97ffa249, a6df95cae40bee555e01a37b4023ce8e97ffa249, a6df95cae40bee555e01a37b4023ce8e97ffa249, a6df95cae40bee555e01a37b4023ce8e97ffa249"
1495,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53222,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

zram: fix NULL pointer in comp_algorithm_show()

LTP reported a NULL pointer dereference as followed:

 CPU: 7 UID: 0 PID: 5995 Comm: cat Kdump: loaded Not tainted 6.12.0-rc6+ #3
 Hardware name: QEMU KVM Virtual Machine, BIOS 0.0.0 02/06/2015
 pstate: 40400005 (nZcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : __pi_strcmp+0x24/0x140
 lr : zcomp_available_show+0x60/0x100 [zram]
 sp : ffff800088b93b90
 x29: ffff800088b93b90 x28: 0000000000000001 x27: 0000000000400cc0
 x26: 0000000000000ffe x25: ffff80007b3e2388 x24: 0000000000000000
 x23: ffff80007b3e2390 x22: ffff0004041a9000 x21: ffff80007b3e2900
 x20: 0000000000000000 x19: 0000000000000000 x18: 0000000000000000
 x17: 0000000000000000 x16: 0000000000000000 x15: 0000000000000000
 x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000
 x11: 0000000000000000 x10: ffff80007b3e2900 x9 : ffff80007b3cb280
 x8 : 0101010101010101 x7 : 0000000000000000 x6 : 0000000000000000
 x5 : 0000000000000040 x4 : 0000000000000000 x3 : 00656c722d6f7a6c
 x2 : 0000000000000000 x1 : ffff80007b3e2900 x0 : 0000000000000000
 Call trace:
  __pi_strcmp+0x24/0x140
  comp_algorithm_show+0x40/0x70 [zram]
  dev_attr_show+0x28/0x80
  sysfs_kf_seq_show+0x90/0x140
  kernfs_seq_show+0x34/0x48
  seq_read_iter+0x1d4/0x4e8
  kernfs_fop_read_iter+0x40/0x58
  new_sync_read+0x9c/0x168
  vfs_read+0x1a8/0x1f8
  ksys_read+0x74/0x108
  __arm64_sys_read+0x24/0x38
  invoke_syscall+0x50/0x120
  el0_svc_common.constprop.0+0xc8/0xf0
  do_el0_svc+0x24/0x38
  el0_svc+0x38/0x138
  el0t_64_sync_handler+0xc0/0xc8
  el0t_64_sync+0x188/0x190

The zram->comp_algs[ZRAM_PRIMARY_COMP] can be NULL in zram_add() if
comp_algorithm_set() has not been called.  User can access the zram device
by sysfs after device_add_disk(), so there is a time window to trigger the
NULL pointer dereference.  Move it ahead device_add_disk() to make sure
when user can access the zram device, it is ready.  comp_algorithm_set()
is protected by zram->init_lock in other places and no such problem.",Linux,Linux,"7ac07a26dea79c3892436bce41cce03dcbd3c4c7, 7ac07a26dea79c3892436bce41cce03dcbd3c4c7"
1494,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56549,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

cachefiles: Fix NULL pointer dereference in object->file

At present, the object->file has the NULL pointer dereference problem in
ondemand-mode. The root cause is that the allocated fd and object->file
lifetime are inconsistent, and the user-space invocation to anon_fd uses
object->file. Following is the process that triggers the issue:

	  [write fd]				[umount]
cachefiles_ondemand_fd_write_iter
				       fscache_cookie_state_machine
					 cachefiles_withdraw_cookie
  if (!file) return -ENOBUFS
					   cachefiles_clean_up_object
					     cachefiles_unmark_inode_in_use
					     fput(object->file)
					     object->file = NULL
  // file NULL pointer dereference!
  __cachefiles_write(..., file, ...)

Fix this issue by add an additional reference count to the object->file
before write/llseek, and decrement after it finished.",Linux,Linux,"c8383054506c77b814489c09877b5db83fd4abf2, c8383054506c77b814489c09877b5db83fd4abf2, c8383054506c77b814489c09877b5db83fd4abf2"
1493,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50262,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix out-of-bounds write in trie_get_next_key()

trie_get_next_key() allocates a node stack with size trie->max_prefixlen,
while it writes (trie->max_prefixlen + 1) nodes to the stack when it has
full paths from the root to leaves. For example, consider a trie with
max_prefixlen is 8, and the nodes with key 0x00/0, 0x00/1, 0x00/2, ...
0x00/8 inserted. Subsequent calls to trie_get_next_key with _key with
.prefixlen = 8 make 9 nodes be written on the node stack with size 8.",Linux,Linux,"b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd, b471f2f1de8b816f1e799b80aa92588f3566e4bd"
1492,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2022-48651,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ipvlan: Fix out-of-bound bugs caused by unset skb->mac_header

If an AF_PACKET socket is used to send packets through ipvlan and the
default xmit function of the AF_PACKET socket is changed from
dev_queue_xmit() to packet_direct_xmit() via setsockopt() with the option
name of PACKET_QDISC_BYPASS, the skb->mac_header may not be reset and
remains as the initial value of 65535, this may trigger slab-out-of-bounds
bugs as following:

=================================================================
UG: KASAN: slab-out-of-bounds in ipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]
PU: 2 PID: 1768 Comm: raw_send Kdump: loaded Not tainted 6.0.0-rc4+ #6
ardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-1.fc33
all Trace:
print_address_description.constprop.0+0x1d/0x160
print_report.cold+0x4f/0x112
kasan_report+0xa3/0x130
ipvlan_xmit_mode_l2+0xdb/0x330 [ipvlan]
ipvlan_start_xmit+0x29/0xa0 [ipvlan]
__dev_direct_xmit+0x2e2/0x380
packet_direct_xmit+0x22/0x60
packet_snd+0x7c9/0xc40
sock_sendmsg+0x9a/0xa0
__sys_sendto+0x18a/0x230
__x64_sys_sendto+0x74/0x90
do_syscall_64+0x3b/0x90
entry_SYSCALL_64_after_hwframe+0x63/0xcd

The root cause is:
  1. packet_snd() only reset skb->mac_header when sock->type is SOCK_RAW
     and skb->protocol is not specified as in packet_parse_headers()

  2. packet_direct_xmit() doesn't reset skb->mac_header as dev_queue_xmit()

In this case, skb->mac_header is 65535 when ipvlan_xmit_mode_l2() is
called. So when ipvlan_xmit_mode_l2() gets mac header with eth_hdr() which
use ""skb->head + skb->mac_header"", out-of-bound access occurs.

This patch replaces eth_hdr() with skb_eth_hdr() in ipvlan_xmit_mode_l2()
and reset mac header in multicast to solve this out-of-bound bug.",Linux,Linux,"2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269, 2ad7bf3638411cb547f2823df08166c13ab04269"
1491,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56536,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: cw1200: Fix potential NULL dereference

A recent refactoring was identified by static analysis to
cause a potential NULL dereference, fix this!",Linux,Linux,"2719a9e7156c4b3983b43db467c1ff96801bda99, 2719a9e7156c4b3983b43db467c1ff96801bda99, 2719a9e7156c4b3983b43db467c1ff96801bda99"
1490,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56645,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

can: j1939: j1939_session_new(): fix skb reference counting

Since j1939_session_skb_queue() does an extra skb_get() for each new
skb, do the same for the initial one in j1939_session_new() to avoid
refcount underflow.

[mkl: clean up commit message]",Linux,Linux,"9d71dd0c70099914fcd063135da3c580865e924c, 9d71dd0c70099914fcd063135da3c580865e924c, 9d71dd0c70099914fcd063135da3c580865e924c, 9d71dd0c70099914fcd063135da3c580865e924c, 9d71dd0c70099914fcd063135da3c580865e924c, 9d71dd0c70099914fcd063135da3c580865e924c, 9d71dd0c70099914fcd063135da3c580865e924c"
1488,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-35967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: SCO: Fix not validating setsockopt user input

syzbot reported sco_sock_setsockopt() is copying data without
checking user input length.

BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset
include/linux/sockptr.h:49 [inline]
BUG: KASAN: slab-out-of-bounds in copy_from_sockptr
include/linux/sockptr.h:55 [inline]
BUG: KASAN: slab-out-of-bounds in sco_sock_setsockopt+0xc0b/0xf90
net/bluetooth/sco.c:893
Read of size 4 at addr ffff88805f7b15a3 by task syz-executor.5/12578",Linux,Linux,"b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197"
1504,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56756,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-pci: fix freeing of the HMB descriptor table

The HMB descriptor table is sized to the maximum number of descriptors
that could be used for a given device, but __nvme_alloc_host_mem could
break out of the loop earlier on memory allocation failure and end up
using less descriptors than planned for, which leads to an incorrect
size passed to dma_free_coherent.

In practice this was not showing up because the number of descriptors
tends to be low and the dma coherent allocator always allocates and
frees at least a page.",Linux,Linux,"87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399, 87ad72a59a38d1df217cfd95bc222a2edfe5d399"
1487,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2021-47001,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

xprtrdma: Fix cwnd update ordering

After a reconnect, the reply handler is opening the cwnd (and thus
enabling more RPC Calls to be sent) /before/ rpcrdma_post_recvs()
can post enough Receive WRs to receive their replies. This causes an
RNR and the new connection is lost immediately.

The race is most clearly exposed when KASAN and disconnect injection
are enabled. This slows down rpcrdma_rep_create() enough to allow
the send side to post a bunch of RPC Calls before the Receive
completion handler can invoke ib_post_recv().",Linux,Linux,"2ae50ad68cd79224198b525f7bd645c9da98b6ff, 2ae50ad68cd79224198b525f7bd645c9da98b6ff, 2ae50ad68cd79224198b525f7bd645c9da98b6ff, 2ae50ad68cd79224198b525f7bd645c9da98b6ff"
1486,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2022-48938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

CDC-NCM: avoid overflow in sanity checking

A broken device may give an extreme offset like 0xFFF0
and a reasonable length for a fragment. In the sanity
check as formulated now, this will create an integer
overflow, defeating the sanity check. Both offset
and offset + len need to be checked in such a manner
that no overflow can occur.
And those quantities should be unsigned.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1485,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-38538,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: xmit: make sure we have at least eth header len bytes

syzbot triggered an uninit value[1] error in bridge device's xmit path
by sending a short (less than ETH_HLEN bytes) skb. To fix it check if
we can actually pull that amount instead of assuming.

Tested with dropwatch:
 drop at: br_dev_xmit+0xb93/0x12d0 [bridge] (0xffffffffc06739b3)
 origin: software
 timestamp: Mon May 13 11:31:53 2024 778214037 nsec
 protocol: 0x88a8
 length: 2
 original length: 2
 drop reason: PKT_TOO_SMALL

[1]
BUG: KMSAN: uninit-value in br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
 netdev_start_xmit include/linux/netdevice.h:4917 [inline]
 xmit_one net/core/dev.c:3531 [inline]
 dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547
 __dev_queue_xmit+0x34db/0x5350 net/core/dev.c:4341
 dev_queue_xmit include/linux/netdevice.h:3091 [inline]
 __bpf_tx_skb net/core/filter.c:2136 [inline]
 __bpf_redirect_common net/core/filter.c:2180 [inline]
 __bpf_redirect+0x14a6/0x1620 net/core/filter.c:2187
 ____bpf_clone_redirect net/core/filter.c:2460 [inline]
 bpf_clone_redirect+0x328/0x470 net/core/filter.c:2432
 ___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997
 __bpf_prog_run512+0xb5/0xe0 kernel/bpf/core.c:2238
 bpf_dispatcher_nop_func include/linux/bpf.h:1234 [inline]
 __bpf_prog_run include/linux/filter.h:657 [inline]
 bpf_prog_run include/linux/filter.h:664 [inline]
 bpf_test_run+0x499/0xc30 net/bpf/test_run.c:425
 bpf_prog_test_run_skb+0x14ea/0x1f20 net/bpf/test_run.c:1058
 bpf_prog_test_run+0x6b7/0xad0 kernel/bpf/syscall.c:4269
 __sys_bpf+0x6aa/0xd90 kernel/bpf/syscall.c:5678
 __do_sys_bpf kernel/bpf/syscall.c:5767 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5765 [inline]
 __x64_sys_bpf+0xa0/0xe0 kernel/bpf/syscall.c:5765
 x64_sys_call+0x96b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1484,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-42156,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

s390/pkey: Wipe copies of clear-key structures on failure

Wipe all sensitive data from stack for all IOCTLs, which convert a
clear-key into a protected- or secure-key.",Linux,Linux,"e80d4af0a320972aac58e2004d0ba4e44ef4c5c7, e80d4af0a320972aac58e2004d0ba4e44ef4c5c7, e80d4af0a320972aac58e2004d0ba4e44ef4c5c7"
1483,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2021-47101,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

asix: fix uninit-value in asix_mdio_read()

asix_read_cmd() may read less than sizeof(smsr) bytes and in this case
smsr will be uninitialized.

Fail log:
BUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]
BUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497
BUG: KMSAN: uninit-value in asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497
 asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]
 asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497
 asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497",Linux,Linux,"d9fe64e511144c1ee7d7555b4111f09dde9692ef, d9fe64e511144c1ee7d7555b4111f09dde9692ef"
1482,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-38597,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

eth: sungem: remove .ndo_poll_controller to avoid deadlocks

Erhard reports netpoll warnings from sungem:

  netpoll_send_skb_on_dev(): eth0 enabled interrupts in poll (gem_start_xmit+0x0/0x398)
  WARNING: CPU: 1 PID: 1 at net/core/netpoll.c:370 netpoll_send_skb+0x1fc/0x20c

gem_poll_controller() disables interrupts, which may sleep.
We can't sleep in netpoll, it has interrupts disabled completely.
Strangely, gem_poll_controller() doesn't even poll the completions,
and instead acts as if an interrupt has fired so it just schedules
NAPI and exits. None of this has been necessary for years, since
netpoll invokes NAPI directly.",Linux,Linux,"fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308"
1481,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-36968,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix div-by-zero in l2cap_le_flowctl_init()

l2cap_le_flowctl_init() can cause both div-by-zero and an integer
overflow since hdev->le_mtu may not fall in the valid range.

Move MTU from hci_dev to hci_conn to validate MTU and stop the connection
process earlier if MTU is invalid.
Also, add a missing validation in read_buffer_size() and make it return
an error value if the validation fails.
Now hci_conn_add() returns ERR_PTR() as it can fail due to the both a
kzalloc failure and invalid MTU value.

divide error: 0000 [#1] PREEMPT SMP KASAN NOPTI
CPU: 0 PID: 67 Comm: kworker/u5:0 Tainted: G        W          6.9.0-rc5+ #20
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Workqueue: hci0 hci_rx_work
RIP: 0010:l2cap_le_flowctl_init+0x19e/0x3f0 net/bluetooth/l2cap_core.c:547
Code: e8 17 17 0c 00 66 41 89 9f 84 00 00 00 bf 01 00 00 00 41 b8 02 00 00 00 4c
89 fe 4c 89 e2 89 d9 e8 27 17 0c 00 44 89 f0 31 d2 <66> f7 f3 89 c3 ff c3 4d 8d
b7 88 00 00 00 4c 89 f0 48 c1 e8 03 42
RSP: 0018:ffff88810bc0f858 EFLAGS: 00010246
RAX: 00000000000002a0 RBX: 0000000000000000 RCX: dffffc0000000000
RDX: 0000000000000000 RSI: ffff88810bc0f7c0 RDI: ffffc90002dcb66f
RBP: ffff88810bc0f880 R08: aa69db2dda70ff01 R09: 0000ffaaaaaaaaaa
R10: 0084000000ffaaaa R11: 0000000000000000 R12: ffff88810d65a084
R13: dffffc0000000000 R14: 00000000000002a0 R15: ffff88810d65a000
FS:  0000000000000000(0000) GS:ffff88811ac00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000100 CR3: 0000000103268003 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <TASK>
 l2cap_le_connect_req net/bluetooth/l2cap_core.c:4902 [inline]
 l2cap_le_sig_cmd net/bluetooth/l2cap_core.c:5420 [inline]
 l2cap_le_sig_channel net/bluetooth/l2cap_core.c:5486 [inline]
 l2cap_recv_frame+0xe59d/0x11710 net/bluetooth/l2cap_core.c:6809
 l2cap_recv_acldata+0x544/0x10a0 net/bluetooth/l2cap_core.c:7506
 hci_acldata_packet net/bluetooth/hci_core.c:3939 [inline]
 hci_rx_work+0x5e5/0xb20 net/bluetooth/hci_core.c:4176
 process_one_work kernel/workqueue.c:3254 [inline]
 process_scheduled_works+0x90f/0x1530 kernel/workqueue.c:3335
 worker_thread+0x926/0xe70 kernel/workqueue.c:3416
 kthread+0x2e3/0x380 kernel/kthread.c:388
 ret_from_fork+0x5c/0x90 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---",Linux,Linux,"6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf"
1480,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-35904,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

selinux: avoid dereference of garbage after mount failure

In case kern_mount() fails and returns an error pointer return in the
error branch instead of continuing and dereferencing the error pointer.

While on it drop the never read static variable selinuxfs_mount.",Linux,Linux,"0619f0f5e36f12e100ef294f5980cfe7c93ff23e, 0619f0f5e36f12e100ef294f5980cfe7c93ff23e, 0619f0f5e36f12e100ef294f5980cfe7c93ff23e"
1479,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2021-47501,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: Fix NULL pointer dereference in i40e_dbg_dump_desc

When trying to dump VFs VSI RX/TX descriptors
using debugfs there was a crash
due to NULL pointer dereference in i40e_dbg_dump_desc.
Added a check to i40e_dbg_dump_desc that checks if
VSI type is correct for dumping RX/TX descriptors.",Linux,Linux,"02e9c290814cc143ceccecb14eac3e7a05da745e, 02e9c290814cc143ceccecb14eac3e7a05da745e, 02e9c290814cc143ceccecb14eac3e7a05da745e"
1478,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-35963,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: hci_sock: Fix not validating setsockopt user input

Check user input length before copying data.",Linux,Linux,"09572fca7223bcf32c9f0d5e100d8381a81d55f4, 09572fca7223bcf32c9f0d5e100d8381a81d55f4, 09572fca7223bcf32c9f0d5e100d8381a81d55f4, 09572fca7223bcf32c9f0d5e100d8381a81d55f4"
1477,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2023-52821,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

drm/panel: fix a possible null pointer dereference

In versatile_panel_get_modes(), the return value of drm_mode_duplicate()
is assigned to mode, which will lead to a NULL pointer dereference
on failure of drm_mode_duplicate(). Add a check to avoid npd.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1476,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2022-48733,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix use-after-free after failure to create a snapshot

At ioctl.c:create_snapshot(), we allocate a pending snapshot structure and
then attach it to the transaction's list of pending snapshots. After that
we call btrfs_commit_transaction(), and if that returns an error we jump
to 'fail' label, where we kfree() the pending snapshot structure. This can
result in a later use-after-free of the pending snapshot:

1) We allocated the pending snapshot and added it to the transaction's
   list of pending snapshots;

2) We call btrfs_commit_transaction(), and it fails either at the first
   call to btrfs_run_delayed_refs() or btrfs_start_dirty_block_groups().
   In both cases, we don't abort the transaction and we release our
   transaction handle. We jump to the 'fail' label and free the pending
   snapshot structure. We return with the pending snapshot still in the
   transaction's list;

3) Another task commits the transaction. This time there's no error at
   all, and then during the transaction commit it accesses a pointer
   to the pending snapshot structure that the snapshot creation task
   has already freed, resulting in a user-after-free.

This issue could actually be detected by smatch, which produced the
following warning:

  fs/btrfs/ioctl.c:843 create_snapshot() warn: '&pending_snapshot->list' not removed from list

So fix this by not having the snapshot creation ioctl directly add the
pending snapshot to the transaction's list. Instead add the pending
snapshot to the transaction handle, and then at btrfs_commit_transaction()
we add the snapshot to the list only when we can guarantee that any error
returned after that point will result in a transaction abort, in which
case the ioctl code can safely free the pending snapshot and no one can
access it anymore.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1503,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-47598,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

sch_cake: do not call cake_destroy() from cake_init()

qdiscs are not supposed to call their own destroy() method
from init(), because core stack already does that.

syzbot was able to trigger use after free:

DEBUG_LOCKS_WARN_ON(lock->magic != lock)
WARNING: CPU: 0 PID: 21902 at kernel/locking/mutex.c:586 __mutex_lock_common kernel/locking/mutex.c:586 [inline]
WARNING: CPU: 0 PID: 21902 at kernel/locking/mutex.c:586 __mutex_lock+0x9ec/0x12f0 kernel/locking/mutex.c:740
Modules linked in:
CPU: 0 PID: 21902 Comm: syz-executor189 Not tainted 5.16.0-rc4-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
RIP: 0010:__mutex_lock_common kernel/locking/mutex.c:586 [inline]
RIP: 0010:__mutex_lock+0x9ec/0x12f0 kernel/locking/mutex.c:740
Code: 08 84 d2 0f 85 19 08 00 00 8b 05 97 38 4b 04 85 c0 0f 85 27 f7 ff ff 48 c7 c6 20 00 ac 89 48 c7 c7 a0 fe ab 89 e8 bf 76 ba ff <0f> 0b e9 0d f7 ff ff 48 8b 44 24 40 48 8d b8 c8 08 00 00 48 89 f8
RSP: 0018:ffffc9000627f290 EFLAGS: 00010282
RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
RDX: ffff88802315d700 RSI: ffffffff815f1db8 RDI: fffff52000c4fe44
RBP: ffff88818f28e000 R08: 0000000000000000 R09: 0000000000000000
R10: ffffffff815ebb5e R11: 0000000000000000 R12: 0000000000000000
R13: dffffc0000000000 R14: ffffc9000627f458 R15: 0000000093c30000
FS:  0000555556abc400(0000) GS:ffff8880b9c00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fda689c3303 CR3: 000000001cfbb000 CR4: 0000000000350ef0
Call Trace:
 <TASK>
 tcf_chain0_head_change_cb_del+0x2e/0x3d0 net/sched/cls_api.c:810
 tcf_block_put_ext net/sched/cls_api.c:1381 [inline]
 tcf_block_put_ext net/sched/cls_api.c:1376 [inline]
 tcf_block_put+0xbc/0x130 net/sched/cls_api.c:1394
 cake_destroy+0x3f/0x80 net/sched/sch_cake.c:2695
 qdisc_create.constprop.0+0x9da/0x10f0 net/sched/sch_api.c:1293
 tc_modify_qdisc+0x4c5/0x1980 net/sched/sch_api.c:1660
 rtnetlink_rcv_msg+0x413/0xb80 net/core/rtnetlink.c:5571
 netlink_rcv_skb+0x153/0x420 net/netlink/af_netlink.c:2496
 netlink_unicast_kernel net/netlink/af_netlink.c:1319 [inline]
 netlink_unicast+0x533/0x7d0 net/netlink/af_netlink.c:1345
 netlink_sendmsg+0x904/0xdf0 net/netlink/af_netlink.c:1921
 sock_sendmsg_nosec net/socket.c:704 [inline]
 sock_sendmsg+0xcf/0x120 net/socket.c:724
 ____sys_sendmsg+0x6e8/0x810 net/socket.c:2409
 ___sys_sendmsg+0xf3/0x170 net/socket.c:2463
 __sys_sendmsg+0xe5/0x1b0 net/socket.c:2492
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x35/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x44/0xae
RIP: 0033:0x7f1bb06badb9
Code: Unable to access opcode bytes at RIP 0x7f1bb06bad8f.
RSP: 002b:00007fff3012a658 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f1bb06badb9
RDX: 0000000000000000 RSI: 00000000200007c0 RDI: 0000000000000003
RBP: 0000000000000000 R08: 0000000000000003 R09: 0000000000000003
R10: 0000000000000003 R11: 0000000000000246 R12: 00007fff3012a688
R13: 00007fff3012a6a0 R14: 00007fff3012a6e0 R15: 00000000000013c2
 </TASK>",Linux,Linux,"046f6fd5daefac7f5abdafb436b30f63bc7c602b, 046f6fd5daefac7f5abdafb436b30f63bc7c602b, 046f6fd5daefac7f5abdafb436b30f63bc7c602b, 046f6fd5daefac7f5abdafb436b30f63bc7c602b, 046f6fd5daefac7f5abdafb436b30f63bc7c602b"
1505,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-27397,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: use timestamp to check for set element timeout

Add a timestamp field at the beginning of the transaction, store it
in the nftables per-netns area.

Update set backend .insert, .deactivate and sync gc path to use the
timestamp, this avoids that an element expires while control plane
transaction is still unfinished.

.lookup and .update, which are used from packet path, still use the
current time to check if the element has expired. And .get path and dump
also since this runs lockless under rcu read size lock. Then, there is
async gc which also needs to check the current time since it runs
asynchronously from a workqueue.",Linux,Linux,"c3e1b005ed1cc068fc9d454a6e745830d55d251d, c3e1b005ed1cc068fc9d454a6e745830d55d251d, c3e1b005ed1cc068fc9d454a6e745830d55d251d, c3e1b005ed1cc068fc9d454a6e745830d55d251d, c3e1b005ed1cc068fc9d454a6e745830d55d251d, c3e1b005ed1cc068fc9d454a6e745830d55d251d, c3e1b005ed1cc068fc9d454a6e745830d55d251d"
1534,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53200,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix null check for pipe_ctx->plane_state in hwss_setup_dpp

This commit addresses a null pointer dereference issue in
hwss_setup_dpp(). The issue could occur when pipe_ctx->plane_state is
null. The fix adds a check to ensure `pipe_ctx->plane_state` is not null
before accessing. This prevents a null pointer dereference.",Linux,Linux,"0baae624630788862bbd654741929007971e9d5b, 0baae624630788862bbd654741929007971e9d5b, 0baae624630788862bbd654741929007971e9d5b, 0baae624630788862bbd654741929007971e9d5b"
1520,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-39480,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

kdb: Fix buffer overflow during tab-complete

Currently, when the user attempts symbol completion with the Tab key, kdb
will use strncpy() to insert the completed symbol into the command buffer.
Unfortunately it passes the size of the source buffer rather than the
destination to strncpy() with predictably horrible results. Most obviously
if the command buffer is already full but cp, the cursor position, is in
the middle of the buffer, then we will write past the end of the supplied
buffer.

Fix this by replacing the dubious strncpy() calls with memmove()/memcpy()
calls plus explicit boundary checks to make sure we have enough space
before we start moving characters around.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1532,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-52340,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"The IPv6 implementation in the Linux kernel before 6.3 has a net/ipv6/route.c max_size threshold that can be consumed easily, e.g., leading to a denial of service (network is unreachable errors) when IPv6 packets are sent in a loop via a raw socket.",n/a,n/a,n/a
1531,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53157,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

firmware: arm_scpi: Check the DVFS OPP count returned by the firmware

Fix a kernel crash with the below call trace when the SCPI firmware
returns OPP count of zero.

dvfs_info.opp_count may be zero on some platforms during the reboot
test, and the kernel will crash after dereferencing the pointer to
kcalloc(info->count, sizeof(*opp), GFP_KERNEL).

  |  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000028
  |  Mem abort info:
  |    ESR = 0x96000004
  |    Exception class = DABT (current EL), IL = 32 bits
  |    SET = 0, FnV = 0
  |    EA = 0, S1PTW = 0
  |  Data abort info:
  |    ISV = 0, ISS = 0x00000004
  |    CM = 0, WnR = 0
  |  user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000faefa08c
  |  [0000000000000028] pgd=0000000000000000
  |  Internal error: Oops: 96000004 [#1] SMP
  |  scpi-hwmon: probe of PHYT000D:00 failed with error -110
  |  Process systemd-udevd (pid: 1701, stack limit = 0x00000000aaede86c)
  |  CPU: 2 PID: 1701 Comm: systemd-udevd Not tainted 4.19.90+ #1
  |  Hardware name: PHYTIUM LTD Phytium FT2000/4/Phytium FT2000/4, BIOS
  |  pstate: 60000005 (nZCv daif -PAN -UAO)
  |  pc : scpi_dvfs_recalc_rate+0x40/0x58 [clk_scpi]
  |  lr : clk_register+0x438/0x720
  |  Call trace:
  |   scpi_dvfs_recalc_rate+0x40/0x58 [clk_scpi]
  |   devm_clk_hw_register+0x50/0xa0
  |   scpi_clk_ops_init.isra.2+0xa0/0x138 [clk_scpi]
  |   scpi_clocks_probe+0x528/0x70c [clk_scpi]
  |   platform_drv_probe+0x58/0xa8
  |   really_probe+0x260/0x3d0
  |   driver_probe_device+0x12c/0x148
  |   device_driver_attach+0x74/0x98
  |   __driver_attach+0xb4/0xe8
  |   bus_for_each_dev+0x88/0xe0
  |   driver_attach+0x30/0x40
  |   bus_add_driver+0x178/0x2b0
  |   driver_register+0x64/0x118
  |   __platform_driver_register+0x54/0x60
  |   scpi_clocks_driver_init+0x24/0x1000 [clk_scpi]
  |   do_one_initcall+0x54/0x220
  |   do_init_module+0x54/0x1c8
  |   load_module+0x14a4/0x1668
  |   __se_sys_finit_module+0xf8/0x110
  |   __arm64_sys_finit_module+0x24/0x30
  |   el0_svc_common+0x78/0x170
  |   el0_svc_handler+0x38/0x78
  |   el0_svc+0x8/0x340
  |  Code: 937d7c00 a94153f3 a8c27bfd f9400421 (b8606820)
  |  ---[ end trace 06feb22469d89fa8 ]---
  |  Kernel panic - not syncing: Fatal exception
  |  SMP: stopping secondary CPUs
  |  Kernel Offset: disabled
  |  CPU features: 0x10,a0002008
  |  Memory Limit: none",Linux,Linux,"8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa, 8cb7cf56c9fe5412de238465b27ef35b4d2801aa"
1530,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53171,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ubifs: authentication: Fix use-after-free in ubifs_tnc_end_commit

After an insertion in TNC, the tree might split and cause a node to
change its `znode->parent`. A further deletion of other nodes in the
tree (which also could free the nodes), the aforementioned node's
`znode->cparent` could still point to a freed node. This
`znode->cparent` may not be updated when getting nodes to commit in
`ubifs_tnc_start_commit()`. This could then trigger a use-after-free
when accessing the `znode->cparent` in `write_index()` in
`ubifs_tnc_end_commit()`.

This can be triggered by running

  rm -f /etc/test-file.bin
  dd if=/dev/urandom of=/etc/test-file.bin bs=1M count=60 conv=fsync

in a loop, and with `CONFIG_UBIFS_FS_AUTHENTICATION`. KASAN then
reports:

  BUG: KASAN: use-after-free in ubifs_tnc_end_commit+0xa5c/0x1950
  Write of size 32 at addr ffffff800a3af86c by task ubifs_bgt0_20/153

  Call trace:
   dump_backtrace+0x0/0x340
   show_stack+0x18/0x24
   dump_stack_lvl+0x9c/0xbc
   print_address_description.constprop.0+0x74/0x2b0
   kasan_report+0x1d8/0x1f0
   kasan_check_range+0xf8/0x1a0
   memcpy+0x84/0xf4
   ubifs_tnc_end_commit+0xa5c/0x1950
   do_commit+0x4e0/0x1340
   ubifs_bg_thread+0x234/0x2e0
   kthread+0x36c/0x410
   ret_from_fork+0x10/0x20

  Allocated by task 401:
   kasan_save_stack+0x38/0x70
   __kasan_kmalloc+0x8c/0xd0
   __kmalloc+0x34c/0x5bc
   tnc_insert+0x140/0x16a4
   ubifs_tnc_add+0x370/0x52c
   ubifs_jnl_write_data+0x5d8/0x870
   do_writepage+0x36c/0x510
   ubifs_writepage+0x190/0x4dc
   __writepage+0x58/0x154
   write_cache_pages+0x394/0x830
   do_writepages+0x1f0/0x5b0
   filemap_fdatawrite_wbc+0x170/0x25c
   file_write_and_wait_range+0x140/0x190
   ubifs_fsync+0xe8/0x290
   vfs_fsync_range+0xc0/0x1e4
   do_fsync+0x40/0x90
   __arm64_sys_fsync+0x34/0x50
   invoke_syscall.constprop.0+0xa8/0x260
   do_el0_svc+0xc8/0x1f0
   el0_svc+0x34/0x70
   el0t_64_sync_handler+0x108/0x114
   el0t_64_sync+0x1a4/0x1a8

  Freed by task 403:
   kasan_save_stack+0x38/0x70
   kasan_set_track+0x28/0x40
   kasan_set_free_info+0x28/0x4c
   __kasan_slab_free+0xd4/0x13c
   kfree+0xc4/0x3a0
   tnc_delete+0x3f4/0xe40
   ubifs_tnc_remove_range+0x368/0x73c
   ubifs_tnc_remove_ino+0x29c/0x2e0
   ubifs_jnl_delete_inode+0x150/0x260
   ubifs_evict_inode+0x1d4/0x2e4
   evict+0x1c8/0x450
   iput+0x2a0/0x3c4
   do_unlinkat+0x2cc/0x490
   __arm64_sys_unlinkat+0x90/0x100
   invoke_syscall.constprop.0+0xa8/0x260
   do_el0_svc+0xc8/0x1f0
   el0_svc+0x34/0x70
   el0t_64_sync_handler+0x108/0x114
   el0t_64_sync+0x1a4/0x1a8

The offending `memcpy()` in `ubifs_copy_hash()` has a use-after-free
when a node becomes root in TNC but still has a `cparent` to an already
freed node. More specifically, consider the following TNC:

         zroot
         /
        /
      zp1
      /
     /
    zn

Inserting a new node `zn_new` with a key smaller then `zn` will trigger
a split in `tnc_insert()` if `zp1` is full:

         zroot
         /   \
        /     \
      zp1     zp2
      /         \
     /           \
  zn_new          zn

`zn->parent` has now been moved to `zp2`, *but* `zn->cparent` still
points to `zp1`.

Now, consider a removal of all the nodes _except_ `zn`. Just when
`tnc_delete()` is about to delete `zroot` and `zp2`:

         zroot
             \
              \
              zp2
                \
                 \
                 zn

`zroot` and `zp2` get freed and the tree collapses:

           zn

`zn` now becomes the new `zroot`.

`get_znodes_to_commit()` will now only find `zn`, the new `zroot`, and
`write_index()` will check its `znode->cparent` that wrongly points to
the already freed `zp1`. `ubifs_copy_hash()` thus gets wrongly called
with `znode->cparent->zbranch[znode->iip].hash` that triggers the
use-after-free!

Fix this by explicitly setting `znode->cparent` to `NULL` in
`get_znodes_to_commit()` for the root node. The search for the dirty
nodes
---truncated---",Linux,Linux,"16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31, 16a26b20d2afd0cf063816725b45b12e78d5bb31"
1529,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53111,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

mm/mremap: fix address wraparound in move_page_tables()

On 32-bit platforms, it is possible for the expression `len + old_addr <
old_end` to be false-positive if `len + old_addr` wraps around. 
`old_addr` is the cursor in the old range up to which page table entries
have been moved; so if the operation succeeded, `old_addr` is the *end* of
the old region, and adding `len` to it can wrap.

The overflow causes mremap() to mistakenly believe that PTEs have been
copied; the consequence is that mremap() bails out, but doesn't move the
PTEs back before the new VMA is unmapped, causing anonymous pages in the
region to be lost.  So basically if userspace tries to mremap() a
private-anon region and hits this bug, mremap() will return an error and
the private-anon region's contents appear to have been zeroed.

The idea of this check is that `old_end - len` is the original start
address, and writing the check that way also makes it easier to read; so
fix the check by rearranging the comparison accordingly.

(An alternate fix would be to refactor this function by introducing an
""orig_old_start"" variable or such.)


Tested in a VM with a 32-bit X86 kernel; without the patch:

```
user@horn:~/big_mremap$ cat test.c
#define _GNU_SOURCE
#include <stdlib.h>
#include <stdio.h>
#include <err.h>
#include <sys/mman.h>

#define ADDR1 ((void*)0x60000000)
#define ADDR2 ((void*)0x10000000)
#define SIZE          0x50000000uL

int main(void) {
  unsigned char *p1 = mmap(ADDR1, SIZE, PROT_READ|PROT_WRITE,
      MAP_ANONYMOUS|MAP_PRIVATE|MAP_FIXED_NOREPLACE, -1, 0);
  if (p1 == MAP_FAILED)
    err(1, ""mmap 1"");
  unsigned char *p2 = mmap(ADDR2, SIZE, PROT_NONE,
      MAP_ANONYMOUS|MAP_PRIVATE|MAP_FIXED_NOREPLACE, -1, 0);
  if (p2 == MAP_FAILED)
    err(1, ""mmap 2"");
  *p1 = 0x41;
  printf(""first char is 0x%02hhx\n"", *p1);
  unsigned char *p3 = mremap(p1, SIZE, SIZE,
      MREMAP_MAYMOVE|MREMAP_FIXED, p2);
  if (p3 == MAP_FAILED) {
    printf(""mremap() failed; first char is 0x%02hhx\n"", *p1);
  } else {
    printf(""mremap() succeeded; first char is 0x%02hhx\n"", *p3);
  }
}
user@horn:~/big_mremap$ gcc -static -o test test.c
user@horn:~/big_mremap$ setarch -R ./test
first char is 0x41
mremap() failed; first char is 0x00
```

With the patch:

```
user@horn:~/big_mremap$ setarch -R ./test
first char is 0x41
mremap() succeeded; first char is 0x41
```",Linux,Linux,"af8ca1c149069176e6322a77b532e3ffd99ccffe, af8ca1c149069176e6322a77b532e3ffd99ccffe"
1528,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-27398,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: Fix use-after-free bugs caused by sco_sock_timeout

When the sco connection is established and then, the sco socket
is releasing, timeout_work will be scheduled to judge whether
the sco disconnection is timeout. The sock will be deallocated
later, but it is dereferenced again in sco_sock_timeout. As a
result, the use-after-free bugs will happen. The root cause is
shown below:

    Cleanup Thread               |      Worker Thread
sco_sock_release                 |
  sco_sock_close                 |
    __sco_sock_close             |
      sco_sock_set_timer         |
        schedule_delayed_work    |
  sco_sock_kill                  |    (wait a time)
    sock_put(sk) //FREE          |  sco_sock_timeout
                                 |    sock_hold(sk) //USE

The KASAN report triggered by POC is shown below:

[   95.890016] ==================================================================
[   95.890496] BUG: KASAN: slab-use-after-free in sco_sock_timeout+0x5e/0x1c0
[   95.890755] Write of size 4 at addr ffff88800c388080 by task kworker/0:0/7
...
[   95.890755] Workqueue: events sco_sock_timeout
[   95.890755] Call Trace:
[   95.890755]  <TASK>
[   95.890755]  dump_stack_lvl+0x45/0x110
[   95.890755]  print_address_description+0x78/0x390
[   95.890755]  print_report+0x11b/0x250
[   95.890755]  ? __virt_addr_valid+0xbe/0xf0
[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0
[   95.890755]  kasan_report+0x139/0x170
[   95.890755]  ? update_load_avg+0xe5/0x9f0
[   95.890755]  ? sco_sock_timeout+0x5e/0x1c0
[   95.890755]  kasan_check_range+0x2c3/0x2e0
[   95.890755]  sco_sock_timeout+0x5e/0x1c0
[   95.890755]  process_one_work+0x561/0xc50
[   95.890755]  worker_thread+0xab2/0x13c0
[   95.890755]  ? pr_cont_work+0x490/0x490
[   95.890755]  kthread+0x279/0x300
[   95.890755]  ? pr_cont_work+0x490/0x490
[   95.890755]  ? kthread_blkcg+0xa0/0xa0
[   95.890755]  ret_from_fork+0x34/0x60
[   95.890755]  ? kthread_blkcg+0xa0/0xa0
[   95.890755]  ret_from_fork_asm+0x11/0x20
[   95.890755]  </TASK>
[   95.890755]
[   95.890755] Allocated by task 506:
[   95.890755]  kasan_save_track+0x3f/0x70
[   95.890755]  __kasan_kmalloc+0x86/0x90
[   95.890755]  __kmalloc+0x17f/0x360
[   95.890755]  sk_prot_alloc+0xe1/0x1a0
[   95.890755]  sk_alloc+0x31/0x4e0
[   95.890755]  bt_sock_alloc+0x2b/0x2a0
[   95.890755]  sco_sock_create+0xad/0x320
[   95.890755]  bt_sock_create+0x145/0x320
[   95.890755]  __sock_create+0x2e1/0x650
[   95.890755]  __sys_socket+0xd0/0x280
[   95.890755]  __x64_sys_socket+0x75/0x80
[   95.890755]  do_syscall_64+0xc4/0x1b0
[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f
[   95.890755]
[   95.890755] Freed by task 506:
[   95.890755]  kasan_save_track+0x3f/0x70
[   95.890755]  kasan_save_free_info+0x40/0x50
[   95.890755]  poison_slab_object+0x118/0x180
[   95.890755]  __kasan_slab_free+0x12/0x30
[   95.890755]  kfree+0xb2/0x240
[   95.890755]  __sk_destruct+0x317/0x410
[   95.890755]  sco_sock_release+0x232/0x280
[   95.890755]  sock_close+0xb2/0x210
[   95.890755]  __fput+0x37f/0x770
[   95.890755]  task_work_run+0x1ae/0x210
[   95.890755]  get_signal+0xe17/0xf70
[   95.890755]  arch_do_signal_or_restart+0x3f/0x520
[   95.890755]  syscall_exit_to_user_mode+0x55/0x120
[   95.890755]  do_syscall_64+0xd1/0x1b0
[   95.890755]  entry_SYSCALL_64_after_hwframe+0x67/0x6f
[   95.890755]
[   95.890755] The buggy address belongs to the object at ffff88800c388000
[   95.890755]  which belongs to the cache kmalloc-1k of size 1024
[   95.890755] The buggy address is located 128 bytes inside of
[   95.890755]  freed 1024-byte region [ffff88800c388000, ffff88800c388400)
[   95.890755]
[   95.890755] The buggy address belongs to the physical page:
[   95.890755] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff88800c38a800 pfn:0xc388
[   95.890755] head: order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0
[   95.890755] ano
---truncated---",Linux,Linux,"48669c81a65628ef234cbdd91b9395952c7c27fe, 37d7ae2b0578f2373674a755402ee722e96edc08, a1073aad497d0d071a71f61b721966a176d50c08, ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043"
1527,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53144,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: hci_event: Align BR/EDR JUST_WORKS paring with LE

This aligned BR/EDR JUST_WORKS method with LE which since 92516cd97fd4
(""Bluetooth: Always request for user confirmation for Just Works"")
always request user confirmation with confirm_hint set since the
likes of bluetoothd have dedicated policy around JUST_WORKS method
(e.g. main.conf:JustWorksRepairing).

CVE: CVE-2024-8805",Linux,Linux,"ba15a58b179ed76a7e887177f2b06de12c58ec8f, ba15a58b179ed76a7e887177f2b06de12c58ec8f, ba15a58b179ed76a7e887177f2b06de12c58ec8f, ba15a58b179ed76a7e887177f2b06de12c58ec8f, ba15a58b179ed76a7e887177f2b06de12c58ec8f"
1526,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53169,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-fabrics: fix kernel crash while shutting down controller

The nvme keep-alive operation, which executes at a periodic interval,
could potentially sneak in while shutting down a fabric controller.
This may lead to a race between the fabric controller admin queue
destroy code path (invoked while shutting down controller) and hw/hctx
queue dispatcher called from the nvme keep-alive async request queuing
operation. This race could lead to the kernel crash shown below:

Call Trace:
    autoremove_wake_function+0x0/0xbc (unreliable)
    __blk_mq_sched_dispatch_requests+0x114/0x24c
    blk_mq_sched_dispatch_requests+0x44/0x84
    blk_mq_run_hw_queue+0x140/0x220
    nvme_keep_alive_work+0xc8/0x19c [nvme_core]
    process_one_work+0x200/0x4e0
    worker_thread+0x340/0x504
    kthread+0x138/0x140
    start_kernel_thread+0x14/0x18

While shutting down fabric controller, if nvme keep-alive request sneaks
in then it would be flushed off. The nvme_keep_alive_end_io function is
then invoked to handle the end of the keep-alive operation which
decrements the admin->q_usage_counter and assuming this is the last/only
request in the admin queue then the admin->q_usage_counter becomes zero.
If that happens then blk-mq destroy queue operation (blk_mq_destroy_
queue()) which could be potentially running simultaneously on another
cpu (as this is the controller shutdown code path) would forward
progress and deletes the admin queue. So, now from this point onward
we are not supposed to access the admin queue resources. However the
issue here's that the nvme keep-alive thread running hw/hctx queue
dispatch operation hasn't yet finished its work and so it could still
potentially access the admin queue resource while the admin queue had
been already deleted and that causes the above crash.

The above kernel crash is regression caused due to changes implemented
in commit a54a93d0e359 (""nvme: move stopping keep-alive into
nvme_uninit_ctrl()""). Ideally we should stop keep-alive before destroyin
g the admin queue and freeing the admin tagset so that it wouldn't sneak
in during the shutdown operation. However we removed the keep alive stop
operation from the beginning of the controller shutdown code path in commit
a54a93d0e359 (""nvme: move stopping keep-alive into nvme_uninit_ctrl()"")
and added it under nvme_uninit_ctrl() which executes very late in the
shutdown code path after the admin queue is destroyed and its tagset is
removed. So this change created the possibility of keep-alive sneaking in
and interfering with the shutdown operation and causing observed kernel
crash.

To fix the observed crash, we decided to move nvme_stop_keep_alive() from
nvme_uninit_ctrl() to nvme_remove_admin_tag_set(). This change would ensure
that we don't forward progress and delete the admin queue until the keep-
alive operation is finished (if it's in-flight) or cancelled and that would
help contain the race condition explained above and hence avoid the crash.

Moving nvme_stop_keep_alive() to nvme_remove_admin_tag_set() instead of
adding nvme_stop_keep_alive() to the beginning of the controller shutdown
code path in nvme_stop_ctrl(), as was the case earlier before commit
a54a93d0e359 (""nvme: move stopping keep-alive into nvme_uninit_ctrl()""),
would help save one callsite of nvme_stop_keep_alive().",Linux,Linux,"a54a93d0e3599b05856971734e15418ac551a14c, a54a93d0e3599b05856971734e15418ac551a14c, a54a93d0e3599b05856971734e15418ac551a14c"
1525,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53142,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

initramfs: avoid filename buffer overrun

The initramfs filename field is defined in
Documentation/driver-api/early-userspace/buffer-format.rst as:

 37 cpio_file := ALGN(4) + cpio_header + filename + ""\0"" + ALGN(4) + data
...
 55 ============= ================== =========================
 56 Field name    Field size         Meaning
 57 ============= ================== =========================
...
 70 c_namesize    8 bytes            Length of filename, including final \0

When extracting an initramfs cpio archive, the kernel's do_name() path
handler assumes a zero-terminated path at @collected, passing it
directly to filp_open() / init_mkdir() / init_mknod().

If a specially crafted cpio entry carries a non-zero-terminated filename
and is followed by uninitialized memory, then a file may be created with
trailing characters that represent the uninitialized memory. The ability
to create an initramfs entry would imply already having full control of
the system, so the buffer overrun shouldn't be considered a security
vulnerability.

Append the output of the following bash script to an existing initramfs
and observe any created /initramfs_test_fname_overrunAA* path. E.g.
  ./reproducer.sh | gzip >> /myinitramfs

It's easiest to observe non-zero uninitialized memory when the output is
gzipped, as it'll overflow the heap allocated @out_buf in __gunzip(),
rather than the initrd_start+initrd_size block.

---- reproducer.sh ----
nilchar=""A""	# change to ""\0"" to properly zero terminate / pad
magic=""070701""
ino=1
mode=$(( 0100777 ))
uid=0
gid=0
nlink=1
mtime=1
filesize=0
devmajor=0
devminor=1
rdevmajor=0
rdevminor=0
csum=0
fname=""initramfs_test_fname_overrun""
namelen=$(( ${#fname} + 1 ))	# plus one to account for terminator

printf ""%s%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%s"" \
	$magic $ino $mode $uid $gid $nlink $mtime $filesize \
	$devmajor $devminor $rdevmajor $rdevminor $namelen $csum $fname

termpadlen=$(( 1 + ((4 - ((110 + $namelen) & 3)) % 4) ))
printf ""%.s${nilchar}"" $(seq 1 $termpadlen)
---- reproducer.sh ----

Symlink filename fields handled in do_symlink() won't overrun past the
data segment, due to the explicit zero-termination of the symlink
target.

Fix filename buffer overrun by aborting the initramfs FSM if any cpio
entry doesn't carry a zero-terminator at the expected (name_len - 1)
offset.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1524,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53150,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ALSA: usb-audio: Fix out of bounds reads when finding clock sources

The current USB-audio driver code doesn't check bLength of each
descriptor at traversing for clock descriptors.  That is, when a
device provides a bogus descriptor with a shorter bLength, the driver
might hit out-of-bounds reads.

For addressing it, this patch adds sanity checks to the validator
functions for the clock descriptor traversal.  When the descriptor
length is shorter than expected, it's skipped in the loop.

For the clock source and clock multiplier descriptors, we can just
check bLength against the sizeof() of each descriptor type.
OTOH, the clock selector descriptor of UAC2 and UAC3 has an array
of bNrInPins elements and two more fields at its tail, hence those
have to be checked in addition to the sizeof() check.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1523,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50228,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,n/a,n/a,n/a,
1522,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56667,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/i915: Fix NULL pointer dereference in capture_engine

When the intel_context structure contains NULL,
it raises a NULL pointer dereference error in drm_info().

(cherry picked from commit 754302a5bc1bd8fd3b7d85c168b0a1af6d4bba4d)",Linux,Linux,"e8a3319c31a14aa9925418bc7813c2866903b2c6, e8a3319c31a14aa9925418bc7813c2866903b2c6, e8a3319c31a14aa9925418bc7813c2866903b2c6"
1521,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53136,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

mm: revert ""mm: shmem: fix data-race in shmem_getattr()""

Revert d949d1d14fa2 (""mm: shmem: fix data-race in shmem_getattr()"") as
suggested by Chuck [1].  It is causing deadlocks when accessing tmpfs over
NFS.

As Hugh commented, ""added just to silence a syzbot sanitizer splat: added
where there has never been any practical problem"".",Linux,Linux,"9fb9703cd43ee20a6de8ccdef991677b7274cec0, 7cc30ada84323be19395094d567579536e0d187e, bda1a99a0dd644f31a87d636ac624eeb975cb65a, 3d9528484480e8f4979b3a347930ed383be99f89, 82cae1e30bd940253593c2d4f16d88343d1358f4, edd1f905050686fdc4cfe233d818469fdf7d5ff8, ffd56612566bc23877c8f45def2801f3324a222a, d949d1d14fa281ace388b1de978e8f2cd52875cf"
1519,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26852,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net/ipv6: avoid possible UAF in ip6_route_mpath_notify()

syzbot found another use-after-free in ip6_route_mpath_notify() [1]

Commit f7225172f25a (""net/ipv6: prevent use after free in
ip6_route_mpath_notify"") was not able to fix the root cause.

We need to defer the fib6_info_release() calls after
ip6_route_mpath_notify(), in the cleanup phase.

[1]
BUG: KASAN: slab-use-after-free in rt6_fill_node+0x1460/0x1ac0
Read of size 4 at addr ffff88809a07fc64 by task syz-executor.2/23037

CPU: 0 PID: 23037 Comm: syz-executor.2 Not tainted 6.8.0-rc4-syzkaller-01035-gea7f3cfaa588 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x1e7/0x2e0 lib/dump_stack.c:106
  print_address_description mm/kasan/report.c:377 [inline]
  print_report+0x167/0x540 mm/kasan/report.c:488
  kasan_report+0x142/0x180 mm/kasan/report.c:601
 rt6_fill_node+0x1460/0x1ac0
  inet6_rt_notify+0x13b/0x290 net/ipv6/route.c:6184
  ip6_route_mpath_notify net/ipv6/route.c:5198 [inline]
  ip6_route_multipath_add net/ipv6/route.c:5404 [inline]
  inet6_rtm_newroute+0x1d0f/0x2300 net/ipv6/route.c:5517
  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597
  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543
  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]
  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367
  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x221/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584
  ___sys_sendmsg net/socket.c:2638 [inline]
  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667
 do_syscall_64+0xf9/0x240
 entry_SYSCALL_64_after_hwframe+0x6f/0x77
RIP: 0033:0x7f73dd87dda9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f73de6550c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 00007f73dd9ac050 RCX: 00007f73dd87dda9
RDX: 0000000000000000 RSI: 0000000020000140 RDI: 0000000000000005
RBP: 00007f73dd8ca47a R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000006e R14: 00007f73dd9ac050 R15: 00007ffdbdeb7858
 </TASK>

Allocated by task 23037:
  kasan_save_stack mm/kasan/common.c:47 [inline]
  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
  poison_kmalloc_redzone mm/kasan/common.c:372 [inline]
  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:389
  kasan_kmalloc include/linux/kasan.h:211 [inline]
  __do_kmalloc_node mm/slub.c:3981 [inline]
  __kmalloc+0x22e/0x490 mm/slub.c:3994
  kmalloc include/linux/slab.h:594 [inline]
  kzalloc include/linux/slab.h:711 [inline]
  fib6_info_alloc+0x2e/0xf0 net/ipv6/ip6_fib.c:155
  ip6_route_info_create+0x445/0x12b0 net/ipv6/route.c:3758
  ip6_route_multipath_add net/ipv6/route.c:5298 [inline]
  inet6_rtm_newroute+0x744/0x2300 net/ipv6/route.c:5517
  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597
  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543
  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]
  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367
  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x221/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584
  ___sys_sendmsg net/socket.c:2638 [inline]
  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667
 do_syscall_64+0xf9/0x240
 entry_SYSCALL_64_after_hwframe+0x6f/0x77

Freed by task 16:
  kasan_save_stack mm/kasan/common.c:47 [inline]
  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
  kasan_save_free_info+0x4e/0x60 mm/kasan/generic.c:640
  poison_slab_object+0xa6/0xe0 m
---truncated---",Linux,Linux,"3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a"
1506,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56604,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: RFCOMM: avoid leaving dangling sk pointer in rfcomm_sock_alloc()

bt_sock_alloc() attaches allocated sk object to the provided sock object.
If rfcomm_dlc_alloc() fails, we release the sk object, but leave the
dangling pointer in the sock object, which may cause use-after-free.

Fix this by swapping calls to bt_sock_alloc() and rfcomm_dlc_alloc().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1518,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35839,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: bridge: replace physindev with physinif in nf_bridge_info

An skb can be added to a neigh->arp_queue while waiting for an arp
reply. Where original skb's skb->dev can be different to neigh's
neigh->dev. For instance in case of bridging dnated skb from one veth to
another, the skb would be added to a neigh->arp_queue of the bridge.

As skb->dev can be reset back to nf_bridge->physindev and used, and as
there is no explicit mechanism that prevents this physindev from been
freed under us (for instance neigh_flush_dev doesn't cleanup skbs from
different device's neigh queue) we can crash on e.g. this stack:

arp_process
  neigh_update
    skb = __skb_dequeue(&neigh->arp_queue)
      neigh_resolve_output(..., skb)
        ...
          br_nf_dev_xmit
            br_nf_pre_routing_finish_bridge_slow
              skb->dev = nf_bridge->physindev
              br_handle_frame_finish

Let's use plain ifindex instead of net_device link. To peek into the
original net_device we will use dev_get_by_index_rcu(). Thus either we
get device and are safe to use it or we don't get it and drop skb.",Linux,Linux,"c4e70a87d975d1f561a00abfe2d3cefa2a486c95, c4e70a87d975d1f561a00abfe2d3cefa2a486c95, c4e70a87d975d1f561a00abfe2d3cefa2a486c95, c4e70a87d975d1f561a00abfe2d3cefa2a486c95"
1517,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53191,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: fix warning when unbinding

If there is an error during some initialization related to firmware,
the buffers dp->tx_ring[i].tx_status are released.
However this is released again when the device is unbinded (ath12k_pci),
and we get:
WARNING: CPU: 0 PID: 2098 at mm/slub.c:4689 free_large_kmalloc+0x4d/0x80
Call Trace:
free_large_kmalloc
ath12k_dp_free
ath12k_core_deinit
ath12k_pci_remove
...

The issue is always reproducible from a VM because the MSI addressing
initialization is failing.

In order to fix the issue, just set the buffers to NULL after releasing in
order to avoid the double free.",Linux,Linux,"d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2"
1516,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53117,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

virtio/vsock: Improve MSG_ZEROCOPY error handling

Add a missing kfree_skb() to prevent memory leaks.",Linux,Linux,"581512a6dc939ef122e49336626ae159f3b8a345, 581512a6dc939ef122e49336626ae159f3b8a345"
1515,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35867,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential UAF in cifs_stats_proc_show()

Skip sessions that are being teared down (status == SES_EXITING) to
avoid UAF.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1514,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53206,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: Fix use-after-free of nreq in reqsk_timer_handler().

The cited commit replaced inet_csk_reqsk_queue_drop_and_put() with
__inet_csk_reqsk_queue_drop() and reqsk_put() in reqsk_timer_handler().

Then, oreq should be passed to reqsk_put() instead of req; otherwise
use-after-free of nreq could happen when reqsk is migrated but the
retry attempt failed (e.g. due to timeout).

Let's pass oreq to reqsk_put().",Linux,Linux,"8459d61fbf24967839a70235165673148c7c7f17, 5071beb59ee416e8ab456ac8647a4dabcda823b1, 997ae8da14f1639ce6fb66a063dab54031cd61b3, 51e34db64f4e43c7b055ccf881b7f3e0c31bb26d, e8c526f2bdf1845bedaf6a478816a3d06fa78b8f, e8c526f2bdf1845bedaf6a478816a3d06fa78b8f"
1513,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53120,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: CT: Fix null-ptr-deref in add rule err flow

In error flow of mlx5_tc_ct_entry_add_rule(), in case ct_rule_add()
callback returns error, zone_rule->attr is used uninitiated. Fix it to
use attr which has the needed pointer value.

Kernel log:
 BUG: kernel NULL pointer dereference, address: 0000000000000110
 RIP: 0010:mlx5_tc_ct_entry_add_rule+0x2b1/0x2f0 [mlx5_core]
…
 Call Trace:
  <TASK>
  ? __die+0x20/0x70
  ? page_fault_oops+0x150/0x3e0
  ? exc_page_fault+0x74/0x140
  ? asm_exc_page_fault+0x22/0x30
  ? mlx5_tc_ct_entry_add_rule+0x2b1/0x2f0 [mlx5_core]
  ? mlx5_tc_ct_entry_add_rule+0x1d5/0x2f0 [mlx5_core]
  mlx5_tc_ct_block_flow_offload+0xc6a/0xf90 [mlx5_core]
  ? nf_flow_offload_tuple+0xd8/0x190 [nf_flow_table]
  nf_flow_offload_tuple+0xd8/0x190 [nf_flow_table]
  flow_offload_work_handler+0x142/0x320 [nf_flow_table]
  ? finish_task_switch.isra.0+0x15b/0x2b0
  process_one_work+0x16c/0x320
  worker_thread+0x28c/0x3a0
  ? __pfx_worker_thread+0x10/0x10
  kthread+0xb8/0xf0
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x2d/0x50
  ? __pfx_kthread+0x10/0x10
  ret_from_fork_asm+0x1a/0x30
  </TASK>",Linux,Linux,"7fac5c2eced36f335ee19ff316bd3182fbeda823, 7fac5c2eced36f335ee19ff316bd3182fbeda823, 7fac5c2eced36f335ee19ff316bd3182fbeda823, 7fac5c2eced36f335ee19ff316bd3182fbeda823, 7fac5c2eced36f335ee19ff316bd3182fbeda823"
1512,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50047,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix UAF in async decryption

Doing an async decryption (large read) crashes with a
slab-use-after-free way down in the crypto API.

Reproducer:
    # mount.cifs -o ...,seal,esize=1 //srv/share /mnt
    # dd if=/mnt/largefile of=/dev/null
    ...
    [  194.196391] ==================================================================
    [  194.196844] BUG: KASAN: slab-use-after-free in gf128mul_4k_lle+0xc1/0x110
    [  194.197269] Read of size 8 at addr ffff888112bd0448 by task kworker/u77:2/899
    [  194.197707]
    [  194.197818] CPU: 12 UID: 0 PID: 899 Comm: kworker/u77:2 Not tainted 6.11.0-lku-00028-gfca3ca14a17a-dirty #43
    [  194.198400] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.2-3-gd478f380-prebuilt.qemu.org 04/01/2014
    [  194.199046] Workqueue: smb3decryptd smb2_decrypt_offload [cifs]
    [  194.200032] Call Trace:
    [  194.200191]  <TASK>
    [  194.200327]  dump_stack_lvl+0x4e/0x70
    [  194.200558]  ? gf128mul_4k_lle+0xc1/0x110
    [  194.200809]  print_report+0x174/0x505
    [  194.201040]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
    [  194.201352]  ? srso_return_thunk+0x5/0x5f
    [  194.201604]  ? __virt_addr_valid+0xdf/0x1c0
    [  194.201868]  ? gf128mul_4k_lle+0xc1/0x110
    [  194.202128]  kasan_report+0xc8/0x150
    [  194.202361]  ? gf128mul_4k_lle+0xc1/0x110
    [  194.202616]  gf128mul_4k_lle+0xc1/0x110
    [  194.202863]  ghash_update+0x184/0x210
    [  194.203103]  shash_ahash_update+0x184/0x2a0
    [  194.203377]  ? __pfx_shash_ahash_update+0x10/0x10
    [  194.203651]  ? srso_return_thunk+0x5/0x5f
    [  194.203877]  ? crypto_gcm_init_common+0x1ba/0x340
    [  194.204142]  gcm_hash_assoc_remain_continue+0x10a/0x140
    [  194.204434]  crypt_message+0xec1/0x10a0 [cifs]
    [  194.206489]  ? __pfx_crypt_message+0x10/0x10 [cifs]
    [  194.208507]  ? srso_return_thunk+0x5/0x5f
    [  194.209205]  ? srso_return_thunk+0x5/0x5f
    [  194.209925]  ? srso_return_thunk+0x5/0x5f
    [  194.210443]  ? srso_return_thunk+0x5/0x5f
    [  194.211037]  decrypt_raw_data+0x15f/0x250 [cifs]
    [  194.212906]  ? __pfx_decrypt_raw_data+0x10/0x10 [cifs]
    [  194.214670]  ? srso_return_thunk+0x5/0x5f
    [  194.215193]  smb2_decrypt_offload+0x12a/0x6c0 [cifs]

This is because TFM is being used in parallel.

Fix this by allocating a new AEAD TFM for async decryption, but keep
the existing one for synchronous READ cases (similar to what is done
in smb3_calc_signature()).

Also remove the calls to aead_request_set_callback() and
crypto_wait_req() since it's always going to be a synchronous operation.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1511,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-6531,n/a,n/a,Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,A use-after-free flaw was found in the Linux Kernel due to a race problem in the unix garbage collector's deletion of SKB races with unix_stream_read_generic() on the socket that the SKB is queued on.,Red Hat,Red Hat Enterprise Linux 9,0:5.14.0-427.13.1.el9_4
1510,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53126,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

vdpa: solidrun: Fix UB bug with devres

In psnet_open_pf_bar() and snet_open_vf_bar() a string later passed to
pcim_iomap_regions() is placed on the stack. Neither
pcim_iomap_regions() nor the functions it calls copy that string.

Should the string later ever be used, this, consequently, causes
undefined behavior since the stack frame will by then have disappeared.

Fix the bug by allocating the strings on the heap through
devm_kasprintf().",Linux,Linux,"51a8f9d7f587290944d6fc733d1f897091c63159, 51a8f9d7f587290944d6fc733d1f897091c63159, 51a8f9d7f587290944d6fc733d1f897091c63159"
1509,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53188,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: fix crash when unbinding

If there is an error during some initialization related to firmware,
the function ath12k_dp_cc_cleanup is called to release resources.
However this is released again when the device is unbinded (ath12k_pci),
and we get:
BUG: kernel NULL pointer dereference, address: 0000000000000020
at RIP: 0010:ath12k_dp_cc_cleanup.part.0+0xb6/0x500 [ath12k]
Call Trace:
ath12k_dp_cc_cleanup
ath12k_dp_free
ath12k_core_deinit
ath12k_pci_remove
...

The issue is always reproducible from a VM because the MSI addressing
initialization is failing.

In order to fix the issue, just set to NULL the released structure in
ath12k_dp_cc_cleanup at the end.",Linux,Linux,"d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2"
1508,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50202,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: propagate directory read errors from nilfs_find_entry()

Syzbot reported that a task hang occurs in vcs_open() during a fuzzing
test for nilfs2.

The root cause of this problem is that in nilfs_find_entry(), which
searches for directory entries, ignores errors when loading a directory
page/folio via nilfs_get_folio() fails.

If the filesystem images is corrupted, and the i_size of the directory
inode is large, and the directory page/folio is successfully read but
fails the sanity check, for example when it is zero-filled,
nilfs_check_folio() may continue to spit out error messages in bursts.

Fix this issue by propagating the error to the callers when loading a
page/folio fails in nilfs_find_entry().

The current interface of nilfs_find_entry() and its callers is outdated
and cannot propagate error codes such as -EIO and -ENOMEM returned via
nilfs_find_entry(), so fix it together.",Linux,Linux,"2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184, 2ba466d74ed74f073257f86e61519cb8f8f46184"
1507,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-49884,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix slab-use-after-free in ext4_split_extent_at()

We hit the following use-after-free:

==================================================================
BUG: KASAN: slab-use-after-free in ext4_split_extent_at+0xba8/0xcc0
Read of size 2 at addr ffff88810548ed08 by task kworker/u20:0/40
CPU: 0 PID: 40 Comm: kworker/u20:0 Not tainted 6.9.0-dirty #724
Call Trace:
 <TASK>
 kasan_report+0x93/0xc0
 ext4_split_extent_at+0xba8/0xcc0
 ext4_split_extent.isra.0+0x18f/0x500
 ext4_split_convert_extents+0x275/0x750
 ext4_ext_handle_unwritten_extents+0x73e/0x1580
 ext4_ext_map_blocks+0xe20/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]

Allocated by task 40:
 __kmalloc_noprof+0x1ac/0x480
 ext4_find_extent+0xf3b/0x1e70
 ext4_ext_map_blocks+0x188/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]

Freed by task 40:
 kfree+0xf1/0x2b0
 ext4_find_extent+0xa71/0x1e70
 ext4_ext_insert_extent+0xa22/0x3260
 ext4_split_extent_at+0x3ef/0xcc0
 ext4_split_extent.isra.0+0x18f/0x500
 ext4_split_convert_extents+0x275/0x750
 ext4_ext_handle_unwritten_extents+0x73e/0x1580
 ext4_ext_map_blocks+0xe20/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]
==================================================================

The flow of issue triggering is as follows:

ext4_split_extent_at
  path = *ppath
  ext4_ext_insert_extent(ppath)
    ext4_ext_create_new_leaf(ppath)
      ext4_find_extent(orig_path)
        path = *orig_path
        read_extent_tree_block
          // return -ENOMEM or -EIO
        ext4_free_ext_path(path)
          kfree(path)
        *orig_path = NULL
  a. If err is -ENOMEM:
  ext4_ext_dirty(path + path->p_depth)
  // path use-after-free !!!
  b. If err is -EIO and we have EXT_DEBUG defined:
  ext4_ext_show_leaf(path)
    eh = path[depth].p_hdr
    // path also use-after-free !!!

So when trying to zeroout or fix the extent length, call ext4_find_extent()
to update the path.

In addition we use *ppath directly as an ext4_ext_show_leaf() input to
avoid possible use-after-free when EXT_DEBUG is defined, and to avoid
unnecessary path updates.",Linux,Linux,"dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4"
1475,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2022-38096,6.3,n/a,CWE-476 NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"A NULL pointer dereference vulnerability was found in vmwgfx driver in drivers/gpu/vmxgfx/vmxgfx_execbuf.c in GPU component of Linux kernel with device file '/dev/dri/renderD128 (or Dxxx)'. This flaw allows a local attacker with a user account on the system to gain privilege, causing a denial of service(DoS).",Linux,kernel,v4.20-rc1
1474,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-43892,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

memcg: protect concurrent access to mem_cgroup_idr

Commit 73f576c04b94 (""mm: memcontrol: fix cgroup creation failure after
many small jobs"") decoupled the memcg IDs from the CSS ID space to fix the
cgroup creation failures.  It introduced IDR to maintain the memcg ID
space.  The IDR depends on external synchronization mechanisms for
modifications.  For the mem_cgroup_idr, the idr_alloc() and idr_replace()
happen within css callback and thus are protected through cgroup_mutex
from concurrent modifications.  However idr_remove() for mem_cgroup_idr
was not protected against concurrency and can be run concurrently for
different memcgs when they hit their refcnt to zero.  Fix that.

We have been seeing list_lru based kernel crashes at a low frequency in
our fleet for a long time.  These crashes were in different part of
list_lru code including list_lru_add(), list_lru_del() and reparenting
code.  Upon further inspection, it looked like for a given object (dentry
and inode), the super_block's list_lru didn't have list_lru_one for the
memcg of that object.  The initial suspicions were either the object is
not allocated through kmem_cache_alloc_lru() or somehow
memcg_list_lru_alloc() failed to allocate list_lru_one() for a memcg but
returned success.  No evidence were found for these cases.

Looking more deeply, we started seeing situations where valid memcg's id
is not present in mem_cgroup_idr and in some cases multiple valid memcgs
have same id and mem_cgroup_idr is pointing to one of them.  So, the most
reasonable explanation is that these situations can happen due to race
between multiple idr_remove() calls or race between
idr_alloc()/idr_replace() and idr_remove().  These races are causing
multiple memcgs to acquire the same ID and then offlining of one of them
would cleanup list_lrus on the system for all of them.  Later access from
other memcgs to the list_lru cause crashes due to missing list_lru_one.",Linux,Linux,"73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546"
1473,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-44940,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

fou: remove warn in gue_gro_receive on unsupported protocol

Drop the WARN_ON_ONCE inn gue_gro_receive if the encapsulated type is
not known or does not have a GRO handler.

Such a packet is easily constructed. Syzbot generates them and sets
off this warning.

Remove the warning as it is expected and not actionable.

The warning was previously reduced from WARN_ON to WARN_ON_ONCE in
commit 270136613bf7 (""fou: Do WARN_ON_ONCE in gue_gro_receive for bad
proto callbacks"").",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1429,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2023-22081,5.3,Moyenne,"Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE).  Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf, 11.0.20, 17.0.8, 21; Oracle GraalVM for JDK: 17.0.8, 21; Oracle GraalVM Enterprise Edition: 20.3.11, 21.3.7 and  22.3.3. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u381, Oracle Java SE:8u381-perf, Oracle Java SE:11.0.20, Oracle Java SE:17.0.8, Oracle Java SE:21, Oracle GraalVM for JDK:17.0.8, Oracle GraalVM for JDK:21, Oracle GraalVM Enterprise Edition:20.3.11, Oracle GraalVM Enterprise Edition:21.3.7, Oracle GraalVM Enterprise Edition:22.3.3"
1441,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-47875,10,Critique,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"DOMPurify is a DOM-only, super-fast, uber-tolerant XSS sanitizer for HTML, MathML and SVG. DOMpurify was vulnerable to nesting-based mXSS. This vulnerability is fixed in 2.5.0 and 3.1.3.",cure53,DOMPurify,"< 2.5.0, < 3.1.3"
1440,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-52798,n/a,n/a,CWE-1333: Inefficient Regular Expression Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated in the 0.1.x release of path-to-regexp. Upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.",pillarjs,path-to-regexp,< 0.1.12
1439,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-45801,7.3,Élevée,CWE-1333: Inefficient Regular Expression Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"DOMPurify is a DOM-only, super-fast, uber-tolerant XSS sanitizer for HTML, MathML and SVG. It has been discovered that malicious HTML using special nesting techniques can bypass the depth checking added to DOMPurify in recent releases. It was also possible to use Prototype Pollution to weaken the depth check. This renders dompurify unable to avoid cross site scripting (XSS) attacks. This issue has been addressed in versions 2.5.4 and 3.1.3 of DOMPurify. All users are advised to upgrade. There are no known workarounds for this vulnerability.",cure53,DOMPurify,"< 2.5.4, >=3.0.0, < 3.1.3"
1438,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-45296,7.5,Élevée,CWE-1333: Inefficient Regular Expression Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.",pillarjs,path-to-regexp,"< 0.1.10, >= 0.2.0, < 8.0.0"
1437,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-48948,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"The Elliptic package 6.5.7 for Node.js, in its for ECDSA implementation, does not correctly verify valid signatures if the hash contains at least four leading 0 bytes and when the order of the elliptic curve's base point is smaller than the hash, because of an _truncateToN anomaly. This leads to valid signatures being rejected. Legitimate transactions or communications may be incorrectly flagged as invalid.",n/a,n/a,n/a
1436,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-47764,n/a,n/a,CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",jshttp,cookie,< 0.7.0
1435,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-21538,7.5,Élevée,Regular Expression Denial of Service (ReDoS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.,n/a,cross-spawn,0
1434,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-48949,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"The verify function in lib/elliptic/eddsa/index.js in the Elliptic package before 6.5.6 for Node.js omits ""sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()"" validation.",n/a,n/a,n/a
1433,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2023-22067,5.3,Moyenne,"Easily exploitable vulnerability allows unauthenticated attacker with network access via CORBA to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: CORBA).  Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf; Oracle GraalVM Enterprise Edition: 20.3.11 and  21.3.7. Easily exploitable vulnerability allows unauthenticated attacker with network access via CORBA to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u381, Oracle Java SE:8u381-perf, Oracle GraalVM Enterprise Edition:20.3.11, Oracle GraalVM Enterprise Edition:21.3.7"
1432,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-4067,5.3,Moyenne,CWE-1333: Inefficient Regular Expression Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"The NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8.",micromatch,micromatch,"0, 4.0.8"
1431,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-43796,5,Moyenne,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Express.js minimalist web framework for node. In express < 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.",expressjs,express,"< 4.20.0, >= 5.0.0-alpha.1, < 5.0.0"
1430,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-45590,7.5,Élevée,CWE-405: Asymmetric Resource Consumption (Amplification),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"body-parser is Node.js body parsing middleware. body-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3.",expressjs,body-parser,< 1.20.3
1428,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-33883,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.,n/a,n/a,n/a
1472,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-42077,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix DIO failure due to insufficient transaction credits

The code in ocfs2_dio_end_io_write() estimates number of necessary
transaction credits using ocfs2_calc_extend_credits().  This however does
not take into account that the IO could be arbitrarily large and can
contain arbitrary number of extents.

Extent tree manipulations do often extend the current transaction but not
in all of the cases.  For example if we have only single block extents in
the tree, ocfs2_mark_extent_written() will end up calling
ocfs2_replace_extent_rec() all the time and we will never extend the
current transaction and eventually exhaust all the transaction credits if
the IO contains many single block extents.  Once that happens a
WARN_ON(jbd2_handle_buffer_credits(handle) <= 0) is triggered in
jbd2_journal_dirty_metadata() and subsequently OCFS2 aborts in response to
this error.  This was actually triggered by one of our customers on a
heavily fragmented OCFS2 filesystem.

To fix the issue make sure the transaction always has enough credits for
one extent insert before each call of ocfs2_mark_extent_written().

Heming Zhao said:

------
PANIC: ""Kernel panic - not syncing: OCFS2: (device dm-1): panic forced after error""

PID: xxx  TASK: xxxx  CPU: 5  COMMAND: ""SubmitThread-CA""
  #0 machine_kexec at ffffffff8c069932
  #1 __crash_kexec at ffffffff8c1338fa
  #2 panic at ffffffff8c1d69b9
  #3 ocfs2_handle_error at ffffffffc0c86c0c [ocfs2]
  #4 __ocfs2_abort at ffffffffc0c88387 [ocfs2]
  #5 ocfs2_journal_dirty at ffffffffc0c51e98 [ocfs2]
  #6 ocfs2_split_extent at ffffffffc0c27ea3 [ocfs2]
  #7 ocfs2_change_extent_flag at ffffffffc0c28053 [ocfs2]
  #8 ocfs2_mark_extent_written at ffffffffc0c28347 [ocfs2]
  #9 ocfs2_dio_end_io_write at ffffffffc0c2bef9 [ocfs2]
#10 ocfs2_dio_end_io at ffffffffc0c2c0f5 [ocfs2]
#11 dio_complete at ffffffff8c2b9fa7
#12 do_blockdev_direct_IO at ffffffff8c2bc09f
#13 ocfs2_direct_IO at ffffffffc0c2b653 [ocfs2]
#14 generic_file_direct_write at ffffffff8c1dcf14
#15 __generic_file_write_iter at ffffffff8c1dd07b
#16 ocfs2_file_write_iter at ffffffffc0c49f1f [ocfs2]
#17 aio_write at ffffffff8c2cc72e
#18 kmem_cache_alloc at ffffffff8c248dde
#19 do_io_submit at ffffffff8c2ccada
#20 do_syscall_64 at ffffffff8c004984
#21 entry_SYSCALL_64_after_hwframe at ffffffff8c8000ba",Linux,Linux,"c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f"
1427,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2023-4807,n/a,n/a,CWE-440 Expected Behavior Violation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Issue summary: The POLY1305 MAC (message authentication code) implementation
contains a bug that might corrupt the internal state of applications on the
Windows 64 platform when running on newer X86_64 processors supporting the
AVX512-IFMA instructions.

Impact summary: If in an application that uses the OpenSSL library an attacker
can influence whether the POLY1305 MAC algorithm is used, the application
state might be corrupted with various application dependent consequences.

The POLY1305 MAC (message authentication code) implementation in OpenSSL does
not save the contents of non-volatile XMM registers on Windows 64 platform
when calculating the MAC of data larger than 64 bytes. Before returning to
the caller all the XMM registers are set to zero rather than restoring their
previous content. The vulnerable code is used only on newer x86_64 processors
supporting the AVX512-IFMA instructions.

The consequences of this kind of internal application state corruption can
be various - from no consequences, if the calling application does not
depend on the contents of non-volatile XMM registers at all, to the worst
consequences, where the attacker could get complete control of the application
process. However given the contents of the registers are just zeroized so
the attacker cannot put arbitrary values inside, the most likely consequence,
if any, would be an incorrect result of some application dependent
calculations or a crash leading to a denial of service.

The POLY1305 MAC algorithm is most frequently used as part of the
CHACHA20-POLY1305 AEAD (authenticated encryption with associated data)
algorithm. The most common usage of this AEAD cipher is with TLS protocol
versions 1.2 and 1.3 and a malicious client can influence whether this AEAD
cipher is used by the server. This implies that server applications using
OpenSSL can be potentially impacted. However we are currently not aware of
any concrete application that would be affected by this issue therefore we
consider this a Low severity security issue.

As a workaround the AVX512-IFMA instructions support can be disabled at
runtime by setting the environment variable OPENSSL_ia32cap:

   OPENSSL_ia32cap=:~0x200000

The FIPS provider is not affected by this issue.",OpenSSL,OpenSSL,"3.1.0, 3.0.0, 1.1.1"
1426,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-20921,5.9,Moyenne,"Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u391, Oracle Java SE:8u391-perf, Oracle Java SE:11.0.21, Oracle Java SE:17.0.9, Oracle Java SE:21.0.1, Oracle GraalVM for JDK:17.0.9, Oracle GraalVM for JDK:21.0.1, Oracle GraalVM Enterprise Edition:20.3.12, Oracle GraalVM Enterprise Edition:21.3.8, Oracle GraalVM Enterprise Edition:22.3.4"
1425,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-22361,5.9,Moyenne,CWE-327 Use of a Broken or Risky Cryptographic Algorithm,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"IBM Semeru Runtime 8.0.302.0 through 8.0.392.0, 11.0.12.0 through 11.0.21.0, 17.0.1.0 - 17.0.9.0, and 21.0.1.0 uses weaker than expected cryptographic algorithms that could allow an attacker to decrypt highly sensitive information.  IBM X-Force ID:  281222.",IBM,Semeru Runtime,"8.0.302.0, 11.0.12.0, 17.0.1.0, 21.0.1.0"
1424,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-42460,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.",n/a,n/a,n/a
1423,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-43799,5,Moyenne,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.,pillarjs,send,< 0.19.0
1422,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-20926,5.9,Moyenne,"Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Scripting).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21; Oracle GraalVM for JDK: 17.0.9; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u391, Oracle Java SE:8u391-perf, Oracle Java SE:11.0.21, Oracle GraalVM for JDK:17.0.9, Oracle GraalVM Enterprise Edition:20.3.12, Oracle GraalVM Enterprise Edition:21.3.8, Oracle GraalVM Enterprise Edition:22.3.4"
1421,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-4068,7.5,Élevée,CWE-1050: Excessive Platform Resource Consumption within a Loop,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"The NPM package `braces`, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends ""imbalanced braces"" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",micromatch,braces,0
1420,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-43788,6.4,n/a,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset. The webpack developers have discovered a DOM Clobbering vulnerability in Webpack’s `AutoPublicPathRuntimeModule`. The DOM Clobbering gadget in the module can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an `img` tag with an unsanitized `name` attribute) are present. Real-world exploitation of this gadget has been observed in the Canvas LMS which allows a XSS attack to happen through a javascript code compiled by Webpack (the vulnerable part is from Webpack). DOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code) living in the existing javascript code to transform it into executable code. This vulnerability can lead to cross-site scripting (XSS) on websites that include Webpack-generated files and allow users to inject certain scriptless HTML tags with improperly sanitized name or id attributes. This issue has been addressed in release version 5.94.0. All users are advised to upgrade. There are no known workarounds for this issue.",webpack,webpack,">= 5.0.0-alpha.0, < 5.94.0"
1419,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-55565,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,nanoid (aka Nano ID) before 5.0.9 mishandles non-integer values. 3.3.8 is also a fixed version.,n/a,n/a,n/a
1418,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-21536,7.5,Élevée,Denial of Service (DoS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Versions of the package http-proxy-middleware before 2.0.7, from 3.0.0 and before 3.0.3 are vulnerable to Denial of Service (DoS) due to an UnhandledPromiseRejection error thrown by micromatch. An attacker could kill the Node.js process and crash the server by making requests to certain paths.",n/a,http-proxy-middleware,"0, 3.0.0"
1417,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-42459,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"In the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero-valued bytes can be removed or appended.",n/a,n/a,n/a
1416,Vulnérabilité dans les produits Moxa ,Avis,2025-01-17,CVE-2024-9137,n/a,n/a,CWE-306 Missing Authentication for Critical Function,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0044/,"The affected product lacks an authentication check when sending commands to the server via the Moxa service. This vulnerability allows an attacker to execute specified commands, potentially leading to unauthorized downloads or uploads of configuration files and system compromise.",Moxa,EDR-8010 Series,1.0
1442,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-37890,7.5,Élevée,CWE-476: NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",websockets,ws,">= 2.1.0, < 5.2.4, >= 6.0.0, < 6.2.3, >= 7.0.0, < 7.5.10, >= 8.0.0, < 8.17.1"
1443,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2023-5676,4.1,Moyenne,CWE-364: Signal Handler Race Condition,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"In Eclipse OpenJ9 before version 0.41.0, the JVM can be forced into an infinite busy hang on a spinlock or a segmentation fault if a shutdown signal (SIGTERM, SIGINT or SIGHUP) is received before the JVM has finished initializing.
",Eclipse Foundation,OpenJ9,0
1444,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-43800,5,Moyenne,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.,expressjs,serve-static,"< 1.16.0, >= 2.0.0, < 2.1.0"
1445,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-47068,6.1,n/a,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Rollup is a module bundler for JavaScript. Versions prior to 2.79.2, 3.29.5, and 4.22.4 are susceptible to a DOM Clobbering vulnerability when bundling scripts with properties from `import.meta` (e.g., `import.meta.url`) in `cjs`/`umd`/`iife` format. The DOM Clobbering gadget can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an `img` tag with an unsanitized `name` attribute) are present. Versions 2.79.2, 3.29.5, and 4.22.4  contain a patch for the vulnerability.",rollup,rollup,">= 3.0.0, < 3.29.5, >= 4.0.0, < 4.22.4, < 2.79.2"
1471,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2022-48943,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: x86/mmu: make apf token non-zero to fix bug

In current async pagefault logic, when a page is ready, KVM relies on
kvm_arch_can_dequeue_async_page_present() to determine whether to deliver
a READY event to the Guest. This function test token value of struct
kvm_vcpu_pv_apf_data, which must be reset to zero by Guest kernel when a
READY event is finished by Guest. If value is zero meaning that a READY
event is done, so the KVM can deliver another.
But the kvm_arch_setup_async_pf() may produce a valid token with zero
value, which is confused with previous mention and may lead the loss of
this READY event.

This bug may cause task blocked forever in Guest:
 INFO: task stress:7532 blocked for more than 1254 seconds.
       Not tainted 5.10.0 #16
 ""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message.
 task:stress          state:D stack:    0 pid: 7532 ppid:  1409
 flags:0x00000080
 Call Trace:
  __schedule+0x1e7/0x650
  schedule+0x46/0xb0
  kvm_async_pf_task_wait_schedule+0xad/0xe0
  ? exit_to_user_mode_prepare+0x60/0x70
  __kvm_handle_async_pf+0x4f/0xb0
  ? asm_exc_page_fault+0x8/0x30
  exc_page_fault+0x6f/0x110
  ? asm_exc_page_fault+0x8/0x30
  asm_exc_page_fault+0x1e/0x30
 RIP: 0033:0x402d00
 RSP: 002b:00007ffd31912500 EFLAGS: 00010206
 RAX: 0000000000071000 RBX: ffffffffffffffff RCX: 00000000021a32b0
 RDX: 000000000007d011 RSI: 000000000007d000 RDI: 00000000021262b0
 RBP: 00000000021262b0 R08: 0000000000000003 R09: 0000000000000086
 R10: 00000000000000eb R11: 00007fefbdf2baa0 R12: 0000000000000000
 R13: 0000000000000002 R14: 000000000007d000 R15: 0000000000001000",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1470,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-38553,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

net: fec: remove .ndo_poll_controller to avoid deadlocks

There is a deadlock issue found in sungem driver, please refer to the
commit ac0a230f719b (""eth: sungem: remove .ndo_poll_controller to avoid
deadlocks""). The root cause of the issue is that netpoll is in atomic
context and disable_irq() is called by .ndo_poll_controller interface
of sungem driver, however, disable_irq() might sleep. After analyzing
the implementation of fec_poll_controller(), the fec driver should have
the same issue. Due to the fec driver uses NAPI for TX completions, the
.ndo_poll_controller is unnecessary to be implemented in the fec driver,
so fec_poll_controller() can be safely removed.",Linux,Linux,"7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8"
1468,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-40910,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

ax25: Fix refcount imbalance on inbound connections

When releasing a socket in ax25_release(), we call netdev_put() to
decrease the refcount on the associated ax.25 device. However, the
execution path for accepting an incoming connection never calls
netdev_hold(). This imbalance leads to refcount errors, and ultimately
to kernel crashes.

A typical call trace for the above situation will start with one of the
following errors:

    refcount_t: decrement hit 0; leaking memory.
    refcount_t: underflow; use-after-free.

And will then have a trace like:

    Call Trace:
    <TASK>
    ? show_regs+0x64/0x70
    ? __warn+0x83/0x120
    ? refcount_warn_saturate+0xb2/0x100
    ? report_bug+0x158/0x190
    ? prb_read_valid+0x20/0x30
    ? handle_bug+0x3e/0x70
    ? exc_invalid_op+0x1c/0x70
    ? asm_exc_invalid_op+0x1f/0x30
    ? refcount_warn_saturate+0xb2/0x100
    ? refcount_warn_saturate+0xb2/0x100
    ax25_release+0x2ad/0x360
    __sock_release+0x35/0xa0
    sock_close+0x19/0x20
    [...]

On reboot (or any attempt to remove the interface), the kernel gets
stuck in an infinite loop:

    unregister_netdevice: waiting for ax0 to become free. Usage count = 0

This patch corrects these issues by ensuring that we call netdev_hold()
and ax25_dev_hold() for new connections in ax25_accept(). This makes the
logic leading to ax25_accept() match the logic for ax25_bind(): in both
cases we increment the refcount, which is ultimately decremented in
ax25_release().",Linux,Linux,"9fd75b66b8f68498454d685dc4ba13192ae069b0, 9fd75b66b8f68498454d685dc4ba13192ae069b0, 9fd75b66b8f68498454d685dc4ba13192ae069b0, 9fd75b66b8f68498454d685dc4ba13192ae069b0"
1467,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2023-52498,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

PM: sleep: Fix possible deadlocks in core system-wide PM code

It is reported that in low-memory situations the system-wide resume core
code deadlocks, because async_schedule_dev() executes its argument
function synchronously if it cannot allocate memory (and not only in
that case) and that function attempts to acquire a mutex that is already
held.  Executing the argument function synchronously from within
dpm_async_fn() may also be problematic for ordering reasons (it may
cause a consumer device's resume callback to be invoked before a
requisite supplier device's one, for example).

Address this by changing the code in question to use
async_schedule_dev_nocall() for scheduling the asynchronous
execution of device suspend and resume functions and to directly
run them synchronously if async_schedule_dev_nocall() returns false.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1466,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-44942,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to do sanity check on F2FS_INLINE_DATA flag in inode during GC

syzbot reports a f2fs bug as below:

------------[ cut here ]------------
kernel BUG at fs/f2fs/inline.c:258!
CPU: 1 PID: 34 Comm: kworker/u8:2 Not tainted 6.9.0-rc6-syzkaller-00012-g9e4bc4bcae01 #0
RIP: 0010:f2fs_write_inline_data+0x781/0x790 fs/f2fs/inline.c:258
Call Trace:
 f2fs_write_single_data_page+0xb65/0x1d60 fs/f2fs/data.c:2834
 f2fs_write_cache_pages fs/f2fs/data.c:3133 [inline]
 __f2fs_write_data_pages fs/f2fs/data.c:3288 [inline]
 f2fs_write_data_pages+0x1efe/0x3a90 fs/f2fs/data.c:3315
 do_writepages+0x35b/0x870 mm/page-writeback.c:2612
 __writeback_single_inode+0x165/0x10b0 fs/fs-writeback.c:1650
 writeback_sb_inodes+0x905/0x1260 fs/fs-writeback.c:1941
 wb_writeback+0x457/0xce0 fs/fs-writeback.c:2117
 wb_do_writeback fs/fs-writeback.c:2264 [inline]
 wb_workfn+0x410/0x1090 fs/fs-writeback.c:2304
 process_one_work kernel/workqueue.c:3254 [inline]
 process_scheduled_works+0xa12/0x17c0 kernel/workqueue.c:3335
 worker_thread+0x86d/0xd70 kernel/workqueue.c:3416
 kthread+0x2f2/0x390 kernel/kthread.c:388
 ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244

The root cause is: inline_data inode can be fuzzed, so that there may
be valid blkaddr in its direct node, once f2fs triggers background GC
to migrate the block, it will hit f2fs_bug_on() during dirty page
writeback.

Let's add sanity check on F2FS_INLINE_DATA flag in inode during GC,
so that, it can forbid migrating inline_data inode's data block for
fixing.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1465,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2023-52639,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: s390: vsie: fix race during shadow creation

Right now it is possible to see gmap->private being zero in
kvm_s390_vsie_gmap_notifier resulting in a crash.  This is due to the
fact that we add gmap->private == kvm after creation:

static int acquire_gmap_shadow(struct kvm_vcpu *vcpu,
                               struct vsie_page *vsie_page)
{
[...]
        gmap = gmap_shadow(vcpu->arch.gmap, asce, edat);
        if (IS_ERR(gmap))
                return PTR_ERR(gmap);
        gmap->private = vcpu->kvm;

Let children inherit the private field of the parent.",Linux,Linux,"a3508fbe9dc6dd3bece0c7bf889cc085a011738c, a3508fbe9dc6dd3bece0c7bf889cc085a011738c, a3508fbe9dc6dd3bece0c7bf889cc085a011738c, a3508fbe9dc6dd3bece0c7bf889cc085a011738c"
1464,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-26947,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

ARM: 9359/1: flush: check if the folio is reserved for no-mapping addresses

Since commit a4d5613c4dc6 (""arm: extend pfn_valid to take into account
freed memory map alignment"") changes the semantics of pfn_valid() to check
presence of the memory map for a PFN. A valid page for an address which
is reserved but not mapped by the kernel[1], the system crashed during
some uio test with the following memory layout:

 node   0: [mem 0x00000000c0a00000-0x00000000cc8fffff]
 node   0: [mem 0x00000000d0000000-0x00000000da1fffff]
 the uio layout is：0xc0900000, 0x100000

the crash backtrace like:

  Unable to handle kernel paging request at virtual address bff00000
  [...]
  CPU: 1 PID: 465 Comm: startapp.bin Tainted: G           O      5.10.0 #1
  Hardware name: Generic DT based system
  PC is at b15_flush_kern_dcache_area+0x24/0x3c
  LR is at __sync_icache_dcache+0x6c/0x98
  [...]
   (b15_flush_kern_dcache_area) from (__sync_icache_dcache+0x6c/0x98)
   (__sync_icache_dcache) from (set_pte_at+0x28/0x54)
   (set_pte_at) from (remap_pfn_range+0x1a0/0x274)
   (remap_pfn_range) from (uio_mmap+0x184/0x1b8 [uio])
   (uio_mmap [uio]) from (__mmap_region+0x264/0x5f4)
   (__mmap_region) from (__do_mmap_mm+0x3ec/0x440)
   (__do_mmap_mm) from (do_mmap+0x50/0x58)
   (do_mmap) from (vm_mmap_pgoff+0xfc/0x188)
   (vm_mmap_pgoff) from (ksys_mmap_pgoff+0xac/0xc4)
   (ksys_mmap_pgoff) from (ret_fast_syscall+0x0/0x5c)
  Code: e0801001 e2423001 e1c00003 f57ff04f (ee070f3e)
  ---[ end trace 09cf0734c3805d52 ]---
  Kernel panic - not syncing: Fatal exception

So check if PG_reserved was set to solve this issue.

[1]: https://lore.kernel.org/lkml/Zbtdue57RO0QScJM@linux.ibm.com/",Linux,Linux,"a4d5613c4dc6d413e0733e37db9d116a2a36b9f3, a4d5613c4dc6d413e0733e37db9d116a2a36b9f3, a4d5613c4dc6d413e0733e37db9d116a2a36b9f3, a4d5613c4dc6d413e0733e37db9d116a2a36b9f3"
1463,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2023-52488,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

serial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO

The SC16IS7XX IC supports a burst mode to access the FIFOs where the
initial register address is sent ($00), followed by all the FIFO data
without having to resend the register address each time. In this mode, the
IC doesn't increment the register address for each R/W byte.

The regmap_raw_read() and regmap_raw_write() are functions which can
perform IO over multiple registers. They are currently used to read/write
from/to the FIFO, and although they operate correctly in this burst mode on
the SPI bus, they would corrupt the regmap cache if it was not disabled
manually. The reason is that when the R/W size is more than 1 byte, these
functions assume that the register address is incremented and handle the
cache accordingly.

Convert FIFO R/W functions to use the regmap _noinc_ versions in order to
remove the manual cache control which was a workaround when using the
_raw_ versions. FIFO registers are properly declared as volatile so
cache will not be used/updated for FIFO accesses.",Linux,Linux,"dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b"
1462,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-50264,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

vsock/virtio: Initialization of the dangling pointer occurring in vsk->trans

During loopback communication, a dangling pointer can be created in
vsk->trans, potentially leading to a Use-After-Free condition.  This
issue is resolved by initializing vsk->trans to NULL.",Linux,Linux,"06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b"
1461,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-36938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

bpf, skmsg: Fix NULL pointer dereference in sk_psock_skb_ingress_enqueue

Fix NULL pointer data-races in sk_psock_skb_ingress_enqueue() which
syzbot reported [1].

[1]
BUG: KCSAN: data-race in sk_psock_drop / sk_psock_skb_ingress_enqueue

write to 0xffff88814b3278b8 of 8 bytes by task 10724 on cpu 1:
 sk_psock_stop_verdict net/core/skmsg.c:1257 [inline]
 sk_psock_drop+0x13e/0x1f0 net/core/skmsg.c:843
 sk_psock_put include/linux/skmsg.h:459 [inline]
 sock_map_close+0x1a7/0x260 net/core/sock_map.c:1648
 unix_release+0x4b/0x80 net/unix/af_unix.c:1048
 __sock_release net/socket.c:659 [inline]
 sock_close+0x68/0x150 net/socket.c:1421
 __fput+0x2c1/0x660 fs/file_table.c:422
 __fput_sync+0x44/0x60 fs/file_table.c:507
 __do_sys_close fs/open.c:1556 [inline]
 __se_sys_close+0x101/0x1b0 fs/open.c:1541
 __x64_sys_close+0x1f/0x30 fs/open.c:1541
 do_syscall_64+0xd3/0x1d0
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

read to 0xffff88814b3278b8 of 8 bytes by task 10713 on cpu 0:
 sk_psock_data_ready include/linux/skmsg.h:464 [inline]
 sk_psock_skb_ingress_enqueue+0x32d/0x390 net/core/skmsg.c:555
 sk_psock_skb_ingress_self+0x185/0x1e0 net/core/skmsg.c:606
 sk_psock_verdict_apply net/core/skmsg.c:1008 [inline]
 sk_psock_verdict_recv+0x3e4/0x4a0 net/core/skmsg.c:1202
 unix_read_skb net/unix/af_unix.c:2546 [inline]
 unix_stream_read_skb+0x9e/0xf0 net/unix/af_unix.c:2682
 sk_psock_verdict_data_ready+0x77/0x220 net/core/skmsg.c:1223
 unix_stream_sendmsg+0x527/0x860 net/unix/af_unix.c:2339
 sock_sendmsg_nosec net/socket.c:730 [inline]
 __sock_sendmsg+0x140/0x180 net/socket.c:745
 ____sys_sendmsg+0x312/0x410 net/socket.c:2584
 ___sys_sendmsg net/socket.c:2638 [inline]
 __sys_sendmsg+0x1e9/0x280 net/socket.c:2667
 __do_sys_sendmsg net/socket.c:2676 [inline]
 __se_sys_sendmsg net/socket.c:2674 [inline]
 __x64_sys_sendmsg+0x46/0x50 net/socket.c:2674
 do_syscall_64+0xd3/0x1d0
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

value changed: 0xffffffff83d7feb0 -> 0x0000000000000000

Reported by Kernel Concurrency Sanitizer on:
CPU: 0 PID: 10713 Comm: syz-executor.4 Tainted: G        W          6.8.0-syzkaller-08951-gfe46a7dd189e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024

Prior to this, commit 4cd12c6065df (""bpf, sockmap: Fix NULL pointer
dereference in sk_psock_verdict_data_ready()"") fixed one NULL pointer
similarly due to no protection of saved_data_ready. Here is another
different caller causing the same issue because of the same reason. So
we should protect it with sk_callback_lock read lock because the writer
side in the sk_psock_drop() uses ""write_lock_bh(&sk->sk_callback_lock);"".

To avoid errors that could happen in future, I move those two pairs of
lock into the sk_psock_data_ready(), which is suggested by John Fastabend.",Linux,Linux,"604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c"
1460,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-36952,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Move NPIV's transport unregistration to after resource clean up

There are cases after NPIV deletion where the fabric switch still believes
the NPIV is logged into the fabric.  This occurs when a vport is
unregistered before the Remove All DA_ID CT and LOGO ELS are sent to the
fabric.

Currently fc_remove_host(), which calls dev_loss_tmo for all D_IDs including
the fabric D_ID, removes the last ndlp reference and frees the ndlp rport
object.  This sometimes causes the race condition where the final DA_ID and
LOGO are skipped from being sent to the fabric switch.

Fix by moving the fc_remove_host() and scsi_remove_host() calls after DA_ID
and LOGO are sent.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1459,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-42240,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

x86/bhi: Avoid warning in #DB handler due to BHI mitigation

When BHI mitigation is enabled, if SYSENTER is invoked with the TF flag set
then entry_SYSENTER_compat() uses CLEAR_BRANCH_HISTORY and calls the
clear_bhb_loop() before the TF flag is cleared. This causes the #DB handler
(exc_debug_kernel()) to issue a warning because single-step is used outside the
entry_SYSENTER_compat() function.

To address this issue, entry_SYSENTER_compat() should use CLEAR_BRANCH_HISTORY
after making sure the TF flag is cleared.

The problem can be reproduced with the following sequence:

  $ cat sysenter_step.c
  int main()
  { asm(""pushf; pop %ax; bts $8,%ax; push %ax; popf; sysenter""); }

  $ gcc -o sysenter_step sysenter_step.c

  $ ./sysenter_step
  Segmentation fault (core dumped)

The program is expected to crash, and the #DB handler will issue a warning.

Kernel log:

  WARNING: CPU: 27 PID: 7000 at arch/x86/kernel/traps.c:1009 exc_debug_kernel+0xd2/0x160
  ...
  RIP: 0010:exc_debug_kernel+0xd2/0x160
  ...
  Call Trace:
  <#DB>
   ? show_regs+0x68/0x80
   ? __warn+0x8c/0x140
   ? exc_debug_kernel+0xd2/0x160
   ? report_bug+0x175/0x1a0
   ? handle_bug+0x44/0x90
   ? exc_invalid_op+0x1c/0x70
   ? asm_exc_invalid_op+0x1f/0x30
   ? exc_debug_kernel+0xd2/0x160
   exc_debug+0x43/0x50
   asm_exc_debug+0x1e/0x40
  RIP: 0010:clear_bhb_loop+0x0/0xb0
  ...
  </#DB>
  <TASK>
   ? entry_SYSENTER_compat_after_hwframe+0x6e/0x8d
  </TASK>

  [ bp: Massage commit message. ]",Linux,Linux,"bd53ec80f21839cfd4d852a6088279d602d67e5b, 07dbb10f153f483e8249acebdffedf922e2ec2e1, eb36b0dce2138581bc6b5e39d0273cb4c96ded81, 7390db8aea0d64e9deb28b8e1ce716f5020c7ee5, 7390db8aea0d64e9deb28b8e1ce716f5020c7ee5"
1458,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-53057,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: stop qdisc_tree_reduce_backlog on TC_H_ROOT

In qdisc_tree_reduce_backlog, Qdiscs with major handle ffff: are assumed
to be either root or ingress. This assumption is bogus since it's valid
to create egress qdiscs with major handle ffff:
Budimir Markovic found that for qdiscs like DRR that maintain an active
class list, it will cause a UAF with a dangling class pointer.

In 066a3b5b2346, the concern was to avoid iterating over the ingress
qdisc since its parent is itself. The proper fix is to stop when parent
TC_H_ROOT is reached because the only way to retrieve ingress is when a
hierarchy which does not contain a ffff: major handle call into
qdisc_lookup with TC_H_MAJ(TC_H_ROOT).

In the scenario where major ffff: is an egress qdisc in any of the tree
levels, the updates will also propagate to TC_H_ROOT, which then the
iteration must stop.


 net/sched/sch_api.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)",Linux,Linux,"066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939"
1457,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-42068,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Take return from set_memory_ro() into account with bpf_prog_lock_ro()

set_memory_ro() can fail, leaving memory unprotected.

Check its return and take it into account as an error.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1456,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-46724,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix out-of-bounds read of df_v1_7_channel_number

Check the fb_channel_number range to avoid the array out-of-bounds
read error",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1455,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-35966,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: RFCOMM: Fix not validating setsockopt user input

syzbot reported rfcomm_sock_setsockopt_old() is copying data without
checking user input length.

BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset
include/linux/sockptr.h:49 [inline]
BUG: KASAN: slab-out-of-bounds in copy_from_sockptr
include/linux/sockptr.h:55 [inline]
BUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old
net/bluetooth/rfcomm/sock.c:632 [inline]
BUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893/0xa70
net/bluetooth/rfcomm/sock.c:673
Read of size 4 at addr ffff8880209a8bc3 by task syz-executor632/5064",Linux,Linux,"9f2c8a03fbb3048cf38b158f87aa0c3c09bca084, 9f2c8a03fbb3048cf38b158f87aa0c3c09bca084, 9f2c8a03fbb3048cf38b158f87aa0c3c09bca084, 9f2c8a03fbb3048cf38b158f87aa0c3c09bca084"
1454,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-35965,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix not validating setsockopt user input

Check user input length before copying data.",Linux,Linux,"33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8"
1453,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-49967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,n/a,n/a,n/a,
1452,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2024-35951,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

drm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()

Subject: [PATCH] drm/panfrost: Fix the error path in
 panfrost_mmu_map_fault_addr()

If some the pages or sgt allocation failed, we shouldn't release the
pages ref we got earlier, otherwise we will end up with unbalanced
get/put_pages() calls. We should instead leave everything in place
and let the BO release function deal with extra cleanup when the object
is destroyed, or let the fault handler try again next time it's called.",Linux,Linux,"187d2929206e6b098312c174ea873e4cedf5420d, 187d2929206e6b098312c174ea873e4cedf5420d, 187d2929206e6b098312c174ea873e4cedf5420d"
1451,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-17,CVE-2021-47076,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0046/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/rxe: Return CQE error if invalid lkey was supplied

RXE is missing update of WQE status in LOCAL_WRITE failures.  This caused
the following kernel panic if someone sent an atomic operation with an
explicitly wrong lkey.

[leonro@vm ~]$ mkt test
test_atomic_invalid_lkey (tests.test_atomic.AtomicTest) ...
 WARNING: CPU: 5 PID: 263 at drivers/infiniband/sw/rxe/rxe_comp.c:740 rxe_completer+0x1a6d/0x2e30 [rdma_rxe]
 Modules linked in: crc32_generic rdma_rxe ip6_udp_tunnel udp_tunnel rdma_ucm rdma_cm ib_umad ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core mlx5_core ptp pps_core
 CPU: 5 PID: 263 Comm: python3 Not tainted 5.13.0-rc1+ #2936
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
 RIP: 0010:rxe_completer+0x1a6d/0x2e30 [rdma_rxe]
 Code: 03 0f 8e 65 0e 00 00 3b 93 10 06 00 00 0f 84 82 0a 00 00 4c 89 ff 4c 89 44 24 38 e8 2d 74 a9 e1 4c 8b 44 24 38 e9 1c f5 ff ff <0f> 0b e9 0c e8 ff ff b8 05 00 00 00 41 bf 05 00 00 00 e9 ab e7 ff
 RSP: 0018:ffff8880158af090 EFLAGS: 00010246
 RAX: 0000000000000000 RBX: ffff888016a78000 RCX: ffffffffa0cf1652
 RDX: 1ffff9200004b442 RSI: 0000000000000004 RDI: ffffc9000025a210
 RBP: dffffc0000000000 R08: 00000000ffffffea R09: ffff88801617740b
 R10: ffffed1002c2ee81 R11: 0000000000000007 R12: ffff88800f3b63e8
 R13: ffff888016a78008 R14: ffffc9000025a180 R15: 000000000000000c
 FS:  00007f88b622a740(0000) GS:ffff88806d540000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00007f88b5a1fa10 CR3: 000000000d848004 CR4: 0000000000370ea0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
 Call Trace:
  rxe_do_task+0x130/0x230 [rdma_rxe]
  rxe_rcv+0xb11/0x1df0 [rdma_rxe]
  rxe_loopback+0x157/0x1e0 [rdma_rxe]
  rxe_responder+0x5532/0x7620 [rdma_rxe]
  rxe_do_task+0x130/0x230 [rdma_rxe]
  rxe_rcv+0x9c8/0x1df0 [rdma_rxe]
  rxe_loopback+0x157/0x1e0 [rdma_rxe]
  rxe_requester+0x1efd/0x58c0 [rdma_rxe]
  rxe_do_task+0x130/0x230 [rdma_rxe]
  rxe_post_send+0x998/0x1860 [rdma_rxe]
  ib_uverbs_post_send+0xd5f/0x1220 [ib_uverbs]
  ib_uverbs_write+0x847/0xc80 [ib_uverbs]
  vfs_write+0x1c5/0x840
  ksys_write+0x176/0x1d0
  do_syscall_64+0x3f/0x80
  entry_SYSCALL_64_after_hwframe+0x44/0xae",Linux,Linux,"8700e3e7c4857d28ebaa824509934556da0b3e76, 8700e3e7c4857d28ebaa824509934556da0b3e76"
1450,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-20952,7.4,Élevée,"Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u391, Oracle Java SE:8u391-perf, Oracle Java SE:11.0.21, Oracle Java SE:17.0.9, Oracle Java SE:21.0.1, Oracle GraalVM for JDK:17.0.9, Oracle GraalVM for JDK:21.0.1, Oracle GraalVM Enterprise Edition:20.3.12, Oracle GraalVM Enterprise Edition:21.3.8, Oracle GraalVM Enterprise Edition:22.3.4"
1449,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-20945,4.7,Moyenne,"Difficult to exploit vulnerability allows low privileged attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows low privileged attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.7 (Confidentiality impacts).  CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u391, Oracle Java SE:8u391-perf, Oracle Java SE:11.0.21, Oracle Java SE:17.0.9, Oracle Java SE:21.0.1, Oracle GraalVM for JDK:17.0.9, Oracle GraalVM for JDK:21.0.1, Oracle GraalVM Enterprise Edition:20.3.12, Oracle GraalVM Enterprise Edition:21.3.8, Oracle GraalVM Enterprise Edition:22.3.4"
1448,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-42461,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER-encoded signatures are allowed.",n/a,n/a,n/a
1447,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-20918,7.4,Élevée,"Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot).  Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and  22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as  unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:8u391, Oracle Java SE:8u391-perf, Oracle Java SE:11.0.21, Oracle Java SE:17.0.9, Oracle Java SE:21.0.1, Oracle GraalVM for JDK:17.0.9, Oracle GraalVM for JDK:21.0.1, Oracle GraalVM Enterprise Edition:20.3.12, Oracle GraalVM Enterprise Edition:21.3.8, Oracle GraalVM Enterprise Edition:22.3.4"
1446,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-17,CVE-2024-20932,7.5,Élevée,"Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0045/,"Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security).  Supported versions that are affected are Oracle Java SE: 17.0.9; Oracle GraalVM for JDK: 17.0.9; Oracle GraalVM Enterprise Edition: 21.3.8 and  22.3.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition.  Successful attacks of this vulnerability can result in  unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Integrity impacts).  CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N).",Oracle Corporation,Java SE JDK and JRE,"Oracle Java SE:17.0.9, Oracle GraalVM for JDK:17.0.9, Oracle GraalVM Enterprise Edition:21.3.8, Oracle GraalVM Enterprise Edition:22.3.4"
1533,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53234,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

erofs: handle NONHEAD !delta[1] lclusters gracefully

syzbot reported a WARNING in iomap_iter_done:
 iomap_fiemap+0x73b/0x9b0 fs/iomap/fiemap.c:80
 ioctl_fiemap fs/ioctl.c:220 [inline]

Generally, NONHEAD lclusters won't have delta[1]==0, except for crafted
images and filesystems created by pre-1.0 mkfs versions.

Previously, it would immediately bail out if delta[1]==0, which led to
inadequate decompressed lengths (thus FIEMAP is impacted).  Treat it as
delta[1]=1 to work around these legacy mkfs versions.

`lclusterbits > 14` is illegal for compact indexes, error out too.",Linux,Linux,"d95ae5e25326092d61613acf98280270dde22778, d95ae5e25326092d61613acf98280270dde22778, d95ae5e25326092d61613acf98280270dde22778, d95ae5e25326092d61613acf98280270dde22778"
1502,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-47402,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net: sched: flower: protect fl_walk() with rcu

Patch that refactored fl_walk() to use idr_for_each_entry_continue_ul()
also removed rcu protection of individual filters which causes following
use-after-free when filter is deleted concurrently. Fix fl_walk() to obtain
rcu read lock while iterating and taking the filter reference and temporary
release the lock while calling arg->fn() callback that can sleep.

KASAN trace:

[  352.773640] ==================================================================
[  352.775041] BUG: KASAN: use-after-free in fl_walk+0x159/0x240 [cls_flower]
[  352.776304] Read of size 4 at addr ffff8881c8251480 by task tc/2987

[  352.777862] CPU: 3 PID: 2987 Comm: tc Not tainted 5.15.0-rc2+ #2
[  352.778980] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
[  352.781022] Call Trace:
[  352.781573]  dump_stack_lvl+0x46/0x5a
[  352.782332]  print_address_description.constprop.0+0x1f/0x140
[  352.783400]  ? fl_walk+0x159/0x240 [cls_flower]
[  352.784292]  ? fl_walk+0x159/0x240 [cls_flower]
[  352.785138]  kasan_report.cold+0x83/0xdf
[  352.785851]  ? fl_walk+0x159/0x240 [cls_flower]
[  352.786587]  kasan_check_range+0x145/0x1a0
[  352.787337]  fl_walk+0x159/0x240 [cls_flower]
[  352.788163]  ? fl_put+0x10/0x10 [cls_flower]
[  352.789007]  ? __mutex_unlock_slowpath.constprop.0+0x220/0x220
[  352.790102]  tcf_chain_dump+0x231/0x450
[  352.790878]  ? tcf_chain_tp_delete_empty+0x170/0x170
[  352.791833]  ? __might_sleep+0x2e/0xc0
[  352.792594]  ? tfilter_notify+0x170/0x170
[  352.793400]  ? __mutex_unlock_slowpath.constprop.0+0x220/0x220
[  352.794477]  tc_dump_tfilter+0x385/0x4b0
[  352.795262]  ? tc_new_tfilter+0x1180/0x1180
[  352.796103]  ? __mod_node_page_state+0x1f/0xc0
[  352.796974]  ? __build_skb_around+0x10e/0x130
[  352.797826]  netlink_dump+0x2c0/0x560
[  352.798563]  ? netlink_getsockopt+0x430/0x430
[  352.799433]  ? __mutex_unlock_slowpath.constprop.0+0x220/0x220
[  352.800542]  __netlink_dump_start+0x356/0x440
[  352.801397]  rtnetlink_rcv_msg+0x3ff/0x550
[  352.802190]  ? tc_new_tfilter+0x1180/0x1180
[  352.802872]  ? rtnl_calcit.isra.0+0x1f0/0x1f0
[  352.803668]  ? tc_new_tfilter+0x1180/0x1180
[  352.804344]  ? _copy_from_iter_nocache+0x800/0x800
[  352.805202]  ? kasan_set_track+0x1c/0x30
[  352.805900]  netlink_rcv_skb+0xc6/0x1f0
[  352.806587]  ? rht_deferred_worker+0x6b0/0x6b0
[  352.807455]  ? rtnl_calcit.isra.0+0x1f0/0x1f0
[  352.808324]  ? netlink_ack+0x4d0/0x4d0
[  352.809086]  ? netlink_deliver_tap+0x62/0x3d0
[  352.809951]  netlink_unicast+0x353/0x480
[  352.810744]  ? netlink_attachskb+0x430/0x430
[  352.811586]  ? __alloc_skb+0xd7/0x200
[  352.812349]  netlink_sendmsg+0x396/0x680
[  352.813132]  ? netlink_unicast+0x480/0x480
[  352.813952]  ? __import_iovec+0x192/0x210
[  352.814759]  ? netlink_unicast+0x480/0x480
[  352.815580]  sock_sendmsg+0x6c/0x80
[  352.816299]  ____sys_sendmsg+0x3a5/0x3c0
[  352.817096]  ? kernel_sendmsg+0x30/0x30
[  352.817873]  ? __ia32_sys_recvmmsg+0x150/0x150
[  352.818753]  ___sys_sendmsg+0xd8/0x140
[  352.819518]  ? sendmsg_copy_msghdr+0x110/0x110
[  352.820402]  ? ___sys_recvmsg+0xf4/0x1a0
[  352.821110]  ? __copy_msghdr_from_user+0x260/0x260
[  352.821934]  ? _raw_spin_lock+0x81/0xd0
[  352.822680]  ? __handle_mm_fault+0xef3/0x1b20
[  352.823549]  ? rb_insert_color+0x2a/0x270
[  352.824373]  ? copy_page_range+0x16b0/0x16b0
[  352.825209]  ? perf_event_update_userpage+0x2d0/0x2d0
[  352.826190]  ? __fget_light+0xd9/0xf0
[  352.826941]  __sys_sendmsg+0xb3/0x130
[  352.827613]  ? __sys_sendmsg_sock+0x20/0x20
[  352.828377]  ? do_user_addr_fault+0x2c5/0x8a0
[  352.829184]  ? fpregs_assert_state_consistent+0x52/0x60
[  352.830001]  ? exit_to_user_mode_prepare+0x32/0x160
[  352.830845]  do_syscall_64+0x35/0x80
[  352.831445]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[  352.832331] RIP: 0033:0x7f7bee973c17
[ 
---truncated---",Linux,Linux,"d39d714969cda5cbda291402c8c6b1fb1047f42e, d39d714969cda5cbda291402c8c6b1fb1047f42e, d39d714969cda5cbda291402c8c6b1fb1047f42e, d39d714969cda5cbda291402c8c6b1fb1047f42e"
1535,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53103,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

hv_sock: Initializing vsk->trans to NULL to prevent a dangling pointer

When hvs is released, there is a possibility that vsk->trans may not
be initialized to NULL, which could lead to a dangling pointer.
This issue is resolved by initializing vsk->trans to NULL.",Linux,Linux,"ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9, ae0078fcf0a5eb3a8623bfb5f988262e0911fdb9"
1609,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-41059,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

hfsplus: fix uninit-value in copy_name

[syzbot reported]
BUG: KMSAN: uninit-value in sized_strscpy+0xc4/0x160
 sized_strscpy+0xc4/0x160
 copy_name+0x2af/0x320 fs/hfsplus/xattr.c:411
 hfsplus_listxattr+0x11e9/0x1a50 fs/hfsplus/xattr.c:750
 vfs_listxattr fs/xattr.c:493 [inline]
 listxattr+0x1f3/0x6b0 fs/xattr.c:840
 path_listxattr fs/xattr.c:864 [inline]
 __do_sys_listxattr fs/xattr.c:876 [inline]
 __se_sys_listxattr fs/xattr.c:873 [inline]
 __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873
 x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
 slab_post_alloc_hook mm/slub.c:3877 [inline]
 slab_alloc_node mm/slub.c:3918 [inline]
 kmalloc_trace+0x57b/0xbe0 mm/slub.c:4065
 kmalloc include/linux/slab.h:628 [inline]
 hfsplus_listxattr+0x4cc/0x1a50 fs/hfsplus/xattr.c:699
 vfs_listxattr fs/xattr.c:493 [inline]
 listxattr+0x1f3/0x6b0 fs/xattr.c:840
 path_listxattr fs/xattr.c:864 [inline]
 __do_sys_listxattr fs/xattr.c:876 [inline]
 __se_sys_listxattr fs/xattr.c:873 [inline]
 __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873
 x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
[Fix]
When allocating memory to strbuf, initialize memory to 0.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1621,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-36964,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

fs/9p: only translate RWX permissions for plain 9P2000

Garbage in plain 9P2000's perm bits is allowed through, which causes it
to be able to set (among others) the suid bit. This was presumably not
the intent since the unix extended bits are handled explicitly and
conditionally on .u.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1620,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35863,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential UAF in is_valid_oplock_break()

Skip sessions that are being teared down (status == SES_EXITING) to
avoid UAF.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1619,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53090,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

afs: Fix lock recursion

afs_wake_up_async_call() can incur lock recursion.  The problem is that it
is called from AF_RXRPC whilst holding the ->notify_lock, but it tries to
take a ref on the afs_call struct in order to pass it to a work queue - but
if the afs_call is already queued, we then have an extraneous ref that must
be put... calling afs_put_call() may call back down into AF_RXRPC through
rxrpc_kernel_shutdown_call(), however, which might try taking the
->notify_lock again.

This case isn't very common, however, so defer it to a workqueue.  The oops
looks something like:

  BUG: spinlock recursion on CPU#0, krxrpcio/7001/1646
   lock: 0xffff888141399b30, .magic: dead4ead, .owner: krxrpcio/7001/1646, .owner_cpu: 0
  CPU: 0 UID: 0 PID: 1646 Comm: krxrpcio/7001 Not tainted 6.12.0-rc2-build3+ #4351
  Hardware name: ASUS All Series/H97-PLUS, BIOS 2306 10/09/2014
  Call Trace:
   <TASK>
   dump_stack_lvl+0x47/0x70
   do_raw_spin_lock+0x3c/0x90
   rxrpc_kernel_shutdown_call+0x83/0xb0
   afs_put_call+0xd7/0x180
   rxrpc_notify_socket+0xa0/0x190
   rxrpc_input_split_jumbo+0x198/0x1d0
   rxrpc_input_data+0x14b/0x1e0
   ? rxrpc_input_call_packet+0xc2/0x1f0
   rxrpc_input_call_event+0xad/0x6b0
   rxrpc_input_packet_on_conn+0x1e1/0x210
   rxrpc_input_packet+0x3f2/0x4d0
   rxrpc_io_thread+0x243/0x410
   ? __pfx_rxrpc_io_thread+0x10/0x10
   kthread+0xcf/0xe0
   ? __pfx_kthread+0x10/0x10
   ret_from_fork+0x24/0x40
   ? __pfx_kthread+0x10/0x10
   ret_from_fork_asm+0x1a/0x30
   </TASK>",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1618,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53155,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix uninitialized value in ocfs2_file_read_iter()

Syzbot has reported the following KMSAN splat:

BUG: KMSAN: uninit-value in ocfs2_file_read_iter+0x9a4/0xf80
 ocfs2_file_read_iter+0x9a4/0xf80
 __io_read+0x8d4/0x20f0
 io_read+0x3e/0xf0
 io_issue_sqe+0x42b/0x22c0
 io_wq_submit_work+0xaf9/0xdc0
 io_worker_handle_work+0xd13/0x2110
 io_wq_worker+0x447/0x1410
 ret_from_fork+0x6f/0x90
 ret_from_fork_asm+0x1a/0x30

Uninit was created at:
 __alloc_pages_noprof+0x9a7/0xe00
 alloc_pages_mpol_noprof+0x299/0x990
 alloc_pages_noprof+0x1bf/0x1e0
 allocate_slab+0x33a/0x1250
 ___slab_alloc+0x12ef/0x35e0
 kmem_cache_alloc_bulk_noprof+0x486/0x1330
 __io_alloc_req_refill+0x84/0x560
 io_submit_sqes+0x172f/0x2f30
 __se_sys_io_uring_enter+0x406/0x41c0
 __x64_sys_io_uring_enter+0x11f/0x1a0
 x64_sys_call+0x2b54/0x3ba0
 do_syscall_64+0xcd/0x1e0
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Since an instance of 'struct kiocb' may be passed from the block layer
with 'private' field uninitialized, introduce 'ocfs2_iocb_init_rw_locked()'
and use it from where 'ocfs2_dio_end_io()' might take care, i.e. in
'ocfs2_file_read_iter()' and 'ocfs2_file_write_iter()'.",Linux,Linux,"7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e, 7cdfc3a1c3971c9125c317cb8c2525745851798e"
1617,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2022-48686,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-tcp: fix UAF when detecting digest errors

We should also bail from the io_work loop when we set rd_enabled to true,
so we don't attempt to read data from the socket when the TCP stream is
already out-of-sync or corrupted.",Linux,Linux,"3f2304f8c6d6ed97849057bd16fee99e434ca796, 3f2304f8c6d6ed97849057bd16fee99e434ca796, 3f2304f8c6d6ed97849057bd16fee99e434ca796, 3f2304f8c6d6ed97849057bd16fee99e434ca796, 3f2304f8c6d6ed97849057bd16fee99e434ca796"
1616,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26828,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

cifs: fix underflow in parse_server_interfaces()

In this loop, we step through the buffer and after each item we check
if the size_left is greater than the minimum size we need.  However,
the problem is that ""bytes_left"" is type ssize_t while sizeof() is type
size_t.  That means that because of type promotion, the comparison is
done as an unsigned and if we have negative bytes left the loop
continues instead of ending.",Linux,Linux,"fe856be475f7cf5ffcde57341d175ce9fd09434b, fe856be475f7cf5ffcde57341d175ce9fd09434b, fe856be475f7cf5ffcde57341d175ce9fd09434b, fe856be475f7cf5ffcde57341d175ce9fd09434b"
1615,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35817,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: amdgpu_ttm_gart_bind set gtt bound flag

Otherwise after the GTT bo is released, the GTT and gart space is freed
but amdgpu_ttm_backend_unbind will not clear the gart page table entry
and leave valid mapping entry pointing to the stale system page. Then
if GPU access the gart address mistakely, it will read undefined value
instead page fault, harder to debug and reproduce the real issue.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1614,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53216,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: release svc_expkey/svc_export with rcu_work

The last reference for `cache_head` can be reduced to zero in `c_show`
and `e_show`(using `rcu_read_lock` and `rcu_read_unlock`). Consequently,
`svc_export_put` and `expkey_put` will be invoked, leading to two
issues:

1. The `svc_export_put` will directly free ex_uuid. However,
   `e_show`/`c_show` will access `ex_uuid` after `cache_put`, which can
   trigger a use-after-free issue, shown below.

   ==================================================================
   BUG: KASAN: slab-use-after-free in svc_export_show+0x362/0x430 [nfsd]
   Read of size 1 at addr ff11000010fdc120 by task cat/870

   CPU: 1 UID: 0 PID: 870 Comm: cat Not tainted 6.12.0-rc3+ #1
   Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
   1.16.1-2.fc37 04/01/2014
   Call Trace:
    <TASK>
    dump_stack_lvl+0x53/0x70
    print_address_description.constprop.0+0x2c/0x3a0
    print_report+0xb9/0x280
    kasan_report+0xae/0xe0
    svc_export_show+0x362/0x430 [nfsd]
    c_show+0x161/0x390 [sunrpc]
    seq_read_iter+0x589/0x770
    seq_read+0x1e5/0x270
    proc_reg_read+0xe1/0x140
    vfs_read+0x125/0x530
    ksys_read+0xc1/0x160
    do_syscall_64+0x5f/0x170
    entry_SYSCALL_64_after_hwframe+0x76/0x7e

   Allocated by task 830:
    kasan_save_stack+0x20/0x40
    kasan_save_track+0x14/0x30
    __kasan_kmalloc+0x8f/0xa0
    __kmalloc_node_track_caller_noprof+0x1bc/0x400
    kmemdup_noprof+0x22/0x50
    svc_export_parse+0x8a9/0xb80 [nfsd]
    cache_do_downcall+0x71/0xa0 [sunrpc]
    cache_write_procfs+0x8e/0xd0 [sunrpc]
    proc_reg_write+0xe1/0x140
    vfs_write+0x1a5/0x6d0
    ksys_write+0xc1/0x160
    do_syscall_64+0x5f/0x170
    entry_SYSCALL_64_after_hwframe+0x76/0x7e

   Freed by task 868:
    kasan_save_stack+0x20/0x40
    kasan_save_track+0x14/0x30
    kasan_save_free_info+0x3b/0x60
    __kasan_slab_free+0x37/0x50
    kfree+0xf3/0x3e0
    svc_export_put+0x87/0xb0 [nfsd]
    cache_purge+0x17f/0x1f0 [sunrpc]
    nfsd_destroy_serv+0x226/0x2d0 [nfsd]
    nfsd_svc+0x125/0x1e0 [nfsd]
    write_threads+0x16a/0x2a0 [nfsd]
    nfsctl_transaction_write+0x74/0xa0 [nfsd]
    vfs_write+0x1a5/0x6d0
    ksys_write+0xc1/0x160
    do_syscall_64+0x5f/0x170
    entry_SYSCALL_64_after_hwframe+0x76/0x7e

2. We cannot sleep while using `rcu_read_lock`/`rcu_read_unlock`.
   However, `svc_export_put`/`expkey_put` will call path_put, which
   subsequently triggers a sleeping operation due to the following
   `dput`.

   =============================
   WARNING: suspicious RCU usage
   5.10.0-dirty #141 Not tainted
   -----------------------------
   ...
   Call Trace:
   dump_stack+0x9a/0xd0
   ___might_sleep+0x231/0x240
   dput+0x39/0x600
   path_put+0x1b/0x30
   svc_export_put+0x17/0x80
   e_show+0x1c9/0x200
   seq_read_iter+0x63f/0x7c0
   seq_read+0x226/0x2d0
   vfs_read+0x113/0x2c0
   ksys_read+0xc9/0x170
   do_syscall_64+0x33/0x40
   entry_SYSCALL_64_after_hwframe+0x67/0xd1

Fix these issues by using `rcu_work` to help release
`svc_expkey`/`svc_export`. This approach allows for an asynchronous
context to invoke `path_put` and also facilitates the freeing of
`uuid/exp/key` after an RCU grace period.",Linux,Linux,"9ceddd9da13434a5906255c0fc528c385aded283, 9ceddd9da13434a5906255c0fc528c385aded283, 9ceddd9da13434a5906255c0fc528c385aded283, 9ceddd9da13434a5906255c0fc528c385aded283"
1613,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53180,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ALSA: pcm: Add sanity NULL check for the default mmap fault handler

A driver might allow the mmap access before initializing its
runtime->dma_area properly.  Add a proper NULL check before passing to
virt_to_page() for avoiding a panic.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1612,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56539,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mwifiex: Fix memcpy() field-spanning write warning in mwifiex_config_scan()

Replace one-element array with a flexible-array member in `struct
mwifiex_ie_types_wildcard_ssid_params` to fix the following warning
on a MT8173 Chromebook (mt8173-elm-hana):

[  356.775250] ------------[ cut here ]------------
[  356.784543] memcpy: detected field-spanning write (size 6) of single field ""wildcard_ssid_tlv->ssid"" at drivers/net/wireless/marvell/mwifiex/scan.c:904 (size 1)
[  356.813403] WARNING: CPU: 3 PID: 742 at drivers/net/wireless/marvell/mwifiex/scan.c:904 mwifiex_scan_networks+0x4fc/0xf28 [mwifiex]

The ""(size 6)"" above is exactly the length of the SSID of the network
this device was connected to. The source of the warning looks like:

    ssid_len = user_scan_in->ssid_list[i].ssid_len;
    [...]
    memcpy(wildcard_ssid_tlv->ssid,
           user_scan_in->ssid_list[i].ssid, ssid_len);

There is a #define WILDCARD_SSID_TLV_MAX_SIZE that uses sizeof() on this
struct, but it already didn't account for the size of the one-element
array, so it doesn't need to be changed.",Linux,Linux,"5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e, 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e"
1611,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53146,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

NFSD: Prevent a potential integer overflow

If the tag length is >= U32_MAX - 3 then the ""length + 4"" addition
can result in an integer overflow. Address this by splitting the
decoding into several steps so that decode_cb_compound4res() does
not have to perform arithmetic on the unsafe length value.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1610,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53151,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

svcrdma: Address an integer overflow

Dan Carpenter reports:
> Commit 78147ca8b4a9 (""svcrdma: Add a ""parsed chunk list"" data
> structure"") from Jun 22, 2020 (linux-next), leads to the following
> Smatch static checker warning:
>
>	net/sunrpc/xprtrdma/svc_rdma_recvfrom.c:498 xdr_check_write_chunk()
>	warn: potential user controlled sizeof overflow 'segcount * 4 * 4'
>
> net/sunrpc/xprtrdma/svc_rdma_recvfrom.c
>     488 static bool xdr_check_write_chunk(struct svc_rdma_recv_ctxt *rctxt)
>     489 {
>     490         u32 segcount;
>     491         __be32 *p;
>     492
>     493         if (xdr_stream_decode_u32(&rctxt->rc_stream, &segcount))
>                                                               ^^^^^^^^
>
>     494                 return false;
>     495
>     496         /* A bogus segcount causes this buffer overflow check to fail. */
>     497         p = xdr_inline_decode(&rctxt->rc_stream,
> --> 498                               segcount * rpcrdma_segment_maxsz * sizeof(*p));
>
>
> segcount is an untrusted u32.  On 32bit systems anything >= SIZE_MAX / 16 will
> have an integer overflow and some those values will be accepted by
> xdr_inline_decode().",Linux,Linux,"78147ca8b4a9b6cf0e597ddd6bf17959e08376c2, 78147ca8b4a9b6cf0e597ddd6bf17959e08376c2, 78147ca8b4a9b6cf0e597ddd6bf17959e08376c2, 78147ca8b4a9b6cf0e597ddd6bf17959e08376c2, 78147ca8b4a9b6cf0e597ddd6bf17959e08376c2, 78147ca8b4a9b6cf0e597ddd6bf17959e08376c2"
1608,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35862,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential UAF in smb2_is_network_name_deleted()

Skip sessions that are being teared down (status == SES_EXITING) to
avoid UAF.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1623,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-6546,n/a,n/a,Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"A race condition was found in the GSM 0710 tty multiplexor in the Linux kernel. This issue occurs when two threads execute the GSMIOC_SETCONF ioctl on the same tty file descriptor with the gsm line discipline enabled, and can lead to a use-after-free problem on a struct gsm_dlci while restarting the gsm mux. This could allow a local unprivileged user to escalate their privileges on the system.",Red Hat,Red Hat Enterprise Linux 8,0:4.18.0-513.24.1.rt7.326.el8_9
1607,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-1829,7.8,Élevée,CWE-416 Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"A use-after-free vulnerability in the Linux Kernel traffic control index filter (tcindex) can be exploited to achieve local privilege escalation. The tcindex_delete function which does not properly deactivate filters in case of a perfect hashes while deleting the underlying structure which can later lead to double freeing the structure. A local attacker user can use this vulnerability to elevate its privileges to root.
We recommend upgrading past commit 8c710f75256bb3cf05ac7b1672c82b92c43f3d28.

",Linux,Linux Kernel,3.8
1606,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53214,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

vfio/pci: Properly hide first-in-list PCIe extended capability

There are cases where a PCIe extended capability should be hidden from
the user. For example, an unknown capability (i.e., capability with ID
greater than PCI_EXT_CAP_ID_MAX) or a capability that is intentionally
chosen to be hidden from the user.

Hiding a capability is done by virtualizing and modifying the 'Next
Capability Offset' field of the previous capability so it points to the
capability after the one that should be hidden.

The special case where the first capability in the list should be hidden
is handled differently because there is no previous capability that can
be modified. In this case, the capability ID and version are zeroed
while leaving the next pointer intact. This hides the capability and
leaves an anchor for the rest of the capability list.

However, today, hiding the first capability in the list is not done
properly if the capability is unknown, as struct
vfio_pci_core_device->pci_config_map is set to the capability ID during
initialization but the capability ID is not properly checked later when
used in vfio_config_do_rw(). This leads to the following warning [1] and
to an out-of-bounds access to ecap_perms array.

Fix it by checking cap_id in vfio_config_do_rw(), and if it is greater
than PCI_EXT_CAP_ID_MAX, use an alternative struct perm_bits for direct
read only access instead of the ecap_perms array.

Note that this is safe since the above is the only case where cap_id can
exceed PCI_EXT_CAP_ID_MAX (except for the special capabilities, which
are already checked before).

[1]

WARNING: CPU: 118 PID: 5329 at drivers/vfio/pci/vfio_pci_config.c:1900 vfio_pci_config_rw+0x395/0x430 [vfio_pci_core]
CPU: 118 UID: 0 PID: 5329 Comm: simx-qemu-syste Not tainted 6.12.0+ #1
(snip)
Call Trace:
 <TASK>
 ? show_regs+0x69/0x80
 ? __warn+0x8d/0x140
 ? vfio_pci_config_rw+0x395/0x430 [vfio_pci_core]
 ? report_bug+0x18f/0x1a0
 ? handle_bug+0x63/0xa0
 ? exc_invalid_op+0x19/0x70
 ? asm_exc_invalid_op+0x1b/0x20
 ? vfio_pci_config_rw+0x395/0x430 [vfio_pci_core]
 ? vfio_pci_config_rw+0x244/0x430 [vfio_pci_core]
 vfio_pci_rw+0x101/0x1b0 [vfio_pci_core]
 vfio_pci_core_read+0x1d/0x30 [vfio_pci_core]
 vfio_device_fops_read+0x27/0x40 [vfio]
 vfs_read+0xbd/0x340
 ? vfio_device_fops_unl_ioctl+0xbb/0x740 [vfio]
 ? __rseq_handle_notify_resume+0xa4/0x4b0
 __x64_sys_pread64+0x96/0xc0
 x64_sys_call+0x1c3d/0x20d0
 do_syscall_64+0x4d/0x120
 entry_SYSCALL_64_after_hwframe+0x76/0x7e",Linux,Linux,"89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153, 89e1f7d4c66d85f42c3d52ea3866eb10cadf6153"
1605,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56754,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

crypto: caam - Fix the pointer passed to caam_qi_shutdown()

The type of the last parameter given to devm_add_action_or_reset() is
""struct caam_drv_private *"", but in caam_qi_shutdown(), it is casted to
""struct device *"".

Pass the correct parameter to devm_add_action_or_reset() so that the
resources are released as expected.",Linux,Linux,"f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb, f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb, f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb, f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb, f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb, f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb, f414de2e2fffd89c8a4e5b5e06b0eba5f9d8b1eb"
1604,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53133,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Handle dml allocation failure to avoid crash

[Why]
In the case where a dml allocation fails for any reason, the
current state's dml contexts would no longer be valid. Then
subsequent calls dc_state_copy_internal would shallow copy
invalid memory and if the new state was released, a double
free would occur.

[How]
Reset dml pointers in new_state to NULL and avoid invalid
pointer

(cherry picked from commit bcafdc61529a48f6f06355d78eb41b3aeda5296c)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1603,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50039,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: accept TCA_STAB only for root qdisc

Most qdiscs maintain their backlog using qdisc_pkt_len(skb)
on the assumption it is invariant between the enqueue()
and dequeue() handlers.

Unfortunately syzbot can crash a host rather easily using
a TBF + SFQ combination, with an STAB on SFQ [1]

We can't support TCA_STAB on arbitrary level, this would
require to maintain per-qdisc storage.

[1]
[   88.796496] BUG: kernel NULL pointer dereference, address: 0000000000000000
[   88.798611] #PF: supervisor read access in kernel mode
[   88.799014] #PF: error_code(0x0000) - not-present page
[   88.799506] PGD 0 P4D 0
[   88.799829] Oops: Oops: 0000 [#1] SMP NOPTI
[   88.800569] CPU: 14 UID: 0 PID: 2053 Comm: b371744477 Not tainted 6.12.0-rc1-virtme #1117
[   88.801107] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
[   88.801779] RIP: 0010:sfq_dequeue (net/sched/sch_sfq.c:272 net/sched/sch_sfq.c:499) sch_sfq
[ 88.802544] Code: 0f b7 50 12 48 8d 04 d5 00 00 00 00 48 89 d6 48 29 d0 48 8b 91 c0 01 00 00 48 c1 e0 03 48 01 c2 66 83 7a 1a 00 7e c0 48 8b 3a <4c> 8b 07 4c 89 02 49 89 50 08 48 c7 47 08 00 00 00 00 48 c7 07 00
All code
========
   0:	0f b7 50 12          	movzwl 0x12(%rax),%edx
   4:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   b:	00
   c:	48 89 d6             	mov    %rdx,%rsi
   f:	48 29 d0             	sub    %rdx,%rax
  12:	48 8b 91 c0 01 00 00 	mov    0x1c0(%rcx),%rdx
  19:	48 c1 e0 03          	shl    $0x3,%rax
  1d:	48 01 c2             	add    %rax,%rdx
  20:	66 83 7a 1a 00       	cmpw   $0x0,0x1a(%rdx)
  25:	7e c0                	jle    0xffffffffffffffe7
  27:	48 8b 3a             	mov    (%rdx),%rdi
  2a:*	4c 8b 07             	mov    (%rdi),%r8		<-- trapping instruction
  2d:	4c 89 02             	mov    %r8,(%rdx)
  30:	49 89 50 08          	mov    %rdx,0x8(%r8)
  34:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  3b:	00
  3c:	48                   	rex.W
  3d:	c7                   	.byte 0xc7
  3e:	07                   	(bad)
	...

Code starting with the faulting instruction
===========================================
   0:	4c 8b 07             	mov    (%rdi),%r8
   3:	4c 89 02             	mov    %r8,(%rdx)
   6:	49 89 50 08          	mov    %rdx,0x8(%r8)
   a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  11:	00
  12:	48                   	rex.W
  13:	c7                   	.byte 0xc7
  14:	07                   	(bad)
	...
[   88.803721] RSP: 0018:ffff9a1f892b7d58 EFLAGS: 00000206
[   88.804032] RAX: 0000000000000000 RBX: ffff9a1f8420c800 RCX: ffff9a1f8420c800
[   88.804560] RDX: ffff9a1f81bc1440 RSI: 0000000000000000 RDI: 0000000000000000
[   88.805056] RBP: ffffffffc04bb0e0 R08: 0000000000000001 R09: 00000000ff7f9a1f
[   88.805473] R10: 000000000001001b R11: 0000000000009a1f R12: 0000000000000140
[   88.806194] R13: 0000000000000001 R14: ffff9a1f886df400 R15: ffff9a1f886df4ac
[   88.806734] FS:  00007f445601a740(0000) GS:ffff9a2e7fd80000(0000) knlGS:0000000000000000
[   88.807225] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[   88.807672] CR2: 0000000000000000 CR3: 000000050cc46000 CR4: 00000000000006f0
[   88.808165] Call Trace:
[   88.808459]  <TASK>
[   88.808710] ? __die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434)
[   88.809261] ? page_fault_oops (arch/x86/mm/fault.c:715)
[   88.809561] ? exc_page_fault (./arch/x86/include/asm/irqflags.h:26 ./arch/x86/include/asm/irqflags.h:87 ./arch/x86/include/asm/irqflags.h:147 arch/x86/mm/fault.c:1489 arch/x86/mm/fault.c:1539)
[   88.809806] ? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:623)
[   88.810074] ? sfq_dequeue (net/sched/sch_sfq.c:272 net/sched/sch_sfq.c:499) sch_sfq
[   88.810411] sfq_reset (net/sched/sch_sfq.c:525) sch_sfq
[   88.810671] qdisc_reset (./include/linux/skbuff.h:2135 ./include/linux/skbuff.h:2441 ./include/linux/skbuff.h:3304 ./include/linux/skbuff.h:3310 net/sched/sch_g
---truncated---",Linux,Linux,"175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c"
1602,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-52752,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix use-after-free bug in cifs_debug_data_proc_show()

Skip SMB sessions that are being teared down
(e.g. @ses->ses_status == SES_EXITING) in cifs_debug_data_proc_show()
to avoid use-after-free in @ses.

This fixes the following GPF when reading from /proc/fs/cifs/DebugData
while mounting and umounting

  [ 816.251274] general protection fault, probably for non-canonical
  address 0x6b6b6b6b6b6b6d81: 0000 [#1] PREEMPT SMP NOPTI
  ...
  [  816.260138] Call Trace:
  [  816.260329]  <TASK>
  [  816.260499]  ? die_addr+0x36/0x90
  [  816.260762]  ? exc_general_protection+0x1b3/0x410
  [  816.261126]  ? asm_exc_general_protection+0x26/0x30
  [  816.261502]  ? cifs_debug_tcon+0xbd/0x240 [cifs]
  [  816.261878]  ? cifs_debug_tcon+0xab/0x240 [cifs]
  [  816.262249]  cifs_debug_data_proc_show+0x516/0xdb0 [cifs]
  [  816.262689]  ? seq_read_iter+0x379/0x470
  [  816.262995]  seq_read_iter+0x118/0x470
  [  816.263291]  proc_reg_read_iter+0x53/0x90
  [  816.263596]  ? srso_alias_return_thunk+0x5/0x7f
  [  816.263945]  vfs_read+0x201/0x350
  [  816.264211]  ksys_read+0x75/0x100
  [  816.264472]  do_syscall_64+0x3f/0x90
  [  816.264750]  entry_SYSCALL_64_after_hwframe+0x6e/0xd8
  [  816.265135] RIP: 0033:0x7fd5e669d381",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1601,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50256,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_reject_ipv6: fix potential crash in nf_send_reset6()

I got a syzbot report without a repro [1] crashing in nf_send_reset6()

I think the issue is that dev->hard_header_len is zero, and we attempt
later to push an Ethernet header.

Use LL_MAX_HEADER, as other functions in net/ipv6/netfilter/nf_reject_ipv6.c.

[1]

skbuff: skb_under_panic: text:ffffffff89b1d008 len:74 put:14 head:ffff88803123aa00 data:ffff88803123a9f2 tail:0x3c end:0x140 dev:syz_tun
 kernel BUG at net/core/skbuff.c:206 !
Oops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN PTI
CPU: 0 UID: 0 PID: 7373 Comm: syz.1.568 Not tainted 6.12.0-rc2-syzkaller-00631-g6d858708d465 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
 RIP: 0010:skb_panic net/core/skbuff.c:206 [inline]
 RIP: 0010:skb_under_panic+0x14b/0x150 net/core/skbuff.c:216
Code: 0d 8d 48 c7 c6 60 a6 29 8e 48 8b 54 24 08 8b 0c 24 44 8b 44 24 04 4d 89 e9 50 41 54 41 57 41 56 e8 ba 30 38 02 48 83 c4 20 90 <0f> 0b 0f 1f 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3
RSP: 0018:ffffc900045269b0 EFLAGS: 00010282
RAX: 0000000000000088 RBX: dffffc0000000000 RCX: cd66dacdc5d8e800
RDX: 0000000000000000 RSI: 0000000000000200 RDI: 0000000000000000
RBP: ffff88802d39a3d0 R08: ffffffff8174afec R09: 1ffff920008a4ccc
R10: dffffc0000000000 R11: fffff520008a4ccd R12: 0000000000000140
R13: ffff88803123aa00 R14: ffff88803123a9f2 R15: 000000000000003c
FS:  00007fdbee5ff6c0(0000) GS:ffff8880b8600000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000000 CR3: 000000005d322000 CR4: 00000000003526f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
  skb_push+0xe5/0x100 net/core/skbuff.c:2636
  eth_header+0x38/0x1f0 net/ethernet/eth.c:83
  dev_hard_header include/linux/netdevice.h:3208 [inline]
  nf_send_reset6+0xce6/0x1270 net/ipv6/netfilter/nf_reject_ipv6.c:358
  nft_reject_inet_eval+0x3b9/0x690 net/netfilter/nft_reject_inet.c:48
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x4ad/0x1da0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_inet+0x418/0x6b0 net/netfilter/nft_chain_filter.c:161
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xc3/0x220 net/netfilter/core.c:626
  nf_hook include/linux/netfilter.h:269 [inline]
  NF_HOOK include/linux/netfilter.h:312 [inline]
  br_nf_pre_routing_ipv6+0x63e/0x770 net/bridge/br_netfilter_ipv6.c:184
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_bridge_pre net/bridge/br_input.c:277 [inline]
  br_handle_frame+0x9fd/0x1530 net/bridge/br_input.c:424
  __netif_receive_skb_core+0x13e8/0x4570 net/core/dev.c:5562
  __netif_receive_skb_one_core net/core/dev.c:5666 [inline]
  __netif_receive_skb+0x12f/0x650 net/core/dev.c:5781
  netif_receive_skb_internal net/core/dev.c:5867 [inline]
  netif_receive_skb+0x1e8/0x890 net/core/dev.c:5926
  tun_rx_batched+0x1b7/0x8f0 drivers/net/tun.c:1550
  tun_get_user+0x3056/0x47e0 drivers/net/tun.c:2007
  tun_chr_write_iter+0x10d/0x1f0 drivers/net/tun.c:2053
  new_sync_write fs/read_write.c:590 [inline]
  vfs_write+0xa6d/0xc90 fs/read_write.c:683
  ksys_write+0x183/0x2b0 fs/read_write.c:736
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fdbeeb7d1ff
Code: 89 54 24 18 48 89 74 24 10 89 7c 24 08 e8 c9 8d 02 00 48 8b 54 24 18 48 8b 74 24 10 41 89 c0 8b 7c 24 08 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 31 44 89 c7 48 89 44 24 08 e8 1c 8e 02 00 48
RSP: 002b:00007fdbee5ff000 EFLAGS: 00000293 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 00007fdbeed36058 RCX: 00007fdbeeb7d1ff
RDX: 000000000000008e RSI: 0000000020000040 RDI: 00000000000000c8
RBP: 00007fdbeebf12be R08: 0000000
---truncated---",Linux,Linux,"c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb"
1600,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53224,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/mlx5: Move events notifier registration to be after device registration

Move pkey change work initialization and cleanup from device resources
stage to notifier stage, since this is the stage which handles this work
events.

Fix a race between the device deregistration and pkey change work by moving
MLX5_IB_STAGE_DEVICE_NOTIFIER to be after MLX5_IB_STAGE_IB_REG in order to
ensure that the notifier is deregistered before the device during cleanup.
Which ensures there are no works that are being executed after the
device has already unregistered which can cause the panic below.

BUG: kernel NULL pointer dereference, address: 0000000000000000
PGD 0 P4D 0
Oops: 0000 [#1] PREEMPT SMP PTI
CPU: 1 PID: 630071 Comm: kworker/1:2 Kdump: loaded Tainted: G W OE --------- --- 5.14.0-162.6.1.el9_1.x86_64 #1
Hardware name: Microsoft Corporation Virtual Machine/Virtual Machine, BIOS 090008 02/27/2023
Workqueue: events pkey_change_handler [mlx5_ib]
RIP: 0010:setup_qp+0x38/0x1f0 [mlx5_ib]
Code: ee 41 54 45 31 e4 55 89 f5 53 48 89 fb 48 83 ec 20 8b 77 08 65 48 8b 04 25 28 00 00 00 48 89 44 24 18 48 8b 07 48 8d 4c 24 16 <4c> 8b 38 49 8b 87 80 0b 00 00 4c 89 ff 48 8b 80 08 05 00 00 8b 40
RSP: 0018:ffffbcc54068be20 EFLAGS: 00010282
RAX: 0000000000000000 RBX: ffff954054494128 RCX: ffffbcc54068be36
RDX: ffff954004934000 RSI: 0000000000000001 RDI: ffff954054494128
RBP: 0000000000000023 R08: ffff954001be2c20 R09: 0000000000000001
R10: ffff954001be2c20 R11: ffff9540260133c0 R12: 0000000000000000
R13: 0000000000000023 R14: 0000000000000000 R15: ffff9540ffcb0905
FS: 0000000000000000(0000) GS:ffff9540ffc80000(0000) knlGS:0000000000000000
CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000000 CR3: 000000010625c001 CR4: 00000000003706e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
mlx5_ib_gsi_pkey_change+0x20/0x40 [mlx5_ib]
process_one_work+0x1e8/0x3c0
worker_thread+0x50/0x3b0
? rescuer_thread+0x380/0x380
kthread+0x149/0x170
? set_kthread_struct+0x50/0x50
ret_from_fork+0x22/0x30
Modules linked in: rdma_ucm(OE) rdma_cm(OE) iw_cm(OE) ib_ipoib(OE) ib_cm(OE) ib_umad(OE) mlx5_ib(OE) mlx5_fwctl(OE) fwctl(OE) ib_uverbs(OE) mlx5_core(OE) mlxdevm(OE) ib_core(OE) mlx_compat(OE) psample mlxfw(OE) tls knem(OE) netconsole nfsv3 nfs_acl nfs lockd grace fscache netfs qrtr rfkill sunrpc intel_rapl_msr intel_rapl_common rapl hv_balloon hv_utils i2c_piix4 pcspkr joydev fuse ext4 mbcache jbd2 sr_mod sd_mod cdrom t10_pi sg ata_generic pci_hyperv pci_hyperv_intf hyperv_drm drm_shmem_helper drm_kms_helper hv_storvsc syscopyarea hv_netvsc sysfillrect sysimgblt hid_hyperv fb_sys_fops scsi_transport_fc hyperv_keyboard drm ata_piix crct10dif_pclmul crc32_pclmul crc32c_intel libata ghash_clmulni_intel hv_vmbus serio_raw [last unloaded: ib_core]
CR2: 0000000000000000
---[ end trace f6f8be4eae12f7bc ]---",Linux,Linux,"7722f47e71e58592a2ba4437d27c802ba1c64e08, 7722f47e71e58592a2ba4437d27c802ba1c64e08, 7722f47e71e58592a2ba4437d27c802ba1c64e08, 7722f47e71e58592a2ba4437d27c802ba1c64e08"
1599,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-49854,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

block, bfq: fix uaf for accessing waker_bfqq after splitting

After commit 42c306ed7233 (""block, bfq: don't break merge chain in
bfq_split_bfqq()""), if the current procress is the last holder of bfqq,
the bfqq can be freed after bfq_split_bfqq(). Hence recored the bfqq and
then access bfqq->waker_bfqq may trigger UAF. What's more, the waker_bfqq
may in the merge chain of bfqq, hence just recored waker_bfqq is still
not safe.

Fix the problem by adding a helper bfq_waker_bfqq() to check if
bfqq->waker_bfqq is in the merge chain, and current procress is the only
holder.",Linux,Linux,"e0c20d88b7dce85d2703bb6ba77bf359959675cd, de6c5e3a456019d2182e345730e59721714fa0b5, 19f3bec2ac4be329b9bd12b18a989b867618d2d8, 13b3d0e8cb121f99b11918a0d4bcc1ce4647d352, 4780f50ea50cfe8e89fc3747bf3dd155488433bb, 42c306ed723321af4003b2a41bb73728cab54f85"
1598,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53148,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

comedi: Flush partial mappings in error case

If some remap_pfn_range() calls succeeded before one failed, we still have
buffer pages mapped into the userspace page tables when we drop the buffer
reference with comedi_buf_map_put(bm). The userspace mappings are only
cleaned up later in the mmap error path.

Fix it by explicitly flushing all mappings in our VMA on the error path.

See commit 79a61cc3fc04 (""mm: avoid leaving partial pfn mappings around in
error case"").",Linux,Linux,"ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4, ed9eccbe8970f6eedc1b978c157caf1251a896d4"
1597,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-44996,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

vsock: fix recursive ->recvmsg calls

After a vsock socket has been added to a BPF sockmap, its prot->recvmsg
has been replaced with vsock_bpf_recvmsg(). Thus the following
recursiion could happen:

vsock_bpf_recvmsg()
 -> __vsock_recvmsg()
  -> vsock_connectible_recvmsg()
   -> prot->recvmsg()
    -> vsock_bpf_recvmsg() again

We need to fix it by calling the original ->recvmsg() without any BPF
sockmap logic in __vsock_recvmsg().",Linux,Linux,"634f1a7110b439c65fd8a809171c1d2d28bcea6f, 634f1a7110b439c65fd8a809171c1d2d28bcea6f, 634f1a7110b439c65fd8a809171c1d2d28bcea6f"
1596,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-40954,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net: do not leave a dangling sk pointer, when socket creation fails

It is possible to trigger a use-after-free by:
  * attaching an fentry probe to __sock_release() and the probe calling the
    bpf_get_socket_cookie() helper
  * running traceroute -I 1.1.1.1 on a freshly booted VM

A KASAN enabled kernel will log something like below (decoded and stripped):
==================================================================
BUG: KASAN: slab-use-after-free in __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
Read of size 8 at addr ffff888007110dd8 by task traceroute/299

CPU: 2 PID: 299 Comm: traceroute Tainted: G            E      6.10.0-rc2+ #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
Call Trace:
 <TASK>
dump_stack_lvl (lib/dump_stack.c:117 (discriminator 1))
print_report (mm/kasan/report.c:378 mm/kasan/report.c:488)
? __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
kasan_report (mm/kasan/report.c:603)
? __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
kasan_check_range (mm/kasan/generic.c:183 mm/kasan/generic.c:189)
__sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
bpf_get_socket_ptr_cookie (./arch/x86/include/asm/preempt.h:94 ./include/linux/sock_diag.h:42 net/core/filter.c:5094 net/core/filter.c:5092)
bpf_prog_875642cf11f1d139___sock_release+0x6e/0x8e
bpf_trampoline_6442506592+0x47/0xaf
__sock_release (net/socket.c:652)
__sock_create (net/socket.c:1601)
...
Allocated by task 299 on cpu 2 at 78.328492s:
kasan_save_stack (mm/kasan/common.c:48)
kasan_save_track (mm/kasan/common.c:68)
__kasan_slab_alloc (mm/kasan/common.c:312 mm/kasan/common.c:338)
kmem_cache_alloc_noprof (mm/slub.c:3941 mm/slub.c:4000 mm/slub.c:4007)
sk_prot_alloc (net/core/sock.c:2075)
sk_alloc (net/core/sock.c:2134)
inet_create (net/ipv4/af_inet.c:327 net/ipv4/af_inet.c:252)
__sock_create (net/socket.c:1572)
__sys_socket (net/socket.c:1660 net/socket.c:1644 net/socket.c:1706)
__x64_sys_socket (net/socket.c:1718)
do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Freed by task 299 on cpu 2 at 78.328502s:
kasan_save_stack (mm/kasan/common.c:48)
kasan_save_track (mm/kasan/common.c:68)
kasan_save_free_info (mm/kasan/generic.c:582)
poison_slab_object (mm/kasan/common.c:242)
__kasan_slab_free (mm/kasan/common.c:256)
kmem_cache_free (mm/slub.c:4437 mm/slub.c:4511)
__sk_destruct (net/core/sock.c:2117 net/core/sock.c:2208)
inet_create (net/ipv4/af_inet.c:397 net/ipv4/af_inet.c:252)
__sock_create (net/socket.c:1572)
__sys_socket (net/socket.c:1660 net/socket.c:1644 net/socket.c:1706)
__x64_sys_socket (net/socket.c:1718)
do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Fix this by clearing the struct socket reference in sk_common_release() to cover
all protocol families create functions, which may already attached the
reference to the sk object with sock_init_data().",Linux,Linux,"c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd"
1622,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53240,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

xen/netfront: fix crash when removing device

When removing a netfront device directly after a suspend/resume cycle
it might happen that the queues have not been setup again, causing a
crash during the attempt to stop the queues another time.

Fix that by checking the queues are existing before trying to stop
them.

This is XSA-465 / CVE-2024-53240.",Linux,Linux,"ed773dd798bf720756d20021b8d8a4a3d7184bda, e6860c889f4ad50b6ab696f5ea154295d72cf27a, e6e897d4fe2f89c0bd94600a40bedf5e6e75e050, d50b7914fae04d840ce36491d22133070b18cca9, d50b7914fae04d840ce36491d22133070b18cca9, d50b7914fae04d840ce36491d22133070b18cca9, d50b7914fae04d840ce36491d22133070b18cca9"
1536,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53179,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix use-after-free of signing key

Customers have reported use-after-free in @ses->auth_key.response with
SMB2.1 + sign mounts which occurs due to following race:

task A                         task B
cifs_mount()
 dfs_mount_share()
  get_session()
   cifs_mount_get_session()    cifs_send_recv()
    cifs_get_smb_ses()          compound_send_recv()
     cifs_setup_session()        smb2_setup_request()
      kfree_sensitive()           smb2_calc_signature()
                                   crypto_shash_setkey() *UAF*

Fix this by ensuring that we have a valid @ses->auth_key.response by
checking whether @ses->ses_status is SES_GOOD or SES_EXITING with
@ses->ses_lock held.  After commit 24a9799aa8ef (""smb: client: fix UAF
in smb2_reconnect_server()""), we made sure to call ->logoff() only
when @ses was known to be good (e.g. valid ->auth_key.response), so
it's safe to access signing key when @ses->ses_status == SES_EXITING.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1594,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53241,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

x86/xen: don't do PV iret hypercall through hypercall page

Instead of jumping to the Xen hypercall page for doing the iret
hypercall, directly code the required sequence in xen-asm.S.

This is done in preparation of no longer using hypercall page at all,
as it has shown to cause problems with speculation mitigations.

This is part of XSA-466 / CVE-2024-53241.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1639,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53209,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bnxt_en: Fix receive ring space parameters when XDP is active

The MTU setting at the time an XDP multi-buffer is attached
determines whether the aggregation ring will be used and the
rx_skb_func handler.  This is done in bnxt_set_rx_skb_mode().

If the MTU is later changed, the aggregation ring setting may need
to be changed and it may become out-of-sync with the settings
initially done in bnxt_set_rx_skb_mode().  This may result in
random memory corruption and crashes as the HW may DMA data larger
than the allocated buffer size, such as:

BUG: kernel NULL pointer dereference, address: 00000000000003c0
PGD 0 P4D 0
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 17 PID: 0 Comm: swapper/17 Kdump: loaded Tainted: G S         OE      6.1.0-226bf9805506 #1
Hardware name: Wiwynn Delta Lake PVT BZA.02601.0150/Delta Lake-Class1, BIOS F0E_3A12 08/26/2021
RIP: 0010:bnxt_rx_pkt+0xe97/0x1ae0 [bnxt_en]
Code: 8b 95 70 ff ff ff 4c 8b 9d 48 ff ff ff 66 41 89 87 b4 00 00 00 e9 0b f7 ff ff 0f b7 43 0a 49 8b 95 a8 04 00 00 25 ff 0f 00 00 <0f> b7 14 42 48 c1 e2 06 49 03 95 a0 04 00 00 0f b6 42 33f
RSP: 0018:ffffa19f40cc0d18 EFLAGS: 00010202
RAX: 00000000000001e0 RBX: ffff8e2c805c6100 RCX: 00000000000007ff
RDX: 0000000000000000 RSI: ffff8e2c271ab990 RDI: ffff8e2c84f12380
RBP: ffffa19f40cc0e48 R08: 000000000001000d R09: 974ea2fcddfa4cbf
R10: 0000000000000000 R11: ffffa19f40cc0ff8 R12: ffff8e2c94b58980
R13: ffff8e2c952d6600 R14: 0000000000000016 R15: ffff8e2c271ab990
FS:  0000000000000000(0000) GS:ffff8e3b3f840000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000000003c0 CR3: 0000000e8580a004 CR4: 00000000007706e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <IRQ>
 __bnxt_poll_work+0x1c2/0x3e0 [bnxt_en]

To address the issue, we now call bnxt_set_rx_skb_mode() within
bnxt_change_mtu() to properly set the AGG rings configuration and
update rx_skb_func based on the new MTU value.
Additionally, BNXT_FLAG_NO_AGG_RINGS is cleared at the beginning of
bnxt_set_rx_skb_mode() to make sure it gets set or cleared based on
the current MTU.",Linux,Linux,"08450ea98ae98d5a35145b675b76db616046ea11, 08450ea98ae98d5a35145b675b76db616046ea11, 08450ea98ae98d5a35145b675b76db616046ea11"
1651,Vulnérabilité dans Microsoft Windows ,Avis,2025-01-17,CVE-2025-21325,7.8,Élevée,CWE-732: Incorrect Permission Assignment for Critical Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0048/,Windows Secure Kernel Mode Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 21H2,10.0.19043.0
1650,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50018,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,n/a,n/a,n/a,
1649,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56576,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

media: i2c: tc358743: Fix crash in the probe error path when using polling

If an error occurs in the probe() function, we should remove the polling
timer that was alarmed earlier, otherwise the timer is called with
arguments that are already freed, which results in a crash.

------------[ cut here ]------------
WARNING: CPU: 3 PID: 0 at kernel/time/timer.c:1830 __run_timers+0x244/0x268
Modules linked in:
CPU: 3 UID: 0 PID: 0 Comm: swapper/3 Not tainted 6.11.0 #226
Hardware name: Diasom DS-RK3568-SOM-EVB (DT)
pstate: 804000c9 (Nzcv daIF +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
pc : __run_timers+0x244/0x268
lr : __run_timers+0x1d4/0x268
sp : ffffff80eff2baf0
x29: ffffff80eff2bb50 x28: 7fffffffffffffff x27: ffffff80eff2bb00
x26: ffffffc080f669c0 x25: ffffff80efef6bf0 x24: ffffff80eff2bb00
x23: 0000000000000000 x22: dead000000000122 x21: 0000000000000000
x20: ffffff80efef6b80 x19: ffffff80041c8bf8 x18: ffffffffffffffff
x17: ffffffc06f146000 x16: ffffff80eff27dc0 x15: 000000000000003e
x14: 0000000000000000 x13: 00000000000054da x12: 0000000000000000
x11: 00000000000639c0 x10: 000000000000000c x9 : 0000000000000009
x8 : ffffff80eff2cb40 x7 : ffffff80eff2cb40 x6 : ffffff8002bee480
x5 : ffffffc080cb2220 x4 : ffffffc080cb2150 x3 : 00000000000f4240
x2 : 0000000000000102 x1 : ffffff80eff2bb00 x0 : ffffff80041c8bf0
Call trace:
 __run_timers+0x244/0x268
 timer_expire_remote+0x50/0x68
 tmigr_handle_remote+0x388/0x39c
 run_timer_softirq+0x38/0x44
 handle_softirqs+0x138/0x298
 __do_softirq+0x14/0x20
 ____do_softirq+0x10/0x1c
 call_on_irq_stack+0x24/0x4c
 do_softirq_own_stack+0x1c/0x2c
 irq_exit_rcu+0x9c/0xcc
 el1_interrupt+0x48/0xc0
 el1h_64_irq_handler+0x18/0x24
 el1h_64_irq+0x7c/0x80
 default_idle_call+0x34/0x68
 do_idle+0x23c/0x294
 cpu_startup_entry+0x38/0x3c
 secondary_start_kernel+0x128/0x160
 __secondary_switched+0xb8/0xbc
---[ end trace 0000000000000000 ]---",Linux,Linux,"4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a, 4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a, 4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a, 4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a, 4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a, 4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a, 4e66a52a2e4c832dfa35a39204d0f7ce717d4a4a"
1648,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26622,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

tomoyo: fix UAF write bug in tomoyo_write_control()

Since tomoyo_write_control() updates head->write_buf when write()
of long lines is requested, we need to fetch head->write_buf after
head->io_sem is held.  Otherwise, concurrent write() requests can
cause use-after-free-write and double-free problems.",Linux,Linux,"bd03a3e4c9a9df0c6b007045fa7fc8889111a478, bd03a3e4c9a9df0c6b007045fa7fc8889111a478, bd03a3e4c9a9df0c6b007045fa7fc8889111a478, bd03a3e4c9a9df0c6b007045fa7fc8889111a478, bd03a3e4c9a9df0c6b007045fa7fc8889111a478, bd03a3e4c9a9df0c6b007045fa7fc8889111a478"
1647,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53237,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: fix use-after-free in device_for_each_child()

Syzbot has reported the following KASAN splat:

BUG: KASAN: slab-use-after-free in device_for_each_child+0x18f/0x1a0
Read of size 8 at addr ffff88801f605308 by task kbnepd bnep0/4980

CPU: 0 UID: 0 PID: 4980 Comm: kbnepd bnep0 Not tainted 6.12.0-rc4-00161-gae90f6a6170d #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014
Call Trace:
 <TASK>
 dump_stack_lvl+0x100/0x190
 ? device_for_each_child+0x18f/0x1a0
 print_report+0x13a/0x4cb
 ? __virt_addr_valid+0x5e/0x590
 ? __phys_addr+0xc6/0x150
 ? device_for_each_child+0x18f/0x1a0
 kasan_report+0xda/0x110
 ? device_for_each_child+0x18f/0x1a0
 ? __pfx_dev_memalloc_noio+0x10/0x10
 device_for_each_child+0x18f/0x1a0
 ? __pfx_device_for_each_child+0x10/0x10
 pm_runtime_set_memalloc_noio+0xf2/0x180
 netdev_unregister_kobject+0x1ed/0x270
 unregister_netdevice_many_notify+0x123c/0x1d80
 ? __mutex_trylock_common+0xde/0x250
 ? __pfx_unregister_netdevice_many_notify+0x10/0x10
 ? trace_contention_end+0xe6/0x140
 ? __mutex_lock+0x4e7/0x8f0
 ? __pfx_lock_acquire.part.0+0x10/0x10
 ? rcu_is_watching+0x12/0xc0
 ? unregister_netdev+0x12/0x30
 unregister_netdevice_queue+0x30d/0x3f0
 ? __pfx_unregister_netdevice_queue+0x10/0x10
 ? __pfx_down_write+0x10/0x10
 unregister_netdev+0x1c/0x30
 bnep_session+0x1fb3/0x2ab0
 ? __pfx_bnep_session+0x10/0x10
 ? __pfx_lock_release+0x10/0x10
 ? __pfx_woken_wake_function+0x10/0x10
 ? __kthread_parkme+0x132/0x200
 ? __pfx_bnep_session+0x10/0x10
 ? kthread+0x13a/0x370
 ? __pfx_bnep_session+0x10/0x10
 kthread+0x2b7/0x370
 ? __pfx_kthread+0x10/0x10
 ret_from_fork+0x48/0x80
 ? __pfx_kthread+0x10/0x10
 ret_from_fork_asm+0x1a/0x30
 </TASK>

Allocated by task 4974:
 kasan_save_stack+0x30/0x50
 kasan_save_track+0x14/0x30
 __kasan_kmalloc+0xaa/0xb0
 __kmalloc_noprof+0x1d1/0x440
 hci_alloc_dev_priv+0x1d/0x2820
 __vhci_create_device+0xef/0x7d0
 vhci_write+0x2c7/0x480
 vfs_write+0x6a0/0xfc0
 ksys_write+0x12f/0x260
 do_syscall_64+0xc7/0x250
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Freed by task 4979:
 kasan_save_stack+0x30/0x50
 kasan_save_track+0x14/0x30
 kasan_save_free_info+0x3b/0x60
 __kasan_slab_free+0x4f/0x70
 kfree+0x141/0x490
 hci_release_dev+0x4d9/0x600
 bt_host_release+0x6a/0xb0
 device_release+0xa4/0x240
 kobject_put+0x1ec/0x5a0
 put_device+0x1f/0x30
 vhci_release+0x81/0xf0
 __fput+0x3f6/0xb30
 task_work_run+0x151/0x250
 do_exit+0xa79/0x2c30
 do_group_exit+0xd5/0x2a0
 get_signal+0x1fcd/0x2210
 arch_do_signal_or_restart+0x93/0x780
 syscall_exit_to_user_mode+0x140/0x290
 do_syscall_64+0xd4/0x250
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

In 'hci_conn_del_sysfs()', 'device_unregister()' may be called when
an underlying (kobject) reference counter is greater than 1. This
means that reparenting (happened when the device is actually freed)
is delayed and, during that delay, parent controller device (hciX)
may be deleted. Since the latter may create a dangling pointer to
freed parent, avoid that scenario by reparenting to NULL explicitly.",Linux,Linux,"53d61daf35b1bbf3ae06e852ee107aa2f05b3776, ba7088769800d9892a7e4f35c3137a5b3e65410b, 87624b1f9b781549e69f92db7ede012a21cec275, 56a4fdde95ed98d864611155f6728983e199e198, a85fb91e3d728bdfc80833167e8162cce8bc7004, a85fb91e3d728bdfc80833167e8162cce8bc7004, a85fb91e3d728bdfc80833167e8162cce8bc7004"
1646,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53202,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

firmware_loader: Fix possible resource leak in fw_log_firmware_info()

The alg instance should be released under the exception path, otherwise
there may be resource leak here.

To mitigate this, free the alg instance with crypto_free_shash when kmalloc
fails.",Linux,Linux,"02fe26f25325b547b7a31a65deb0326c04bb5174, 02fe26f25325b547b7a31a65deb0326c04bb5174, 02fe26f25325b547b7a31a65deb0326c04bb5174, 02fe26f25325b547b7a31a65deb0326c04bb5174"
1645,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-36899,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

gpiolib: cdev: Fix use after free in lineinfo_changed_notify

The use-after-free issue occurs as follows: when the GPIO chip device file
is being closed by invoking gpio_chrdev_release(), watched_lines is freed
by bitmap_free(), but the unregistration of lineinfo_changed_nb notifier
chain failed due to waiting write rwsem. Additionally, one of the GPIO
chip's lines is also in the release process and holds the notifier chain's
read rwsem. Consequently, a race condition leads to the use-after-free of
watched_lines.

Here is the typical stack when issue happened:

[free]
gpio_chrdev_release()
  --> bitmap_free(cdev->watched_lines)                  <-- freed
  --> blocking_notifier_chain_unregister()
    --> down_write(&nh->rwsem)                          <-- waiting rwsem
          --> __down_write_common()
            --> rwsem_down_write_slowpath()
                  --> schedule_preempt_disabled()
                    --> schedule()

[use]
st54spi_gpio_dev_release()
  --> gpio_free()
    --> gpiod_free()
      --> gpiod_free_commit()
        --> gpiod_line_state_notify()
          --> blocking_notifier_call_chain()
            --> down_read(&nh->rwsem);                  <-- held rwsem
            --> notifier_call_chain()
              --> lineinfo_changed_notify()
                --> test_bit(xxxx, cdev->watched_lines) <-- use after free

The side effect of the use-after-free issue is that a GPIO line event is
being generated for userspace where it shouldn't. However, since the chrdev
is being closed, userspace won't have the chance to read that event anyway.

To fix the issue, call the bitmap_free() function after the unregistration
of lineinfo_changed_nb notifier chain.",Linux,Linux,"51c1064e82e77b39a49889287ca50709303e2f26, 51c1064e82e77b39a49889287ca50709303e2f26, 51c1064e82e77b39a49889287ca50709303e2f26"
1644,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26924,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nft_set_pipapo: do not free live element

Pablo reports a crash with large batches of elements with a
back-to-back add/remove pattern.  Quoting Pablo:

  add_elem(""00000000"") timeout 100 ms
  ...
  add_elem(""0000000X"") timeout 100 ms
  del_elem(""0000000X"") <---------------- delete one that was just added
  ...
  add_elem(""00005000"") timeout 100 ms

  1) nft_pipapo_remove() removes element 0000000X
  Then, KASAN shows a splat.

Looking at the remove function there is a chance that we will drop a
rule that maps to a non-deactivated element.

Removal happens in two steps, first we do a lookup for key k and return the
to-be-removed element and mark it as inactive in the next generation.
Then, in a second step, the element gets removed from the set/map.

The _remove function does not work correctly if we have more than one
element that share the same key.

This can happen if we insert an element into a set when the set already
holds an element with same key, but the element mapping to the existing
key has timed out or is not active in the next generation.

In such case its possible that removal will unmap the wrong element.
If this happens, we will leak the non-deactivated element, it becomes
unreachable.

The element that got deactivated (and will be freed later) will
remain reachable in the set data structure, this can result in
a crash when such an element is retrieved during lookup (stale
pointer).

Add a check that the fully matching key does in fact map to the element
that we have marked as inactive in the deactivation step.
If not, we need to continue searching.

Add a bug/warn trap at the end of the function as well, the remove
function must not ever be called with an invisible/unreachable/non-existent
element.

v2: avoid uneeded temporary variable (Stefano)",Linux,Linux,"3c4287f62044a90e73a561aa05fc46e62da173da, 3c4287f62044a90e73a561aa05fc46e62da173da, 3c4287f62044a90e73a561aa05fc46e62da173da, 3c4287f62044a90e73a561aa05fc46e62da173da, 3c4287f62044a90e73a561aa05fc46e62da173da, 3c4287f62044a90e73a561aa05fc46e62da173da"
1643,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53160,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

rcu/kvfree: Fix data-race in __mod_timer / kvfree_call_rcu

KCSAN reports a data race when access the krcp->monitor_work.timer.expires
variable in the schedule_delayed_monitor_work() function:

<snip>
BUG: KCSAN: data-race in __mod_timer / kvfree_call_rcu

read to 0xffff888237d1cce8 of 8 bytes by task 10149 on cpu 1:
 schedule_delayed_monitor_work kernel/rcu/tree.c:3520 [inline]
 kvfree_call_rcu+0x3b8/0x510 kernel/rcu/tree.c:3839
 trie_update_elem+0x47c/0x620 kernel/bpf/lpm_trie.c:441
 bpf_map_update_value+0x324/0x350 kernel/bpf/syscall.c:203
 generic_map_update_batch+0x401/0x520 kernel/bpf/syscall.c:1849
 bpf_map_do_batch+0x28c/0x3f0 kernel/bpf/syscall.c:5143
 __sys_bpf+0x2e5/0x7a0
 __do_sys_bpf kernel/bpf/syscall.c:5741 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5739 [inline]
 __x64_sys_bpf+0x43/0x50 kernel/bpf/syscall.c:5739
 x64_sys_call+0x2625/0x2d60 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xc9/0x1c0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

write to 0xffff888237d1cce8 of 8 bytes by task 56 on cpu 0:
 __mod_timer+0x578/0x7f0 kernel/time/timer.c:1173
 add_timer_global+0x51/0x70 kernel/time/timer.c:1330
 __queue_delayed_work+0x127/0x1a0 kernel/workqueue.c:2523
 queue_delayed_work_on+0xdf/0x190 kernel/workqueue.c:2552
 queue_delayed_work include/linux/workqueue.h:677 [inline]
 schedule_delayed_monitor_work kernel/rcu/tree.c:3525 [inline]
 kfree_rcu_monitor+0x5e8/0x660 kernel/rcu/tree.c:3643
 process_one_work kernel/workqueue.c:3229 [inline]
 process_scheduled_works+0x483/0x9a0 kernel/workqueue.c:3310
 worker_thread+0x51d/0x6f0 kernel/workqueue.c:3391
 kthread+0x1d1/0x210 kernel/kthread.c:389
 ret_from_fork+0x4b/0x60 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244

Reported by Kernel Concurrency Sanitizer on:
CPU: 0 UID: 0 PID: 56 Comm: kworker/u8:4 Not tainted 6.12.0-rc2-syzkaller-00050-g5b7c893ed5ed #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
Workqueue: events_unbound kfree_rcu_monitor
<snip>

kfree_rcu_monitor() rearms the work if a ""krcp"" has to be still
offloaded and this is done without holding krcp->lock, whereas
the kvfree_call_rcu() holds it.

Fix it by acquiring the ""krcp->lock"" for kfree_rcu_monitor() so
both functions do not race anymore.",Linux,Linux,"8fc5494ad5face62747a3937db66b00db1e5d80b, 8fc5494ad5face62747a3937db66b00db1e5d80b, 8fc5494ad5face62747a3937db66b00db1e5d80b, 8fc5494ad5face62747a3937db66b00db1e5d80b"
1642,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53125,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: sync_linked_regs() must preserve subreg_def

Range propagation must not affect subreg_def marks, otherwise the
following example is rewritten by verifier incorrectly when
BPF_F_TEST_RND_HI32 flag is set:

  0: call bpf_ktime_get_ns                   call bpf_ktime_get_ns
  1: r0 &= 0x7fffffff       after verifier   r0 &= 0x7fffffff
  2: w1 = w0                rewrites         w1 = w0
  3: if w0 < 10 goto +0     -------------->  r11 = 0x2f5674a6     (r)
  4: r1 >>= 32                               r11 <<= 32           (r)
  5: r0 = r1                                 r1 |= r11            (r)
  6: exit;                                   if w0 < 0xa goto pc+0
                                             r1 >>= 32
                                             r0 = r1
                                             exit

(or zero extension of w1 at (2) is missing for architectures that
 require zero extension for upper register half).

The following happens w/o this patch:
- r0 is marked as not a subreg at (0);
- w1 is marked as subreg at (2);
- w1 subreg_def is overridden at (3) by copy_register_state();
- w1 is read at (5) but mark_insn_zext() does not mark (2)
  for zero extension, because w1 subreg_def is not set;
- because of BPF_F_TEST_RND_HI32 flag verifier inserts random
  value for hi32 bits of (2) (marked (r));
- this random value is read at (5).",Linux,Linux,"75748837b7e56919679e02163f45d5818c644d03, 75748837b7e56919679e02163f45d5818c644d03, 75748837b7e56919679e02163f45d5818c644d03, 75748837b7e56919679e02163f45d5818c644d03, 75748837b7e56919679e02163f45d5818c644d03, 75748837b7e56919679e02163f45d5818c644d03"
1641,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50203,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bpf, arm64: Fix address emission with tag-based KASAN enabled

When BPF_TRAMP_F_CALL_ORIG is enabled, the address of a bpf_tramp_image
struct on the stack is passed during the size calculation pass and
an address on the heap is passed during code generation. This may
cause a heap buffer overflow if the heap address is tagged because
emit_a64_mov_i64() will emit longer code than it did during the size
calculation pass. The same problem could occur without tag-based
KASAN if one of the 16-bit words of the stack address happened to
be all-ones during the size calculation pass. Fix the problem by
assuming the worst case (4 instructions) when calculating the size
of the bpf_tramp_image address emission.",Linux,Linux,"19d3c179a37730caf600a97fed3794feac2b197b, 19d3c179a37730caf600a97fed3794feac2b197b"
1640,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2022-48662,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/i915/gem: Really move i915_gem_context.link under ref protection

i915_perf assumes that it can use the i915_gem_context reference to
protect its i915->gem.contexts.list iteration. However, this requires
that we do not remove the context from the list until after we drop the
final reference and release the struct. If, as currently, we remove the
context from the list during context_close(), the link.next pointer may
be poisoned while we are holding the context reference and cause a GPF:

[ 4070.573157] i915 0000:00:02.0: [drm:i915_perf_open_ioctl [i915]] filtering on ctx_id=0x1fffff ctx_id_mask=0x1fffff
[ 4070.574881] general protection fault, probably for non-canonical address 0xdead000000000100: 0000 [#1] PREEMPT SMP
[ 4070.574897] CPU: 1 PID: 284392 Comm: amd_performance Tainted: G            E     5.17.9 #180
[ 4070.574903] Hardware name: Intel Corporation NUC7i5BNK/NUC7i5BNB, BIOS BNKBL357.86A.0052.2017.0918.1346 09/18/2017
[ 4070.574907] RIP: 0010:oa_configure_all_contexts.isra.0+0x222/0x350 [i915]
[ 4070.574982] Code: 08 e8 32 6e 10 e1 4d 8b 6d 50 b8 ff ff ff ff 49 83 ed 50 f0 41 0f c1 04 24 83 f8 01 0f 84 e3 00 00 00 85 c0 0f 8e fa 00 00 00 <49> 8b 45 50 48 8d 70 b0 49 8d 45 50 48 39 44 24 10 0f 85 34 fe ff
[ 4070.574990] RSP: 0018:ffffc90002077b78 EFLAGS: 00010202
[ 4070.574995] RAX: 0000000000000002 RBX: 0000000000000002 RCX: 0000000000000000
[ 4070.575000] RDX: 0000000000000001 RSI: ffffc90002077b20 RDI: ffff88810ddc7c68
[ 4070.575004] RBP: 0000000000000001 R08: ffff888103242648 R09: fffffffffffffffc
[ 4070.575008] R10: ffffffff82c50bc0 R11: 0000000000025c80 R12: ffff888101bf1860
[ 4070.575012] R13: dead0000000000b0 R14: ffffc90002077c04 R15: ffff88810be5cabc
[ 4070.575016] FS:  00007f1ed50c0780(0000) GS:ffff88885ec80000(0000) knlGS:0000000000000000
[ 4070.575021] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 4070.575025] CR2: 00007f1ed5590280 CR3: 000000010ef6f005 CR4: 00000000003706e0
[ 4070.575029] Call Trace:
[ 4070.575033]  <TASK>
[ 4070.575037]  lrc_configure_all_contexts+0x13e/0x150 [i915]
[ 4070.575103]  gen8_enable_metric_set+0x4d/0x90 [i915]
[ 4070.575164]  i915_perf_open_ioctl+0xbc0/0x1500 [i915]
[ 4070.575224]  ? asm_common_interrupt+0x1e/0x40
[ 4070.575232]  ? i915_oa_init_reg_state+0x110/0x110 [i915]
[ 4070.575290]  drm_ioctl_kernel+0x85/0x110
[ 4070.575296]  ? update_load_avg+0x5f/0x5e0
[ 4070.575302]  drm_ioctl+0x1d3/0x370
[ 4070.575307]  ? i915_oa_init_reg_state+0x110/0x110 [i915]
[ 4070.575382]  ? gen8_gt_irq_handler+0x46/0x130 [i915]
[ 4070.575445]  __x64_sys_ioctl+0x3c4/0x8d0
[ 4070.575451]  ? __do_softirq+0xaa/0x1d2
[ 4070.575456]  do_syscall_64+0x35/0x80
[ 4070.575461]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[ 4070.575467] RIP: 0033:0x7f1ed5c10397
[ 4070.575471] Code: 3c 1c e8 1c ff ff ff 85 c0 79 87 49 c7 c4 ff ff ff ff 5b 5d 4c 89 e0 41 5c c3 66 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a9 da 0d 00 f7 d8 64 89 01 48
[ 4070.575478] RSP: 002b:00007ffd65c8d7a8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
[ 4070.575484] RAX: ffffffffffffffda RBX: 0000000000000006 RCX: 00007f1ed5c10397
[ 4070.575488] RDX: 00007ffd65c8d7c0 RSI: 0000000040106476 RDI: 0000000000000006
[ 4070.575492] RBP: 00005620972f9c60 R08: 000000000000000a R09: 0000000000000005
[ 4070.575496] R10: 000000000000000d R11: 0000000000000246 R12: 000000000000000a
[ 4070.575500] R13: 000000000000000d R14: 0000000000000000 R15: 00007ffd65c8d7c0
[ 4070.575505]  </TASK>
[ 4070.575507] Modules linked in: nls_ascii(E) nls_cp437(E) vfat(E) fat(E) i915(E) x86_pkg_temp_thermal(E) intel_powerclamp(E) crct10dif_pclmul(E) crc32_pclmul(E) crc32c_intel(E) aesni_intel(E) crypto_simd(E) intel_gtt(E) cryptd(E) ttm(E) rapl(E) intel_cstate(E) drm_kms_helper(E) cfbfillrect(E) syscopyarea(E) cfbimgblt(E) intel_uncore(E) sysfillrect(E) mei_me(E) sysimgblt(E) i2c_i801(E) fb_sys_fops(E) mei(E) intel_pch_thermal(E) i2c_smbus
---truncated---",Linux,Linux,"f8246cf4d9a9025d26c609bb2195e7c0a9ce5c40, f8246cf4d9a9025d26c609bb2195e7c0a9ce5c40, f8246cf4d9a9025d26c609bb2195e7c0a9ce5c40"
1638,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26766,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

IB/hfi1: Fix sdma.h tx->num_descs off-by-one error

Unfortunately the commit `fd8958efe877` introduced another error
causing the `descs` array to overflow. This reults in further crashes
easily reproducible by `sendmsg` system call.

[ 1080.836473] general protection fault, probably for non-canonical address 0x400300015528b00a: 0000 [#1] PREEMPT SMP PTI
[ 1080.869326] RIP: 0010:hfi1_ipoib_build_ib_tx_headers.constprop.0+0xe1/0x2b0 [hfi1]
--
[ 1080.974535] Call Trace:
[ 1080.976990]  <TASK>
[ 1081.021929]  hfi1_ipoib_send_dma_common+0x7a/0x2e0 [hfi1]
[ 1081.027364]  hfi1_ipoib_send_dma_list+0x62/0x270 [hfi1]
[ 1081.032633]  hfi1_ipoib_send+0x112/0x300 [hfi1]
[ 1081.042001]  ipoib_start_xmit+0x2a9/0x2d0 [ib_ipoib]
[ 1081.046978]  dev_hard_start_xmit+0xc4/0x210
--
[ 1081.148347]  __sys_sendmsg+0x59/0xa0

crash> ipoib_txreq 0xffff9cfeba229f00
struct ipoib_txreq {
  txreq = {
    list = {
      next = 0xffff9cfeba229f00,
      prev = 0xffff9cfeba229f00
    },
    descp = 0xffff9cfeba229f40,
    coalesce_buf = 0x0,
    wait = 0xffff9cfea4e69a48,
    complete = 0xffffffffc0fe0760 <hfi1_ipoib_sdma_complete>,
    packet_len = 0x46d,
    tlen = 0x0,
    num_desc = 0x0,
    desc_limit = 0x6,
    next_descq_idx = 0x45c,
    coalesce_idx = 0x0,
    flags = 0x0,
    descs = {{
        qw = {0x8024000120dffb00, 0x4}  # SDMA_DESC0_FIRST_DESC_FLAG (bit 63)
      }, {
        qw = {  0x3800014231b108, 0x4}
      }, {
        qw = { 0x310000e4ee0fcf0, 0x8}
      }, {
        qw = {  0x3000012e9f8000, 0x8}
      }, {
        qw = {  0x59000dfb9d0000, 0x8}
      }, {
        qw = {  0x78000e02e40000, 0x8}
      }}
  },
  sdma_hdr =  0x400300015528b000,  <<< invalid pointer in the tx request structure
  sdma_status = 0x0,                   SDMA_DESC0_LAST_DESC_FLAG (bit 62)
  complete = 0x0,
  priv = 0x0,
  txq = 0xffff9cfea4e69880,
  skb = 0xffff9d099809f400
}

If an SDMA send consists of exactly 6 descriptors and requires dword
padding (in the 7th descriptor), the sdma_txreq descriptor array is not
properly expanded and the packet will overflow into the container
structure. This results in a panic when the send completion runs. The
exact panic varies depending on what elements of the container structure
get corrupted. The fix is to use the correct expression in
_pad_sdma_tx_descs() to test the need to expand the descriptor array.

With this patch the crashes are no longer reproducible and the machine is
stable.",Linux,Linux,"d1c1ee052d25ca23735eea912f843bc7834781b4, 40ac5cb6cbb01afa40881f78b4d2f559fb7065c4, 6cf8f3d690bb5ad31ef0f41a6206ecf5a068d179, bd57756a7e43c7127d0eca1fc5868e705fd0f7ba, eeaf35f4e3b360162081de5e744cf32d6d1b0091, fd8958efe8779d3db19c9124fce593ce681ac709, fd8958efe8779d3db19c9124fce593ce681ac709, fd8958efe8779d3db19c9124fce593ce681ac709"
1625,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53156,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath9k: add range check for conn_rsp_epid in htc_connect_service()

I found the following bug in my fuzzer:

  UBSAN: array-index-out-of-bounds in drivers/net/wireless/ath/ath9k/htc_hst.c:26:51
  index 255 is out of range for type 'htc_endpoint [22]'
  CPU: 0 UID: 0 PID: 8 Comm: kworker/0:0 Not tainted 6.11.0-rc6-dirty #14
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
  Workqueue: events request_firmware_work_func
  Call Trace:
   <TASK>
   dump_stack_lvl+0x180/0x1b0
   __ubsan_handle_out_of_bounds+0xd4/0x130
   htc_issue_send.constprop.0+0x20c/0x230
   ? _raw_spin_unlock_irqrestore+0x3c/0x70
   ath9k_wmi_cmd+0x41d/0x610
   ? mark_held_locks+0x9f/0xe0
   ...

Since this bug has been confirmed to be caused by insufficient verification
of conn_rsp_epid, I think it would be appropriate to add a range check for
conn_rsp_epid to htc_connect_service() to prevent the bug from occurring.",Linux,Linux,"fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08, fb9987d0f748c983bb795a86f47522313f701a08"
1637,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50279,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

dm cache: fix out-of-bounds access to the dirty bitset when resizing

dm-cache checks the dirty bits of the cache blocks to be dropped when
shrinking the fast device, but an index bug in bitset iteration causes
out-of-bounds access.

Reproduce steps:

1. create a cache device of 1024 cache blocks (128 bytes dirty bitset)

dmsetup create cmeta --table ""0 8192 linear /dev/sdc 0""
dmsetup create cdata --table ""0 131072 linear /dev/sdc 8192""
dmsetup create corig --table ""0 524288 linear /dev/sdc 262144""
dd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1 oflag=direct
dmsetup create cache --table ""0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0""

2. shrink the fast device to 512 cache blocks, triggering out-of-bounds
   access to the dirty bitset (offset 0x80)

dmsetup suspend cache
dmsetup reload cdata --table ""0 65536 linear /dev/sdc 8192""
dmsetup resume cdata
dmsetup resume cache

KASAN reports:

  BUG: KASAN: vmalloc-out-of-bounds in cache_preresume+0x269/0x7b0
  Read of size 8 at addr ffffc900000f3080 by task dmsetup/131

  (...snip...)
  The buggy address belongs to the virtual mapping at
   [ffffc900000f3000, ffffc900000f5000) created by:
   cache_ctr+0x176a/0x35f0

  (...snip...)
  Memory state around the buggy address:
   ffffc900000f2f80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc900000f3000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  >ffffc900000f3080: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
                     ^
   ffffc900000f3100: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc900000f3180: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8

Fix by making the index post-incremented.",Linux,Linux,"f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498"
1636,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53190,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: rtlwifi: Drastically reduce the attempts to read efuse in case of failures

Syzkaller reported a hung task with uevent_show() on stack trace. That
specific issue was addressed by another commit [0], but even with that
fix applied (for example, running v6.12-rc5) we face another type of hung
task that comes from the same reproducer [1]. By investigating that, we
could narrow it to the following path:

(a) Syzkaller emulates a Realtek USB WiFi adapter using raw-gadget and
dummy_hcd infrastructure.

(b) During the probe of rtl8192cu, the driver ends-up performing an efuse
read procedure (which is related to EEPROM load IIUC), and here lies the
issue: the function read_efuse() calls read_efuse_byte() many times, as
loop iterations depending on the efuse size (in our example, 512 in total).

This procedure for reading efuse bytes relies in a loop that performs an
I/O read up to *10k* times in case of failures. We measured the time of
the loop inside read_efuse_byte() alone, and in this reproducer (which
involves the dummy_hcd emulation layer), it takes 15 seconds each. As a
consequence, we have the driver stuck in its probe routine for big time,
exposing a stack trace like below if we attempt to reboot the system, for
example:

task:kworker/0:3 state:D stack:0 pid:662 tgid:662 ppid:2 flags:0x00004000
Workqueue: usb_hub_wq hub_event
Call Trace:
 __schedule+0xe22/0xeb6
 schedule_timeout+0xe7/0x132
 __wait_for_common+0xb5/0x12e
 usb_start_wait_urb+0xc5/0x1ef
 ? usb_alloc_urb+0x95/0xa4
 usb_control_msg+0xff/0x184
 _usbctrl_vendorreq_sync+0xa0/0x161
 _usb_read_sync+0xb3/0xc5
 read_efuse_byte+0x13c/0x146
 read_efuse+0x351/0x5f0
 efuse_read_all_map+0x42/0x52
 rtl_efuse_shadow_map_update+0x60/0xef
 rtl_get_hwinfo+0x5d/0x1c2
 rtl92cu_read_eeprom_info+0x10a/0x8d5
 ? rtl92c_read_chip_version+0x14f/0x17e
 rtl_usb_probe+0x323/0x851
 usb_probe_interface+0x278/0x34b
 really_probe+0x202/0x4a4
 __driver_probe_device+0x166/0x1b2
 driver_probe_device+0x2f/0xd8
 [...]

We propose hereby to drastically reduce the attempts of doing the I/O
reads in case of failures, restricted to USB devices (given that
they're inherently slower than PCIe ones). By retrying up to 10 times
(instead of 10000), we got reponsiveness in the reproducer, while seems
reasonable to believe that there's no sane USB device implementation in
the field requiring this amount of retries at every I/O read in order
to properly work. Based on that assumption, it'd be good to have it
backported to stable but maybe not since driver implementation (the 10k
number comes from day 0), perhaps up to 6.x series makes sense.

[0] Commit 15fffc6a5624 (""driver core: Fix uevent_show() vs driver detach race"")

[1] A note about that: this syzkaller report presents multiple reproducers
that differs by the type of emulated USB device. For this specific case,
check the entry from 2024/08/08 06:23 in the list of crashes; the C repro
is available at https://syzkaller.appspot.com/text?tag=ReproC&x=1521fc83980000.",Linux,Linux,"0c8173385e549f95cd80c3fff5aab87b4f881d8d, 0c8173385e549f95cd80c3fff5aab87b4f881d8d, 0c8173385e549f95cd80c3fff5aab87b4f881d8d, 0c8173385e549f95cd80c3fff5aab87b4f881d8d, 0c8173385e549f95cd80c3fff5aab87b4f881d8d"
1635,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53118,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

vsock: Fix sk_error_queue memory leak

Kernel queues MSG_ZEROCOPY completion notifications on the error queue.
Where they remain, until explicitly recv()ed. To prevent memory leaks,
clean up the queue when the socket is destroyed.

unreferenced object 0xffff8881028beb00 (size 224):
  comm ""vsock_test"", pid 1218, jiffies 4294694897
  hex dump (first 32 bytes):
    90 b0 21 17 81 88 ff ff 90 b0 21 17 81 88 ff ff  ..!.......!.....
    00 00 00 00 00 00 00 00 00 b0 21 17 81 88 ff ff  ..........!.....
  backtrace (crc 6c7031ca):
    [<ffffffff81418ef7>] kmem_cache_alloc_node_noprof+0x2f7/0x370
    [<ffffffff81d35882>] __alloc_skb+0x132/0x180
    [<ffffffff81d2d32b>] sock_omalloc+0x4b/0x80
    [<ffffffff81d3a8ae>] msg_zerocopy_realloc+0x9e/0x240
    [<ffffffff81fe5cb2>] virtio_transport_send_pkt_info+0x412/0x4c0
    [<ffffffff81fe6183>] virtio_transport_stream_enqueue+0x43/0x50
    [<ffffffff81fe0813>] vsock_connectible_sendmsg+0x373/0x450
    [<ffffffff81d233d5>] ____sys_sendmsg+0x365/0x3a0
    [<ffffffff81d246f4>] ___sys_sendmsg+0x84/0xd0
    [<ffffffff81d26f47>] __sys_sendmsg+0x47/0x80
    [<ffffffff820d3df3>] do_syscall_64+0x93/0x180
    [<ffffffff8220012b>] entry_SYSCALL_64_after_hwframe+0x76/0x7e",Linux,Linux,"581512a6dc939ef122e49336626ae159f3b8a345, 581512a6dc939ef122e49336626ae159f3b8a345"
1634,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56566,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

mm/slub: Avoid list corruption when removing a slab from the full list

Boot with slub_debug=UFPZ.

If allocated object failed in alloc_consistency_checks, all objects of
the slab will be marked as used, and then the slab will be removed from
the partial list.

When an object belonging to the slab got freed later, the remove_full()
function is called. Because the slab is neither on the partial list nor
on the full list, it eventually lead to a list corruption (actually a
list poison being detected).

So we need to mark and isolate the slab page with metadata corruption,
do not put it back in circulation.

Because the debug caches avoid all the fastpaths, reusing the frozen bit
to mark slab page with metadata corruption seems to be fine.

[ 4277.385669] list_del corruption, ffffea00044b3e50->next is LIST_POISON1 (dead000000000100)
[ 4277.387023] ------------[ cut here ]------------
[ 4277.387880] kernel BUG at lib/list_debug.c:56!
[ 4277.388680] invalid opcode: 0000 [#1] PREEMPT SMP PTI
[ 4277.389562] CPU: 5 PID: 90 Comm: kworker/5:1 Kdump: loaded Tainted: G           OE      6.6.1-1 #1
[ 4277.392113] Workqueue: xfs-inodegc/vda1 xfs_inodegc_worker [xfs]
[ 4277.393551] RIP: 0010:__list_del_entry_valid_or_report+0x7b/0xc0
[ 4277.394518] Code: 48 91 82 e8 37 f9 9a ff 0f 0b 48 89 fe 48 c7 c7 28 49 91 82 e8 26 f9 9a ff 0f 0b 48 89 fe 48 c7 c7 58 49 91
[ 4277.397292] RSP: 0018:ffffc90000333b38 EFLAGS: 00010082
[ 4277.398202] RAX: 000000000000004e RBX: ffffea00044b3e50 RCX: 0000000000000000
[ 4277.399340] RDX: 0000000000000002 RSI: ffffffff828f8715 RDI: 00000000ffffffff
[ 4277.400545] RBP: ffffea00044b3e40 R08: 0000000000000000 R09: ffffc900003339f0
[ 4277.401710] R10: 0000000000000003 R11: ffffffff82d44088 R12: ffff888112cf9910
[ 4277.402887] R13: 0000000000000001 R14: 0000000000000001 R15: ffff8881000424c0
[ 4277.404049] FS:  0000000000000000(0000) GS:ffff88842fd40000(0000) knlGS:0000000000000000
[ 4277.405357] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 4277.406389] CR2: 00007f2ad0b24000 CR3: 0000000102a3a006 CR4: 00000000007706e0
[ 4277.407589] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 4277.408780] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 4277.410000] PKRU: 55555554
[ 4277.410645] Call Trace:
[ 4277.411234]  <TASK>
[ 4277.411777]  ? die+0x32/0x80
[ 4277.412439]  ? do_trap+0xd6/0x100
[ 4277.413150]  ? __list_del_entry_valid_or_report+0x7b/0xc0
[ 4277.414158]  ? do_error_trap+0x6a/0x90
[ 4277.414948]  ? __list_del_entry_valid_or_report+0x7b/0xc0
[ 4277.415915]  ? exc_invalid_op+0x4c/0x60
[ 4277.416710]  ? __list_del_entry_valid_or_report+0x7b/0xc0
[ 4277.417675]  ? asm_exc_invalid_op+0x16/0x20
[ 4277.418482]  ? __list_del_entry_valid_or_report+0x7b/0xc0
[ 4277.419466]  ? __list_del_entry_valid_or_report+0x7b/0xc0
[ 4277.420410]  free_to_partial_list+0x515/0x5e0
[ 4277.421242]  ? xfs_iext_remove+0x41a/0xa10 [xfs]
[ 4277.422298]  xfs_iext_remove+0x41a/0xa10 [xfs]
[ 4277.423316]  ? xfs_inodegc_worker+0xb4/0x1a0 [xfs]
[ 4277.424383]  xfs_bmap_del_extent_delay+0x4fe/0x7d0 [xfs]
[ 4277.425490]  __xfs_bunmapi+0x50d/0x840 [xfs]
[ 4277.426445]  xfs_itruncate_extents_flags+0x13a/0x490 [xfs]
[ 4277.427553]  xfs_inactive_truncate+0xa3/0x120 [xfs]
[ 4277.428567]  xfs_inactive+0x22d/0x290 [xfs]
[ 4277.429500]  xfs_inodegc_worker+0xb4/0x1a0 [xfs]
[ 4277.430479]  process_one_work+0x171/0x340
[ 4277.431227]  worker_thread+0x277/0x390
[ 4277.431962]  ? __pfx_worker_thread+0x10/0x10
[ 4277.432752]  kthread+0xf0/0x120
[ 4277.433382]  ? __pfx_kthread+0x10/0x10
[ 4277.434134]  ret_from_fork+0x2d/0x50
[ 4277.434837]  ? __pfx_kthread+0x10/0x10
[ 4277.435566]  ret_from_fork_asm+0x1b/0x30
[ 4277.436280]  </TASK>",Linux,Linux,"643b113849d8faa68c9f01c3c9d929bfbffd50bd, 643b113849d8faa68c9f01c3c9d929bfbffd50bd, 643b113849d8faa68c9f01c3c9d929bfbffd50bd"
1633,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26930,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qla2xxx: Fix double free of the ha->vp_map pointer

Coverity scan reported potential risk of double free of the pointer
ha->vp_map.  ha->vp_map was freed in qla2x00_mem_alloc(), and again freed
in function qla2x00_mem_free(ha).

Assign NULL to vp_map and kfree take care of NULL.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1632,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56605,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: do not leave dangling sk pointer on error in l2cap_sock_create()

bt_sock_alloc() allocates the sk object and attaches it to the provided
sock object. On error l2cap_sock_alloc() frees the sk object, but the
dangling pointer is still attached to the sock object, which may create
use-after-free in other code.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1631,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-40909,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix a potential use-after-free in bpf_link_free()

After commit 1a80dbcb2dba, bpf_link can be freed by
link->ops->dealloc_deferred, but the code still tests and uses
link->ops->dealloc afterward, which leads to a use-after-free as
reported by syzbot. Actually, one of them should be sufficient, so
just call one of them instead of both. Also add a WARN_ON() in case
of any problematic implementation.",Linux,Linux,"876941f533e7b47fc69977fc4551c02f2d18af97, 1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce, 1a80dbcb2dbaf6e4c216e62e30fa7d3daa8001ce"
1630,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53127,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Revert ""mmc: dw_mmc: Fix IDMAC operation with pages bigger than 4K""

The commit 8396c793ffdf (""mmc: dw_mmc: Fix IDMAC operation with pages
bigger than 4K"") increased the max_req_size, even for 4K pages, causing
various issues:
- Panic booting the kernel/rootfs from an SD card on Rockchip RK3566
- Panic booting the kernel/rootfs from an SD card on StarFive JH7100
- ""swiotlb buffer is full"" and data corruption on StarFive JH7110

At this stage no fix have been found, so it's probably better to just
revert the change.

This reverts commit 8396c793ffdf28bb8aee7cfe0891080f8cab7890.",Linux,Linux,"32bd402f6760d57127d58a9888553b2db574bba6, b9ee16a20d9976686185d7e59cd006c328b6a1e0, 2793f423893579b35dc1fc24dd7c1ce58fa0345a, 9d715a234dd8f01af970b78ae2144a2fd3ead21c, 373f8f5b087f010dddae3306a79c6fdd5c2f8953, 5b4bf3948875064a9adcda4b52b59e0520a8c576, 8396c793ffdf28bb8aee7cfe0891080f8cab7890, 8396c793ffdf28bb8aee7cfe0891080f8cab7890"
1629,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53129,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/rockchip: vop: Fix a dereferenced before check warning

The 'state' can't be NULL, we should check crtc_state.

Fix warning:
drivers/gpu/drm/rockchip/rockchip_drm_vop.c:1096
vop_plane_atomic_async_check() warn: variable dereferenced before check
'state' (see line 1077)",Linux,Linux,"5ddb0bd4ddc35d9c9376d109398f84277bb8d25e, 5ddb0bd4ddc35d9c9376d109398f84277bb8d25e, 5ddb0bd4ddc35d9c9376d109398f84277bb8d25e, 5ddb0bd4ddc35d9c9376d109398f84277bb8d25e, 5ddb0bd4ddc35d9c9376d109398f84277bb8d25e"
1628,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35861,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential UAF in cifs_signal_cifsd_for_reconnect()

Skip sessions that are being teared down (status == SES_EXITING) to
avoid UAF.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1627,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53050,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/i915/hdcp: Add encoder check in hdcp2_get_capability

Add encoder check in intel_hdcp2_get_capability to avoid
null pointer error.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1626,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2023-52502,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net: nfc: fix races in nfc_llcp_sock_get() and nfc_llcp_sock_get_sn()

Sili Luo reported a race in nfc_llcp_sock_get(), leading to UAF.

Getting a reference on the socket found in a lookup while
holding a lock should happen before releasing the lock.

nfc_llcp_sock_get_sn() has a similar problem.

Finally nfc_llcp_recv_snl() needs to make sure the socket
found by nfc_llcp_sock_from_sn() does not disappear.",Linux,Linux,"8f50020ed9b81ba909ce9573f9d05263cdebf502, 8f50020ed9b81ba909ce9573f9d05263cdebf502, 8f50020ed9b81ba909ce9573f9d05263cdebf502, 8f50020ed9b81ba909ce9573f9d05263cdebf502, 8f50020ed9b81ba909ce9573f9d05263cdebf502, 8f50020ed9b81ba909ce9573f9d05263cdebf502, 8f50020ed9b81ba909ce9573f9d05263cdebf502"
1595,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26923,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

af_unix: Fix garbage collector racing against connect()

Garbage collector does not take into account the risk of embryo getting
enqueued during the garbage collection. If such embryo has a peer that
carries SCM_RIGHTS, two consecutive passes of scan_children() may see a
different set of children. Leading to an incorrectly elevated inflight
count, and then a dangling pointer within the gc_inflight_list.

sockets are AF_UNIX/SOCK_STREAM
S is an unconnected socket
L is a listening in-flight socket bound to addr, not in fdtable
V's fd will be passed via sendmsg(), gets inflight count bumped

connect(S, addr)	sendmsg(S, [V]); close(V)	__unix_gc()
----------------	-------------------------	-----------

NS = unix_create1()
skb1 = sock_wmalloc(NS)
L = unix_find_other(addr)
unix_state_lock(L)
unix_peer(S) = NS
			// V count=1 inflight=0

 			NS = unix_peer(S)
 			skb2 = sock_alloc()
			skb_queue_tail(NS, skb2[V])

			// V became in-flight
			// V count=2 inflight=1

			close(V)

			// V count=1 inflight=1
			// GC candidate condition met

						for u in gc_inflight_list:
						  if (total_refs == inflight_refs)
						    add u to gc_candidates

						// gc_candidates={L, V}

						for u in gc_candidates:
						  scan_children(u, dec_inflight)

						// embryo (skb1) was not
						// reachable from L yet, so V's
						// inflight remains unchanged
__skb_queue_tail(L, skb1)
unix_state_unlock(L)
						for u in gc_candidates:
						  if (u.inflight)
						    scan_children(u, inc_inflight_move_tail)

						// V count=1 inflight=2 (!)

If there is a GC-candidate listening socket, lock/unlock its state. This
makes GC wait until the end of any ongoing connect() to that socket. After
flipping the lock, a possibly SCM-laden embryo is already enqueued. And if
there is another embryo coming, it can not possibly carry SCM_RIGHTS. At
this point, unix_inflight() can not happen because unix_gc_lock is already
taken. Inflight graph remains unaffected.",Linux,Linux,"1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9, 1fd05ba5a2f2aa8e7b9b52ef55df850e2e7d54c9"
1624,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53064,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

idpf: fix idpf_vc_core_init error path

In an event where the platform running the device control plane
is rebooted, reset is detected on the driver. It releases
all the resources and waits for the reset to complete. Once the
reset is done, it tries to build the resources back. At this
time if the device control plane is not yet started, then
the driver timeouts on the virtchnl message and retries to
establish the mailbox again.

In the retry flow, mailbox is deinitialized but the mailbox
workqueue is still alive and polling for the mailbox message.
This results in accessing the released control queue leading to
null-ptr-deref. Fix it by unrolling the work queue cancellation
and mailbox deinitialization in the reverse order which they got
initialized.",Linux,Linux,"4930fbf419a72d7477426fd883bfc37e20a61a6e, 4930fbf419a72d7477426fd883bfc37e20a61a6e"
1593,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-43861,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net: usb: qmi_wwan: fix memory leak for not ip packets

Free the unused skb when not ip packets arrive.",Linux,Linux,"c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3"
1565,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53134,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

pmdomain: imx93-blk-ctrl: correct remove path

The check condition should be 'i < bc->onecell_data.num_domains', not
'bc->onecell_data.num_domains' which will make the look never finish
and cause kernel panic.

Also disable runtime to address
""imx93-blk-ctrl 4ac10000.system-controller: Unbalanced pm_runtime_enable!""",Linux,Linux,"e9aa77d413c903ba4cf7da3fe0b419cae5b97a81, e9aa77d413c903ba4cf7da3fe0b419cae5b97a81, e9aa77d413c903ba4cf7da3fe0b419cae5b97a81"
1563,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53166,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

block, bfq: fix bfqq uaf in bfq_limit_depth()

Set new allocated bfqq to bic or remove freed bfqq from bic are both
protected by bfqd->lock, however bfq_limit_depth() is deferencing bfqq
from bic without the lock, this can lead to UAF if the io_context is
shared by multiple tasks.

For example, test bfq with io_uring can trigger following UAF in v6.6:

==================================================================
BUG: KASAN: slab-use-after-free in bfqq_group+0x15/0x50

Call Trace:
 <TASK>
 dump_stack_lvl+0x47/0x80
 print_address_description.constprop.0+0x66/0x300
 print_report+0x3e/0x70
 kasan_report+0xb4/0xf0
 bfqq_group+0x15/0x50
 bfqq_request_over_limit+0x130/0x9a0
 bfq_limit_depth+0x1b5/0x480
 __blk_mq_alloc_requests+0x2b5/0xa00
 blk_mq_get_new_requests+0x11d/0x1d0
 blk_mq_submit_bio+0x286/0xb00
 submit_bio_noacct_nocheck+0x331/0x400
 __block_write_full_folio+0x3d0/0x640
 writepage_cb+0x3b/0xc0
 write_cache_pages+0x254/0x6c0
 write_cache_pages+0x254/0x6c0
 do_writepages+0x192/0x310
 filemap_fdatawrite_wbc+0x95/0xc0
 __filemap_fdatawrite_range+0x99/0xd0
 filemap_write_and_wait_range.part.0+0x4d/0xa0
 blkdev_read_iter+0xef/0x1e0
 io_read+0x1b6/0x8a0
 io_issue_sqe+0x87/0x300
 io_wq_submit_work+0xeb/0x390
 io_worker_handle_work+0x24d/0x550
 io_wq_worker+0x27f/0x6c0
 ret_from_fork_asm+0x1b/0x30
 </TASK>

Allocated by task 808602:
 kasan_save_stack+0x1e/0x40
 kasan_set_track+0x21/0x30
 __kasan_slab_alloc+0x83/0x90
 kmem_cache_alloc_node+0x1b1/0x6d0
 bfq_get_queue+0x138/0xfa0
 bfq_get_bfqq_handle_split+0xe3/0x2c0
 bfq_init_rq+0x196/0xbb0
 bfq_insert_request.isra.0+0xb5/0x480
 bfq_insert_requests+0x156/0x180
 blk_mq_insert_request+0x15d/0x440
 blk_mq_submit_bio+0x8a4/0xb00
 submit_bio_noacct_nocheck+0x331/0x400
 __blkdev_direct_IO_async+0x2dd/0x330
 blkdev_write_iter+0x39a/0x450
 io_write+0x22a/0x840
 io_issue_sqe+0x87/0x300
 io_wq_submit_work+0xeb/0x390
 io_worker_handle_work+0x24d/0x550
 io_wq_worker+0x27f/0x6c0
 ret_from_fork+0x2d/0x50
 ret_from_fork_asm+0x1b/0x30

Freed by task 808589:
 kasan_save_stack+0x1e/0x40
 kasan_set_track+0x21/0x30
 kasan_save_free_info+0x27/0x40
 __kasan_slab_free+0x126/0x1b0
 kmem_cache_free+0x10c/0x750
 bfq_put_queue+0x2dd/0x770
 __bfq_insert_request.isra.0+0x155/0x7a0
 bfq_insert_request.isra.0+0x122/0x480
 bfq_insert_requests+0x156/0x180
 blk_mq_dispatch_plug_list+0x528/0x7e0
 blk_mq_flush_plug_list.part.0+0xe5/0x590
 __blk_flush_plug+0x3b/0x90
 blk_finish_plug+0x40/0x60
 do_writepages+0x19d/0x310
 filemap_fdatawrite_wbc+0x95/0xc0
 __filemap_fdatawrite_range+0x99/0xd0
 filemap_write_and_wait_range.part.0+0x4d/0xa0
 blkdev_read_iter+0xef/0x1e0
 io_read+0x1b6/0x8a0
 io_issue_sqe+0x87/0x300
 io_wq_submit_work+0xeb/0x390
 io_worker_handle_work+0x24d/0x550
 io_wq_worker+0x27f/0x6c0
 ret_from_fork+0x2d/0x50
 ret_from_fork_asm+0x1b/0x30

Fix the problem by protecting bic_to_bfqq() with bfqd->lock.",Linux,Linux,"76f1df88bbc2f984eb0418cc90de0a8384e63604, 76f1df88bbc2f984eb0418cc90de0a8384e63604, 76f1df88bbc2f984eb0418cc90de0a8384e63604, 76f1df88bbc2f984eb0418cc90de0a8384e63604"
1562,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56755,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfs/fscache: Add a memory barrier for FSCACHE_VOLUME_CREATING

In fscache_create_volume(), there is a missing memory barrier between the
bit-clearing operation and the wake-up operation. This may cause a
situation where, after a wake-up, the bit-clearing operation hasn't been
detected yet, leading to an indefinite wait. The triggering process is as
follows:

  [cookie1]                [cookie2]                  [volume_work]
fscache_perform_lookup
  fscache_create_volume
                        fscache_perform_lookup
                          fscache_create_volume
			                        fscache_create_volume_work
                                                  cachefiles_acquire_volume
                                                  clear_and_wake_up_bit
    test_and_set_bit
                            test_and_set_bit
                              goto maybe_wait
      goto no_wait

In the above process, cookie1 and cookie2 has the same volume. When cookie1
enters the -no_wait- process, it will clear the bit and wake up the waiting
process. If a barrier is missing, it may cause cookie2 to remain in the
-wait- process indefinitely.

In commit 3288666c7256 (""fscache: Use clear_and_wake_up_bit() in
fscache_create_volume_work()""), barriers were added to similar operations
in fscache_create_volume_work(), but fscache_create_volume() was missed.

By combining the clear and wake operations into clear_and_wake_up_bit() to
fix this issue.",Linux,Linux,"bfa22da3ed652aa15acd4246fa13a0de6dbe4a59, bfa22da3ed652aa15acd4246fa13a0de6dbe4a59, bfa22da3ed652aa15acd4246fa13a0de6dbe4a59, bfa22da3ed652aa15acd4246fa13a0de6dbe4a59, bfa22da3ed652aa15acd4246fa13a0de6dbe4a59"
1561,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2022-48956,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: avoid use-after-free in ip6_fragment()

Blamed commit claimed rcu_read_lock() was held by ip6_fragment() callers.

It seems to not be always true, at least for UDP stack.

syzbot reported:

BUG: KASAN: use-after-free in ip6_dst_idev include/net/ip6_fib.h:245 [inline]
BUG: KASAN: use-after-free in ip6_fragment+0x2724/0x2770 net/ipv6/ip6_output.c:951
Read of size 8 at addr ffff88801d403e80 by task syz-executor.3/7618

CPU: 1 PID: 7618 Comm: syz-executor.3 Not tainted 6.1.0-rc6-syzkaller-00012-g4312098baf37 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:284 [inline]
 print_report+0x15e/0x45d mm/kasan/report.c:395
 kasan_report+0xbf/0x1f0 mm/kasan/report.c:495
 ip6_dst_idev include/net/ip6_fib.h:245 [inline]
 ip6_fragment+0x2724/0x2770 net/ipv6/ip6_output.c:951
 __ip6_finish_output net/ipv6/ip6_output.c:193 [inline]
 ip6_finish_output+0x9a3/0x1170 net/ipv6/ip6_output.c:206
 NF_HOOK_COND include/linux/netfilter.h:291 [inline]
 ip6_output+0x1f1/0x540 net/ipv6/ip6_output.c:227
 dst_output include/net/dst.h:445 [inline]
 ip6_local_out+0xb3/0x1a0 net/ipv6/output_core.c:161
 ip6_send_skb+0xbb/0x340 net/ipv6/ip6_output.c:1966
 udp_v6_send_skb+0x82a/0x18a0 net/ipv6/udp.c:1286
 udp_v6_push_pending_frames+0x140/0x200 net/ipv6/udp.c:1313
 udpv6_sendmsg+0x18da/0x2c80 net/ipv6/udp.c:1606
 inet6_sendmsg+0x9d/0xe0 net/ipv6/af_inet6.c:665
 sock_sendmsg_nosec net/socket.c:714 [inline]
 sock_sendmsg+0xd3/0x120 net/socket.c:734
 sock_write_iter+0x295/0x3d0 net/socket.c:1108
 call_write_iter include/linux/fs.h:2191 [inline]
 new_sync_write fs/read_write.c:491 [inline]
 vfs_write+0x9ed/0xdd0 fs/read_write.c:584
 ksys_write+0x1ec/0x250 fs/read_write.c:637
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fde3588c0d9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fde365b6168 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 00007fde359ac050 RCX: 00007fde3588c0d9
RDX: 000000000000ffdc RSI: 00000000200000c0 RDI: 000000000000000a
RBP: 00007fde358e7ae9 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fde35acfb1f R14: 00007fde365b6300 R15: 0000000000022000
 </TASK>

Allocated by task 7618:
 kasan_save_stack+0x22/0x40 mm/kasan/common.c:45
 kasan_set_track+0x25/0x30 mm/kasan/common.c:52
 __kasan_slab_alloc+0x82/0x90 mm/kasan/common.c:325
 kasan_slab_alloc include/linux/kasan.h:201 [inline]
 slab_post_alloc_hook mm/slab.h:737 [inline]
 slab_alloc_node mm/slub.c:3398 [inline]
 slab_alloc mm/slub.c:3406 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3413 [inline]
 kmem_cache_alloc+0x2b4/0x3d0 mm/slub.c:3422
 dst_alloc+0x14a/0x1f0 net/core/dst.c:92
 ip6_dst_alloc+0x32/0xa0 net/ipv6/route.c:344
 ip6_rt_pcpu_alloc net/ipv6/route.c:1369 [inline]
 rt6_make_pcpu_route net/ipv6/route.c:1417 [inline]
 ip6_pol_route+0x901/0x1190 net/ipv6/route.c:2254
 pol_lookup_func include/net/ip6_fib.h:582 [inline]
 fib6_rule_lookup+0x52e/0x6f0 net/ipv6/fib6_rules.c:121
 ip6_route_output_flags_noref+0x2e6/0x380 net/ipv6/route.c:2625
 ip6_route_output_flags+0x76/0x320 net/ipv6/route.c:2638
 ip6_route_output include/net/ip6_route.h:98 [inline]
 ip6_dst_lookup_tail+0x5ab/0x1620 net/ipv6/ip6_output.c:1092
 ip6_dst_lookup_flow+0x90/0x1d0 net/ipv6/ip6_output.c:1222
 ip6_sk_dst_lookup_flow+0x553/0x980 net/ipv6/ip6_output.c:1260
 udpv6_sendmsg+0x151d/0x2c80 net/ipv6/udp.c:1554
 inet6_sendmsg+0x9d/0xe0 net/ipv6/af_inet6.c:665
 sock_sendmsg_nosec n
---truncated---",Linux,Linux,"1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581"
1560,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-46955,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

openvswitch: fix stack OOB read while fragmenting IPv4 packets

running openvswitch on kernels built with KASAN, it's possible to see the
following splat while testing fragmentation of IPv4 packets:

 BUG: KASAN: stack-out-of-bounds in ip_do_fragment+0x1b03/0x1f60
 Read of size 1 at addr ffff888112fc713c by task handler2/1367

 CPU: 0 PID: 1367 Comm: handler2 Not tainted 5.12.0-rc6+ #418
 Hardware name: Red Hat KVM, BIOS 1.11.1-4.module+el8.1.0+4066+0f1aadab 04/01/2014
 Call Trace:
  dump_stack+0x92/0xc1
  print_address_description.constprop.7+0x1a/0x150
  kasan_report.cold.13+0x7f/0x111
  ip_do_fragment+0x1b03/0x1f60
  ovs_fragment+0x5bf/0x840 [openvswitch]
  do_execute_actions+0x1bd5/0x2400 [openvswitch]
  ovs_execute_actions+0xc8/0x3d0 [openvswitch]
  ovs_packet_cmd_execute+0xa39/0x1150 [openvswitch]
  genl_family_rcv_msg_doit.isra.15+0x227/0x2d0
  genl_rcv_msg+0x287/0x490
  netlink_rcv_skb+0x120/0x380
  genl_rcv+0x24/0x40
  netlink_unicast+0x439/0x630
  netlink_sendmsg+0x719/0xbf0
  sock_sendmsg+0xe2/0x110
  ____sys_sendmsg+0x5ba/0x890
  ___sys_sendmsg+0xe9/0x160
  __sys_sendmsg+0xd3/0x170
  do_syscall_64+0x33/0x40
  entry_SYSCALL_64_after_hwframe+0x44/0xae
 RIP: 0033:0x7f957079db07
 Code: c3 66 90 41 54 41 89 d4 55 48 89 f5 53 89 fb 48 83 ec 10 e8 eb ec ff ff 44 89 e2 48 89 ee 89 df 41 89 c0 b8 2e 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 35 44 89 c7 48 89 44 24 08 e8 24 ed ff ff 48
 RSP: 002b:00007f956ce35a50 EFLAGS: 00000293 ORIG_RAX: 000000000000002e
 RAX: ffffffffffffffda RBX: 0000000000000019 RCX: 00007f957079db07
 RDX: 0000000000000000 RSI: 00007f956ce35ae0 RDI: 0000000000000019
 RBP: 00007f956ce35ae0 R08: 0000000000000000 R09: 00007f9558006730
 R10: 0000000000000000 R11: 0000000000000293 R12: 0000000000000000
 R13: 00007f956ce37308 R14: 00007f956ce35f80 R15: 00007f956ce35ae0

 The buggy address belongs to the page:
 page:00000000af2a1d93 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x112fc7
 flags: 0x17ffffc0000000()
 raw: 0017ffffc0000000 0000000000000000 dead000000000122 0000000000000000
 raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
 page dumped because: kasan: bad access detected

 addr ffff888112fc713c is located in stack of task handler2/1367 at offset 180 in frame:
  ovs_fragment+0x0/0x840 [openvswitch]

 this frame has 2 objects:
  [32, 144) 'ovs_dst'
  [192, 424) 'ovs_rt'

 Memory state around the buggy address:
  ffff888112fc7000: f3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  ffff888112fc7080: 00 f1 f1 f1 f1 00 00 00 00 00 00 00 00 00 00 00
 >ffff888112fc7100: 00 00 00 f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00
                                         ^
  ffff888112fc7180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  ffff888112fc7200: 00 00 00 00 00 00 f2 f2 f2 00 00 00 00 00 00 00

for IPv4 packets, ovs_fragment() uses a temporary struct dst_entry. Then,
in the following call graph:

  ip_do_fragment()
    ip_skb_dst_mtu()
      ip_dst_mtu_maybe_forward()
        ip_mtu_locked()

the pointer to struct dst_entry is used as pointer to struct rtable: this
turns the access to struct members like rt_mtu_locked into an OOB read in
the stack. Fix this changing the temporary variable used for IPv4 packets
in ovs_fragment(), similarly to what is done for IPv6 few lines below.",Linux,Linux,"119bbaa6795a4f4aed46994cc7d9ab01989c87e3, d543907a4730400f5c5b684c57cb5bbbfd6136ab, 8387fbac8e18e26a60559adc63e0b7067303b0a4, d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221, d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221, d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221, d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221, d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221, d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221"
1559,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50016,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Avoid overflow assignment in link_dp_cts

sampling_rate is an uint8_t but is assigned an unsigned int, and thus it
can overflow. As a result, sampling_rate is changed to uint32_t.

Similarly, LINK_QUAL_PATTERN_SET has a size of 2 bits, and it should
only be assigned to a value less or equal than 4.

This fixes 2 INTEGER_OVERFLOW issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1558,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53161,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

EDAC/bluefield: Fix potential integer overflow

The 64-bit argument for the ""get DIMM info"" SMC call consists of mem_ctrl_idx
left-shifted 16 bits and OR-ed with DIMM index.  With mem_ctrl_idx defined as
32-bits wide the left-shift operation truncates the upper 16 bits of
information during the calculation of the SMC argument.

The mem_ctrl_idx stack variable must be defined as 64-bits wide to prevent any
potential integer overflow, i.e. loss of data from upper 16 bits.",Linux,Linux,"82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f, 82413e562ea6eadfb6de946dcc6f74af31d64e7f"
1557,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50272,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

filemap: Fix bounds checking in filemap_read()

If the caller supplies an iocb->ki_pos value that is close to the
filesystem upper limit, and an iterator with a count that causes us to
overflow that limit, then filemap_read() enters an infinite loop.

This behaviour was discovered when testing xfstests generic/525 with the
""localio"" optimisation for loopback NFS mounts.",Linux,Linux,"c2a9737f45e27d8263ff9643f994bda9bac0b944, c2a9737f45e27d8263ff9643f994bda9bac0b944, c2a9737f45e27d8263ff9643f994bda9bac0b944, c2a9737f45e27d8263ff9643f994bda9bac0b944"
1556,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56562,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

i3c: master: Fix miss free init_dyn_addr at i3c_master_put_i3c_addrs()

if (dev->boardinfo && dev->boardinfo->init_dyn_addr)
                                      ^^^ here check ""init_dyn_addr""
	i3c_bus_set_addr_slot_status(&master->bus, dev->info.dyn_addr, ...)
						             ^^^^
							free ""dyn_addr""
Fix copy/paste error ""dyn_addr"" by replacing it with ""init_dyn_addr"".",Linux,Linux,"3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0"
1555,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53207,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: MGMT: Fix possible deadlocks

This fixes possible deadlocks like the following caused by
hci_cmd_sync_dequeue causing the destroy function to run:

 INFO: task kworker/u19:0:143 blocked for more than 120 seconds.
       Tainted: G        W  O        6.8.0-2024-03-19-intel-next-iLS-24ww14 #1
 ""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message.
 task:kworker/u19:0   state:D stack:0     pid:143   tgid:143   ppid:2      flags:0x00004000
 Workqueue: hci0 hci_cmd_sync_work [bluetooth]
 Call Trace:
  <TASK>
  __schedule+0x374/0xaf0
  schedule+0x3c/0xf0
  schedule_preempt_disabled+0x1c/0x30
  __mutex_lock.constprop.0+0x3ef/0x7a0
  __mutex_lock_slowpath+0x13/0x20
  mutex_lock+0x3c/0x50
  mgmt_set_connectable_complete+0xa4/0x150 [bluetooth]
  ? kfree+0x211/0x2a0
  hci_cmd_sync_dequeue+0xae/0x130 [bluetooth]
  ? __pfx_cmd_complete_rsp+0x10/0x10 [bluetooth]
  cmd_complete_rsp+0x26/0x80 [bluetooth]
  mgmt_pending_foreach+0x4d/0x70 [bluetooth]
  __mgmt_power_off+0x8d/0x180 [bluetooth]
  ? _raw_spin_unlock_irq+0x23/0x40
  hci_dev_close_sync+0x445/0x5b0 [bluetooth]
  hci_set_powered_sync+0x149/0x250 [bluetooth]
  set_powered_sync+0x24/0x60 [bluetooth]
  hci_cmd_sync_work+0x90/0x150 [bluetooth]
  process_one_work+0x13e/0x300
  worker_thread+0x2f7/0x420
  ? __pfx_worker_thread+0x10/0x10
  kthread+0x107/0x140
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x3d/0x60
  ? __pfx_kthread+0x10/0x10
  ret_from_fork_asm+0x1b/0x30
  </TASK>",Linux,Linux,"19b40ca62607cef78369549d1af091f2fd558931, 4883296505aa7e4863c6869b689afb6005633b23, 8c3f7943a29145d8a2d8e24893762f7673323eae, f53e1c9c726d83092167f2226f32bd3b73f26c21, f53e1c9c726d83092167f2226f32bd3b73f26c21"
1554,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50264,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

vsock/virtio: Initialization of the dangling pointer occurring in vsk->trans

During loopback communication, a dangling pointer can be created in
vsk->trans, potentially leading to a Use-After-Free condition.  This
issue is resolved by initializing vsk->trans to NULL.",Linux,Linux,"06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b"
1553,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53173,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

NFSv4.0: Fix a use-after-free problem in the asynchronous open()

Yang Erkun reports that when two threads are opening files at the same
time, and are forced to abort before a reply is seen, then the call to
nfs_release_seqid() in nfs4_opendata_free() can result in a
use-after-free of the pointer to the defunct rpc task of the other
thread.
The fix is to ensure that if the RPC call is aborted before the call to
nfs_wait_on_sequence() is complete, then we must call nfs_release_seqid()
in nfs4_open_release() before the rpc_task is freed.",Linux,Linux,"24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099, 24ac23ab88df5b21b5b2df8cde748bf99b289099"
1552,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-36915,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nfc: llcp: fix nfc_llcp_setsockopt() unsafe copies

syzbot reported unsafe calls to copy_from_sockptr() [1]

Use copy_safe_from_sockptr() instead.

[1]

BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]
 BUG: KASAN: slab-out-of-bounds in copy_from_sockptr include/linux/sockptr.h:55 [inline]
 BUG: KASAN: slab-out-of-bounds in nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255
Read of size 4 at addr ffff88801caa1ec3 by task syz-executor459/5078

CPU: 0 PID: 5078 Comm: syz-executor459 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114
  print_address_description mm/kasan/report.c:377 [inline]
  print_report+0x169/0x550 mm/kasan/report.c:488
  kasan_report+0x143/0x180 mm/kasan/report.c:601
  copy_from_sockptr_offset include/linux/sockptr.h:49 [inline]
  copy_from_sockptr include/linux/sockptr.h:55 [inline]
  nfc_llcp_setsockopt+0x6c2/0x850 net/nfc/llcp_sock.c:255
  do_sock_setsockopt+0x3b1/0x720 net/socket.c:2311
  __sys_setsockopt+0x1ae/0x250 net/socket.c:2334
  __do_sys_setsockopt net/socket.c:2343 [inline]
  __se_sys_setsockopt net/socket.c:2340 [inline]
  __x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340
 do_syscall_64+0xfd/0x240
 entry_SYSCALL_64_after_hwframe+0x6d/0x75
RIP: 0033:0x7f7fac07fd89
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff660eb788 EFLAGS: 00000246 ORIG_RAX: 0000000000000036
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007f7fac07fd89
RDX: 0000000000000000 RSI: 0000000000000118 RDI: 0000000000000004
RBP: 0000000000000000 R08: 0000000000000002 R09: 0000000000000000
R10: 0000000020000a80 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1551,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53229,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/rxe: Fix the qp flush warnings in req

When the qp is in error state, the status of WQEs in the queue should be
set to error. Or else the following will appear.

[  920.617269] WARNING: CPU: 1 PID: 21 at drivers/infiniband/sw/rxe/rxe_comp.c:756 rxe_completer+0x989/0xcc0 [rdma_rxe]
[  920.617744] Modules linked in: rnbd_client(O) rtrs_client(O) rtrs_core(O) rdma_ucm rdma_cm iw_cm ib_cm crc32_generic rdma_rxe ip6_udp_tunnel udp_tunnel ib_uverbs ib_core loop brd null_blk ipv6
[  920.618516] CPU: 1 PID: 21 Comm: ksoftirqd/1 Tainted: G           O       6.1.113-storage+ #65
[  920.618986] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
[  920.619396] RIP: 0010:rxe_completer+0x989/0xcc0 [rdma_rxe]
[  920.619658] Code: 0f b6 84 24 3a 02 00 00 41 89 84 24 44 04 00 00 e9 2a f7 ff ff 39 ca bb 03 00 00 00 b8 0e 00 00 00 48 0f 45 d8 e9 15 f7 ff ff <0f> 0b e9 cb f8 ff ff 41 bf f5 ff ff ff e9 08 f8 ff ff 49 8d bc 24
[  920.620482] RSP: 0018:ffff97b7c00bbc38 EFLAGS: 00010246
[  920.620817] RAX: 0000000000000000 RBX: 000000000000000c RCX: 0000000000000008
[  920.621183] RDX: ffff960dc396ebc0 RSI: 0000000000005400 RDI: ffff960dc4e2fbac
[  920.621548] RBP: 0000000000000000 R08: 0000000000000001 R09: ffffffffac406450
[  920.621884] R10: ffffffffac4060c0 R11: 0000000000000001 R12: ffff960dc4e2f800
[  920.622254] R13: ffff960dc4e2f928 R14: ffff97b7c029c580 R15: 0000000000000000
[  920.622609] FS:  0000000000000000(0000) GS:ffff960ef7d00000(0000) knlGS:0000000000000000
[  920.622979] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  920.623245] CR2: 00007fa056965e90 CR3: 00000001107f1000 CR4: 00000000000006e0
[  920.623680] Call Trace:
[  920.623815]  <TASK>
[  920.623933]  ? __warn+0x79/0xc0
[  920.624116]  ? rxe_completer+0x989/0xcc0 [rdma_rxe]
[  920.624356]  ? report_bug+0xfb/0x150
[  920.624594]  ? handle_bug+0x3c/0x60
[  920.624796]  ? exc_invalid_op+0x14/0x70
[  920.624976]  ? asm_exc_invalid_op+0x16/0x20
[  920.625203]  ? rxe_completer+0x989/0xcc0 [rdma_rxe]
[  920.625474]  ? rxe_completer+0x329/0xcc0 [rdma_rxe]
[  920.625749]  rxe_do_task+0x80/0x110 [rdma_rxe]
[  920.626037]  rxe_requester+0x625/0xde0 [rdma_rxe]
[  920.626310]  ? rxe_cq_post+0xe2/0x180 [rdma_rxe]
[  920.626583]  ? do_complete+0x18d/0x220 [rdma_rxe]
[  920.626812]  ? rxe_completer+0x1a3/0xcc0 [rdma_rxe]
[  920.627050]  rxe_do_task+0x80/0x110 [rdma_rxe]
[  920.627285]  tasklet_action_common.constprop.0+0xa4/0x120
[  920.627522]  handle_softirqs+0xc2/0x250
[  920.627728]  ? sort_range+0x20/0x20
[  920.627942]  run_ksoftirqd+0x1f/0x30
[  920.628158]  smpboot_thread_fn+0xc7/0x1b0
[  920.628334]  kthread+0xd6/0x100
[  920.628504]  ? kthread_complete_and_exit+0x20/0x20
[  920.628709]  ret_from_fork+0x1f/0x30
[  920.628892]  </TASK>",Linux,Linux,"ae720bdb703b295fed4ded28e14dd06a534a3012, ae720bdb703b295fed4ded28e14dd06a534a3012, ae720bdb703b295fed4ded28e14dd06a534a3012, ae720bdb703b295fed4ded28e14dd06a534a3012"
1549,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50211,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

udf: refactor inode_bmap() to handle error

Refactor inode_bmap() to handle error since udf_next_aext() can return
error now. On situations like ftruncate, udf_extend_file() can now
detect errors and bail out early without resorting to checking for
particular offsets and assuming internal behavior of these functions.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1548,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53122,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: cope racing subflow creation in mptcp_rcv_space_adjust

Additional active subflows - i.e. created by the in kernel path
manager - are included into the subflow list before starting the
3whs.

A racing recvmsg() spooling data received on an already established
subflow would unconditionally call tcp_cleanup_rbuf() on all the
current subflows, potentially hitting a divide by zero error on
the newly created ones.

Explicitly check that the subflow is in a suitable state before
invoking tcp_cleanup_rbuf().",Linux,Linux,"c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1"
1547,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35950,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/client: Fully protect modes[] with dev->mode_config.mutex

The modes[] array contains pointers to modes on the connectors'
mode lists, which are protected by dev->mode_config.mutex.
Thus we need to extend modes[] the same protection or by the
time we use it the elements may already be pointing to
freed/reused memory.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1546,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56752,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/nouveau/gr/gf100: Fix missing unlock in gf100_gr_chan_new()

When the call to gf100_grctx_generate() fails, unlock gr->fecs.mutex
before returning the error.

Fixes smatch warning:

drivers/gpu/drm/nouveau/nvkm/engine/gr/gf100.c:480 gf100_gr_chan_new() warn: inconsistent returns '&gr->fecs.mutex'.",Linux,Linux,"ca081fff6ecc63c86a99918230cc9b947bebae8a, ca081fff6ecc63c86a99918230cc9b947bebae8a, ca081fff6ecc63c86a99918230cc9b947bebae8a, ca081fff6ecc63c86a99918230cc9b947bebae8a"
1545,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53119,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

virtio/vsock: Fix accept_queue memory leak

As the final stages of socket destruction may be delayed, it is possible
that virtio_transport_recv_listen() will be called after the accept_queue
has been flushed, but before the SOCK_DONE flag has been set. As a result,
sockets enqueued after the flush would remain unremoved, leading to a
memory leak.

vsock_release
  __vsock_release
    lock
    virtio_transport_release
      virtio_transport_close
        schedule_delayed_work(close_work)
    sk_shutdown = SHUTDOWN_MASK
(!) flush accept_queue
    release
                                        virtio_transport_recv_pkt
                                          vsock_find_bound_socket
                                          lock
                                          if flag(SOCK_DONE) return
                                          virtio_transport_recv_listen
                                            child = vsock_create_connected
                                      (!)   vsock_enqueue_accept(child)
                                          release
close_work
  lock
  virtio_transport_do_close
    set_flag(SOCK_DONE)
    virtio_transport_remove_sock
      vsock_remove_sock
        vsock_remove_bound
  release

Introduce a sk_shutdown check to disallow vsock_enqueue_accept() during
socket destruction.

unreferenced object 0xffff888109e3f800 (size 2040):
  comm ""kworker/5:2"", pid 371, jiffies 4294940105
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    28 00 0b 40 00 00 00 00 00 00 00 00 00 00 00 00  (..@............
  backtrace (crc 9e5f4e84):
    [<ffffffff81418ff1>] kmem_cache_alloc_noprof+0x2c1/0x360
    [<ffffffff81d27aa0>] sk_prot_alloc+0x30/0x120
    [<ffffffff81d2b54c>] sk_alloc+0x2c/0x4b0
    [<ffffffff81fe049a>] __vsock_create.constprop.0+0x2a/0x310
    [<ffffffff81fe6d6c>] virtio_transport_recv_pkt+0x4dc/0x9a0
    [<ffffffff81fe745d>] vsock_loopback_work+0xfd/0x140
    [<ffffffff810fc6ac>] process_one_work+0x20c/0x570
    [<ffffffff810fce3f>] worker_thread+0x1bf/0x3a0
    [<ffffffff811070dd>] kthread+0xdd/0x110
    [<ffffffff81044fdd>] ret_from_fork+0x2d/0x50
    [<ffffffff8100785a>] ret_from_fork_asm+0x1a/0x30",Linux,Linux,"3fe356d58efae54dade9ec94ea7c919ed20cf4db, 3fe356d58efae54dade9ec94ea7c919ed20cf4db, 3fe356d58efae54dade9ec94ea7c919ed20cf4db, 3fe356d58efae54dade9ec94ea7c919ed20cf4db, 3fe356d58efae54dade9ec94ea7c919ed20cf4db, 3fe356d58efae54dade9ec94ea7c919ed20cf4db"
1544,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56599,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath10k: avoid NULL pointer error during sdio remove

When running 'rmmod ath10k', ath10k_sdio_remove() will free sdio
workqueue by destroy_workqueue(). But if CONFIG_INIT_ON_FREE_DEFAULT_ON
is set to yes, kernel panic will happen:
Call trace:
 destroy_workqueue+0x1c/0x258
 ath10k_sdio_remove+0x84/0x94
 sdio_bus_remove+0x50/0x16c
 device_release_driver_internal+0x188/0x25c
 device_driver_detach+0x20/0x2c

This is because during 'rmmod ath10k', ath10k_sdio_remove() will call
ath10k_core_destroy() before destroy_workqueue(). wiphy_dev_release()
will finally be called in ath10k_core_destroy(). This function will free
struct cfg80211_registered_device *rdev and all its members, including
wiphy, dev and the pointer of sdio workqueue. Then the pointer of sdio
workqueue will be set to NULL due to CONFIG_INIT_ON_FREE_DEFAULT_ON.

After device release, destroy_workqueue() will use NULL pointer then the
kernel panic happen.

Call trace:
ath10k_sdio_remove
  ->ath10k_core_unregister
    ……
    ->ath10k_core_stop
      ->ath10k_hif_stop
        ->ath10k_sdio_irq_disable
    ->ath10k_hif_power_down
      ->del_timer_sync(&ar_sdio->sleep_timer)
  ->ath10k_core_destroy
    ->ath10k_mac_destroy
      ->ieee80211_free_hw
        ->wiphy_free
    ……
          ->wiphy_dev_release
  ->destroy_workqueue

Need to call destroy_workqueue() before ath10k_core_destroy(), free
the work queue buffer first and then free pointer of work queue by
ath10k_core_destroy(). This order matches the error path order in
ath10k_sdio_probe().

No work will be queued on sdio workqueue between it is destroyed and
ath10k_core_destroy() is called. Based on the call_stack above, the
reason is:
Only ath10k_sdio_sleep_timer_handler(), ath10k_sdio_hif_tx_sg() and
ath10k_sdio_irq_disable() will queue work on sdio workqueue.
Sleep timer will be deleted before ath10k_core_destroy() in
ath10k_hif_power_down().
ath10k_sdio_irq_disable() only be called in ath10k_hif_stop().
ath10k_core_unregister() will call ath10k_hif_power_down() to stop hif
bus, so ath10k_sdio_hif_tx_sg() won't be called anymore.

Tested-on: QCA6174 hw3.2 SDIO WLAN.RMH.4.4.1-00189",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1543,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53113,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

mm: fix NULL pointer dereference in alloc_pages_bulk_noprof

We triggered a NULL pointer dereference for ac.preferred_zoneref->zone in
alloc_pages_bulk_noprof() when the task is migrated between cpusets.

When cpuset is enabled, in prepare_alloc_pages(), ac->nodemask may be
&current->mems_allowed.  when first_zones_zonelist() is called to find
preferred_zoneref, the ac->nodemask may be modified concurrently if the
task is migrated between different cpusets.  Assuming we have 2 NUMA Node,
when traversing Node1 in ac->zonelist, the nodemask is 2, and when
traversing Node2 in ac->zonelist, the nodemask is 1.  As a result, the
ac->preferred_zoneref points to NULL zone.

In alloc_pages_bulk_noprof(), for_each_zone_zonelist_nodemask() finds a
allowable zone and calls zonelist_node_idx(ac.preferred_zoneref), leading
to NULL pointer dereference.

__alloc_pages_noprof() fixes this issue by checking NULL pointer in commit
ea57485af8f4 (""mm, page_alloc: fix check for NULL preferred_zone"") and
commit df76cee6bbeb (""mm, page_alloc: remove redundant checks from alloc
fastpath"").

To fix it, check NULL pointer for preferred_zoneref->zone.",Linux,Linux,"387ba26fb1cb9be9e35dc14a6d97188e916eda05, 387ba26fb1cb9be9e35dc14a6d97188e916eda05, 387ba26fb1cb9be9e35dc14a6d97188e916eda05, 387ba26fb1cb9be9e35dc14a6d97188e916eda05, 387ba26fb1cb9be9e35dc14a6d97188e916eda05"
1542,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53210,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

s390/iucv: MSG_PEEK causes memory leak in iucv_sock_destruct()

Passing MSG_PEEK flag to skb_recv_datagram() increments skb refcount
(skb->users) and iucv_sock_recvmsg() does not decrement skb refcount
at exit.
This results in skb memory leak in skb_queue_purge() and WARN_ON in
iucv_sock_destruct() during socket close. To fix this decrease
skb refcount by one if MSG_PEEK is set in order to prevent memory
leak and WARN_ON.

WARNING: CPU: 2 PID: 6292 at net/iucv/af_iucv.c:286 iucv_sock_destruct+0x144/0x1a0 [af_iucv]
CPU: 2 PID: 6292 Comm: afiucv_test_msg Kdump: loaded Tainted: G        W          6.10.0-rc7 #1
Hardware name: IBM 3931 A01 704 (z/VM 7.3.0)
Call Trace:
        [<001587c682c4aa98>] iucv_sock_destruct+0x148/0x1a0 [af_iucv]
        [<001587c682c4a9d0>] iucv_sock_destruct+0x80/0x1a0 [af_iucv]
        [<001587c704117a32>] __sk_destruct+0x52/0x550
        [<001587c704104a54>] __sock_release+0xa4/0x230
        [<001587c704104c0c>] sock_close+0x2c/0x40
        [<001587c702c5f5a8>] __fput+0x2e8/0x970
        [<001587c7024148c4>] task_work_run+0x1c4/0x2c0
        [<001587c7023b0716>] do_exit+0x996/0x1050
        [<001587c7023b13aa>] do_group_exit+0x13a/0x360
        [<001587c7023b1626>] __s390x_sys_exit_group+0x56/0x60
        [<001587c7022bccca>] do_syscall+0x27a/0x380
        [<001587c7049a6a0c>] __do_syscall+0x9c/0x160
        [<001587c7049ce8a8>] system_call+0x70/0x98
        Last Breaking-Event-Address:
        [<001587c682c4a9d4>] iucv_sock_destruct+0x84/0x1a0 [af_iucv]",Linux,Linux,"eac3731bd04c7131478722a3c148b78774553116, eac3731bd04c7131478722a3c148b78774553116, eac3731bd04c7131478722a3c148b78774553116, eac3731bd04c7131478722a3c148b78774553116, eac3731bd04c7131478722a3c148b78774553116"
1541,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-23307,4.4,Moyenne,CWE-190 Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"Integer Overflow or Wraparound vulnerability in Linux Linux kernel kernel on Linux, x86, ARM (md, raid, raid5 modules) allows Forced Integer Overflow.",Linux,Linux kernel,v4.1-rc1
1540,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53099,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Check validity of link->type in bpf_link_show_fdinfo()

If a newly-added link type doesn't invoke BPF_LINK_TYPE(), accessing
bpf_link_type_strs[link->type] may result in an out-of-bounds access.

To spot such missed invocations early in the future, checking the
validity of link->type in bpf_link_show_fdinfo() and emitting a warning
when such invocations are missed.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1539,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-44934,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mcast: wait for previous gc cycles when removing port

syzbot hit a use-after-free[1] which is caused because the bridge doesn't
make sure that all previous garbage has been collected when removing a
port. What happens is:
      CPU 1                   CPU 2
 start gc cycle           remove port
                         acquire gc lock first
 wait for lock
                         call br_multicasg_gc() directly
 acquire lock now but    free port
 the port can be freed
 while grp timers still
 running

Make sure all previous gc cycles have finished by using flush_work before
freeing the port.

[1]
  BUG: KASAN: slab-use-after-free in br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861
  Read of size 8 at addr ffff888071d6d000 by task syz.5.1232/9699

  CPU: 1 PID: 9699 Comm: syz.5.1232 Not tainted 6.10.0-rc5-syzkaller-00021-g24ca36a562d6 #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/07/2024
  Call Trace:
   <IRQ>
   __dump_stack lib/dump_stack.c:88 [inline]
   dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:114
   print_address_description mm/kasan/report.c:377 [inline]
   print_report+0xc3/0x620 mm/kasan/report.c:488
   kasan_report+0xd9/0x110 mm/kasan/report.c:601
   br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861
   call_timer_fn+0x1a3/0x610 kernel/time/timer.c:1792
   expire_timers kernel/time/timer.c:1843 [inline]
   __run_timers+0x74b/0xaf0 kernel/time/timer.c:2417
   __run_timer_base kernel/time/timer.c:2428 [inline]
   __run_timer_base kernel/time/timer.c:2421 [inline]
   run_timer_base+0x111/0x190 kernel/time/timer.c:2437",Linux,Linux,"e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18"
1538,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53159,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,n/a,n/a,n/a,
1537,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50154,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

tcp/dccp: Don't use timer_pending() in reqsk_queue_unlink().

Martin KaFai Lau reported use-after-free [0] in reqsk_timer_handler().

  """"""
  We are seeing a use-after-free from a bpf prog attached to
  trace_tcp_retransmit_synack. The program passes the req->sk to the
  bpf_sk_storage_get_tracing kernel helper which does check for null
  before using it.
  """"""

The commit 83fccfc3940c (""inet: fix potential deadlock in
reqsk_queue_unlink()"") added timer_pending() in reqsk_queue_unlink() not
to call del_timer_sync() from reqsk_timer_handler(), but it introduced a
small race window.

Before the timer is called, expire_timers() calls detach_timer(timer, true)
to clear timer->entry.pprev and marks it as not pending.

If reqsk_queue_unlink() checks timer_pending() just after expire_timers()
calls detach_timer(), TCP will miss del_timer_sync(); the reqsk timer will
continue running and send multiple SYN+ACKs until it expires.

The reported UAF could happen if req->sk is close()d earlier than the timer
expiration, which is 63s by default.

The scenario would be

  1. inet_csk_complete_hashdance() calls inet_csk_reqsk_queue_drop(),
     but del_timer_sync() is missed

  2. reqsk timer is executed and scheduled again

  3. req->sk is accept()ed and reqsk_put() decrements rsk_refcnt, but
     reqsk timer still has another one, and inet_csk_accept() does not
     clear req->sk for non-TFO sockets

  4. sk is close()d

  5. reqsk timer is executed again, and BPF touches req->sk

Let's not use timer_pending() by passing the caller context to
__inet_csk_reqsk_queue_drop().

Note that reqsk timer is pinned, so the issue does not happen in most
use cases. [1]

[0]
BUG: KFENCE: use-after-free read in bpf_sk_storage_get_tracing+0x2e/0x1b0

Use-after-free read at 0x00000000a891fb3a (in kfence-#1):
bpf_sk_storage_get_tracing+0x2e/0x1b0
bpf_prog_5ea3e95db6da0438_tcp_retransmit_synack+0x1d20/0x1dda
bpf_trace_run2+0x4c/0xc0
tcp_rtx_synack+0xf9/0x100
reqsk_timer_handler+0xda/0x3d0
run_timer_softirq+0x292/0x8a0
irq_exit_rcu+0xf5/0x320
sysvec_apic_timer_interrupt+0x6d/0x80
asm_sysvec_apic_timer_interrupt+0x16/0x20
intel_idle_irq+0x5a/0xa0
cpuidle_enter_state+0x94/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb

kfence-#1: 0x00000000a72cc7b6-0x00000000d97616d9, size=2376, cache=TCPv6

allocated by task 0 on cpu 9 at 260507.901592s:
sk_prot_alloc+0x35/0x140
sk_clone_lock+0x1f/0x3f0
inet_csk_clone_lock+0x15/0x160
tcp_create_openreq_child+0x1f/0x410
tcp_v6_syn_recv_sock+0x1da/0x700
tcp_check_req+0x1fb/0x510
tcp_v6_rcv+0x98b/0x1420
ipv6_list_rcv+0x2258/0x26e0
napi_complete_done+0x5b1/0x2990
mlx5e_napi_poll+0x2ae/0x8d0
net_rx_action+0x13e/0x590
irq_exit_rcu+0xf5/0x320
common_interrupt+0x80/0x90
asm_common_interrupt+0x22/0x40
cpuidle_enter_state+0xfb/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb

freed by task 0 on cpu 9 at 260507.927527s:
rcu_core_si+0x4ff/0xf10
irq_exit_rcu+0xf5/0x320
sysvec_apic_timer_interrupt+0x6d/0x80
asm_sysvec_apic_timer_interrupt+0x16/0x20
cpuidle_enter_state+0xfb/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb",Linux,Linux,"83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af"
1592,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-36908,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

blk-iocost: do not WARN if iocg was already offlined

In iocg_pay_debt(), warn is triggered if 'active_list' is empty, which
is intended to confirm iocg is active when it has debt. However, warn
can be triggered during a blkcg or disk removal, if iocg_waitq_timer_fn()
is run at that time:

  WARNING: CPU: 0 PID: 2344971 at block/blk-iocost.c:1402 iocg_pay_debt+0x14c/0x190
  Call trace:
  iocg_pay_debt+0x14c/0x190
  iocg_kick_waitq+0x438/0x4c0
  iocg_waitq_timer_fn+0xd8/0x130
  __run_hrtimer+0x144/0x45c
  __hrtimer_run_queues+0x16c/0x244
  hrtimer_interrupt+0x2cc/0x7b0

The warn in this situation is meaningless. Since this iocg is being
removed, the state of the 'active_list' is irrelevant, and 'waitq_timer'
is canceled after removing 'active_list' in ioc_pd_free(), which ensures
iocg is freed after iocg_waitq_timer_fn() returns.

Therefore, add the check if iocg was already offlined to avoid warn
when removing a blkcg or disk.",Linux,Linux,"7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3"
1564,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53217,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

NFSD: Prevent NULL dereference in nfsd4_process_cb_update()

@ses is initialized to NULL. If __nfsd4_find_backchannel() finds no
available backchannel session, setup_callback_client() will try to
dereference @ses and segfault.",Linux,Linux,"dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209, dcbeaa68dbbdacbbb330a86c7fc95a28473fc209"
1550,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53131,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix null-ptr-deref in block_touch_buffer tracepoint

Patch series ""nilfs2: fix null-ptr-deref bugs on block tracepoints"".

This series fixes null pointer dereference bugs that occur when using
nilfs2 and two block-related tracepoints.


This patch (of 2):

It has been reported that when using ""block:block_touch_buffer""
tracepoint, touch_buffer() called from __nilfs_get_folio_block() causes a
NULL pointer dereference, or a general protection fault when KASAN is
enabled.

This happens because since the tracepoint was added in touch_buffer(), it
references the dev_t member bh->b_bdev->bd_dev regardless of whether the
buffer head has a pointer to a block_device structure.  In the current
implementation, the block_device structure is set after the function
returns to the caller.

Here, touch_buffer() is used to mark the folio/page that owns the buffer
head as accessed, but the common search helper for folio/page used by the
caller function was optimized to mark the folio/page as accessed when it
was reimplemented a long time ago, eliminating the need to call
touch_buffer() here in the first place.

So this solves the issue by eliminating the touch_buffer() call itself.",Linux,Linux,"5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f"
1566,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-49915,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add NULL check for clk_mgr in dcn32_init_hw

This commit addresses a potential null pointer dereference issue in the
`dcn32_init_hw` function. The issue could occur when `dc->clk_mgr` is
null.

The fix adds a check to ensure `dc->clk_mgr` is not null before
accessing its functions. This prevents a potential null pointer
dereference.

Reported by smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn32/dcn32_hwseq.c:961 dcn32_init_hw() error: we previously assumed 'dc->clk_mgr' could be null (see line 782)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1579,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56551,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix usage slab after free

[  +0.000021] BUG: KASAN: slab-use-after-free in drm_sched_entity_flush+0x6cb/0x7a0 [gpu_sched]
[  +0.000027] Read of size 8 at addr ffff8881b8605f88 by task amd_pci_unplug/2147

[  +0.000023] CPU: 6 PID: 2147 Comm: amd_pci_unplug Not tainted 6.10.0+ #1
[  +0.000016] Hardware name: ASUS System Product Name/ROG STRIX B550-F GAMING (WI-FI), BIOS 1401 12/03/2020
[  +0.000016] Call Trace:
[  +0.000008]  <TASK>
[  +0.000009]  dump_stack_lvl+0x76/0xa0
[  +0.000017]  print_report+0xce/0x5f0
[  +0.000017]  ? drm_sched_entity_flush+0x6cb/0x7a0 [gpu_sched]
[  +0.000019]  ? srso_return_thunk+0x5/0x5f
[  +0.000015]  ? kasan_complete_mode_report_info+0x72/0x200
[  +0.000016]  ? drm_sched_entity_flush+0x6cb/0x7a0 [gpu_sched]
[  +0.000019]  kasan_report+0xbe/0x110
[  +0.000015]  ? drm_sched_entity_flush+0x6cb/0x7a0 [gpu_sched]
[  +0.000023]  __asan_report_load8_noabort+0x14/0x30
[  +0.000014]  drm_sched_entity_flush+0x6cb/0x7a0 [gpu_sched]
[  +0.000020]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? __kasan_check_write+0x14/0x30
[  +0.000016]  ? __pfx_drm_sched_entity_flush+0x10/0x10 [gpu_sched]
[  +0.000020]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? __kasan_check_write+0x14/0x30
[  +0.000013]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? enable_work+0x124/0x220
[  +0.000015]  ? __pfx_enable_work+0x10/0x10
[  +0.000013]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? free_large_kmalloc+0x85/0xf0
[  +0.000016]  drm_sched_entity_destroy+0x18/0x30 [gpu_sched]
[  +0.000020]  amdgpu_vce_sw_fini+0x55/0x170 [amdgpu]
[  +0.000735]  ? __kasan_check_read+0x11/0x20
[  +0.000016]  vce_v4_0_sw_fini+0x80/0x110 [amdgpu]
[  +0.000726]  amdgpu_device_fini_sw+0x331/0xfc0 [amdgpu]
[  +0.000679]  ? mutex_unlock+0x80/0xe0
[  +0.000017]  ? __pfx_amdgpu_device_fini_sw+0x10/0x10 [amdgpu]
[  +0.000662]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? __kasan_check_write+0x14/0x30
[  +0.000013]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? mutex_unlock+0x80/0xe0
[  +0.000016]  amdgpu_driver_release_kms+0x16/0x80 [amdgpu]
[  +0.000663]  drm_minor_release+0xc9/0x140 [drm]
[  +0.000081]  drm_release+0x1fd/0x390 [drm]
[  +0.000082]  __fput+0x36c/0xad0
[  +0.000018]  __fput_sync+0x3c/0x50
[  +0.000014]  __x64_sys_close+0x7d/0xe0
[  +0.000014]  x64_sys_call+0x1bc6/0x2680
[  +0.000014]  do_syscall_64+0x70/0x130
[  +0.000014]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? irqentry_exit_to_user_mode+0x60/0x190
[  +0.000015]  ? srso_return_thunk+0x5/0x5f
[  +0.000014]  ? irqentry_exit+0x43/0x50
[  +0.000012]  ? srso_return_thunk+0x5/0x5f
[  +0.000013]  ? exc_page_fault+0x7c/0x110
[  +0.000015]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[  +0.000014] RIP: 0033:0x7ffff7b14f67
[  +0.000013] Code: ff e8 0d 16 02 00 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 73 ba f7 ff
[  +0.000026] RSP: 002b:00007fffffffe378 EFLAGS: 00000246 ORIG_RAX: 0000000000000003
[  +0.000019] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff7b14f67
[  +0.000014] RDX: 0000000000000000 RSI: 00007ffff7f6f47a RDI: 0000000000000003
[  +0.000014] RBP: 00007fffffffe3a0 R08: 0000555555569890 R09: 0000000000000000
[  +0.000014] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fffffffe5c8
[  +0.000013] R13: 00005555555552a9 R14: 0000555555557d48 R15: 00007ffff7ffd040
[  +0.000020]  </TASK>

[  +0.000016] Allocated by task 383 on cpu 7 at 26.880319s:
[  +0.000014]  kasan_save_stack+0x28/0x60
[  +0.000008]  kasan_save_track+0x18/0x70
[  +0.000007]  kasan_save_alloc_info+0x38/0x60
[  +0.000007]  __kasan_kmalloc+0xc1/0xd0
[  +0.000007]  kmalloc_trace_noprof+0x180/0x380
[  +0.000007]  drm_sched_init+0x411/0xec0 [gpu_sched]
[  +0.000012]  amdgpu_device_init+0x695f/0xa610 [amdgpu]
[  +0.000658]  amdgpu_driver_load_kms+0x1a/0x120 [amdgpu]
[  +0.000662]  amdgpu_pci_p
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1591,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53174,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

SUNRPC: make sure cache entry active before cache_show

The function `c_show` was called with protection from RCU. This only
ensures that `cp` will not be freed. Therefore, the reference count for
`cp` can drop to zero, which will trigger a refcount use-after-free
warning when `cache_get` is called. To resolve this issue, use
`cache_get_rcu` to ensure that `cp` remains active.

------------[ cut here ]------------
refcount_t: addition on 0; use-after-free.
WARNING: CPU: 7 PID: 822 at lib/refcount.c:25
refcount_warn_saturate+0xb1/0x120
CPU: 7 UID: 0 PID: 822 Comm: cat Not tainted 6.12.0-rc3+ #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
1.16.1-2.fc37 04/01/2014
RIP: 0010:refcount_warn_saturate+0xb1/0x120

Call Trace:
 <TASK>
 c_show+0x2fc/0x380 [sunrpc]
 seq_read_iter+0x589/0x770
 seq_read+0x1e5/0x270
 proc_reg_read+0xe1/0x140
 vfs_read+0x125/0x530
 ksys_read+0xc1/0x160
 do_syscall_64+0x5f/0x170
 entry_SYSCALL_64_after_hwframe+0x76/0x7e",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1590,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50278,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

dm cache: fix potential out-of-bounds access on the first resume

Out-of-bounds access occurs if the fast device is expanded unexpectedly
before the first-time resume of the cache table. This happens because
expanding the fast device requires reloading the cache table for
cache_create to allocate new in-core data structures that fit the new
size, and the check in cache_preresume is not performed during the
first resume, leading to the issue.

Reproduce steps:

1. prepare component devices:

dmsetup create cmeta --table ""0 8192 linear /dev/sdc 0""
dmsetup create cdata --table ""0 65536 linear /dev/sdc 8192""
dmsetup create corig --table ""0 524288 linear /dev/sdc 262144""
dd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1 oflag=direct

2. load a cache table of 512 cache blocks, and deliberately expand the
   fast device before resuming the cache, making the in-core data
   structures inadequate.

dmsetup create cache --notable
dmsetup reload cache --table ""0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0""
dmsetup reload cdata --table ""0 131072 linear /dev/sdc 8192""
dmsetup resume cdata
dmsetup resume cache

3. suspend the cache to write out the in-core dirty bitset and hint
   array, leading to out-of-bounds access to the dirty bitset at offset
   0x40:

dmsetup suspend cache

KASAN reports:

  BUG: KASAN: vmalloc-out-of-bounds in is_dirty_callback+0x2b/0x80
  Read of size 8 at addr ffffc90000085040 by task dmsetup/90

  (...snip...)
  The buggy address belongs to the virtual mapping at
   [ffffc90000085000, ffffc90000087000) created by:
   cache_ctr+0x176a/0x35f0

  (...snip...)
  Memory state around the buggy address:
   ffffc90000084f00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc90000084f80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
  >ffffc90000085000: 00 00 00 00 00 00 00 00 f8 f8 f8 f8 f8 f8 f8 f8
                                             ^
   ffffc90000085080: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc90000085100: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8

Fix by checking the size change on the first resume.",Linux,Linux,"f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498"
1589,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-47383,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

tty: Fix out-of-bound vmalloc access in imageblit

This issue happens when a userspace program does an ioctl
FBIOPUT_VSCREENINFO passing the fb_var_screeninfo struct
containing only the fields xres, yres, and bits_per_pixel
with values.

If this struct is the same as the previous ioctl, the
vc_resize() detects it and doesn't call the resize_screen(),
leaving the fb_var_screeninfo incomplete. And this leads to
the updatescrollmode() calculates a wrong value to
fbcon_display->vrows, which makes the real_y() return a
wrong value of y, and that value, eventually, causes
the imageblit to access an out-of-bound address value.

To solve this issue I made the resize_screen() be called
even if the screen does not need any resizing, so it will
""fix and fill"" the fb_var_screeninfo independently.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1588,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-47378,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-rdma: destroy cm id before destroy qp to avoid use after free

We should always destroy cm_id before destroy qp to avoid to get cma
event after qp was destroyed, which may lead to use after free.
In RDMA connection establishment error flow, don't destroy qp in cm
event handler.Just report cm_error to upper level, qp will be destroy
in nvme_rdma_alloc_queue() after destroy cm id.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1587,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53158,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

soc: qcom: geni-se: fix array underflow in geni_se_clk_tbl_get()

This loop is supposed to break if the frequency returned from
clk_round_rate() is the same as on the previous iteration.  However,
that check doesn't make sense on the first iteration through the loop.
It leads to reading before the start of these->clk_perf_tbl[] array.",Linux,Linux,"eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a, eddac5af06546d2e7a0730e3dc02dde3dc91098a"
1586,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35864,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential UAF in smb2_is_valid_lease_break()

Skip sessions that are being teared down (status == SES_EXITING) to
avoid UAF.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1584,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53162,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

crypto: qat/qat_4xxx - fix off by one in uof_get_name()

The fw_objs[] array has ""num_objs"" elements so the > needs to be >= to
prevent an out of bounds read.",Linux,Linux,"10484c647af6b1952d1675e83be9cc976cdb6a96, 10484c647af6b1952d1675e83be9cc976cdb6a96, 10484c647af6b1952d1675e83be9cc976cdb6a96, 10484c647af6b1952d1675e83be9cc976cdb6a96"
1583,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53215,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

svcrdma: fix miss destroy percpu_counter in svc_rdma_proc_init()

There's issue as follows:
RPC: Registered rdma transport module.
RPC: Registered rdma backchannel transport module.
RPC: Unregistered rdma transport module.
RPC: Unregistered rdma backchannel transport module.
BUG: unable to handle page fault for address: fffffbfff80c609a
PGD 123fee067 P4D 123fee067 PUD 123fea067 PMD 10c624067 PTE 0
Oops: Oops: 0000 [#1] PREEMPT SMP KASAN NOPTI
RIP: 0010:percpu_counter_destroy_many+0xf7/0x2a0
Call Trace:
 <TASK>
 __die+0x1f/0x70
 page_fault_oops+0x2cd/0x860
 spurious_kernel_fault+0x36/0x450
 do_kern_addr_fault+0xca/0x100
 exc_page_fault+0x128/0x150
 asm_exc_page_fault+0x26/0x30
 percpu_counter_destroy_many+0xf7/0x2a0
 mmdrop+0x209/0x350
 finish_task_switch.isra.0+0x481/0x840
 schedule_tail+0xe/0xd0
 ret_from_fork+0x23/0x80
 ret_from_fork_asm+0x1a/0x30
 </TASK>

If register_sysctl() return NULL, then svc_rdma_proc_cleanup() will not
destroy the percpu counters which init in svc_rdma_proc_init().
If CONFIG_HOTPLUG_CPU is enabled, residual nodes may be in the
'percpu_counters' list. The above issue may occur once the module is
removed. If the CONFIG_HOTPLUG_CPU configuration is not enabled, memory
leakage occurs.
To solve above issue just destroy all percpu counters when
register_sysctl() return NULL.",Linux,Linux,"1e7e55731628c90d8c701c45f9c3a3b8718840d6, 1e7e55731628c90d8c701c45f9c3a3b8718840d6, 1e7e55731628c90d8c701c45f9c3a3b8718840d6, 1e7e55731628c90d8c701c45f9c3a3b8718840d6, 1e7e55731628c90d8c701c45f9c3a3b8718840d6, 1e7e55731628c90d8c701c45f9c3a3b8718840d6"
1582,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2021-47517,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ethtool: do not perform operations on net devices being unregistered

There is a short period between a net device starts to be unregistered
and when it is actually gone. In that time frame ethtool operations
could still be performed, which might end up in unwanted or undefined
behaviours[1].

Do not allow ethtool operations after a net device starts its
unregistration. This patch targets the netlink part as the ioctl one
isn't affected: the reference to the net device is taken and the
operation is executed within an rtnl lock section and the net device
won't be found after unregister.

[1] For example adding Tx queues after unregister ends up in NULL
    pointer exceptions and UaFs, such as:

      BUG: KASAN: use-after-free in kobject_get+0x14/0x90
      Read of size 1 at addr ffff88801961248c by task ethtool/755

      CPU: 0 PID: 755 Comm: ethtool Not tainted 5.15.0-rc6+ #778
      Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-4.fc34 04/014
      Call Trace:
       dump_stack_lvl+0x57/0x72
       print_address_description.constprop.0+0x1f/0x140
       kasan_report.cold+0x7f/0x11b
       kobject_get+0x14/0x90
       kobject_add_internal+0x3d1/0x450
       kobject_init_and_add+0xba/0xf0
       netdev_queue_update_kobjects+0xcf/0x200
       netif_set_real_num_tx_queues+0xb4/0x310
       veth_set_channels+0x1c3/0x550
       ethnl_set_channels+0x524/0x610",Linux,Linux,"041b1c5d4a53e97fc9e029ae32469552ca12cb9b, 041b1c5d4a53e97fc9e029ae32469552ca12cb9b, 041b1c5d4a53e97fc9e029ae32469552ca12cb9b"
1581,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-47678,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

icmp: change the order of rate limits

ICMP messages are ratelimited :

After the blamed commits, the two rate limiters are applied in this order:

1) host wide ratelimit (icmp_global_allow())

2) Per destination ratelimit (inetpeer based)

In order to avoid side-channels attacks, we need to apply
the per destination check first.

This patch makes the following change :

1) icmp_global_allow() checks if the host wide limit is reached.
   But credits are not yet consumed. This is deferred to 3)

2) The per destination limit is checked/updated.
   This might add a new node in inetpeer tree.

3) icmp_global_consume() consumes tokens if prior operations succeeded.

This means that host wide ratelimit is still effective
in keeping inetpeer tree small even under DDOS.

As a bonus, I removed icmp_global.lock as the fast path
can use a lock-free operation.",Linux,Linux,"4cdf507d54525842dfd9f6313fdafba039084046, 4cdf507d54525842dfd9f6313fdafba039084046, 4cdf507d54525842dfd9f6313fdafba039084046, 4cdf507d54525842dfd9f6313fdafba039084046, 4cdf507d54525842dfd9f6313fdafba039084046"
1580,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-8805,n/a,n/a,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"BlueZ HID over GATT Profile Improper Access Control Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of BlueZ. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the implementation of the HID over GATT Profile. The issue results from the lack of authorization prior to allowing access to functionality. An attacker can leverage this vulnerability to execute code in the context of the current user. Was ZDI-CAN-25177.",BlueZ,BlueZ,5.77
1585,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-41042,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: prefer nft_chain_validate

nft_chain_validate already performs loop detection because a cycle will
result in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).

It also follows maps via ->validate callback in nft_lookup, so there
appears no reason to iterate the maps again.

nf_tables_check_loops() and all its helper functions can be removed.
This improves ruleset load time significantly, from 23s down to 12s.

This also fixes a crash bug. Old loop detection code can result in
unbounded recursion:

BUG: TASK stack guard page was hit at ....
Oops: stack guard page: 0000 [#1] PREEMPT SMP KASAN
CPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1
[..]

with a suitable ruleset during validation of register stores.

I can't see any actual reason to attempt to check for this from
nft_validate_register_store(), at this point the transaction is still in
progress, so we don't have a full picture of the rule graph.

For nf-next it might make sense to either remove it or make this depend
on table->validate_state in case we could catch an error earlier
(for improved error reporting to userspace).",Linux,Linux,"20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25"
1570,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53105,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

mm: page_alloc: move mlocked flag clearance into free_pages_prepare()

Syzbot reported a bad page state problem caused by a page being freed
using free_page() still having a mlocked flag at free_pages_prepare()
stage:

  BUG: Bad page state in process syz.5.504  pfn:61f45
  page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x61f45
  flags: 0xfff00000080204(referenced|workingset|mlocked|node=0|zone=1|lastcpupid=0x7ff)
  raw: 00fff00000080204 0000000000000000 dead000000000122 0000000000000000
  raw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000
  page dumped because: PAGE_FLAGS_CHECK_AT_FREE flag(s) set
  page_owner tracks the page as allocated
  page last allocated via order 0, migratetype Unmovable, gfp_mask 0x400dc0(GFP_KERNEL_ACCOUNT|__GFP_ZERO), pid 8443, tgid 8442 (syz.5.504), ts 201884660643, free_ts 201499827394
   set_page_owner include/linux/page_owner.h:32 [inline]
   post_alloc_hook+0x1f3/0x230 mm/page_alloc.c:1537
   prep_new_page mm/page_alloc.c:1545 [inline]
   get_page_from_freelist+0x303f/0x3190 mm/page_alloc.c:3457
   __alloc_pages_noprof+0x292/0x710 mm/page_alloc.c:4733
   alloc_pages_mpol_noprof+0x3e8/0x680 mm/mempolicy.c:2265
   kvm_coalesced_mmio_init+0x1f/0xf0 virt/kvm/coalesced_mmio.c:99
   kvm_create_vm virt/kvm/kvm_main.c:1235 [inline]
   kvm_dev_ioctl_create_vm virt/kvm/kvm_main.c:5488 [inline]
   kvm_dev_ioctl+0x12dc/0x2240 virt/kvm/kvm_main.c:5530
   __do_compat_sys_ioctl fs/ioctl.c:1007 [inline]
   __se_compat_sys_ioctl+0x510/0xc90 fs/ioctl.c:950
   do_syscall_32_irqs_on arch/x86/entry/common.c:165 [inline]
   __do_fast_syscall_32+0xb4/0x110 arch/x86/entry/common.c:386
   do_fast_syscall_32+0x34/0x80 arch/x86/entry/common.c:411
   entry_SYSENTER_compat_after_hwframe+0x84/0x8e
  page last free pid 8399 tgid 8399 stack trace:
   reset_page_owner include/linux/page_owner.h:25 [inline]
   free_pages_prepare mm/page_alloc.c:1108 [inline]
   free_unref_folios+0xf12/0x18d0 mm/page_alloc.c:2686
   folios_put_refs+0x76c/0x860 mm/swap.c:1007
   free_pages_and_swap_cache+0x5c8/0x690 mm/swap_state.c:335
   __tlb_batch_free_encoded_pages mm/mmu_gather.c:136 [inline]
   tlb_batch_pages_flush mm/mmu_gather.c:149 [inline]
   tlb_flush_mmu_free mm/mmu_gather.c:366 [inline]
   tlb_flush_mmu+0x3a3/0x680 mm/mmu_gather.c:373
   tlb_finish_mmu+0xd4/0x200 mm/mmu_gather.c:465
   exit_mmap+0x496/0xc40 mm/mmap.c:1926
   __mmput+0x115/0x390 kernel/fork.c:1348
   exit_mm+0x220/0x310 kernel/exit.c:571
   do_exit+0x9b2/0x28e0 kernel/exit.c:926
   do_group_exit+0x207/0x2c0 kernel/exit.c:1088
   __do_sys_exit_group kernel/exit.c:1099 [inline]
   __se_sys_exit_group kernel/exit.c:1097 [inline]
   __x64_sys_exit_group+0x3f/0x40 kernel/exit.c:1097
   x64_sys_call+0x2634/0x2640 arch/x86/include/generated/asm/syscalls_64.h:232
   do_syscall_x64 arch/x86/entry/common.c:52 [inline]
   do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
   entry_SYSCALL_64_after_hwframe+0x77/0x7f
  Modules linked in:
  CPU: 0 UID: 0 PID: 8442 Comm: syz.5.504 Not tainted 6.12.0-rc6-syzkaller #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
  Call Trace:
   <TASK>
   __dump_stack lib/dump_stack.c:94 [inline]
   dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120
   bad_page+0x176/0x1d0 mm/page_alloc.c:501
   free_page_is_bad mm/page_alloc.c:918 [inline]
   free_pages_prepare mm/page_alloc.c:1100 [inline]
   free_unref_page+0xed0/0xf20 mm/page_alloc.c:2638
   kvm_destroy_vm virt/kvm/kvm_main.c:1327 [inline]
   kvm_put_kvm+0xc75/0x1350 virt/kvm/kvm_main.c:1386
   kvm_vcpu_release+0x54/0x60 virt/kvm/kvm_main.c:4143
   __fput+0x23f/0x880 fs/file_table.c:431
   task_work_run+0x24f/0x310 kernel/task_work.c:239
   exit_task_work include/linux/task_work.h:43 [inline]
   do_exit+0xa2f/0x28e0 kernel/exit.c:939
   do_group_exit+0x207/0x2c0 kernel/exit.c:1088
   __do_sys_exit_group kernel/exit.c:1099 [in
---truncated---",Linux,Linux,"b109b87050df5438ee745b2bddfa3587970025bb, b109b87050df5438ee745b2bddfa3587970025bb, b109b87050df5438ee745b2bddfa3587970025bb, b109b87050df5438ee745b2bddfa3587970025bb"
1569,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53201,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix null check for pipe_ctx->plane_state in dcn20_program_pipe

This commit addresses a null pointer dereference issue in
dcn20_program_pipe(). Previously, commit 8e4ed3cf1642 (""drm/amd/display:
Add null check for pipe_ctx->plane_state in dcn20_program_pipe"")
partially fixed the null pointer dereference issue. However, in
dcn20_update_dchubp_dpp(), the variable pipe_ctx is passed in, and
plane_state is accessed again through pipe_ctx. Multiple if statements
directly call attributes of plane_state, leading to potential null
pointer dereference issues. This patch adds necessary null checks to
ensure stability.",Linux,Linux,"65a6fee22d5cfa645cb05489892dc9cd3d142fc2, 8e4ed3cf1642df0c4456443d865cff61a9598aa8, 8e4ed3cf1642df0c4456443d865cff61a9598aa8"
1577,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53208,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: MGMT: Fix slab-use-after-free Read in set_powered_sync

This fixes the following crash:

==================================================================
BUG: KASAN: slab-use-after-free in set_powered_sync+0x3a/0xc0 net/bluetooth/mgmt.c:1353
Read of size 8 at addr ffff888029b4dd18 by task kworker/u9:0/54

CPU: 1 UID: 0 PID: 54 Comm: kworker/u9:0 Not tainted 6.11.0-rc6-syzkaller-01155-gf723224742fc #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Workqueue: hci0 hci_cmd_sync_work
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:93 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x169/0x550 mm/kasan/report.c:488
q kasan_report+0x143/0x180 mm/kasan/report.c:601
 set_powered_sync+0x3a/0xc0 net/bluetooth/mgmt.c:1353
 hci_cmd_sync_work+0x22b/0x400 net/bluetooth/hci_sync.c:328
 process_one_work kernel/workqueue.c:3231 [inline]
 process_scheduled_works+0xa2c/0x1830 kernel/workqueue.c:3312
 worker_thread+0x86d/0xd10 kernel/workqueue.c:3389
 kthread+0x2f0/0x390 kernel/kthread.c:389
 ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
 </TASK>

Allocated by task 5247:
 kasan_save_stack mm/kasan/common.c:47 [inline]
 kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
 poison_kmalloc_redzone mm/kasan/common.c:370 [inline]
 __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:387
 kasan_kmalloc include/linux/kasan.h:211 [inline]
 __kmalloc_cache_noprof+0x19c/0x2c0 mm/slub.c:4193
 kmalloc_noprof include/linux/slab.h:681 [inline]
 kzalloc_noprof include/linux/slab.h:807 [inline]
 mgmt_pending_new+0x65/0x250 net/bluetooth/mgmt_util.c:269
 mgmt_pending_add+0x36/0x120 net/bluetooth/mgmt_util.c:296
 set_powered+0x3cd/0x5e0 net/bluetooth/mgmt.c:1394
 hci_mgmt_cmd+0xc47/0x11d0 net/bluetooth/hci_sock.c:1712
 hci_sock_sendmsg+0x7b8/0x11c0 net/bluetooth/hci_sock.c:1832
 sock_sendmsg_nosec net/socket.c:730 [inline]
 __sock_sendmsg+0x221/0x270 net/socket.c:745
 sock_write_iter+0x2dd/0x400 net/socket.c:1160
 new_sync_write fs/read_write.c:497 [inline]
 vfs_write+0xa72/0xc90 fs/read_write.c:590
 ksys_write+0x1a0/0x2c0 fs/read_write.c:643
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Freed by task 5246:
 kasan_save_stack mm/kasan/common.c:47 [inline]
 kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
 kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579
 poison_slab_object+0xe0/0x150 mm/kasan/common.c:240
 __kasan_slab_free+0x37/0x60 mm/kasan/common.c:256
 kasan_slab_free include/linux/kasan.h:184 [inline]
 slab_free_hook mm/slub.c:2256 [inline]
 slab_free mm/slub.c:4477 [inline]
 kfree+0x149/0x360 mm/slub.c:4598
 settings_rsp+0x2bc/0x390 net/bluetooth/mgmt.c:1443
 mgmt_pending_foreach+0xd1/0x130 net/bluetooth/mgmt_util.c:259
 __mgmt_power_off+0x112/0x420 net/bluetooth/mgmt.c:9455
 hci_dev_close_sync+0x665/0x11a0 net/bluetooth/hci_sync.c:5191
 hci_dev_do_close net/bluetooth/hci_core.c:483 [inline]
 hci_dev_close+0x112/0x210 net/bluetooth/hci_core.c:508
 sock_do_ioctl+0x158/0x460 net/socket.c:1222
 sock_ioctl+0x629/0x8e0 net/socket.c:1341
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:907 [inline]
 __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:893
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83gv
 entry_SYSCALL_64_after_hwframe+0x77/0x7f",Linux,Linux,"275f3f64870245b06188f24bdf917e55a813d294, 275f3f64870245b06188f24bdf917e55a813d294, 275f3f64870245b06188f24bdf917e55a813d294, 275f3f64870245b06188f24bdf917e55a813d294, 275f3f64870245b06188f24bdf917e55a813d294"
1576,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50280,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

dm cache: fix flushing uninitialized delayed_work on cache_ctr error

An unexpected WARN_ON from flush_work() may occur when cache creation
fails, caused by destroying the uninitialized delayed_work waker in the
error path of cache_create(). For example, the warning appears on the
superblock checksum error.

Reproduce steps:

dmsetup create cmeta --table ""0 8192 linear /dev/sdc 0""
dmsetup create cdata --table ""0 65536 linear /dev/sdc 8192""
dmsetup create corig --table ""0 524288 linear /dev/sdc 262144""
dd if=/dev/urandom of=/dev/mapper/cmeta bs=4k count=1 oflag=direct
dmsetup create cache --table ""0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0""

Kernel logs:

(snip)
WARNING: CPU: 0 PID: 84 at kernel/workqueue.c:4178 __flush_work+0x5d4/0x890

Fix by pulling out the cancel_delayed_work_sync() from the constructor's
error path. This patch doesn't affect the use-after-free fix for
concurrent dm_resume and dm_destroy (commit 6a459d8edbdb (""dm cache: Fix
UAF in destroy()"")) as cache_dtr is not changed.",Linux,Linux,"6a3e412c2ab131c54945327a7676b006f000a209, 6a459d8edbdbe7b24db42a5a9f21e6aa9e00c2aa, 6a459d8edbdbe7b24db42a5a9f21e6aa9e00c2aa, 6a459d8edbdbe7b24db42a5a9f21e6aa9e00c2aa"
1575,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-26610,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: fix a memory corruption

iwl_fw_ini_trigger_tlv::data is a pointer to a __le32, which means that
if we copy to iwl_fw_ini_trigger_tlv::data + offset while offset is in
bytes, we'll write past the buffer.",Linux,Linux,"cf29c5b66b9f83939367d90679eb68cdfa2f0356, cf29c5b66b9f83939367d90679eb68cdfa2f0356, cf29c5b66b9f83939367d90679eb68cdfa2f0356, cf29c5b66b9f83939367d90679eb68cdfa2f0356, cf29c5b66b9f83939367d90679eb68cdfa2f0356, cf29c5b66b9f83939367d90679eb68cdfa2f0356"
1574,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56582,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix use-after-free in btrfs_encoded_read_endio()

Shinichiro reported the following use-after free that sometimes is
happening in our CI system when running fstests' btrfs/284 on a TCMU
runner device:

  BUG: KASAN: slab-use-after-free in lock_release+0x708/0x780
  Read of size 8 at addr ffff888106a83f18 by task kworker/u80:6/219

  CPU: 8 UID: 0 PID: 219 Comm: kworker/u80:6 Not tainted 6.12.0-rc6-kts+ #15
  Hardware name: Supermicro Super Server/X11SPi-TF, BIOS 3.3 02/21/2020
  Workqueue: btrfs-endio btrfs_end_bio_work [btrfs]
  Call Trace:
   <TASK>
   dump_stack_lvl+0x6e/0xa0
   ? lock_release+0x708/0x780
   print_report+0x174/0x505
   ? lock_release+0x708/0x780
   ? __virt_addr_valid+0x224/0x410
   ? lock_release+0x708/0x780
   kasan_report+0xda/0x1b0
   ? lock_release+0x708/0x780
   ? __wake_up+0x44/0x60
   lock_release+0x708/0x780
   ? __pfx_lock_release+0x10/0x10
   ? __pfx_do_raw_spin_lock+0x10/0x10
   ? lock_is_held_type+0x9a/0x110
   _raw_spin_unlock_irqrestore+0x1f/0x60
   __wake_up+0x44/0x60
   btrfs_encoded_read_endio+0x14b/0x190 [btrfs]
   btrfs_check_read_bio+0x8d9/0x1360 [btrfs]
   ? lock_release+0x1b0/0x780
   ? trace_lock_acquire+0x12f/0x1a0
   ? __pfx_btrfs_check_read_bio+0x10/0x10 [btrfs]
   ? process_one_work+0x7e3/0x1460
   ? lock_acquire+0x31/0xc0
   ? process_one_work+0x7e3/0x1460
   process_one_work+0x85c/0x1460
   ? __pfx_process_one_work+0x10/0x10
   ? assign_work+0x16c/0x240
   worker_thread+0x5e6/0xfc0
   ? __pfx_worker_thread+0x10/0x10
   kthread+0x2c3/0x3a0
   ? __pfx_kthread+0x10/0x10
   ret_from_fork+0x31/0x70
   ? __pfx_kthread+0x10/0x10
   ret_from_fork_asm+0x1a/0x30
   </TASK>

  Allocated by task 3661:
   kasan_save_stack+0x30/0x50
   kasan_save_track+0x14/0x30
   __kasan_kmalloc+0xaa/0xb0
   btrfs_encoded_read_regular_fill_pages+0x16c/0x6d0 [btrfs]
   send_extent_data+0xf0f/0x24a0 [btrfs]
   process_extent+0x48a/0x1830 [btrfs]
   changed_cb+0x178b/0x2ea0 [btrfs]
   btrfs_ioctl_send+0x3bf9/0x5c20 [btrfs]
   _btrfs_ioctl_send+0x117/0x330 [btrfs]
   btrfs_ioctl+0x184a/0x60a0 [btrfs]
   __x64_sys_ioctl+0x12e/0x1a0
   do_syscall_64+0x95/0x180
   entry_SYSCALL_64_after_hwframe+0x76/0x7e

  Freed by task 3661:
   kasan_save_stack+0x30/0x50
   kasan_save_track+0x14/0x30
   kasan_save_free_info+0x3b/0x70
   __kasan_slab_free+0x4f/0x70
   kfree+0x143/0x490
   btrfs_encoded_read_regular_fill_pages+0x531/0x6d0 [btrfs]
   send_extent_data+0xf0f/0x24a0 [btrfs]
   process_extent+0x48a/0x1830 [btrfs]
   changed_cb+0x178b/0x2ea0 [btrfs]
   btrfs_ioctl_send+0x3bf9/0x5c20 [btrfs]
   _btrfs_ioctl_send+0x117/0x330 [btrfs]
   btrfs_ioctl+0x184a/0x60a0 [btrfs]
   __x64_sys_ioctl+0x12e/0x1a0
   do_syscall_64+0x95/0x180
   entry_SYSCALL_64_after_hwframe+0x76/0x7e

  The buggy address belongs to the object at ffff888106a83f00
   which belongs to the cache kmalloc-rnd-07-96 of size 96
  The buggy address is located 24 bytes inside of
   freed 96-byte region [ffff888106a83f00, ffff888106a83f60)

  The buggy address belongs to the physical page:
  page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888106a83800 pfn:0x106a83
  flags: 0x17ffffc0000000(node=0|zone=2|lastcpupid=0x1fffff)
  page_type: f5(slab)
  raw: 0017ffffc0000000 ffff888100053680 ffffea0004917200 0000000000000004
  raw: ffff888106a83800 0000000080200019 00000001f5000000 0000000000000000
  page dumped because: kasan: bad access detected

  Memory state around the buggy address:
   ffff888106a83e00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
   ffff888106a83e80: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
  >ffff888106a83f00: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
                              ^
   ffff888106a83f80: fa fb fb fb fb fb fb fb fb fb fb fb fc fc fc fc
   ffff888106a84000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  ==================================================================

Further analyzing the trace and 
---truncated---",Linux,Linux,"1881fba89bd5dcd364d2e1bf561912a90a11c21a, 1881fba89bd5dcd364d2e1bf561912a90a11c21a, 1881fba89bd5dcd364d2e1bf561912a90a11c21a, 1881fba89bd5dcd364d2e1bf561912a90a11c21a"
1573,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-56567,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

ad7780: fix division by zero in ad7780_write_raw()

In the ad7780_write_raw() , val2 can be zero, which might lead to a
division by zero error in DIV_ROUND_CLOSEST(). The ad7780_write_raw()
is based on iio_info's write_raw. While val is explicitly declared that
can be zero (in read mode), val2 is not specified to be non-zero.",Linux,Linux,"9085daa4abcc3a1c19ae4eb00e609842ef28275a, 9085daa4abcc3a1c19ae4eb00e609842ef28275a, 9085daa4abcc3a1c19ae4eb00e609842ef28275a, 9085daa4abcc3a1c19ae4eb00e609842ef28275a, 9085daa4abcc3a1c19ae4eb00e609842ef28275a, 9085daa4abcc3a1c19ae4eb00e609842ef28275a, 9085daa4abcc3a1c19ae4eb00e609842ef28275a"
1567,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53154,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

clk: clk-apple-nco: Add NULL check in applnco_probe

Add NULL check in applnco_probe, to handle kernel NULL pointer
dereference error.",Linux,Linux,"6641057d5dba87338780cf3e0d0ae8389ef1125c, 6641057d5dba87338780cf3e0d0ae8389ef1125c, 6641057d5dba87338780cf3e0d0ae8389ef1125c, 6641057d5dba87338780cf3e0d0ae8389ef1125c, 6641057d5dba87338780cf3e0d0ae8389ef1125c"
1572,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-35905,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Protect against int overflow for stack access size

This patch re-introduces protection against the size of access to stack
memory being negative; the access size can appear negative as a result
of overflowing its signed int representation. This should not actually
happen, as there are other protections along the way, but we should
protect against it anyway. One code path was missing such protections
(fixed in the previous patch in the series), causing out-of-bounds array
accesses in check_stack_range_initialized(). This patch causes the
verification of a program with such a non-sensical access size to fail.

This check used to exist in a more indirect way, but was inadvertendly
removed in a833a17aeac7.",Linux,Linux,"afea95d319ccb4ad2060dece9ac5e2e364dec543, 02962684258eb53f414a8a59854767be526e6abb, b1d4d54d32ce6342f5faffe71bae736540ce7cb5, 08b91babccbb168353f8d43fea0ed28a4cad568c, a833a17aeac73b33f79433d7cee68d5cafd71e4f, a833a17aeac73b33f79433d7cee68d5cafd71e4f"
1571,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-50143,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

udf: fix uninit-value use in udf_get_fileshortad

Check for overflow when computing alen in udf_current_aext to mitigate
later uninit-value use in udf_get_fileshortad KMSAN bug[1].
After applying the patch reproducer did not trigger any issue[2].

[1] https://syzkaller.appspot.com/bug?extid=8901c4560b7ab5c2f9df
[2] https://syzkaller.appspot.com/x/log.txt?x=10242227980000",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1578,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53141,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: ipset: add missing range check in bitmap_ip_uadt

When tb[IPSET_ATTR_IP_TO] is not present but tb[IPSET_ATTR_CIDR] exists,
the values of ip and ip_to are slightly swapped. Therefore, the range check
for ip should be done later, but this part is missing and it seems that the
vulnerability occurs.

So we should add missing range checks and remove unnecessary range checks.",Linux,Linux,"72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c, 72205fc68bd13109576aa6c4c12c740962d28a6c"
1568,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-17,CVE-2024-53130,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0047/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix null-ptr-deref in block_dirty_buffer tracepoint

When using the ""block:block_dirty_buffer"" tracepoint, mark_buffer_dirty()
may cause a NULL pointer dereference, or a general protection fault when
KASAN is enabled.

This happens because, since the tracepoint was added in
mark_buffer_dirty(), it references the dev_t member bh->b_bdev->bd_dev
regardless of whether the buffer head has a pointer to a block_device
structure.

In the current implementation, nilfs_grab_buffer(), which grabs a buffer
to read (or create) a block of metadata, including b-tree node blocks,
does not set the block device, but instead does so only if the buffer is
not in the ""uptodate"" state for each of its caller block reading
functions.  However, if the uptodate flag is set on a folio/page, and the
buffer heads are detached from it by try_to_free_buffers(), and new buffer
heads are then attached by create_empty_buffers(), the uptodate flag may
be restored to each buffer without the block device being set to
bh->b_bdev, and mark_buffer_dirty() may be called later in that state,
resulting in the bug mentioned above.

Fix this issue by making nilfs_grab_buffer() always set the block device
of the super block structure to the buffer head, regardless of the state
of the buffer's uptodate flag.",Linux,Linux,"5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f, 5305cb830834549b9203ad4d009ad5483c5e293f"
1415,Vulnérabilité dans le greffon Splunk Supporting pour Active Directory ,Avis,2025-01-16,CVE-2025-0367,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0042/,n/a,n/a,n/a,n/a
1237,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-45331,6.9,n/a,Escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A incorrect privilege assignment in Fortinet FortiAnalyzer versions 7.4.0 through 7.4.3, 7.2.0 through 7.2.5, 7.0.0 through 7.0.13, 6.4.0 through 6.4.15, FortiManager versions 7.4.0 through 7.4.2, 7.2.0 through 7.2.5, 7.0.0 through 7.0.13, 6.4.0 through 6.4.15, FortiAnalyzer Cloud versions 7.4.1 through 7.4.2, 7.2.1 through 7.2.6, 7.0.1 through 7.0.13, 6.4.1 through 6.4.7 allows attacker to escalate privilege via specific shell commands",Fortinet,FortiAnalyzer,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1243,Multiples vulnérabilités dans HPE Aruba Networking AOS ,Avis,2025-01-15,CVE-2025-23051,7.2,Élevée,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0032/,An authenticated parameter injection vulnerability exists in the web-based management interface of the AOS-8 and AOS-10 Operating Systems. Successful exploitation could allow an authenticated user to leverage parameter injection to overwrite arbitrary system files.,Hewlett Packard Enterprise (HPE),HPE Aruba Networking AOS,"10.4.0.0, 8.12.0.0, 8.10.0.0"
1238,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-50563,6.7,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A weak authentication in Fortinet FortiManager Cloud, FortiAnalyzer versions 7.6.0 through 7.6.1, 7.4.1 through 7.4.3, FortiAnalyzer Cloud versions 7.4.1 through 7.4.3, FortiManager versions 7.6.0 through 7.6.1, 7.4.1 through 7.4.3, FortiManager Cloud versions 7.4.1 through 7.4.3 allows attacker to execute unauthorized code or commands via a brute-force attack.",Fortinet,FortiAnalyzer,"7.6.0, 7.4.1"
1236,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-33502,6.4,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper limitation of a pathname to a restricted directory ('path traversal') in Fortinet FortiManager, FortiAnalyzer versions 7.4.0 through 7.4.2 and 7.2.0 through 7.2.5 and 7.0.0 through 7.0.12 and 6.4.0 through 6.4.14 and 6.2.0 through 6.2.12 and 6.0.0 through 6.0.12 allows attacker to execute unauthorized code or commands via crafted HTTP or HTTPs requests.",Fortinet,FortiManager,"7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.2.0, 6.0.0"
1239,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-36506,3.5,n/a,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper verification of source of a communication channel vulnerability [CWE-940] in FortiClientEMS 7.4.0, 7.2.0 through 7.2.4, 7.0 all versions, 6.4 all versions may allow a remote attacker to bypass the trusted host feature via session connection.",Fortinet,FortiClientEMS,"7.4.0, 7.2.0, 7.0.0, 6.4.7, 6.4.0"
1241,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46670,7.5,Élevée,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An Out-of-bounds Read vulnerability [CWE-125] in FortiOS version 7.6.0, version 7.4.4 and below, version 7.2.9 and below and FortiSASE FortiOS tenant version 24.3.b IPsec IKE service may allow an unauthenticated remote attacker to trigger memory consumption leading to Denial of Service via crafted requests.",Fortinet,FortiOS,"7.6.0, 7.4.0, 7.2.0"
1242,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-47572,8.3,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper neutralization of formula elements in a csv file in Fortinet FortiSOAR 7.2.1 through 7.4.1 allows attacker to execute unauthorized code or commands via manipulating csv file,Fortinet,FortiSOAR,"7.4.0, 7.3.0, 7.2.1"
1249,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21361,7.8,Élevée,CWE-641: Improper Restriction of Names for Files and Other Resources,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Outlook Remote Code Execution Vulnerability,Microsoft,Microsoft Office LTSC for Mac 2021,16.0.1
1244,Multiples vulnérabilités dans HPE Aruba Networking AOS ,Avis,2025-01-15,CVE-2025-23052,7.2,Élevée,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0032/,Authenticated command injection vulnerability in the command line interface of a network management service. Successful exploitation of this vulnerability could allow an attacker to execute arbitrary commands as a privileged user on the underlying operating system.,Hewlett Packard Enterprise (HPE),HPE Aruba Networking AOS,"10.4.0.0, 8.12.0.0, 8.10.0.0"
1245,Multiples vulnérabilités dans les produits Moxa ,Avis,2025-01-15,CVE-2025-0193,n/a,n/a,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0036/,"A stored Cross-site Scripting (XSS) vulnerability exists in the MGate 5121/5122/5123 Series firmware version v1.0 because of insufficient sanitization and encoding of user input in the ""Login Message"" functionality. An authenticated attacker with administrative access can exploit this vulnerability to inject malicious scripts that are continuously stored on the device. These scripts are executed when other users access the login page, potentially resulting in unauthorized actions or other impacts, depending on the user's privileges.",Moxa,MGate 5121 Series,1.0
1246,Multiples vulnérabilités dans les produits Moxa ,Avis,2025-01-15,CVE-2024-12297,n/a,n/a,CWE-656: Reliance on Security Through Obscurity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0036/,"Moxa’s Ethernet switch EDS-508A Series, running firmware version 3.11 and earlier, is vulnerable to an authentication bypass because of flaws in its authorization mechanism. Although both client-side and back-end server verification are involved in the process, attackers can exploit weaknesses in its implementation. These vulnerabilities may enable brute-force attacks to guess valid credentials or MD5 collision attacks to forge authentication hashes, potentially compromising the security of the device.",Moxa,EDS-508A Series,1.0
1247,Vulnérabilité dans Microsoft Edge ,Avis,2025-01-15,CVE-2025-0291,n/a,n/a,Type Confusion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0037/,Type Confusion in V8 in Google Chrome prior to 131.0.6778.264 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.264
1248,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21395,7.8,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Access Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1234,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-48886,8,Élevée,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A weak authentication in Fortinet FortiOS versions 7.4.0 through 7.4.4, 7.2.0 through 7.2.8, 7.0.0 through 7.0.15, 6.4.0 through 6.4.15, FortiProxy versions 7.4.0 through 7.4.4, 7.2.0 through 7.2.10, 7.0.0 through 7.0.17, 2.0.0 through 2.0.14, FortiManager versions 7.6.0 through 7.6.1, 7.4.1 through 7.4.3, FortiManager Cloud versions 7.4.1 through 7.4.3, FortiAnalyzer Cloud versions 7.4.1 through 7.4.3 allows attacker to execute unauthorized code or commands via a brute-force attack.",Fortinet,FortiOS,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1235,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-50564,3.2,n/a,Information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A use of hard-coded cryptographic key in Fortinet FortiClientWindows version 7.4.0, 7.2.x all versions, 7.0.x all versions, and 6.4.x all versions may allow a low-privileged user to decrypt interprocess communication via monitoring named piped.",Fortinet,FortiClientWindows,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1221,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-37936,9.6,Critique,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,A use of hard-coded cryptographic key in Fortinet FortiSwitch version 7.4.0 and 7.2.0 through 7.2.5 and 7.0.0 through 7.0.7 and 6.4.0 through 6.4.13 and 6.2.0 through 6.2.7 and 6.0.0 through 6.0.7 allows attacker to execute unauthorized code or commands via crafted requests.,Fortinet,FortiSwitch,"7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.2.0, 6.0.0"
1233,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-4863,n/a,n/a,Heap buffer overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,Heap buffer overflow in libwebp in Google Chrome prior to 116.0.5845.187 and libwebp 1.3.2 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: Critical),Google,Chrome,116.0.5845.187
1232,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-35277,8.4,n/a,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A missing authentication for critical function in Fortinet FortiPortal version 6.0.0 through 6.0.15, FortiManager version 7.4.0 through 7.4.2, 7.2.0 through 7.2.5, 7.0.0 through 7.0.12, 6.4.0 through 6.4.14 allows attacker to access to the configuration of the managed devices by sending specifically crafted packets",Fortinet,FortiManager,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1231,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-36504,6.2,n/a,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An out-of-bounds read vulnerability [CWE-125] in FortiOS SSLVPN web portal versions 7.4.0 through 7.4.4, versions 7.2.0 through 7.2.8, 7.0 all verisons, and 6.4 all versions may allow an authenticated attacker to perform a denial of service on the SSLVPN web portal via a specially crafted URL.",Fortinet,FortiOS,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1230,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-42785,6.4,n/a,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A null pointer dereference in FortiOS versions 7.4.0 through 7.4.1, 7.2.0 through 7.2.5, 7.0 all versions, 6.4 all versions , 6.2 all versions and 6.0 all versions allows attacker to trigger a denial of service via a crafted http request.",Fortinet,FortiOS,"7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.2.0, 6.0.0"
1229,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-5217,n/a,n/a,Heap buffer overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,Heap buffer overflow in vp8 encoding in libvpx in Google Chrome prior to 117.0.5938.132 and libvpx 1.13.1 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,117.0.5938.132
1228,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46669,3.2,n/a,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An Integer Overflow or Wraparound vulnerability [CWE-190] in version 7.4.4 and below, version 7.2.10 and below; FortiSASE version 23.4.b FortiOS tenant IPsec IKE service may allow an authenticated attacker to crash the IPsec tunnel via crafted requests, resulting in potential denial of service.",Fortinet,FortiOS,"7.4.0, 7.2.0"
1227,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-54021,6.4,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper neutralization of crlf sequences in http headers ('http response splitting') in Fortinet FortiOS 7.2.0 through 7.6.0, FortiProxy 7.2.0 through 7.4.5 allows attacker to execute unauthorized code or commands via crafted HTTP header.",Fortinet,FortiOS,"7.6.0, 7.4.0, 7.2.0"
1226,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-23106,7.7,Élevée,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper restriction of excessive authentication attempts [CWE-307] in FortiClientEMS version 7.2.0 through 7.2.4 and before 7.0.10 allows an unauthenticated attacker to try a brute force attack against the FortiClientEMS console via crafted HTTP or HTTPS requests.,Fortinet,FortiClientEMS,"7.2.0, 7.0.0, 6.4.7, 6.4.0, 6.2.6, 6.2.0"
1225,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46664,5.2,Moyenne,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,A relative path traversal in Fortinet FortiRecorder [CWE-23] version 7.2.0 through 7.2.1 and before 7.0.4 allows a privileged attacker to read files from the underlying filesystem via crafted HTTP or HTTPs requests.,Fortinet,FortiRecorder,"7.2.0, 7.0.0, 6.4.0"
1224,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-26012,6.3,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper neutralization of special elements used in an os command ('os command injection') in Fortinet FortiAP-S 6.2 all verisons, and 6.4.0 through 6.4.9, FortiAP-W2 6.4 all versions, 7.0 all versions, 7.2.0 through 7.2.3, and 7.4.0 through 7.4.2, FortiAP 6.4 all versions, 7.0 all versions, 7.2.0 through 7.2.3, and 7.4.0 through 7.4.2 allow a local authenticated attacker to execute unauthorized code via the CLI.",Fortinet,FortiAP-S,"6.4.0, 6.2.0"
1223,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-35278,4.1,Moyenne,Information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiPortal versions 7.2.4 through 7.2.0 and 7.0.0 through 7.2.8 may allow an authenticated attacker to view the SQL query being run server-side when submitting an HTTP request, via including special elements in said request.",Fortinet,FortiPortal,"7.2.0, 7.0.0"
1222,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46668,7.1,Élevée,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An allocation of resources without limits or throttling vulnerability [CWE-770] in FortiOS versions 7.4.0 through 7.4.4, versions 7.2.0 through 7.2.8, versions 7.0.0 through 7.0.15, and versions 6.4.0 through 6.4.15 may allow an unauthenticated remote user to consume all system memory via multiple large file uploads.",Fortinet,FortiOS,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1220,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-52967,3.3,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper neutralization of script-related html tags in a web page (basic xss) in Fortinet FortiPortal 6.0.0 through 6.0.14 allows attacker to execute unauthorized code or commands via html injection.,Fortinet,FortiPortal,6.0.0
1219,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-21758,6.1,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A stack-based buffer overflow in Fortinet FortiWeb versions 7.2.0 through 7.2.7, and 7.4.0 through 7.4.1 may allow a privileged user to execute arbitrary code via specially crafted CLI commands, provided the user is able to evade FortiWeb stack protections.",Fortinet,FortiWeb,"7.4.0, 7.2.0"
1251,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21186,7.8,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Access Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1250,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21357,6.7,n/a,CWE-908: Use of Uninitialized Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Outlook Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1280,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21251,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1252,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21346,7.1,Élevée,CWE-693: Protection Mechanism Failure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Office Security Feature Bypass Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1253,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21362,8.4,n/a,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Excel Remote Code Execution Vulnerability,Microsoft,Office Online Server,1.0.0
1282,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21323,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows Server 2022,10.0.20348.0
1217,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46665,3.5,n/a,Information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An insertion of sensitive information into sent data vulnerability [CWE-201] in FortiOS 7.6.0, 7.4.0 through 7.4.4 may allow an attacker in a man-in-the-middle position to retrieve the RADIUS accounting server shared secret via intercepting accounting-requests.",Fortinet,FortiOS,"7.6.0, 7.4.0"
1281,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21372,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Brokering File System Elevation of Privilege Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1279,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21218,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kerberos Denial of Service Vulnerability,Microsoft,Windows Server 2019,10.0.17763.0
1278,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21210,4.2,Moyenne,CWE-636: Not Failing Securely ('Failing Open'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows BitLocker Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1277,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21326,7.8,Élevée,CWE-843: Access of Resource Using Incompatible Type ('Type Confusion'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Internet Explorer Remote Code Execution Vulnerability,Microsoft,Windows Server 2025,10.0.26100.0
1276,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21303,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1275,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21278,6.2,n/a,CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Remote Desktop Gateway (RD Gateway) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1274,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21248,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1273,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21331,7.3,Élevée,CWE-59: Improper Link Resolution Before File Access ('Link Following'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Installer Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1272,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21321,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows Server 2025,10.0.26100.0
1271,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21223,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1270,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21296,7.5,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,BranchCache Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1269,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21334,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Hyper-V NT Kernel Integration VSP Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 21H2,10.0.19043.0
1268,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21413,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1267,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21285,7.5,Élevée,CWE-476: NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1266,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21242,5.9,Moyenne,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kerberos Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1265,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21231,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,IP Helper Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1264,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21245,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1263,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21220,7.5,Élevée,CWE-908: Use of Uninitialized Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1262,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21356,7.8,Élevée,CWE-843: Access of Resource Using Incompatible Type ('Type Confusion'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Office Visio Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1261,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21366,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Access Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1260,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21365,7.8,Élevée,CWE-426: Untrusted Search Path,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Office Remote Code Execution Vulnerability,Microsoft,Microsoft 365 Apps for Enterprise,16.0.1
1259,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21345,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Office Visio Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1258,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21402,7.8,Élevée,CWE-641: Improper Restriction of Names for Files and Other Resources,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Office OneNote Remote Code Execution Vulnerability,Microsoft,Microsoft Office LTSC for Mac 2021,16.0.1
1257,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21364,7.8,Élevée,CWE-502: Deserialization of Untrusted Data,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Excel Security Feature Bypass Vulnerability,Microsoft,Microsoft 365 Apps for Enterprise,16.0.1
1256,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21363,7.8,Élevée,CWE-822: Untrusted Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Word Remote Code Execution Vulnerability,Microsoft,Microsoft 365 Apps for Enterprise,16.0.1
1255,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21354,8.4,n/a,CWE-822: Untrusted Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,Microsoft Excel Remote Code Execution Vulnerability,Microsoft,Office Online Server,1.0.0
1254,Multiples vulnérabilités dans Microsoft Office ,Avis,2025-01-15,CVE-2025-21338,7.8,Élevée,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0038/,GDI+ Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1218,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-48890,6.3,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper neutralization of special elements used in an OS command ('OS Command Injection') vulnerability [CWE-78] in FortiSOAR IMAP connector version 3.5.7 and below may allow an authenticated attacker to execute unauthorized code or commands via a specifically crafted playbook,Fortinet,FortiSOAR,7.5.0
1240,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46667,6.9,n/a,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A allocation of resources without limits or throttling in Fortinet FortiSIEM 5.3 all versions, 5.4 all versions, 6.x all versions, 7.0 all versions, and 7.1.0 through 7.1.5 may allow an attacker to deny valid TLS traffic via consuming all allotted connections.",Fortinet,FortiSIEM,"7.1.0, 7.0.0, 6.7.0, 6.6.0, 6.5.0, 6.4.0, 6.3.0, 6.2.0, 6.1.0, 5.4.0, 5.3.0"
1216,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-56497,6.5,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper neutralization of special elements used in an os command ('os command injection') in Fortinet FortiMail versions 7.2.0 through 7.2.4 and 7.0.0 through 7.0.6 and 6.4.0 through 6.4.7, FortiRecorder versions 7.0.0 and 6.4.0 through 6.4.4 allows attacker to execute unauthorized code or commands via the CLI.",Fortinet,FortiMail,"7.2.0, 7.0.0, 6.4.0"
1167,Multiples vulnérabilités dans les produits Schneider Electric ,Avis,2025-01-15,CVE-2024-11139,n/a,n/a,CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0034/,"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer vulnerability exists that
could allow local attackers to exploit these issues to potentially execute arbitrary code when opening a
malicious project file.",Schneider Electric,EcoStruxure™ Power Build Rapsody,"Version v2.5.2 NL and prior, Version v2.7.1 FR and prior, Version v2.7.5 ES and prior, Version v2.5.4 INT and prior"
1181,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13162,7.2,Élevée,CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,SQL injection in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote authenticated attacker with admin privileges to achieve remote code execution. This CVE addresses incomplete fixes from CVE-2024-32848.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1180,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13167,7.5,Élevée,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An out-of-bounds write in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to cause a denial of service.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1179,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13172,7.8,Élevée,CWE-347 Improper Verification of Cryptographic Signature,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Improper signature verification in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to achieve remote code execution. Local user interaction is required.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1178,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13160,9.8,Critique,CWE-36 Absolute Path Traversal,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Absolute path traversal in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to leak sensitive information.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1177,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13164,7.8,Élevée,CWE-908 Use of Uninitialized Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An uninitialized resource in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a local authenticated attacker to escalate their privileges.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1176,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-32848,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,"An unspecified SQL injection in Ivanti EPM before 2022 SU6, or the 2024 September update allows a remote authenticated attacker with admin privileges to achieve remote code execution.",Ivanti,EPM,"2024 September Security Update, 2022 SU6"
1175,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13165,7.5,Élevée,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An out-of-bounds write in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to cause a denial of service.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1174,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13166,7.5,Élevée,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An out-of-bounds write in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to cause a denial of service.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1173,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13171,7.8,Élevée,CWE-434 Unrestricted Upload of File with Dangerous Type,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Insufficient filename validation in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to achieve remote code execution. Local user interaction is required.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1172,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13168,7.5,Élevée,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An out-of-bounds write in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to cause a denial of service.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1171,Multiples vulnérabilités dans les produits Schneider Electric ,Avis,2025-01-15,CVE-2024-12142,n/a,n/a,CWE-200 Exposure of Sensitive Information to an Unauthorized Actor,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0034/,"CWE-200: Exposure of Sensitive Information to an Unauthorized Actor vulnerability exists that could
cause information disclosure of restricted web page, modification of web page and denial of
service when specific web pages are modified and restricted functions are invoked.",Schneider Electric,Modicon M340 processors (part numbers BMXP34*),All versions
1170,Multiples vulnérabilités dans les produits Schneider Electric ,Avis,2025-01-15,CVE-2024-2658,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0034/,n/a,n/a,n/a,n/a
1169,Multiples vulnérabilités dans les produits Schneider Electric ,Avis,2025-01-15,CVE-2024-11425,n/a,n/a,CWE-131 Incorrect Calculation of Buffer Size,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0034/,"CWE-131: Incorrect Calculation of Buffer Size vulnerability exists that could cause Denial-of-Service of the
product when an unauthenticated user is sending a crafted HTTPS packet to the webserver.",Schneider Electric,"Modicon M580 CPU (part numbers BMEP* and BMEH*, excluding M580 CPU Safety)",Versions prior to SV4.30
1168,Multiples vulnérabilités dans les produits Schneider Electric ,Avis,2025-01-15,CVE-2021-29999,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0034/,An issue was discovered in Wind River VxWorks through 6.8. There is a possible stack overflow in dhcp server.,n/a,n/a,n/a
1166,Multiples vulnérabilités dans les produits Schneider Electric ,Avis,2025-01-15,CVE-2024-12399,n/a,n/a,CWE-924 Improper Enforcement of Message Integrity During Transmission in a Communication Channel,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0034/,"CWE-924: Improper Enforcement of Message Integrity During Transmission in a Communication Channel vulnerability
exists that could cause partial loss of confidentiality, loss of integrity and availability of the HMI when attacker performs
man in the middle attack by intercepting the communication.",Schneider Electric,Pro-face GP-Pro EX,All versions
1215,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-36510,4.9,Moyenne,Information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An observable response discrepancy vulnerability [CWE-204] in FortiClientEMS 7.4.0, 7.2.0 through 7.2.4, 7.0 all versions, and FortiSOAR 7.5.0, 7.4.0 through 7.4.4, 7.3.0 through 7.3.2, 7.2 all versions, 7.0 all versions, 6.4 all versions may allow an unauthenticated attacker to enumerate valid users via observing login request responses.",Fortinet,FortiClientEMS,"7.2.0, 7.0.0"
1165,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0447,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Navigation in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to perform privilege escalation via a crafted HTML page. (Chromium security severity: Low),Google,Chrome,132.0.6834.83
1164,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0436,n/a,n/a,Integer overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Integer overflow in Skia in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,132.0.6834.83
1163,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0437,n/a,n/a,Out of bounds read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Out of bounds read in Metrics in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,132.0.6834.83
1162,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0438,n/a,n/a,Stack buffer overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Stack buffer overflow in Tracing in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to potentially exploit stack corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,132.0.6834.83
1161,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0441,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Fenced Frames in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to obtain potentially sensitive information from the system via a crafted HTML page. (Chromium security severity: Medium),Google,Chrome,132.0.6834.83
1160,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0442,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Payments in Google Chrome prior to 132.0.6834.83 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium),Google,Chrome,132.0.6834.83
1159,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0435,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Navigation in Google Chrome on Android prior to 132.0.6834.83 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: High),Google,Chrome,132.0.6834.83
1158,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0446,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Extensions in Google Chrome prior to 132.0.6834.83 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform UI spoofing via a crafted Chrome Extension. (Chromium security severity: Low),Google,Chrome,132.0.6834.83
1157,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0443,n/a,n/a,Insufficient data validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Insufficient data validation in Extensions in Google Chrome prior to 132.0.6834.83 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform privilege escalation via a crafted HTML page. (Chromium security severity: Medium),Google,Chrome,132.0.6834.83
1156,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0439,n/a,n/a,Race,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Race in Frames in Google Chrome prior to 132.0.6834.83 allowed a remote attacker who convinced a user to engage in specific UI gestures to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium),Google,Chrome,132.0.6834.83
1155,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0434,n/a,n/a,Out of bounds memory access,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Out of bounds memory access in V8 in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,132.0.6834.83
1154,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0440,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Fullscreen in Google Chrome on Windows prior to 132.0.6834.83 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Medium),Google,Chrome,132.0.6834.83
1153,Multiples vulnérabilités dans Google Chrome ,Avis,2025-01-15,CVE-2025-0448,n/a,n/a,Inappropriate implementation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0033/,Inappropriate implementation in Compositing in Google Chrome prior to 132.0.6834.83 allowed a remote attacker to perform UI spoofing via a crafted HTML page. (Chromium security severity: Low),Google,Chrome,132.0.6834.83
1284,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21317,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows Server 2022,10.0.20348.0
1182,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13161,9.8,Critique,CWE-36 Absolute Path Traversal,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Absolute path traversal in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to leak sensitive information.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1183,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13170,7.5,Élevée,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An out-of-bounds write in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to cause a denial of service.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1184,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13158,7.2,Élevée,CWE-426 Untrusted Search Path,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An unbounded resource search path in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote authenticated attacker with admin privileges to achieve remote code execution.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1185,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13169,7.8,Élevée,CWE-125 Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,An out-of-bounds read in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a local authenticated attacker to escalate their privileges.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1214,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-46715,4.7,Moyenne,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An origin validation error [CWE-346] vulnerability in Fortinet FortiOS  IPSec VPN version 7.4.0 through 7.4.1 and version 7.2.6 and below allows an authenticated IPSec VPN user with dynamic IP addressing to send (but not receive) packets spoofing the IP of another user via crafted network packets.,Fortinet,FortiProxy,"7.4.0, 7.2.0, 7.0.0"
1213,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-36512,7,Élevée,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper limitation of a pathname to a restricted directory ('path traversal') in Fortinet FortiManager, FortiAnalyzer 7.4.0 through 7.4.3 and 7.2.0 through 7.2.5 and 7.0.2 through 7.0.12 and 6.2.10 through 6.2.13 allows attacker to execute unauthorized code or commands via crafted HTTP or HTTPS requests.",Fortinet,FortiManager,"7.4.0, 7.2.0, 7.0.2, 6.2.10"
1212,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-40587,6.3,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper neutralization of special elements used in an OS command ('OS Command Injection') vulnerability [CWE-78] in Fortinet FortiVoice version 7.0.0 through 7.0.4 and before 6.4.9 allows an authenticated privileged attacker to execute unauthorized code or commands via crafted CLI requests.,Fortinet,FortiVoice,"7.0.0, 6.4.0, 6.0.0"
1211,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-35276,5,Moyenne,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A stack-based buffer overflow in Fortinet FortiAnalyzer versions 7.4.0 through 7.4.3, 7.2.0 through 7.2.5, 7.0.0 through 7.0.12, 6.4.0 through 6.4.14, FortiManager versions 7.4.0 through 7.4.3, 7.2.0 through 7.2.5, 7.0.0 through 7.0.12, 6.4.0 through 6.4.14, FortiManager Cloud versions 7.4.1 through 7.4.3, 7.2.1 through 7.2.5, 7.0.1 through 7.0.11, 6.4.1 through 6.4.7, FortiAnalyzer Cloud versions 7.4.1 through 7.4.3, 7.2.1 through 7.2.5, 7.0.1 through 7.0.11, 6.4.1 through 6.4.7 allows attacker to execute unauthorized code or commands via specially crafted packets.",Fortinet,FortiAnalyzer,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1210,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-52969,3.7,n/a,Information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection') vulnerability [CWE-89] in FortiSIEM ersion 7.1.7 and below, version 7.1.0, version 7.0.3 and below, version 6.7.9 and below, 6.7.8, version 6.6.5 and below, version 6.5.3 and below, version 6.4.4 and below Update/Create Case feature may allow an authenticated attacker to extract database information via crafted requests.",Fortinet,FortiSIEM,"7.1.0, 7.0.0, 6.7.0, 6.6.0, 6.5.0, 6.4.0"
1209,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-47566,4.8,Moyenne,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,A improper limitation of a pathname to a restricted directory ('path traversal') [CWE-23] in Fortinet FortiRecorder version 7.2.0 through 7.2.1 and before 7.0.4 allows a privileged attacker to delete files from the underlying filesystem via crafted CLI requests.,Fortinet,FortiRecorder,"7.2.0, 7.0.0, 6.4.0"
1208,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-48893,6.4,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper neutralization of input during web page generation vulnerability [CWE-79] in FortiSOAR 7.3.0 through 7.3.3, 7.2.1 through 7.2.2 may allow an authenticated attacker to perform a stored cross site scripting (XSS) attack via the creation of malicious playbook.",Fortinet,FortiSOAR,"7.3.0, 7.2.1"
1207,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-27778,8.3,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An improper neutralization of special elements used in an OS Command vulnerability [CWE-78] in Fortinet FortiSandbox version 4.4.0 through 4.4.4, 4.2.0 through 4.2.6 and below 4.0.4 allows an authenticated attacker with at least read-only permission to execute unauthorized commands via crafted requests.",Fortinet,FortiSandbox,"4.4.0, 4.2.0, 4.0.0, 3.2.0, 3.1.0, 3.0.5"
1206,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46662,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,n/a,n/a,n/a,n/a
1205,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-48885,5.2,Moyenne,Escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper limitation of a pathname to a restricted directory ('path traversal') in Fortinet FortiRecorder versions 7.2.0 through 7.2.1, 7.0.0 through 7.0.4, FortiWeb versions 7.6.0, 7.4.0 through 7.4.4, 7.2.0 through 7.2.10, 7.0.0 through 7.0.10, 6.4.0 through 6.4.3, FortiVoice versions 7.0.0 through 7.0.4, 6.4.0 through 6.4.9, 6.0.0 through 6.0.12 allows attacker to escalate privilege via specially crafted packets.",Fortinet,FortiRecorder,"7.2.0, 7.0.0"
1204,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-55593,2.6,Faible,Information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiWeb versions 6.3.17 through 7.6.1 allows attacker to gain information disclosure via crafted SQL queries,Fortinet,FortiWeb,"7.6.0, 7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.3.6"
1203,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-33503,6.7,n/a,Escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper privilege management in Fortinet FortiManager version 7.4.0 through 7.4.3, 7.2.0 through 7.2.5, 7.0.0 through 7.0.12, 6.4.0 through 6.4.14, FortiAnalyzer version 7.4.0 through 7.4.2, 7.2.0 through 7.2.5, 7.0.0 through 7.0.12, 6.4.0 through 6.4.14 allows attacker to escalation of privilege via specific shell commands",Fortinet,FortiManager,"7.4.0, 7.2.0, 7.0.0, 6.4.0"
1202,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-37937,7.6,Élevée,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper neutralization of special elements used in an os command ('os command injection') in Fortinet FortiSwitch version 7.4.0 and 7.2.0 through 7.2.5 and 7.0.0 through 7.0.7 and 6.4.0 through 6.4.13 and 6.2.0 through 6.2.7 and 6.0.0 through 6.0.7 allows attacker to execute unauthorized code or commands via the FortiSwitch CLI.,Fortinet,FortiSwitch,"7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.2.0, 6.0.0"
1201,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-52963,3.5,n/a,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A out-of-bounds write in Fortinet FortiOS versions 7.6.0, 7.4.0 through 7.4.6, 7.2.0 through 7.2.10, 7.0.0 through 7.0.16, 6.4.0 through 6.4.15 allows attacker to trigger a denial of service via specially crafted packets.",Fortinet,FortiProxy,"7.4.0, 7.2.0, 7.0.0, 2.0.0"
1200,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-47573,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,n/a,n/a,n/a,n/a
1199,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-35275,6.5,n/a,Escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper neutralization of special elements used in an sql command ('sql injection') in Fortinet FortiAnalyzer version 7.4.0 through 7.4.2, FortiManager version 7.4.0 through 7.4.2 allows attacker to escalation of privilege via specially crafted http requests.",Fortinet,FortiManager,7.4.0
1198,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-47571,7.9,Élevée,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An operation on a resource after expiration or release in Fortinet FortiManager 6.4.12 through 7.4.0 allows an attacker to gain improper access to FortiGate via valid credentials.,Fortinet,FortiManager,"7.4.0, 7.2.3, 7.0.7, 6.4.12"
1197,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2022-23439,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,n/a,n/a,n/a,n/a
1196,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-46666,4.8,Moyenne,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An allocation of resources without limits or throttling [CWE-770] vulnerability in FortiOS versions 7.6.0, versions 7.4.4 through 7.4.0, 7.2 all versions, 7.0 all versions, 6.4 all versions may allow a remote unauthenticated attacker to prevent access to the GUI via specially crafted requests directed at specific endpoints.",Fortinet,FortiOS,"7.6.0, 7.4.0, 7.2.0, 7.0.0, 6.4.0"
1195,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-48884,7.1,Élevée,Escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper limitation of a pathname to a restricted directory ('path traversal') in Fortinet FortiManager versions 7.6.0 through 7.6.1, 7.4.1 through 7.4.3, FortiOS versions 7.6.0, 7.4.0 through 7.4.4, 7.2.5 through 7.2.9, 7.0.0 through 7.0.15, 6.4.0 through 6.4.15, FortiProxy 7.4.0 through 7.4.5, 7.2.0 through 7.2.11, 7.0.0 through 7.0.18, 2.0.0 through 2.0.14, 1.2.0 through 1.2.13, 1.1.0 through 1.1.6, 1.0.0 through 1.0.7, FortiManager Cloud versions 7.4.1 through 7.4.3 allows attacker to trigger an escalation of privilege via specially crafted packets.",Fortinet,FortiManager,"7.6.0, 7.4.1"
1194,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-35273,7,Élevée,Escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A out-of-bounds write in Fortinet FortiManager version 7.4.0 through 7.4.2, FortiAnalyzer version 7.4.0 through 7.4.2 allows attacker to escalation of privilege via specially crafted http requests.",Fortinet,FortiAnalyzer,7.4.0
1193,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-35280,5.1,Moyenne,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A improper neutralization of input during web page generation ('cross-site scripting') in Fortinet FortiDeceptor 3.x all versions, 4.x all versions, 5.0 all versions, 5.1 all versions, version 5.2.0, and version 5.3.0 may allow an attacker to perform a reflected cross-site scripting attack in the recovery endpoints",Fortinet,FortiDeceptor,"5.3.0, 5.2.0, 5.1.0, 5.0.0, 4.3.0, 4.2.0, 4.1.0, 4.0.0, 3.3.0, 3.2.0, 3.1.0, 3.0.0"
1192,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-42786,6.4,n/a,Denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"A null pointer dereference in FortiOS versions 7.4.0 through 7.4.1, 7.2.0 through 7.2.5, 7.0 all versions, 6.4 all versions , 6.2 all versions and 6.0 all versions allows attacker to trigger a denial of service via a crafted http request.",Fortinet,FortiOS,"7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.2.0, 6.0.0"
1191,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-32115,5.2,Moyenne,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,A relative path traversal vulnerability [CWE-23] in Fortinet FortiManager  version 7.4.0 through 7.4.2 and before 7.2.5 allows a privileged attacker to delete files from the underlying filesystem via crafted HTTP or HTTPs requests.,Fortinet,FortiManager,"7.4.0, 7.2.0, 7.0.0"
1190,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2023-37931,8.6,n/a,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,An improper neutralization of special elements used in an sql command ('sql injection') vulnerability [CWE-88] in FortiVoice Entreprise version 7.0.0 through 7.0.1 and before 6.4.8 allows an authenticated attacker to perform a blind sql injection attack via sending crafted HTTP or HTTPS requests,Fortinet,FortiVoice,"7.0.0, 6.4.0, 6.0.0"
1189,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-15,CVE-2024-45326,3.9,n/a,Improper access control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0031/,"An Improper Access Control vulnerability [CWE-284] in FortiDeceptor version 6.0.0, version 5.3.3 and below, version 5.2.1 and below, version 5.1.0, version 5.0.0 may allow an authenticated attacker with none privileges to perform operations on the central management appliance via crafted requests.",Fortinet,FortiDeceptor,"6.0.0, 5.3.0, 5.2.0, 5.1.0, 5.0.0"
1188,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13159,9.8,Critique,CWE-36 Absolute Path Traversal,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Absolute path traversal in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to leak sensitive information.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1187,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-10811,9.8,Critique,CWE-36 Absolute Path Traversal,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Absolute path traversal in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to leak sensitive information.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1186,Multiples vulnérabilités dans Ivanti Endpoint Manager  ,Avis,2025-01-15,CVE-2024-13163,7.8,Élevée,CWE-502 Deserialization of Untrusted Data,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0035/,Deserialization of untrusted data in Ivanti EPM before the 2024 January-2025 Security Update and 2022 SU6 January-2025 Security Update allows a remote unauthenticated attacker to achieve remote code execution. Local user interaction is required.,Ivanti,Endpoint Manager,"2024 January-2025 Security Update, 2022 SU6 January-2025 Security Update"
1283,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21240,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1395,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21241,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1285,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21318,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1382,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21233,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1380,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21328,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,MapUrlToZone Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1379,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21237,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1378,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21217,6.5,n/a,CWE-693: Protection Mechanism Failure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows NTLM Spoofing Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1377,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21294,8.1,n/a,CWE-591: Sensitive Data Storage in Improperly Locked Memory,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Digest Authentication Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1376,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21282,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1375,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21382,7.8,Élevée,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Graphics Component Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1374,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21269,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows HTML Platforms Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1373,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21252,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1372,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21409,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1371,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21219,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,MapUrlToZone Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1370,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21193,6.5,n/a,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Active Directory Federation Server Spoofing Vulnerability,Microsoft,Windows Server 2019,10.0.17763.0
1369,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21246,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1368,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21288,6.5,n/a,CWE-908: Use of Uninitialized Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows COM Server Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1367,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21272,6.5,n/a,CWE-908: Use of Uninitialized Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows COM Server Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1366,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21289,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1365,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21207,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Connected Devices Platform Service (Cdpsvc) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1364,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21314,6.5,n/a,CWE-451: User Interface (UI) Misrepresentation of Critical Information,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows SmartScreen Spoofing Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1363,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21302,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1362,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21335,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Hyper-V NT Kernel Integration VSP Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 21H2,10.0.19043.0
1361,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21329,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,MapUrlToZone Security Feature Bypass Vulnerability,Microsoft,Windows Server 2025,10.0.26100.0
1360,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21343,7.5,Élevée,CWE-269: Improper Privilege Management,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Web Threat Defense User Service Information Disclosure Vulnerability,Microsoft,Windows 11 version 22H2,10.0.22621.0
1359,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21313,6.5,n/a,CWE-833: Deadlock,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Security Account Manager (SAM) Denial of Service Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1358,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21338,7.8,Élevée,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,GDI+ Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1286,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21176,8.8,n/a,CWE-126: Buffer Over-read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,".NET, .NET Framework, and Visual Studio Remote Code Execution Vulnerability",Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1356,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21306,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1355,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21229,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1354,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21284,5.5,Moyenne,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Virtual Trusted Platform Module Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1353,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21238,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1352,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21281,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft COM for Windows Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1381,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21305,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1383,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21286,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1350,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21411,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1384,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21261,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1414,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21172,7.5,Élevée,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,.NET and Visual Studio Remote Code Execution Vulnerability,Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1413,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21344,7.8,Élevée,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Microsoft SharePoint Server Remote Code Execution Vulnerability,Microsoft,Microsoft SharePoint Enterprise Server 2016,16.0.0
1412,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21405,7.3,Élevée,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Visual Studio Elevation of Privilege Vulnerability,Microsoft,Microsoft Visual Studio 2022 version 17.12,17.0
1411,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21187,7.8,Élevée,CWE-94: Improper Control of Generation of Code ('Code Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Microsoft Power Automate Remote Code Execution Vulnerability,Microsoft,Power Automate for Desktop,1.0.0.0
1410,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21173,7.3,Élevée,CWE-379: Creation of Temporary File in Directory with Insecure Permissions,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,.NET Elevation of Privilege Vulnerability,Microsoft,.NET 8.0,8.0.0
1409,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21348,7.2,Élevée,CWE-285: Improper Authorization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Microsoft SharePoint Server Remote Code Execution Vulnerability,Microsoft,Microsoft SharePoint Enterprise Server 2016,16.0.0
1408,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21360,7.8,Élevée,CWE-269: Improper Privilege Management,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Microsoft AutoUpdate (MAU) Elevation of Privilege Vulnerability,Microsoft,Microsoft AutoUpdate for Mac,0
1407,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21171,7.5,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,.NET Remote Code Execution Vulnerability,Microsoft,.NET 9.0,9.0.0
1406,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2024-50338,7.4,Élevée,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,"Git Credential Manager (GCM) is a secure Git credential helper built on .NET that runs on Windows, macOS, and Linux. The Git credential protocol is text-based over standard input/output, and consists of a series of lines of key-value pairs in the format `key=value`. Git's documentation restricts the use of the NUL (`\0`) character and newlines to form part of the keys or values. When Git reads from standard input, it considers both LF and CRLF as newline characters for the credential protocol by virtue of calling `strbuf_getline` that calls to `strbuf_getdelim_strip_crlf`. Git also validates that a newline is not present in the value by checking for the presence of the line-feed character (LF, `\n`), and errors if this is the case. This captures both LF and CRLF-type newlines. Git Credential Manager uses the .NET standard library `StreamReader` class to read the standard input stream line-by-line and parse the `key=value` credential protocol format. The implementation of the `ReadLineAsync` method considers LF, CRLF, and CR as valid line endings. This is means that .NET considers a single CR as a valid newline character, whereas Git does not. This mismatch of newline treatment between Git and GCM means that an attacker can craft a malicious remote URL. When a user clones or otherwise interacts with a malicious repository that requires authentication, the attacker can capture credentials for another Git remote. The attack is also heightened when cloning from repositories with submodules when using the `--recursive` clone option as the user is not able to inspect the submodule remote URLs beforehand. This issue has been patched in version 2.6.1 and all users are advised to upgrade. Users unable to upgrade should only interact with trusted remote repositories, and not clone with `--recursive` to allow inspection of any submodule URLs before cloning those submodules.",git-ecosystem,git-credential-manager,< 2.6.1
1405,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21403,6.4,n/a,CWE-863: Incorrect Authorization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,On-Premises Data Gateway Information Disclosure Vulnerability,Microsoft,On-Premises Data Gateway,1.0.0
1404,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21178,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Visual Studio Remote Code Execution Vulnerability,Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1403,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21176,8.8,n/a,CWE-126: Buffer Over-read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,".NET, .NET Framework, and Visual Studio Remote Code Execution Vulnerability",Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1402,Multiples vulnérabilités dans les produits Microsoft ,Avis,2025-01-15,CVE-2025-21393,6.3,n/a,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0041/,Microsoft SharePoint Server Spoofing Vulnerability,Microsoft,Microsoft SharePoint Enterprise Server 2016,16.0.0
1401,Multiples vulnérabilités dans Microsoft .Net ,Avis,2025-01-15,CVE-2025-21172,7.5,Élevée,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0040/,.NET and Visual Studio Remote Code Execution Vulnerability,Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1400,Multiples vulnérabilités dans Microsoft .Net ,Avis,2025-01-15,CVE-2025-21173,7.3,Élevée,CWE-379: Creation of Temporary File in Directory with Insecure Permissions,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0040/,.NET Elevation of Privilege Vulnerability,Microsoft,.NET 8.0,8.0.0
1399,Multiples vulnérabilités dans Microsoft .Net ,Avis,2025-01-15,CVE-2025-21171,7.5,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0040/,.NET Remote Code Execution Vulnerability,Microsoft,.NET 9.0,9.0.0
1398,Multiples vulnérabilités dans Microsoft .Net ,Avis,2025-01-15,CVE-2025-21176,8.8,n/a,CWE-126: Buffer Over-read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0040/,".NET, .NET Framework, and Visual Studio Remote Code Execution Vulnerability",Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1397,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21308,6.5,n/a,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Themes Spoofing Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1396,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21312,2.4,Faible,CWE-908: Use of Uninitialized Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Smart Card Reader Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1394,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21341,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1393,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21265,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1392,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21340,5.5,Moyenne,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Virtualization-Based Security (VBS) Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1391,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21230,7.5,Élevée,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1390,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21250,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1389,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21295,8.1,n/a,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,SPNEGO Extended Negotiation (NEGOEX) Security Mechanism Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1388,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21226,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1387,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21172,7.5,Élevée,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,.NET and Visual Studio Remote Code Execution Vulnerability,Microsoft,Microsoft Visual Studio 2017 version 15.9 (includes 15.0 - 15.8),15.9.0
1386,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21232,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1385,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21300,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows upnphost.dll Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1351,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21292,8.8,n/a,CWE-94: Improper Control of Generation of Code ('Code Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Search Service Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1357,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21336,5.6,Moyenne,Information Disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Cryptographic Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1349,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21258,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1317,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21316,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1315,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21271,7.8,Élevée,CWE-126: Buffer Over-read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Cloud Files Mini Filter Driver Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1314,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21228,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1313,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21244,8.8,n/a,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1312,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21225,5.9,Moyenne,CWE-843: Access of Resource Using Incompatible Type ('Type Confusion'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Remote Desktop Gateway (RD Gateway) Denial of Service Vulnerability,Microsoft,Windows Server 2019,10.0.17763.0
1311,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21275,7.8,Élevée,CWE-285: Improper Authorization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows App Package Installer Elevation of Privilege Vulnerability,Microsoft,Windows Server 2022,10.0.20348.0
1348,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21320,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1309,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21171,7.5,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,.NET Remote Code Execution Vulnerability,Microsoft,.NET 9.0,9.0.0
1308,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21417,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1307,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21234,7.8,Élevée,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows PrintWorkflowUserSvc Elevation of Privilege Vulnerability,Microsoft,Windows Server 2022,10.0.20348.0
1306,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21287,7.8,Élevée,CWE-269: Improper Privilege Management,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Installer Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1305,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21290,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1304,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21310,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1303,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21268,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,MapUrlToZone Security Feature Bypass Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1302,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21309,8.1,n/a,CWE-591: Sensitive Data Storage in Improperly Locked Memory,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Remote Desktop Services Remote Code Execution Vulnerability,Microsoft,Windows Server 2019,10.0.17763.0
1301,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21301,6.5,n/a,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Geolocation Service Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1300,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21189,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,MapUrlToZone Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1299,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21249,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1298,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21274,5.5,Moyenne,CWE-59: Improper Link Resolution Before File Access ('Link Following'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Event Tracing Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1297,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21332,4.3,Moyenne,CWE-41: Improper Resolution of Path Equivalence,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,MapUrlToZone Security Feature Bypass Vulnerability,Microsoft,Windows Server 2025,10.0.26100.0
1296,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21266,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1295,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2024-7344,n/a,n/a,CWE-426: Untrusted Search Path,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,"Howyar UEFI Application ""Reloader""  (32-bit and 64-bit)  is vulnerable to execution of unsigned software in a hardcoded path.",Radix,SmartRecovery,*
1294,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21239,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1293,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21298,9.8,Critique,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows OLE Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1292,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21280,5.5,Moyenne,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Virtual Trusted Platform Module Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1291,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21319,5.5,Moyenne,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kernel Memory Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1290,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21315,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Brokering File System Elevation of Privilege Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1289,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21263,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1288,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21389,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows upnphost.dll Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1287,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21374,5.5,Moyenne,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows CSC Service Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1316,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21307,9.8,Critique,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Reliable Multicast Transport Driver (RMCAST) Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1310,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21293,8.8,n/a,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Active Directory Domain Services Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1318,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21255,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1333,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21256,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1347,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21260,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1346,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21276,7.5,Élevée,CWE-191: Integer Underflow (Wrap or Wraparound),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows MapUrlToZone Denial of Service Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1345,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21291,8.8,n/a,CWE-415: Double Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Direct Show Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1344,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21213,4.6,Moyenne,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Secure Boot Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1343,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21297,8.1,n/a,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Remote Desktop Services Remote Code Execution Vulnerability,Microsoft,Windows Server 2019,10.0.17763.0
1342,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21243,8.8,n/a,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1341,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21311,9.8,Critique,CWE-303: Incorrect Implementation of Authentication Algorithm,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows NTLM V1 Elevation of Privilege Vulnerability,Microsoft,Windows Server 2025 (Server Core installation),10.0.26100.0
1319,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21378,7.8,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows CSC Service Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1339,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21214,4.2,Moyenne,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows BitLocker Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1338,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21202,6.1,n/a,CWE-284: Improper Access Control,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Recovery Environment Agent Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1337,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21236,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1336,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21327,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1335,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21215,4.6,Moyenne,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Secure Boot Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1334,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21304,7.8,Élevée,CWE-416: Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft DWM Core Library Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1340,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21273,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1332,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21324,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1326,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21270,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1331,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21227,6.6,n/a,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Digital Media Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1320,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21299,7.1,Élevée,CWE-922: Insecure Storage of Sensitive Information,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Kerberos Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1321,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21330,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Remote Desktop Services Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1322,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21224,8.1,n/a,CWE-591: Sensitive Data Storage in Improperly Locked Memory,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Line Printer Daemon (LPD) Service Remote Code Execution Vulnerability,Microsoft,Windows Server 2022,10.0.20348.0
1323,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21211,6.8,n/a,CWE-693: Protection Mechanism Failure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Secure Boot Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1325,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21277,7.5,Élevée,CWE-126: Buffer Over-read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Microsoft Message Queuing (MSMQ) Denial of Service Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1324,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21235,7.8,Élevée,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows PrintWorkflowUserSvc Elevation of Privilege Vulnerability,Microsoft,Windows Server 2022,10.0.20348.0
1327,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21339,8.8,n/a,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Telephony Service Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1328,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21333,7.8,Élevée,CWE-122: Heap-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Hyper-V NT Kernel Integration VSP Elevation of Privilege Vulnerability,Microsoft,Windows 10 Version 21H2,10.0.19043.0
1329,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21257,5.5,Moyenne,CWE-125: Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows WLAN AutoConfig Service Information Disclosure Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1330,Multiples vulnérabilités dans Microsoft Windows ,Avis,2025-01-15,CVE-2025-21370,7.8,Élevée,CWE-20: Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0039/,Windows Virtualization-Based Security (VBS) Enclave Elevation of Privilege Vulnerability,Microsoft,Windows 11 version 22H2,10.0.22621.0
1126,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0053,5.3,Moyenne,CWE-209: Generation of Error Message Containing Sensitive Information,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP NetWeaver Application Server for ABAP and ABAP Platform allows an attacker to gain unauthorized access to system information. By using a specific URL parameter, an unauthenticated attacker could retrieve details such as system configuration. This has a limited impact on the confidentiality of the application and may be leveraged to facilitate further attacks or exploits.",SAP_SE,SAP NetWeaver Application Server for ABAP and ABAP Platform,"SAP_BASIS 700, SAP_BASIS 701, SAP_BASIS 702, SAP_BASIS 731, SAP_BASIS 740, SAP_BASIS 750, SAP_BASIS 751, SAP_BASIS 752, SAP_BASIS 753, SAP_BASIS 754, SAP_BASIS 755, SAP_BASIS 756, SAP_BASIS 757"
1132,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0061,8.7,n/a,CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP BusinessObjects Business Intelligence Platform allows an unauthenticated attacker to perform session hijacking over the network without any user interaction, due to an information disclosure vulnerability. Attacker can access and modify all the data of the application.",SAP_SE,SAP BusinessObjects Business Intelligence Platform,"ENTERPRISE 420, 430, 2025"
1133,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0067,6.3,n/a,CWE-862: Missing Authorization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"Due to a missing authorization check on service endpoints in the SAP NetWeaver Application Server Java, an attacker with standard user role can create JCo connection entries, which are used for remote function calls from or to the application server. This could lead to low impact on confidentiality, integrity, and availability of the application.",SAP_SE,SAP NetWeaver Application Server Java,WD-RUNTIME 7.50
1131,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0066,9.9,Critique,CWE-732: Incorrect Permission Assignment for Critical Resource,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"Under certain conditions SAP NetWeaver AS for ABAP and ABAP Platform (Internet Communication Framework) allows an attacker to access restricted information due to weak access controls. This can have a significant impact on the confidentiality, integrity, and availability of an application",SAP_SE,SAP NetWeaver AS for ABAP and ABAP Platform (Internet Communication Framework),"SAP_BASIS 700, SAP_BASIS 701, SAP_BASIS 702, SAP_BASIS 731, SAP_BASIS 740, SAP_BASIS 750, SAP_BASIS 751, SAP_BASIS 752, SAP_BASIS 753, SAP_BASIS 754, SAP_BASIS 755, SAP_BASIS 756, SAP_BASIS 757, SAP_BASIS 758, SAP_BASIS 912, SAP_BASIS 913, SAP_BASIS 914"
1130,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0070,9.9,Critique,CWE-287: (Improper Authentication),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP NetWeaver Application Server for ABAP and ABAP Platform allows an authenticated attacker to obtain illegitimate access to the system by exploiting improper authentication checks, resulting in privilege escalation. On successful exploitation, this can result in potential security concerns. This results in a high impact on confidentiality, integrity, and availability.",SAP_SE,SAP NetWeaver Application Server for ABAP and ABAP Platform,"KRNL64NUC 7.22, 7.22EXT, KRNL64UC 7.22, 7.53, 8.04, KERNEL 7.22, 7.54, 7.77, 7.89, 7.93, 7.97, 9.12, 9.13, 9.14"
1129,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2024-29133,n/a,n/a,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"Out-of-bounds Write vulnerability in Apache Commons Configuration.This issue affects Apache Commons Configuration: from 2.0 before 2.10.1.

Users are recommended to upgrade to version 2.10.1, which fixes the issue.

",Apache Software Foundation,Apache Commons Configuration,2.0
1128,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0069,7.8,Élevée,CWE-427: Uncontrolled Search Path Element,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"Due to DLL injection vulnerability in SAPSetup, an attacker with either local user privileges or with access to a compromised corporate user�s Windows account could gain higher privileges. With this, he could move laterally within the network and further compromise the active directory of a company. This leads to high impact on confidentiality, integrity and availability of the Windows server.",SAP_SE,SAPSetup,LMSAPSETUP 9.0
1127,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0059,6,Moyenne,CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"Applications based on SAP GUI for HTML in SAP NetWeaver Application Server ABAP store user input in the local browser storage to improve usability. An attacker with administrative privileges or access to the victim�s user directory on the Operating System level would be able to read this data. Depending on the user input provided in transactions, the disclosed data could range from non-critical data to highly sensitive data, causing high impact on confidentiality of the application.",SAP_SE,SAP NetWeaver Application Server ABAP (applications based on SAP GUI for HTML),"KRNL64UC 7.53, KERNEL 7.53, 7.54, 7.77, 7.89, 7.93, 9.12, 9.14"
1119,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0055,6,Moyenne,CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP GUI for Windows stores user input on the client PC to improve usability. Under very specific circumstances an attacker with administrative privileges or access to the victim�s user directory on the Operating System level would be able to read this data. Depending on the user input provided in transactions, the disclosed data could range from non-critical data to highly sensitive data, causing high impact on confidentiality of the application.",SAP_SE,SAP GUI for Windows,BC-FES-GUI 8.0
1125,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0068,4.3,Moyenne,CWE-862: Missing Authorization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"An obsolete functionality in SAP NetWeaver Application Server ABAP did not perform necessary authorization checks. Because of this, an authenticated attacker could obtain information that would otherwise be restricted. It has no impact on integrity or availability on the application.",SAP_SE,SAP NetWeaver Application Server ABAP,"SAP_BASIS 700, SAP_BASIS 701, SAP_BASIS 702, SAP_BASIS 731, SAP_BASIS 740, SAP_BASIS 750, SAP_BASIS 751, SAP_BASIS 752, SAP_BASIS 753, SAP_BASIS 754, SAP_BASIS 755, SAP_BASIS 756, SAP_BASIS 757, SAP_BASIS 758"
1124,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2024-29131,n/a,n/a,CWE-787 Out-of-bounds Write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"Out-of-bounds Write vulnerability in Apache Commons Configuration.This issue affects Apache Commons Configuration: from 2.0 before 2.10.1.

Users are recommended to upgrade to version 2.10.1, which fixes the issue.

",Apache Software Foundation,Apache Commons Configuration,2.0
1123,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0058,6.5,n/a,CWE-639: Authorization Bypass Through User-Controlled Key,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"In SAP Business Workflow and SAP Flexible Workflow, an authenticated attacker can manipulate a parameter in an otherwise legitimate resource request to view sensitive information that should otherwise be restricted. The attacker does not have the ability to modify the information or to make the information unavailable.",SAP_SE,SAP Business Workflow and SAP Flexible Workflow,"SAP_BASIS 753, SAP_BASIS 754, SAP_BASIS 755, SAP_BASIS 756, SAP_BASIS 757, SAP_BASIS 758, SAP_BASIS 912, SAP_BASIS 913, SAP_BASIS 914"
1122,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0060,6.5,n/a,CWE-94: Improper Control of Generation of Code,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,SAP BusinessObjects Business Intelligence Platform allows an authenticated user with restricted access to inject malicious JS code which can read sensitive information from the server and send it to the attacker. The attacker could further use this information to impersonate as a high privileged user causing high impact on confidentiality and integrity of the application.,SAP_SE,SAP BusinessObjects Business Intelligence Platform,"ENTERPRISE 420, 430, 2025"
1121,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0056,6,Moyenne,CWE-497: Exposure of Sensitive System Information to an Unauthorized Control Sphere,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP GUI for Java saves user input on the client PC to improve usability. An attacker with administrative privileges or access to the victim�s user directory on the Operating System level would be able to read this data. Depending on the user input provided in transactions, the disclosed data could range from non-critical data to highly sensitive data, causing high impact on confidentiality of the application.",SAP_SE,SAP GUI for Java,BC-FES-JAV 7.80
1120,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0057,4.8,Moyenne,CWE-434: Unrestricted Upload of File with Dangerous Type,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP NetWeaver AS JAVA (User Admin Application) is vulnerable to stored cross site scripting vulnerability. An attacker posing as an admin can upload a photo with malicious JS content. When a victim visits the vulnerable component, the attacker can read and modify information within the scope of victim's web browser.",SAP_SE,SAP NetWeaver AS JAVA (User Admin Application),"ENGINEAPI 7.50, SERVERCORE 7.50, UMEADMIN 7.50"
1118,Vulnérabilité dans Veeam Backup pour Microsoft Azure ,Avis,2025-01-14,CVE-2025-23082,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0026/,"Veeam Backup for Microsoft Azure is vulnerable to Server-Side Request Forgery (SSRF). This may allow an unauthenticated attacker to send unauthorized requests from the system, potentially leading to network enumeration or facilitating other attacks.",Veeam,Backup for Microsoft Azure,7.1
1135,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55923,4.3,Moyenne,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component “Indexed Search Module” allows attackers to delete items of the component. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described. There are no known workarounds for this issue.",TYPO3,typo3,">= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1134,Multiples vulnérabilités dans les produits SAP ,Avis,2025-01-14,CVE-2025-0063,8.8,n/a,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0027/,"SAP NetWeaver AS ABAP and ABAP Platform does not check for authorization when a user executes some RFC function modules. This could lead to an attacker with basic user privileges to gain control over the data in Informix database, leading to complete compromise of confidentiality, integrity and availability.",SAP_SE,SAP NetWeaver AS ABAP and ABAP Platform,"SAP_BASIS 700, SAP_BASIS 701, SAP_BASIS 702, SAP_BASIS 731, SAP_BASIS 740, SAP_BASIS 750, SAP_BASIS 751, SAP_BASIS 752, SAP_BASIS 753, SAP_BASIS 754, SAP_BASIS 755, SAP_BASIS 756, SAP_BASIS 757, SAP_BASIS 758"
1723,Vulnérabilité dans les produits Fortinet ,Alerte,2025-01-14,CVE-2024-55591,9.6,Critique,Execute unauthorized code or commands,0.02634,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2025-ALE-002/,An Authentication Bypass Using an Alternate Path or Channel vulnerability [CWE-288] affecting FortiOS version 7.0.0 through 7.0.16 and FortiProxy version 7.0.0 through 7.0.19 and 7.2.0 through 7.2.12 allows a remote attacker to gain super-admin privileges via crafted requests to Node.js websocket module.,Fortinet,FortiOS,7.0.0
1136,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55945,4.3,Moyenne,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to `lax` or `none`. The vulnerability in the affected downstream component “DB Check Module” allows attackers to manipulate data through unauthorized actions. Users are advised to update to TYPO3 versions 11.5.42 ELTS which fixes the problem described. There are no known workarounds for this issue.",TYPO3,typo3,">= 11.0.0, < 11.5.42"
1146,Multiples vulnérabilités dans les produits Siemens ,Avis,2025-01-14,CVE-2024-47100,7.1,Élevée,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0029/,"A vulnerability has been identified in SIMATIC S7-1200 CPU 1211C AC/DC/Rly (6ES7211-1BE40-0XB0), SIMATIC S7-1200 CPU 1211C DC/DC/DC (6ES7211-1AE40-0XB0), SIMATIC S7-1200 CPU 1211C DC/DC/Rly (6ES7211-1HE40-0XB0), SIMATIC S7-1200 CPU 1212C AC/DC/Rly (6ES7212-1BE40-0XB0), SIMATIC S7-1200 CPU 1212C DC/DC/DC (6ES7212-1AE40-0XB0), SIMATIC S7-1200 CPU 1212C DC/DC/Rly (6ES7212-1HE40-0XB0), SIMATIC S7-1200 CPU 1212FC DC/DC/DC (6ES7212-1AF40-0XB0), SIMATIC S7-1200 CPU 1212FC DC/DC/Rly (6ES7212-1HF40-0XB0), SIMATIC S7-1200 CPU 1214C AC/DC/Rly (6ES7214-1BG40-0XB0), SIMATIC S7-1200 CPU 1214C DC/DC/DC (6ES7214-1AG40-0XB0), SIMATIC S7-1200 CPU 1214C DC/DC/Rly (6ES7214-1HG40-0XB0), SIMATIC S7-1200 CPU 1214FC DC/DC/DC (6ES7214-1AF40-0XB0), SIMATIC S7-1200 CPU 1214FC DC/DC/Rly (6ES7214-1HF40-0XB0), SIMATIC S7-1200 CPU 1215C AC/DC/Rly (6ES7215-1BG40-0XB0), SIMATIC S7-1200 CPU 1215C DC/DC/DC (6ES7215-1AG40-0XB0), SIMATIC S7-1200 CPU 1215C DC/DC/Rly (6ES7215-1HG40-0XB0), SIMATIC S7-1200 CPU 1215FC DC/DC/DC (6ES7215-1AF40-0XB0), SIMATIC S7-1200 CPU 1215FC DC/DC/Rly (6ES7215-1HF40-0XB0), SIMATIC S7-1200 CPU 1217C DC/DC/DC (6ES7217-1AG40-0XB0), SIPLUS S7-1200 CPU 1212 AC/DC/RLY (6AG1212-1BE40-2XB0), SIPLUS S7-1200 CPU 1212 AC/DC/RLY (6AG1212-1BE40-4XB0), SIPLUS S7-1200 CPU 1212 DC/DC/RLY (6AG1212-1HE40-2XB0), SIPLUS S7-1200 CPU 1212 DC/DC/RLY (6AG1212-1HE40-4XB0), SIPLUS S7-1200 CPU 1212C DC/DC/DC (6AG1212-1AE40-2XB0), SIPLUS S7-1200 CPU 1212C DC/DC/DC (6AG1212-1AE40-4XB0), SIPLUS S7-1200 CPU 1212C DC/DC/DC RAIL (6AG2212-1AE40-1XB0), SIPLUS S7-1200 CPU 1214 AC/DC/RLY (6AG1214-1BG40-2XB0), SIPLUS S7-1200 CPU 1214 AC/DC/RLY (6AG1214-1BG40-4XB0), SIPLUS S7-1200 CPU 1214 AC/DC/RLY (6AG1214-1BG40-5XB0), SIPLUS S7-1200 CPU 1214 DC/DC/DC (6AG1214-1AG40-2XB0), SIPLUS S7-1200 CPU 1214 DC/DC/DC (6AG1214-1AG40-4XB0), SIPLUS S7-1200 CPU 1214 DC/DC/DC (6AG1214-1AG40-5XB0), SIPLUS S7-1200 CPU 1214 DC/DC/RLY (6AG1214-1HG40-2XB0), SIPLUS S7-1200 CPU 1214 DC/DC/RLY (6AG1214-1HG40-4XB0), SIPLUS S7-1200 CPU 1214 DC/DC/RLY (6AG1214-1HG40-5XB0), SIPLUS S7-1200 CPU 1214C DC/DC/DC RAIL (6AG2214-1AG40-1XB0), SIPLUS S7-1200 CPU 1214FC DC/DC/DC (6AG1214-1AF40-5XB0), SIPLUS S7-1200 CPU 1214FC DC/DC/RLY (6AG1214-1HF40-5XB0), SIPLUS S7-1200 CPU 1215 AC/DC/RLY (6AG1215-1BG40-2XB0), SIPLUS S7-1200 CPU 1215 AC/DC/RLY (6AG1215-1BG40-4XB0), SIPLUS S7-1200 CPU 1215 AC/DC/RLY (6AG1215-1BG40-5XB0), SIPLUS S7-1200 CPU 1215 DC/DC/DC (6AG1215-1AG40-2XB0), SIPLUS S7-1200 CPU 1215 DC/DC/DC (6AG1215-1AG40-4XB0), SIPLUS S7-1200 CPU 1215 DC/DC/RLY (6AG1215-1HG40-2XB0), SIPLUS S7-1200 CPU 1215 DC/DC/RLY (6AG1215-1HG40-4XB0), SIPLUS S7-1200 CPU 1215 DC/DC/RLY (6AG1215-1HG40-5XB0), SIPLUS S7-1200 CPU 1215C DC/DC/DC (6AG1215-1AG40-5XB0), SIPLUS S7-1200 CPU 1215FC DC/DC/DC (6AG1215-1AF40-5XB0). The web interface of the affected devices is vulnerable to Cross-Site Request Forgery (CSRF) attacks. This could allow an unauthenticated attacker to change the CPU mode by tricking a legitimate and authenticated user with sufficient permissions on the target CPU to click on a malicious link.",Siemens,SIMATIC S7-1200 CPU 1211C AC/DC/Rly,0
1152,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-14,CVE-2024-55591,9.6,Critique,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0030/,An Authentication Bypass Using an Alternate Path or Channel vulnerability [CWE-288] affecting FortiOS version 7.0.0 through 7.0.16 and FortiProxy version 7.0.0 through 7.0.19 and 7.2.0 through 7.2.12 allows a remote attacker to gain super-admin privileges via crafted requests to Node.js websocket module.,Fortinet,FortiOS,7.0.0
1151,Multiples vulnérabilités dans les produits Fortinet ,Avis,2025-01-14,CVE-2024-50566,7.2,Élevée,Execute unauthorized code or commands,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0030/,"A improper neutralization of special elements used in an os command ('os command injection') in Fortinet FortiManager versions 7.6.0 through 7.6.1, versions 7.4.5 through 7.4.0, and versions 7.2.1 through 7.2.8, FortiManager Cloud versions 7.6.0 through 7.6.1, versions 7.4.0 through 7.4.4, and versions 7.2.2 through 7.2.7 may allow an authenticated remote attacker to execute unauthorized code via FGFM crafted requests.",Fortinet,FortiManager,"7.6.0, 7.4.0, 7.2.1"
1150,Multiples vulnérabilités dans les produits Siemens ,Avis,2025-01-14,CVE-2023-44318,4.9,Moyenne,CWE-321: Use of Hard-coded Cryptographic Key,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0029/,Affected devices use a hardcoded key to obfuscate the configuration backup that an administrator can export from the device. This could allow an authenticated attacker with administrative privileges or an attacker that obtains a configuration backup to extract configuration information from the exported file.,Siemens,RUGGEDCOM RM1224 LTE(4G) EU,All versions
1149,Multiples vulnérabilités dans les produits Siemens ,Avis,2025-01-14,CVE-2024-53649,6.5,n/a,CWE-552: Files or Directories Accessible to External Parties,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0029/,"A vulnerability has been identified in SIPROTEC 5 6MD84 (CP300) (All versions < V9.80), SIPROTEC 5 6MD85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 6MD86 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 6MD89 (CP300) (All versions >= V7.80), SIPROTEC 5 6MU85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7KE85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SA82 (CP100) (All versions >= V7.80), SIPROTEC 5 7SA82 (CP150) (All versions < V9.80), SIPROTEC 5 7SA86 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SA87 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SD82 (CP100) (All versions >= V7.80), SIPROTEC 5 7SD82 (CP150) (All versions < V9.80), SIPROTEC 5 7SD86 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SD87 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SJ81 (CP100) (All versions >= V7.80), SIPROTEC 5 7SJ81 (CP150) (All versions < V9.80), SIPROTEC 5 7SJ82 (CP100) (All versions >= V7.80), SIPROTEC 5 7SJ82 (CP150) (All versions < V9.80), SIPROTEC 5 7SJ85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SJ86 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SK82 (CP100) (All versions >= V7.80), SIPROTEC 5 7SK82 (CP150) (All versions < V9.80), SIPROTEC 5 7SK85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SL82 (CP100) (All versions >= V7.80), SIPROTEC 5 7SL82 (CP150) (All versions < V9.80), SIPROTEC 5 7SL86 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SL87 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7SS85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7ST85 (CP300) (All versions), SIPROTEC 5 7ST86 (CP300) (All versions < V9.80), SIPROTEC 5 7SX82 (CP150) (All versions < V9.80), SIPROTEC 5 7SX85 (CP300) (All versions < V9.80), SIPROTEC 5 7SY82 (CP150) (All versions < V9.80), SIPROTEC 5 7UM85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7UT82 (CP100) (All versions >= V7.80), SIPROTEC 5 7UT82 (CP150) (All versions < V9.80), SIPROTEC 5 7UT85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7UT86 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7UT87 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7VE85 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7VK87 (CP300) (All versions >= V7.80 < V9.80), SIPROTEC 5 7VU85 (CP300) (All versions < V9.80), SIPROTEC 5 Compact 7SX800 (CP050) (All versions < V9.80). Affected devices do not properly limit the path accessible via their webserver.  This could allow an authenticated remote attacker to read arbitrary files from the filesystem of affected devices.",Siemens,SIPROTEC 5 6MD84 (CP300),0
1148,Multiples vulnérabilités dans les produits Siemens ,Avis,2025-01-14,CVE-2023-44374,6.5,n/a,CWE-567: Unsynchronized Access to Shared Data in a Multithreaded Context,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0029/,"A vulnerability has been identified in RUGGEDCOM RM1224 LTE(4G) EU (6GK6108-4AM00-2BA2) (All versions < V8.0), RUGGEDCOM RM1224 LTE(4G) NAM (6GK6108-4AM00-2DA2) (All versions < V8.0), SCALANCE M804PB (6GK5804-0AP00-2AA2) (All versions < V8.0), SCALANCE M812-1 ADSL-Router (6GK5812-1AA00-2AA2) (All versions < V8.0), SCALANCE M812-1 ADSL-Router (6GK5812-1BA00-2AA2) (All versions < V8.0), SCALANCE M816-1 ADSL-Router (6GK5816-1AA00-2AA2) (All versions < V8.0), SCALANCE M816-1 ADSL-Router (6GK5816-1BA00-2AA2) (All versions < V8.0), SCALANCE M826-2 SHDSL-Router (6GK5826-2AB00-2AB2) (All versions < V8.0), SCALANCE M874-2 (6GK5874-2AA00-2AA2) (All versions < V8.0), SCALANCE M874-3 (6GK5874-3AA00-2AA2) (All versions < V8.0), SCALANCE M876-3 (ROK) (6GK5876-3AA02-2EA2) (All versions < V8.0), SCALANCE M876-4 (6GK5876-4AA10-2BA2) (All versions < V8.0), SCALANCE M876-4 (EU) (6GK5876-4AA00-2BA2) (All versions < V8.0), SCALANCE M876-4 (NAM) (6GK5876-4AA00-2DA2) (All versions < V8.0), SCALANCE MUM853-1 (EU) (6GK5853-2EA00-2DA1) (All versions < V8.0), SCALANCE MUM856-1 (EU) (6GK5856-2EA00-3DA1) (All versions < V8.0), SCALANCE MUM856-1 (RoW) (6GK5856-2EA00-3AA1) (All versions < V8.0), SCALANCE S615 EEC LAN-Router (6GK5615-0AA01-2AA2) (All versions < V8.0), SCALANCE S615 LAN-Router (6GK5615-0AA00-2AA2) (All versions < V8.0), SCALANCE WAB762-1 (6GK5762-1AJ00-6AA0) (All versions < V3.0.0), SCALANCE WAM763-1 (6GK5763-1AL00-7DA0) (All versions < V3.0.0), SCALANCE WAM763-1 (ME) (6GK5763-1AL00-7DC0) (All versions < V3.0.0), SCALANCE WAM763-1 (US) (6GK5763-1AL00-7DB0) (All versions < V3.0.0), SCALANCE WAM766-1 (6GK5766-1GE00-7DA0) (All versions < V3.0.0), SCALANCE WAM766-1 (ME) (6GK5766-1GE00-7DC0) (All versions < V3.0.0), SCALANCE WAM766-1 (US) (6GK5766-1GE00-7DB0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (6GK5766-1GE00-7TA0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (ME) (6GK5766-1GE00-7TC0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (US) (6GK5766-1GE00-7TB0) (All versions < V3.0.0), SCALANCE WUB762-1 (6GK5762-1AJ00-1AA0) (All versions < V3.0.0), SCALANCE WUB762-1 iFeatures (6GK5762-1AJ00-2AA0) (All versions < V3.0.0), SCALANCE WUM763-1 (6GK5763-1AL00-3AA0) (All versions < V3.0.0), SCALANCE WUM763-1 (6GK5763-1AL00-3DA0) (All versions < V3.0.0), SCALANCE WUM763-1 (US) (6GK5763-1AL00-3AB0) (All versions < V3.0.0), SCALANCE WUM763-1 (US) (6GK5763-1AL00-3DB0) (All versions < V3.0.0), SCALANCE WUM766-1 (6GK5766-1GE00-3DA0) (All versions < V3.0.0), SCALANCE WUM766-1 (ME) (6GK5766-1GE00-3DC0) (All versions < V3.0.0), SCALANCE WUM766-1 (USA) (6GK5766-1GE00-3DB0) (All versions < V3.0.0). Affected devices allow to change the password, but insufficiently check which password is to be changed. With this an authenticated attacker could, under certain conditions, be able to change the password of another, potential admin user, which could allow to escalate privileges.",Siemens,RUGGEDCOM RM1224 LTE(4G) EU,0
1147,Multiples vulnérabilités dans les produits Siemens ,Avis,2025-01-14,CVE-2023-44319,4.9,Moyenne,CWE-328: Use of Weak Hash,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0029/,"A vulnerability has been identified in RUGGEDCOM RM1224 LTE(4G) EU (6GK6108-4AM00-2BA2) (All versions < V8.0), RUGGEDCOM RM1224 LTE(4G) NAM (6GK6108-4AM00-2DA2) (All versions < V8.0), SCALANCE M804PB (6GK5804-0AP00-2AA2) (All versions < V8.0), SCALANCE M812-1 ADSL-Router (6GK5812-1AA00-2AA2) (All versions < V8.0), SCALANCE M812-1 ADSL-Router (6GK5812-1BA00-2AA2) (All versions < V8.0), SCALANCE M816-1 ADSL-Router (6GK5816-1AA00-2AA2) (All versions < V8.0), SCALANCE M816-1 ADSL-Router (6GK5816-1BA00-2AA2) (All versions < V8.0), SCALANCE M826-2 SHDSL-Router (6GK5826-2AB00-2AB2) (All versions < V8.0), SCALANCE M874-2 (6GK5874-2AA00-2AA2) (All versions < V8.0), SCALANCE M874-3 (6GK5874-3AA00-2AA2) (All versions < V8.0), SCALANCE M876-3 (6GK5876-3AA02-2BA2) (All versions < V8.0), SCALANCE M876-3 (ROK) (6GK5876-3AA02-2EA2) (All versions < V8.0), SCALANCE M876-4 (6GK5876-4AA10-2BA2) (All versions < V8.0), SCALANCE M876-4 (EU) (6GK5876-4AA00-2BA2) (All versions < V8.0), SCALANCE M876-4 (NAM) (6GK5876-4AA00-2DA2) (All versions < V8.0), SCALANCE MUM853-1 (EU) (6GK5853-2EA00-2DA1) (All versions < V8.0), SCALANCE MUM856-1 (EU) (6GK5856-2EA00-3DA1) (All versions < V8.0), SCALANCE MUM856-1 (RoW) (6GK5856-2EA00-3AA1) (All versions < V8.0), SCALANCE S615 EEC LAN-Router (6GK5615-0AA01-2AA2) (All versions < V8.0), SCALANCE S615 LAN-Router (6GK5615-0AA00-2AA2) (All versions < V8.0), SCALANCE WAB762-1 (6GK5762-1AJ00-6AA0) (All versions < V3.0.0), SCALANCE WAM763-1 (6GK5763-1AL00-7DA0) (All versions < V3.0.0), SCALANCE WAM763-1 (ME) (6GK5763-1AL00-7DC0) (All versions < V3.0.0), SCALANCE WAM763-1 (US) (6GK5763-1AL00-7DB0) (All versions < V3.0.0), SCALANCE WAM766-1 (6GK5766-1GE00-7DA0) (All versions < V3.0.0), SCALANCE WAM766-1 (ME) (6GK5766-1GE00-7DC0) (All versions < V3.0.0), SCALANCE WAM766-1 (US) (6GK5766-1GE00-7DB0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (6GK5766-1GE00-7TA0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (ME) (6GK5766-1GE00-7TC0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (US) (6GK5766-1GE00-7TB0) (All versions < V3.0.0), SCALANCE WUB762-1 (6GK5762-1AJ00-1AA0) (All versions < V3.0.0), SCALANCE WUB762-1 iFeatures (6GK5762-1AJ00-2AA0) (All versions < V3.0.0), SCALANCE WUM763-1 (6GK5763-1AL00-3AA0) (All versions < V3.0.0), SCALANCE WUM763-1 (6GK5763-1AL00-3DA0) (All versions < V3.0.0), SCALANCE WUM763-1 (US) (6GK5763-1AL00-3AB0) (All versions < V3.0.0), SCALANCE WUM763-1 (US) (6GK5763-1AL00-3DB0) (All versions < V3.0.0), SCALANCE WUM766-1 (6GK5766-1GE00-3DA0) (All versions < V3.0.0), SCALANCE WUM766-1 (ME) (6GK5766-1GE00-3DC0) (All versions < V3.0.0), SCALANCE WUM766-1 (USA) (6GK5766-1GE00-3DB0) (All versions < V3.0.0). Affected devices use a weak checksum algorithm to protect the configuration backup that an administrator can export from the device. This could allow an authenticated attacker with administrative privileges or an attacker that tricks a legitimate administrator to upload a modified configuration file to change the configuration of an affected device.",Siemens,RUGGEDCOM RM1224 LTE(4G) EU,0
1145,Multiples vulnérabilités dans les produits Siemens ,Avis,2025-01-14,CVE-2023-44317,7.2,Élevée,CWE-349: Acceptance of Extraneous Untrusted Data With Trusted Data,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0029/,"A vulnerability has been identified in RUGGEDCOM RM1224 LTE(4G) EU (6GK6108-4AM00-2BA2) (All versions < V7.2.2), RUGGEDCOM RM1224 LTE(4G) NAM (6GK6108-4AM00-2DA2) (All versions < V7.2.2), SCALANCE M804PB (6GK5804-0AP00-2AA2) (All versions < V7.2.2), SCALANCE M812-1 ADSL-Router (6GK5812-1AA00-2AA2) (All versions < V7.2.2), SCALANCE M812-1 ADSL-Router (6GK5812-1BA00-2AA2) (All versions < V7.2.2), SCALANCE M816-1 ADSL-Router (6GK5816-1AA00-2AA2) (All versions < V7.2.2), SCALANCE M816-1 ADSL-Router (6GK5816-1BA00-2AA2) (All versions < V7.2.2), SCALANCE M826-2 SHDSL-Router (6GK5826-2AB00-2AB2) (All versions < V7.2.2), SCALANCE M874-2 (6GK5874-2AA00-2AA2) (All versions < V7.2.2), SCALANCE M874-3 (6GK5874-3AA00-2AA2) (All versions < V7.2.2), SCALANCE M876-3 (6GK5876-3AA02-2BA2) (All versions < V7.2.2), SCALANCE M876-3 (ROK) (6GK5876-3AA02-2EA2) (All versions < V7.2.2), SCALANCE M876-4 (6GK5876-4AA10-2BA2) (All versions < V7.2.2), SCALANCE M876-4 (EU) (6GK5876-4AA00-2BA2) (All versions < V7.2.2), SCALANCE M876-4 (NAM) (6GK5876-4AA00-2DA2) (All versions < V7.2.2), SCALANCE MUM853-1 (EU) (6GK5853-2EA00-2DA1) (All versions < V7.2.2), SCALANCE MUM856-1 (EU) (6GK5856-2EA00-3DA1) (All versions < V7.2.2), SCALANCE MUM856-1 (RoW) (6GK5856-2EA00-3AA1) (All versions < V7.2.2), SCALANCE S615 EEC LAN-Router (6GK5615-0AA01-2AA2) (All versions < V7.2.2), SCALANCE S615 LAN-Router (6GK5615-0AA00-2AA2) (All versions < V7.2.2), SCALANCE WAB762-1 (6GK5762-1AJ00-6AA0) (All versions < V3.0.0), SCALANCE WAM763-1 (6GK5763-1AL00-7DA0) (All versions < V3.0.0), SCALANCE WAM763-1 (ME) (6GK5763-1AL00-7DC0) (All versions < V3.0.0), SCALANCE WAM763-1 (US) (6GK5763-1AL00-7DB0) (All versions < V3.0.0), SCALANCE WAM766-1 (6GK5766-1GE00-7DA0) (All versions < V3.0.0), SCALANCE WAM766-1 (ME) (6GK5766-1GE00-7DC0) (All versions < V3.0.0), SCALANCE WAM766-1 (US) (6GK5766-1GE00-7DB0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (6GK5766-1GE00-7TA0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (ME) (6GK5766-1GE00-7TC0) (All versions < V3.0.0), SCALANCE WAM766-1 EEC (US) (6GK5766-1GE00-7TB0) (All versions < V3.0.0), SCALANCE WUB762-1 (6GK5762-1AJ00-1AA0) (All versions < V3.0.0), SCALANCE WUB762-1 iFeatures (6GK5762-1AJ00-2AA0) (All versions < V3.0.0), SCALANCE WUM763-1 (6GK5763-1AL00-3AA0) (All versions < V3.0.0), SCALANCE WUM763-1 (6GK5763-1AL00-3DA0) (All versions < V3.0.0), SCALANCE WUM763-1 (US) (6GK5763-1AL00-3AB0) (All versions < V3.0.0), SCALANCE WUM763-1 (US) (6GK5763-1AL00-3DB0) (All versions < V3.0.0), SCALANCE WUM766-1 (6GK5766-1GE00-3DA0) (All versions < V3.0.0), SCALANCE WUM766-1 (ME) (6GK5766-1GE00-3DC0) (All versions < V3.0.0), SCALANCE WUM766-1 (USA) (6GK5766-1GE00-3DB0) (All versions < V3.0.0). Affected products do not properly validate the content of uploaded X509 certificates which could allow an attacker with administrative privileges to execute arbitrary code on the device.",Siemens,RUGGEDCOM RM1224 LTE(4G) EU,0
1144,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55922,5.4,Moyenne,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none The vulnerability in the affected downstream component “Form Framework Module” allows attackers to manipulate or delete persisted form definitions. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described. There are no known workarounds for this vulnerability.",TYPO3,typo3,">= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1143,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55920,4.3,Moyenne,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component “Dashboard Module” allows attackers to manipulate the victim’s dashboard configuration. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described. There are no known workarounds for this vulnerability.",TYPO3,typo3,">= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1142,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55894,4.3,Moyenne,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component “Backend User Module” allows attackers to initiate password resets for other backend users or to terminate their user sessions. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described.",TYPO3,typo3,">= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1141,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55892,4.8,Moyenne,CWE-601: URL Redirection to Untrusted Site ('Open Redirect'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. Applications that use `TYPO3\CMS\Core\Http\Uri` to parse externally provided URLs (e.g., via a query parameter) and validate the host of the parsed URL may be vulnerable to open redirect or SSRF attacks if the URL is used after passing the validation checks. Users are advised to update to TYPO3 versions 9.5.49 ELTS, 10.4.48 ELTS, 11.5.42 LTS, 12.4.25 LTS, 13.4.3 which fix the problem described. There are no known workarounds for this vulnerability.",TYPO3,typo3,">= 9.0.0, < 9.5.49, >= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1140,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55891,3.1,n/a,CWE-532: Insertion of Sensitive Information into Log File,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,TYPO3 is a free and open source Content Management Framework. It has been discovered that the install tool password has been logged as plaintext in case the password hashing mechanism used for the password was incorrect. Users are advised to update to TYPO3 versions 13.4.3 ELTS which fixes the problem described. There are no known workarounds for this vulnerability.,TYPO3,typo3,< 13.4.3
1139,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55924,8,Élevée,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component “Scheduler Module” allows attackers to trigger pre-defined command classes - which can lead to unauthorized import or export of data in the worst case. Users are advised to update to TYPO3 versions 11.5.42 ELTS which fixes the problem described. There are no known workarounds for this vulnerability.",TYPO3,typo3,">= 11.0.0, < 11.5.42"
1138,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55921,7.5,Élevée,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component “Extension Manager Module” allows attackers to retrieve and install 3rd party extensions from the TYPO3 Extension Repository - which can lead to remote code execution in the worst case. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described.",TYPO3,typo3,">= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1137,Multiples vulnérabilités dans Typo3 ,Avis,2025-01-14,CVE-2024-55893,4.3,Moyenne,CWE-352: Cross-Site Request Forgery (CSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0028/,"TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component “Log Module” allows attackers to remove log entries. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described. There are no known workarounds for this vulnerability.",TYPO3,typo3,">= 10.0.0, < 10.4.48, >= 11.0.0, < 11.5.42, >= 12.0.0, < 12.4.25, >= 13.0.0, < 13.4.3"
1116,Multiples vulnérabilités dans Mozilla Firefox pour iOS ,Avis,2025-01-13,CVE-2025-23109,n/a,n/a,Address bar spoofing on iOS using long hostnames,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0025/,Long hostnames in URLs could be leveraged to obscure the actual host of the website or spoof the website address This vulnerability affects Firefox for iOS < 134.,Mozilla,Firefox for iOS,unspecified
1117,Multiples vulnérabilités dans Mozilla Firefox pour iOS ,Avis,2025-01-13,CVE-2025-23108,n/a,n/a,Firefox Mobile iOS Full Address Bar Spoof Using Open in New Tab and Javascript URI,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0025/,Opening Javascript links in a new tab via long-press in the Firefox iOS client could result in a malicious script spoofing the URL of the new tab. This vulnerability affects Firefox for iOS < 134.,Mozilla,Firefox for iOS,unspecified
918,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-53088,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: fix race condition by adding filter's intermediate sync state

Fix a race condition in the i40e driver that leads to MAC/VLAN filters
becoming corrupted and leaking. Address the issue that occurs under
heavy load when multiple threads are concurrently modifying MAC/VLAN
filters by setting mac and port VLAN.

1. Thread T0 allocates a filter in i40e_add_filter() within
        i40e_ndo_set_vf_port_vlan().
2. Thread T1 concurrently frees the filter in __i40e_del_filter() within
        i40e_ndo_set_vf_mac().
3. Subsequently, i40e_service_task() calls i40e_sync_vsi_filters(), which
        refers to the already freed filter memory, causing corruption.

Reproduction steps:
1. Spawn multiple VFs.
2. Apply a concurrent heavy load by running parallel operations to change
        MAC addresses on the VFs and change port VLANs on the host.
3. Observe errors in dmesg:
""Error I40E_AQ_RC_ENOSPC adding RX filters on VF XX,
	please set promiscuous on manually for VF XX"".

Exact code for stable reproduction Intel can't open-source now.

The fix involves implementing a new intermediate filter state,
I40E_FILTER_NEW_SYNC, for the time when a filter is on a tmp_add_list.
These filters cannot be deleted from the hash list directly but
must be removed using the full process.",Linux,Linux,"278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621"
926,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-27051,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

cpufreq: brcmstb-avs-cpufreq: add check for cpufreq_cpu_get's return value

cpufreq_cpu_get may return NULL. To avoid NULL-dereference check it
and return 0 in case of error.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"de322e085995b9417582d6f72229dadb5c09d163, de322e085995b9417582d6f72229dadb5c09d163, de322e085995b9417582d6f72229dadb5c09d163, de322e085995b9417582d6f72229dadb5c09d163, de322e085995b9417582d6f72229dadb5c09d163, de322e085995b9417582d6f72229dadb5c09d163, de322e085995b9417582d6f72229dadb5c09d163"
920,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-41040,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: Fix UAF when resolving a clash

KASAN reports the following UAF:

 BUG: KASAN: slab-use-after-free in tcf_ct_flow_table_process_conn+0x12b/0x380 [act_ct]
 Read of size 1 at addr ffff888c07603600 by task handler130/6469

 Call Trace:
  <IRQ>
  dump_stack_lvl+0x48/0x70
  print_address_description.constprop.0+0x33/0x3d0
  print_report+0xc0/0x2b0
  kasan_report+0xd0/0x120
  __asan_load1+0x6c/0x80
  tcf_ct_flow_table_process_conn+0x12b/0x380 [act_ct]
  tcf_ct_act+0x886/0x1350 [act_ct]
  tcf_action_exec+0xf8/0x1f0
  fl_classify+0x355/0x360 [cls_flower]
  __tcf_classify+0x1fd/0x330
  tcf_classify+0x21c/0x3c0
  sch_handle_ingress.constprop.0+0x2c5/0x500
  __netif_receive_skb_core.constprop.0+0xb25/0x1510
  __netif_receive_skb_list_core+0x220/0x4c0
  netif_receive_skb_list_internal+0x446/0x620
  napi_complete_done+0x157/0x3d0
  gro_cell_poll+0xcf/0x100
  __napi_poll+0x65/0x310
  net_rx_action+0x30c/0x5c0
  __do_softirq+0x14f/0x491
  __irq_exit_rcu+0x82/0xc0
  irq_exit_rcu+0xe/0x20
  common_interrupt+0xa1/0xb0
  </IRQ>
  <TASK>
  asm_common_interrupt+0x27/0x40

 Allocated by task 6469:
  kasan_save_stack+0x38/0x70
  kasan_set_track+0x25/0x40
  kasan_save_alloc_info+0x1e/0x40
  __kasan_krealloc+0x133/0x190
  krealloc+0xaa/0x130
  nf_ct_ext_add+0xed/0x230 [nf_conntrack]
  tcf_ct_act+0x1095/0x1350 [act_ct]
  tcf_action_exec+0xf8/0x1f0
  fl_classify+0x355/0x360 [cls_flower]
  __tcf_classify+0x1fd/0x330
  tcf_classify+0x21c/0x3c0
  sch_handle_ingress.constprop.0+0x2c5/0x500
  __netif_receive_skb_core.constprop.0+0xb25/0x1510
  __netif_receive_skb_list_core+0x220/0x4c0
  netif_receive_skb_list_internal+0x446/0x620
  napi_complete_done+0x157/0x3d0
  gro_cell_poll+0xcf/0x100
  __napi_poll+0x65/0x310
  net_rx_action+0x30c/0x5c0
  __do_softirq+0x14f/0x491

 Freed by task 6469:
  kasan_save_stack+0x38/0x70
  kasan_set_track+0x25/0x40
  kasan_save_free_info+0x2b/0x60
  ____kasan_slab_free+0x180/0x1f0
  __kasan_slab_free+0x12/0x30
  slab_free_freelist_hook+0xd2/0x1a0
  __kmem_cache_free+0x1a2/0x2f0
  kfree+0x78/0x120
  nf_conntrack_free+0x74/0x130 [nf_conntrack]
  nf_ct_destroy+0xb2/0x140 [nf_conntrack]
  __nf_ct_resolve_clash+0x529/0x5d0 [nf_conntrack]
  nf_ct_resolve_clash+0xf6/0x490 [nf_conntrack]
  __nf_conntrack_confirm+0x2c6/0x770 [nf_conntrack]
  tcf_ct_act+0x12ad/0x1350 [act_ct]
  tcf_action_exec+0xf8/0x1f0
  fl_classify+0x355/0x360 [cls_flower]
  __tcf_classify+0x1fd/0x330
  tcf_classify+0x21c/0x3c0
  sch_handle_ingress.constprop.0+0x2c5/0x500
  __netif_receive_skb_core.constprop.0+0xb25/0x1510
  __netif_receive_skb_list_core+0x220/0x4c0
  netif_receive_skb_list_internal+0x446/0x620
  napi_complete_done+0x157/0x3d0
  gro_cell_poll+0xcf/0x100
  __napi_poll+0x65/0x310
  net_rx_action+0x30c/0x5c0
  __do_softirq+0x14f/0x491

The ct may be dropped if a clash has been resolved but is still passed to
the tcf_ct_flow_table_process_conn function for further usage. This issue
can be fixed by retrieving ct from skb again after confirming conntrack.",Linux,Linux,"f07c548314776231f0d47d73ec6caa5b17e876e8, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33"
921,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46755,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mwifiex: Do not return unused priv in mwifiex_get_priv_by_id()

mwifiex_get_priv_by_id() returns the priv pointer corresponding to
the bss_num and bss_type, but without checking if the priv is actually
currently in use.
Unused priv pointers do not have a wiphy attached to them which can
lead to NULL pointer dereferences further down the callstack.  Fix
this by returning only used priv pointers which have priv->bss_mode
set to something else than NL80211_IFTYPE_UNSPECIFIED.

Said NULL pointer dereference happened when an Accesspoint was started
with wpa_supplicant -i mlan0 with this config:

network={
        ssid=""somessid""
        mode=2
        frequency=2412
        key_mgmt=WPA-PSK WPA-PSK-SHA256
        proto=RSN
        group=CCMP
        pairwise=CCMP
        psk=""12345678""
}

When waiting for the AP to be established, interrupting wpa_supplicant
with <ctrl-c> and starting it again this happens:

| Unable to handle kernel NULL pointer dereference at virtual address 0000000000000140
| Mem abort info:
|   ESR = 0x0000000096000004
|   EC = 0x25: DABT (current EL), IL = 32 bits
|   SET = 0, FnV = 0
|   EA = 0, S1PTW = 0
|   FSC = 0x04: level 0 translation fault
| Data abort info:
|   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
|   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
|   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
| user pgtable: 4k pages, 48-bit VAs, pgdp=0000000046d96000
| [0000000000000140] pgd=0000000000000000, p4d=0000000000000000
| Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
| Modules linked in: caam_jr caamhash_desc spidev caamalg_desc crypto_engine authenc libdes mwifiex_sdio
+mwifiex crct10dif_ce cdc_acm onboard_usb_hub fsl_imx8_ddr_perf imx8m_ddrc rtc_ds1307 lm75 rtc_snvs
+imx_sdma caam imx8mm_thermal spi_imx error imx_cpufreq_dt fuse ip_tables x_tables ipv6
| CPU: 0 PID: 8 Comm: kworker/0:1 Not tainted 6.9.0-00007-g937242013fce-dirty #18
| Hardware name: somemachine (DT)
| Workqueue: events sdio_irq_work
| pstate: 00000005 (nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
| pc : mwifiex_get_cfp+0xd8/0x15c [mwifiex]
| lr : mwifiex_get_cfp+0x34/0x15c [mwifiex]
| sp : ffff8000818b3a70
| x29: ffff8000818b3a70 x28: ffff000006bfd8a5 x27: 0000000000000004
| x26: 000000000000002c x25: 0000000000001511 x24: 0000000002e86bc9
| x23: ffff000006bfd996 x22: 0000000000000004 x21: ffff000007bec000
| x20: 000000000000002c x19: 0000000000000000 x18: 0000000000000000
| x17: 000000040044ffff x16: 00500072b5503510 x15: ccc283740681e517
| x14: 0201000101006d15 x13: 0000000002e8ff43 x12: 002c01000000ffb1
| x11: 0100000000000000 x10: 02e8ff43002c0100 x9 : 0000ffb100100157
| x8 : ffff000003d20000 x7 : 00000000000002f1 x6 : 00000000ffffe124
| x5 : 0000000000000001 x4 : 0000000000000003 x3 : 0000000000000000
| x2 : 0000000000000000 x1 : 0001000000011001 x0 : 0000000000000000
| Call trace:
|  mwifiex_get_cfp+0xd8/0x15c [mwifiex]
|  mwifiex_parse_single_response_buf+0x1d0/0x504 [mwifiex]
|  mwifiex_handle_event_ext_scan_report+0x19c/0x2f8 [mwifiex]
|  mwifiex_process_sta_event+0x298/0xf0c [mwifiex]
|  mwifiex_process_event+0x110/0x238 [mwifiex]
|  mwifiex_main_process+0x428/0xa44 [mwifiex]
|  mwifiex_sdio_interrupt+0x64/0x12c [mwifiex_sdio]
|  process_sdio_pending_irqs+0x64/0x1b8
|  sdio_irq_work+0x4c/0x7c
|  process_one_work+0x148/0x2a0
|  worker_thread+0x2fc/0x40c
|  kthread+0x110/0x114
|  ret_from_fork+0x10/0x20
| Code: a94153f3 a8c37bfd d50323bf d65f03c0 (f940a000)
| ---[ end trace 0000000000000000 ]---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
922,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46826,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ELF: fix kernel.randomize_va_space double read

ELF loader uses ""randomize_va_space"" twice. It is sysctl and can change
at any moment, so 2 loads could see 2 different values in theory with
unpredictable consequences.

Issue exactly one load for consistent value across one exec.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
923,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-26886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: af_bluetooth: Fix deadlock

Attemting to do sock_lock on .recvmsg may cause a deadlock as shown
bellow, so instead of using sock_sock this uses sk_receive_queue.lock
on bt_sock_ioctl to avoid the UAF:

INFO: task kworker/u9:1:121 blocked for more than 30 seconds.
      Not tainted 6.7.6-lemon #183
Workqueue: hci0 hci_rx_work
Call Trace:
 <TASK>
 __schedule+0x37d/0xa00
 schedule+0x32/0xe0
 __lock_sock+0x68/0xa0
 ? __pfx_autoremove_wake_function+0x10/0x10
 lock_sock_nested+0x43/0x50
 l2cap_sock_recv_cb+0x21/0xa0
 l2cap_recv_frame+0x55b/0x30a0
 ? psi_task_switch+0xeb/0x270
 ? finish_task_switch.isra.0+0x93/0x2a0
 hci_rx_work+0x33a/0x3f0
 process_one_work+0x13a/0x2f0
 worker_thread+0x2f0/0x410
 ? __pfx_worker_thread+0x10/0x10
 kthread+0xe0/0x110
 ? __pfx_kthread+0x10/0x10
 ret_from_fork+0x2c/0x50
 ? __pfx_kthread+0x10/0x10
 ret_from_fork_asm+0x1b/0x30
 </TASK>",Linux,Linux,"37f71e2c9f515834841826f4eb68ec33cfb2a1ff, 37f71e2c9f515834841826f4eb68ec33cfb2a1ff, 1d576c3a5af850bf11fbd103f9ba11aa6d6061fb, 2e07e8348ea454615e268222ae3fc240421be768, 2e07e8348ea454615e268222ae3fc240421be768, 2e07e8348ea454615e268222ae3fc240421be768"
924,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53061,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: s5p-jpeg: prevent buffer overflows

The current logic allows word to be less than 2. If this happens,
there will be buffer overflows, as reported by smatch. Add extra
checks to prevent it.

While here, remove an unused word = 0 assignment.",Linux,Linux,"6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4, 6c96dbbc2aa9f5b4aed8792989d69eae22bf77c4"
925,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48992,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: soc-pcm: Add NULL check in BE reparenting

Add NULL check in dpcm_be_reparent API, to handle
kernel NULL pointer dereference error.
The issue occurred in fuzzing test.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
927,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49010,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

hwmon: (coretemp) Check for null before removing sysfs attrs

If coretemp_add_core() gets an error then pdata->core_data[indx]
is already NULL and has been kfreed. Don't pass that to
sysfs_remove_group() as that will crash in sysfs_remove_group().

[Shortened for readability]
[91854.020159] sysfs: cannot create duplicate filename '/devices/platform/coretemp.0/hwmon/hwmon2/temp20_label'
<cpu offline>
[91855.126115] BUG: kernel NULL pointer dereference, address: 0000000000000188
[91855.165103] #PF: supervisor read access in kernel mode
[91855.194506] #PF: error_code(0x0000) - not-present page
[91855.224445] PGD 0 P4D 0
[91855.238508] Oops: 0000 [#1] PREEMPT SMP PTI
...
[91855.342716] RIP: 0010:sysfs_remove_group+0xc/0x80
...
[91855.796571] Call Trace:
[91855.810524]  coretemp_cpu_offline+0x12b/0x1dd [coretemp]
[91855.841738]  ? coretemp_cpu_online+0x180/0x180 [coretemp]
[91855.871107]  cpuhp_invoke_callback+0x105/0x4b0
[91855.893432]  cpuhp_thread_fun+0x8e/0x150
...

Fix this by checking for NULL first.",Linux,Linux,"199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace, 199e0de7f5df31a4fc485d4aaaf8a07718252ace"
933,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-42098,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

crypto: ecdh - explicitly zeroize private_key

private_key is overwritten with the key parameter passed in by the
caller (if present), or alternatively a newly generated private key.
However, it is possible that the caller provides a key (or the newly
generated key) which is shorter than the previous key. In that
scenario, some key material from the previous key would not be
overwritten. The easiest solution is to explicitly zeroize the entire
private_key array first.

Note that this patch slightly changes the behavior of this function:
previously, if the ecc_gen_privkey failed, the old private_key would
remain. Now, the private_key is always zeroized. This behavior is
consistent with the case where params.key is set and ecc_is_key_valid
fails.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
934,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-41082,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-fabrics: use reserved tag for reg read/write command

In some scenarios, if too many commands are issued by nvme command in
the same time by user tasks, this may exhaust all tags of admin_q. If
a reset (nvme reset or IO timeout) occurs before these commands finish,
reconnect routine may fail to update nvme regs due to insufficient tags,
which will cause kernel hang forever. In order to workaround this issue,
maybe we can let reg_read32()/reg_read64()/reg_write32() use reserved
tags. This maybe safe for nvmf:

1. For the disable ctrl path,  we will not issue connect command
2. For the enable ctrl / fw activate path, since connect and reg_xx()
   are called serially.

So the reserved tags may still be enough while reg_xx() use reserved tags.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
928,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47697,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drivers: media: dvb-frontends/rtl2830: fix an out-of-bounds write error

Ensure index in rtl2830_pid_filter does not exceed 31 to prevent
out-of-bounds access.

dev->filters is a 32-bit value, so set_bit and clear_bit functions should
only operate on indices from 0 to 31. If index is 32, it will attempt to
access a non-existent 33rd bit, leading to out-of-bounds access.
Change the boundary check from index > 32 to index >= 32 to resolve this
issue.",Linux,Linux,"df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6"
929,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-41016,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: strict bound check before memcmp in ocfs2_xattr_find_entry()

xattr in ocfs2 maybe 'non-indexed', which saved with additional space
requested.  It's better to check if the memory is out of bound before
memcmp, although this possibility mainly comes from crafted poisonous
images.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
930,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49890,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/pm: ensure the fw_info is not null before using it

This resolves the dereference null return value warning
reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
931,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49028,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ixgbevf: Fix resource leak in ixgbevf_init_module()

ixgbevf_init_module() won't destroy the workqueue created by
create_singlethread_workqueue() when pci_register_driver() failed. Add
destroy_workqueue() in fail path to prevent the resource leak.

Similar to the handling of u132_hcd_init in commit f276e002793c
(""usb: u132-hcd: fix resource leak"")",Linux,Linux,"40a13e2493c9882cb4d09054d81a5063cd1589a2, 40a13e2493c9882cb4d09054d81a5063cd1589a2, 40a13e2493c9882cb4d09054d81a5063cd1589a2, 40a13e2493c9882cb4d09054d81a5063cd1589a2"
932,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49015,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: hsr: Fix potential use-after-free

The skb is delivered to netif_rx() which may free it, after calling this,
dereferencing skb may trigger use-after-free.",Linux,Linux,"f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d, f421436a591d34fa5279b54a96ac07d70250cc8d"
919,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-50252,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_ipip: Fix memory leak when changing remote IPv6 address

The device stores IPv6 addresses that are used for encapsulation in
linear memory that is managed by the driver.

Changing the remote address of an ip6gre net device never worked
properly, but since cited commit the following reproducer [1] would
result in a warning [2] and a memory leak [3]. The problem is that the
new remote address is never added by the driver to its hash table (and
therefore the device) and the old address is never removed from it.

Fix by programming the new address when the configuration of the ip6gre
net device changes and removing the old one. If the address did not
change, then the above would result in increasing the reference count of
the address and then decreasing it.

[1]
 # ip link add name bla up type ip6gre local 2001:db8:1::1 remote 2001:db8:2::1 tos inherit ttl inherit
 # ip link set dev bla type ip6gre remote 2001:db8:3::1
 # ip link del dev bla
 # devlink dev reload pci/0000:01:00.0

[2]
WARNING: CPU: 0 PID: 1682 at drivers/net/ethernet/mellanox/mlxsw/spectrum.c:3002 mlxsw_sp_ipv6_addr_put+0x140/0x1d0
Modules linked in:
CPU: 0 UID: 0 PID: 1682 Comm: ip Not tainted 6.12.0-rc3-custom-g86b5b55bc835 #151
Hardware name: Nvidia SN5600/VMOD0013, BIOS 5.13 05/31/2023
RIP: 0010:mlxsw_sp_ipv6_addr_put+0x140/0x1d0
[...]
Call Trace:
 <TASK>
 mlxsw_sp_router_netdevice_event+0x55f/0x1240
 notifier_call_chain+0x5a/0xd0
 call_netdevice_notifiers_info+0x39/0x90
 unregister_netdevice_many_notify+0x63e/0x9d0
 rtnl_dellink+0x16b/0x3a0
 rtnetlink_rcv_msg+0x142/0x3f0
 netlink_rcv_skb+0x50/0x100
 netlink_unicast+0x242/0x390
 netlink_sendmsg+0x1de/0x420
 ____sys_sendmsg+0x2bd/0x320
 ___sys_sendmsg+0x9a/0xe0
 __sys_sendmsg+0x7a/0xd0
 do_syscall_64+0x9e/0x1a0
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

[3]
unreferenced object 0xffff898081f597a0 (size 32):
  comm ""ip"", pid 1626, jiffies 4294719324
  hex dump (first 32 bytes):
    20 01 0d b8 00 02 00 00 00 00 00 00 00 00 00 01   ...............
    21 49 61 83 80 89 ff ff 00 00 00 00 01 00 00 00  !Ia.............
  backtrace (crc fd9be911):
    [<00000000df89c55d>] __kmalloc_cache_noprof+0x1da/0x260
    [<00000000ff2a1ddb>] mlxsw_sp_ipv6_addr_kvdl_index_get+0x281/0x340
    [<000000009ddd445d>] mlxsw_sp_router_netdevice_event+0x47b/0x1240
    [<00000000743e7757>] notifier_call_chain+0x5a/0xd0
    [<000000007c7b9e13>] call_netdevice_notifiers_info+0x39/0x90
    [<000000002509645d>] register_netdevice+0x5f7/0x7a0
    [<00000000c2e7d2a9>] ip6gre_newlink_common.isra.0+0x65/0x130
    [<0000000087cd6d8d>] ip6gre_newlink+0x72/0x120
    [<000000004df7c7cc>] rtnl_newlink+0x471/0xa20
    [<0000000057ed632a>] rtnetlink_rcv_msg+0x142/0x3f0
    [<0000000032e0d5b5>] netlink_rcv_skb+0x50/0x100
    [<00000000908bca63>] netlink_unicast+0x242/0x390
    [<00000000cdbe1c87>] netlink_sendmsg+0x1de/0x420
    [<0000000011db153e>] ____sys_sendmsg+0x2bd/0x320
    [<000000003b6d53eb>] ___sys_sendmsg+0x9a/0xe0
    [<00000000cae27c62>] __sys_sendmsg+0x7a/0xd0",Linux,Linux,"cf42911523e02026cb56d329e584ae5923e94ba1, cf42911523e02026cb56d329e584ae5923e94ba1, cf42911523e02026cb56d329e584ae5923e94ba1, cf42911523e02026cb56d329e584ae5923e94ba1"
909,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46672,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: brcmfmac: cfg80211: Handle SSID based pmksa deletion

wpa_supplicant 2.11 sends since 1efdba5fdc2c (""Handle PMKSA flush in the
driver for SAE/OWE offload cases"") SSID based PMKSA del commands.
brcmfmac is not prepared and tries to dereference the NULL bssid and
pmkid pointers in cfg80211_pmksa. PMKID_V3 operations support SSID based
updates so copy the SSID.",Linux,Linux,"a96202acaea47fa8377088e0952bb63bd02a3bab, a96202acaea47fa8377088e0952bb63bd02a3bab, a96202acaea47fa8377088e0952bb63bd02a3bab"
917,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-35890,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

gro: fix ownership transfer

If packets are GROed with fraglist they might be segmented later on and
continue their journey in the stack. In skb_segment_list those skbs can
be reused as-is. This is an issue as their destructor was removed in
skb_gro_receive_list but not the reference to their socket, and then
they can't be orphaned. Fix this by also removing the reference to the
socket.

For example this could be observed,

  kernel BUG at include/linux/skbuff.h:3131!  (skb_orphan)
  RIP: 0010:ip6_rcv_core+0x11bc/0x19a0
  Call Trace:
   ipv6_list_rcv+0x250/0x3f0
   __netif_receive_skb_list_core+0x49d/0x8f0
   netif_receive_skb_list_internal+0x634/0xd40
   napi_complete_done+0x1d2/0x7d0
   gro_cell_poll+0x118/0x1f0

A similar construction is found in skb_gro_receive, apply the same
change there.",Linux,Linux,"5e10da5385d20c4bae587bc2921e5fdd9655d5fc, 5e10da5385d20c4bae587bc2921e5fdd9655d5fc, 5e10da5385d20c4bae587bc2921e5fdd9655d5fc, 5e10da5385d20c4bae587bc2921e5fdd9655d5fc, 5e10da5385d20c4bae587bc2921e5fdd9655d5fc"
908,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

platform/x86: ISST: Fix the KASAN report slab-out-of-bounds bug

Attaching SST PCI device to VM causes ""BUG: KASAN: slab-out-of-bounds"".
kasan report:
[   19.411889] ==================================================================
[   19.413702] BUG: KASAN: slab-out-of-bounds in _isst_if_get_pci_dev+0x3d5/0x400 [isst_if_common]
[   19.415634] Read of size 8 at addr ffff888829e65200 by task cpuhp/16/113
[   19.417368]
[   19.418627] CPU: 16 PID: 113 Comm: cpuhp/16 Tainted: G            E      6.9.0 #10
[   19.420435] Hardware name: VMware, Inc. VMware20,1/440BX Desktop Reference Platform, BIOS VMW201.00V.20192059.B64.2207280713 07/28/2022
[   19.422687] Call Trace:
[   19.424091]  <TASK>
[   19.425448]  dump_stack_lvl+0x5d/0x80
[   19.426963]  ? _isst_if_get_pci_dev+0x3d5/0x400 [isst_if_common]
[   19.428694]  print_report+0x19d/0x52e
[   19.430206]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
[   19.431837]  ? _isst_if_get_pci_dev+0x3d5/0x400 [isst_if_common]
[   19.433539]  kasan_report+0xf0/0x170
[   19.435019]  ? _isst_if_get_pci_dev+0x3d5/0x400 [isst_if_common]
[   19.436709]  _isst_if_get_pci_dev+0x3d5/0x400 [isst_if_common]
[   19.438379]  ? __pfx_sched_clock_cpu+0x10/0x10
[   19.439910]  isst_if_cpu_online+0x406/0x58f [isst_if_common]
[   19.441573]  ? __pfx_isst_if_cpu_online+0x10/0x10 [isst_if_common]
[   19.443263]  ? ttwu_queue_wakelist+0x2c1/0x360
[   19.444797]  cpuhp_invoke_callback+0x221/0xec0
[   19.446337]  cpuhp_thread_fun+0x21b/0x610
[   19.447814]  ? __pfx_cpuhp_thread_fun+0x10/0x10
[   19.449354]  smpboot_thread_fn+0x2e7/0x6e0
[   19.450859]  ? __pfx_smpboot_thread_fn+0x10/0x10
[   19.452405]  kthread+0x29c/0x350
[   19.453817]  ? __pfx_kthread+0x10/0x10
[   19.455253]  ret_from_fork+0x31/0x70
[   19.456685]  ? __pfx_kthread+0x10/0x10
[   19.458114]  ret_from_fork_asm+0x1a/0x30
[   19.459573]  </TASK>
[   19.460853]
[   19.462055] Allocated by task 1198:
[   19.463410]  kasan_save_stack+0x30/0x50
[   19.464788]  kasan_save_track+0x14/0x30
[   19.466139]  __kasan_kmalloc+0xaa/0xb0
[   19.467465]  __kmalloc+0x1cd/0x470
[   19.468748]  isst_if_cdev_register+0x1da/0x350 [isst_if_common]
[   19.470233]  isst_if_mbox_init+0x108/0xff0 [isst_if_mbox_msr]
[   19.471670]  do_one_initcall+0xa4/0x380
[   19.472903]  do_init_module+0x238/0x760
[   19.474105]  load_module+0x5239/0x6f00
[   19.475285]  init_module_from_file+0xd1/0x130
[   19.476506]  idempotent_init_module+0x23b/0x650
[   19.477725]  __x64_sys_finit_module+0xbe/0x130
[   19.476506]  idempotent_init_module+0x23b/0x650
[   19.477725]  __x64_sys_finit_module+0xbe/0x130
[   19.478920]  do_syscall_64+0x82/0x160
[   19.480036]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[   19.481292]
[   19.482205] The buggy address belongs to the object at ffff888829e65000
 which belongs to the cache kmalloc-512 of size 512
[   19.484818] The buggy address is located 0 bytes to the right of
 allocated 512-byte region [ffff888829e65000, ffff888829e65200)
[   19.487447]
[   19.488328] The buggy address belongs to the physical page:
[   19.489569] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0xffff888829e60c00 pfn:0x829e60
[   19.491140] head: order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0
[   19.492466] anon flags: 0x57ffffc0000840(slab|head|node=1|zone=2|lastcpupid=0x1fffff)
[   19.493914] page_type: 0xffffffff()
[   19.494988] raw: 0057ffffc0000840 ffff88810004cc80 0000000000000000 0000000000000001
[   19.496451] raw: ffff888829e60c00 0000000080200018 00000001ffffffff 0000000000000000
[   19.497906] head: 0057ffffc0000840 ffff88810004cc80 0000000000000000 0000000000000001
[   19.499379] head: ffff888829e60c00 0000000080200018 00000001ffffffff 0000000000000000
[   19.500844] head: 0057ffffc0000003 ffffea0020a79801 ffffea0020a79848 00000000ffffffff
[   19.502316] head: 0000000800000000 0000000000000000 00000000ffffffff 0000000000000000
[   19.503784] page dumped because: k
---truncated---",Linux,Linux,"017a634f9f38ae704d9d57817555773de700219e, 9a1aac8a96dc014bec49806a7a964bf2fdbd315f, 9a1aac8a96dc014bec49806a7a964bf2fdbd315f, 9a1aac8a96dc014bec49806a7a964bf2fdbd315f, 9a1aac8a96dc014bec49806a7a964bf2fdbd315f, 9a1aac8a96dc014bec49806a7a964bf2fdbd315f"
902,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: SCO: Fix not validating setsockopt user input

syzbot reported sco_sock_setsockopt() is copying data without
checking user input length.

BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset
include/linux/sockptr.h:49 [inline]
BUG: KASAN: slab-out-of-bounds in copy_from_sockptr
include/linux/sockptr.h:55 [inline]
BUG: KASAN: slab-out-of-bounds in sco_sock_setsockopt+0xc0b/0xf90
net/bluetooth/sco.c:893
Read of size 4 at addr ffff88805f7b15a3 by task syz-executor.5/12578",Linux,Linux,"b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197, b96e9c671b05f95126753a22145d4509d45ca197"
903,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36953,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: vgic-v2: Check for non-NULL vCPU in vgic_v2_parse_attr()

vgic_v2_parse_attr() is responsible for finding the vCPU that matches
the user-provided CPUID, which (of course) may not be valid. If the ID
is invalid, kvm_get_vcpu_by_id() returns NULL, which isn't handled
gracefully.

Similar to the GICv3 uaccess flow, check that kvm_get_vcpu_by_id()
actually returns something and fail the ioctl if not.",Linux,Linux,"7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab, 7d450e2821710718fd6703e9c486249cee913bab"
904,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46858,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: pm: Fix uaf in __timer_delete_sync

There are two paths to access mptcp_pm_del_add_timer, result in a race
condition:

     CPU1				CPU2
     ====                               ====
     net_rx_action
     napi_poll                          netlink_sendmsg
     __napi_poll                        netlink_unicast
     process_backlog                    netlink_unicast_kernel
     __netif_receive_skb                genl_rcv
     __netif_receive_skb_one_core       netlink_rcv_skb
     NF_HOOK                            genl_rcv_msg
     ip_local_deliver_finish            genl_family_rcv_msg
     ip_protocol_deliver_rcu            genl_family_rcv_msg_doit
     tcp_v4_rcv                         mptcp_pm_nl_flush_addrs_doit
     tcp_v4_do_rcv                      mptcp_nl_remove_addrs_list
     tcp_rcv_established                mptcp_pm_remove_addrs_and_subflows
     tcp_data_queue                     remove_anno_list_by_saddr
     mptcp_incoming_options             mptcp_pm_del_add_timer
     mptcp_pm_del_add_timer             kfree(entry)

In remove_anno_list_by_saddr(running on CPU2), after leaving the critical
zone protected by ""pm.lock"", the entry will be released, which leads to the
occurrence of uaf in the mptcp_pm_del_add_timer(running on CPU1).

Keeping a reference to add_timer inside the lock, and calling
sk_stop_timer_sync() with this reference, instead of ""entry->add_timer"".

Move list_del(&entry->list) to mptcp_pm_del_add_timer and inside the pm lock,
do not directly access any members of the entry outside the pm lock, which
can avoid similar ""entry->x"" uaf.",Linux,Linux,"00cfd77b9063dcdf3628a7087faba60de85a9cc8, 00cfd77b9063dcdf3628a7087faba60de85a9cc8, 00cfd77b9063dcdf3628a7087faba60de85a9cc8, 00cfd77b9063dcdf3628a7087faba60de85a9cc8, 00cfd77b9063dcdf3628a7087faba60de85a9cc8"
905,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43905,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/pm: Fix the null pointer dereference for vega10_hwmgr

Check return value and conduct null pointer handling to avoid null pointer dereference.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
906,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44948,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/mtrr: Check if fixed MTRRs exist before saving them

MTRRs have an obsolete fixed variant for fine grained caching control
of the 640K-1MB region that uses separate MSRs. This fixed variant has
a separate capability bit in the MTRR capability MSR.

So far all x86 CPUs which support MTRR have this separate bit set, so it
went unnoticed that mtrr_save_state() does not check the capability bit
before accessing the fixed MTRR MSRs.

Though on a CPU that does not support the fixed MTRR capability this
results in a #GP.  The #GP itself is harmless because the RDMSR fault is
handled gracefully, but results in a WARN_ON().

Add the missing capability check to prevent this.",Linux,Linux,"2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a, 2b1f6278d77c1f2f669346fc2bb48012b5e9495a"
907,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46716,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

dmaengine: altera-msgdma: properly free descriptor in msgdma_free_descriptor

Remove list_del call in msgdma_chan_desc_cleanup, this should be the role
of msgdma_free_descriptor. In consequence replace list_add_tail with
list_move_tail in msgdma_free_descriptor.

This fixes the path:
   msgdma_free_chan_resources -> msgdma_free_descriptors ->
   msgdma_free_desc_list -> msgdma_free_descriptor

which does not correctly free the descriptors as first nodes were not
removed from the list.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
936,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-42253,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

gpio: pca953x: fix pca953x_irq_bus_sync_unlock race

Ensure that `i2c_lock' is held when setting interrupt latch and mask in
pca953x_irq_bus_sync_unlock() in order to avoid races.

The other (non-probe) call site pca953x_gpio_set_multiple() ensures the
lock is held before calling pca953x_write_regs().

The problem occurred when a request raced against irq_bus_sync_unlock()
approximately once per thousand reboots on an i.MX8MP based system.

 * Normal case

   0-0022: write register AI|3a {03,02,00,00,01} Input latch P0
   0-0022: write register AI|49 {fc,fd,ff,ff,fe} Interrupt mask P0
   0-0022: write register AI|08 {ff,00,00,00,00} Output P3
   0-0022: write register AI|12 {fc,00,00,00,00} Config P3

 * Race case

   0-0022: write register AI|08 {ff,00,00,00,00} Output P3
   0-0022: write register AI|08 {03,02,00,00,01} *** Wrong register ***
   0-0022: write register AI|12 {fc,00,00,00,00} Config P3
   0-0022: write register AI|49 {fc,fd,ff,ff,fe} Interrupt mask P0",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
916,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-53122,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: cope racing subflow creation in mptcp_rcv_space_adjust

Additional active subflows - i.e. created by the in kernel path
manager - are included into the subflow list before starting the
3whs.

A racing recvmsg() spooling data received on an already established
subflow would unconditionally call tcp_cleanup_rbuf() on all the
current subflows, potentially hitting a divide by zero error on
the newly created ones.

Explicitly check that the subflow is in a suitable state before
invoking tcp_cleanup_rbuf().",Linux,Linux,"c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1, c76c6956566f974bac2470bd72fc22fb923e04a1"
910,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44989,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bonding: fix xfrm real_dev null pointer dereference

We shouldn't set real_dev to NULL because packets can be in transit and
xfrm might call xdo_dev_offload_ok() in parallel. All callbacks assume
real_dev is set.

 Example trace:
 kernel: BUG: unable to handle page fault for address: 0000000000001030
 kernel: bond0: (slave eni0np1): making interface the new active one
 kernel: #PF: supervisor write access in kernel mode
 kernel: #PF: error_code(0x0002) - not-present page
 kernel: PGD 0 P4D 0
 kernel: Oops: 0002 [#1] PREEMPT SMP
 kernel: CPU: 4 PID: 2237 Comm: ping Not tainted 6.7.7+ #12
 kernel: Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-2.fc40 04/01/2014
 kernel: RIP: 0010:nsim_ipsec_offload_ok+0xc/0x20 [netdevsim]
 kernel: bond0: (slave eni0np1): bond_ipsec_add_sa_all: failed to add SA
 kernel: Code: e0 0f 0b 48 83 7f 38 00 74 de 0f 0b 48 8b 47 08 48 8b 37 48 8b 78 40 e9 b2 e5 9a d7 66 90 0f 1f 44 00 00 48 8b 86 80 02 00 00 <83> 80 30 10 00 00 01 b8 01 00 00 00 c3 0f 1f 80 00 00 00 00 0f 1f
 kernel: bond0: (slave eni0np1): making interface the new active one
 kernel: RSP: 0018:ffffabde81553b98 EFLAGS: 00010246
 kernel: bond0: (slave eni0np1): bond_ipsec_add_sa_all: failed to add SA
 kernel:
 kernel: RAX: 0000000000000000 RBX: ffff9eb404e74900 RCX: ffff9eb403d97c60
 kernel: RDX: ffffffffc090de10 RSI: ffff9eb404e74900 RDI: ffff9eb3c5de9e00
 kernel: RBP: ffff9eb3c0a42000 R08: 0000000000000010 R09: 0000000000000014
 kernel: R10: 7974203030303030 R11: 3030303030303030 R12: 0000000000000000
 kernel: R13: ffff9eb3c5de9e00 R14: ffffabde81553cc8 R15: ffff9eb404c53000
 kernel: FS:  00007f2a77a3ad00(0000) GS:ffff9eb43bd00000(0000) knlGS:0000000000000000
 kernel: CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 kernel: CR2: 0000000000001030 CR3: 00000001122ab000 CR4: 0000000000350ef0
 kernel: bond0: (slave eni0np1): making interface the new active one
 kernel: Call Trace:
 kernel:  <TASK>
 kernel:  ? __die+0x1f/0x60
 kernel: bond0: (slave eni0np1): bond_ipsec_add_sa_all: failed to add SA
 kernel:  ? page_fault_oops+0x142/0x4c0
 kernel:  ? do_user_addr_fault+0x65/0x670
 kernel:  ? kvm_read_and_reset_apf_flags+0x3b/0x50
 kernel: bond0: (slave eni0np1): making interface the new active one
 kernel:  ? exc_page_fault+0x7b/0x180
 kernel:  ? asm_exc_page_fault+0x22/0x30
 kernel:  ? nsim_bpf_uninit+0x50/0x50 [netdevsim]
 kernel: bond0: (slave eni0np1): bond_ipsec_add_sa_all: failed to add SA
 kernel:  ? nsim_ipsec_offload_ok+0xc/0x20 [netdevsim]
 kernel: bond0: (slave eni0np1): making interface the new active one
 kernel:  bond_ipsec_offload_ok+0x7b/0x90 [bonding]
 kernel:  xfrm_output+0x61/0x3b0
 kernel: bond0: (slave eni0np1): bond_ipsec_add_sa_all: failed to add SA
 kernel:  ip_push_pending_frames+0x56/0x80",Linux,Linux,"18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4"
911,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38545,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix UAF for cq async event

The refcount of CQ is not protected by locks. When CQ asynchronous
events and CQ destruction are concurrent, CQ may have been released,
which will cause UAF.

Use the xa_lock() to protect the CQ refcount.",Linux,Linux,"9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b"
912,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-6610,n/a,n/a,Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,An out-of-bounds read vulnerability was found in smb2_dump_detail in fs/smb/client/smb2ops.c in the Linux Kernel. This issue could allow a local attacker to crash the system or leak internal kernel information.,Red Hat,Red Hat Enterprise Linux 8,0:4.18.0-513.18.1.rt7.320.el8_9
913,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-46713,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

perf/aux: Fix AUX buffer serialization

Ole reported that event->mmap_mutex is strictly insufficient to
serialize the AUX buffer, add a per RB mutex to fully serialize it.

Note that in the lock order comment the perf_event::mmap_mutex order
was already wrong, that is, it nesting under mmap_lock is not new with
this patch.",Linux,Linux,"45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff"
914,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-50208,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/bnxt_re: Fix a bug while setting up Level-2 PBL pages

Avoid memory corruption while setting up Level-2 PBL pages for the non MR
resources when num_pages > 256K.

There will be a single PDE page address (contiguous pages in the case of >
PAGE_SIZE), but, current logic assumes multiple pages, leading to invalid
memory access after 256K PBL entries in the PDE.",Linux,Linux,"0c4dcd602817502bb3dced7a834a13ef717d65a4, 0c4dcd602817502bb3dced7a834a13ef717d65a4, 0c4dcd602817502bb3dced7a834a13ef717d65a4, 0c4dcd602817502bb3dced7a834a13ef717d65a4, 0c4dcd602817502bb3dced7a834a13ef717d65a4, 0c4dcd602817502bb3dced7a834a13ef717d65a4"
915,Multiples vulnérabilités dans le noyau Linux de Red Hat ,Avis,2025-01-10,CVE-2024-26830,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0023/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: Do not allow untrusted VF to remove administratively set MAC

Currently when PF administratively sets VF's MAC address and the VF
is put down (VF tries to delete all MACs) then the MAC is removed
from MAC filters and primary VF MAC is zeroed.

Do not allow untrusted VF to remove primary MAC when it was set
administratively by PF.

Reproducer:
1) Create VF
2) Set VF interface up
3) Administratively set the VF's MAC
4) Put VF interface down

[root@host ~]# echo 1 > /sys/class/net/enp2s0f0/device/sriov_numvfs
[root@host ~]# ip link set enp2s0f0v0 up
[root@host ~]# ip link set enp2s0f0 vf 0 mac fe:6c:b5:da:c7:7d
[root@host ~]# ip link show enp2s0f0
23: enp2s0f0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
    link/ether 3c:ec:ef:b7:dd:04 brd ff:ff:ff:ff:ff:ff
    vf 0     link/ether fe:6c:b5:da:c7:7d brd ff:ff:ff:ff:ff:ff, spoof checking on, link-state auto, trust off
[root@host ~]# ip link set enp2s0f0v0 down
[root@host ~]# ip link show enp2s0f0
23: enp2s0f0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP mode DEFAULT group default qlen 1000
    link/ether 3c:ec:ef:b7:dd:04 brd ff:ff:ff:ff:ff:ff
    vf 0     link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff, spoof checking on, link-state auto, trust off",Linux,Linux,"700bbf6c1f9e4ab055528d5ab4ac5815fe4a6c1b, 700bbf6c1f9e4ab055528d5ab4ac5815fe4a6c1b, 700bbf6c1f9e4ab055528d5ab4ac5815fe4a6c1b, 700bbf6c1f9e4ab055528d5ab4ac5815fe4a6c1b"
935,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50055,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

driver core: bus: Fix double free in driver API bus_register()

For bus_register(), any error which happens after kset_register() will
cause that @priv are freed twice, fixed by setting @priv with NULL after
the first free.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
945,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50289,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: av7110: fix a spectre vulnerability

As warned by smatch:
	drivers/staging/media/av7110/av7110_ca.c:270 dvb_ca_ioctl() warn: potential spectre issue 'av7110->ci_slot' [w] (local cap)

There is a spectre-related vulnerability at the code. Fix it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
937,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50195,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

posix-clock: Fix missing timespec64 check in pc_clock_settime()

As Andrew pointed out, it will make sense that the PTP core
checked timespec64 struct's tv_sec and tv_nsec range before calling
ptp->info->settime64().

As the man manual of clock_settime() said, if tp.tv_sec is negative or
tp.tv_nsec is outside the range [0..999,999,999], it should return EINVAL,
which include dynamic clocks which handles PTP clock, and the condition is
consistent with timespec64_valid(). As Thomas suggested, timespec64_valid()
only check the timespec is valid, but not ensure that the time is
in a valid range, so check it ahead using timespec64_valid_strict()
in pc_clock_settime() and return -EINVAL if not valid.

There are some drivers that use tp->tv_sec and tp->tv_nsec directly to
write registers without validity checks and assume that the higher layer
has checked it, which is dangerous and will benefit from this, such as
hclge_ptp_settime(), igb_ptp_settime_i210(), _rcar_gen4_ptp_settime(),
and some drivers can remove the checks of itself.",Linux,Linux,"0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2, 0606f422b453f76c31ab2b1bd52943ff06a2dcf2"
963,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50267,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

USB: serial: io_edgeport: fix use after free in debug printk

The ""dev_dbg(&urb->dev->dev, ..."" which happens after usb_free_urb(urb)
is a use after free of the ""urb"" pointer.  Store the ""dev"" pointer at the
start of the function to avoid this issue.",Linux,Linux,"984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb, 984f68683298ba53af32f909de1f9452fbb37ccb"
957,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47701,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: avoid OOB when system.data xattr changes underneath the filesystem

When looking up for an entry in an inlined directory, if e_value_offs is
changed underneath the filesystem by some change in the block device, it
will lead to an out-of-bounds access that KASAN detects as an UAF.

EXT4-fs (loop0): mounted filesystem 00000000-0000-0000-0000-000000000000 r/w without journal. Quota mode: none.
loop0: detected capacity change from 2048 to 2047
==================================================================
BUG: KASAN: use-after-free in ext4_search_dir+0xf2/0x1c0 fs/ext4/namei.c:1500
Read of size 1 at addr ffff88803e91130f by task syz-executor269/5103

CPU: 0 UID: 0 PID: 5103 Comm: syz-executor269 Not tainted 6.11.0-rc4-syzkaller #0
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:93 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x169/0x550 mm/kasan/report.c:488
 kasan_report+0x143/0x180 mm/kasan/report.c:601
 ext4_search_dir+0xf2/0x1c0 fs/ext4/namei.c:1500
 ext4_find_inline_entry+0x4be/0x5e0 fs/ext4/inline.c:1697
 __ext4_find_entry+0x2b4/0x1b30 fs/ext4/namei.c:1573
 ext4_lookup_entry fs/ext4/namei.c:1727 [inline]
 ext4_lookup+0x15f/0x750 fs/ext4/namei.c:1795
 lookup_one_qstr_excl+0x11f/0x260 fs/namei.c:1633
 filename_create+0x297/0x540 fs/namei.c:3980
 do_symlinkat+0xf9/0x3a0 fs/namei.c:4587
 __do_sys_symlinkat fs/namei.c:4610 [inline]
 __se_sys_symlinkat fs/namei.c:4607 [inline]
 __x64_sys_symlinkat+0x95/0xb0 fs/namei.c:4607
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f3e73ced469
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 21 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff4d40c258 EFLAGS: 00000246 ORIG_RAX: 000000000000010a
RAX: ffffffffffffffda RBX: 0032656c69662f2e RCX: 00007f3e73ced469
RDX: 0000000020000200 RSI: 00000000ffffff9c RDI: 00000000200001c0
RBP: 0000000000000000 R08: 00007fff4d40c290 R09: 00007fff4d40c290
R10: 0023706f6f6c2f76 R11: 0000000000000246 R12: 00007fff4d40c27c
R13: 0000000000000003 R14: 431bde82d7b634db R15: 00007fff4d40c2b0
 </TASK>

Calling ext4_xattr_ibody_find right after reading the inode with
ext4_get_inode_loc will lead to a check of the validity of the xattrs,
avoiding this problem.",Linux,Linux,"e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236"
958,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50171,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: systemport: fix potential memory leak in bcm_sysport_xmit()

The bcm_sysport_xmit() returns NETDEV_TX_OK without freeing skb
in case of dma_map_single() fails, add dev_kfree_skb() to fix it.",Linux,Linux,"80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62, 80105befdb4b8cea924711b40b2462b87df65b62"
959,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-42114,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: restrict NL80211_ATTR_TXQ_QUANTUM values

syzbot is able to trigger softlockups, setting NL80211_ATTR_TXQ_QUANTUM
to 2^31.

We had a similar issue in sch_fq, fixed with commit
d9e15a273306 (""pkt_sched: fq: do not accept silly TCA_FQ_QUANTUM"")

watchdog: BUG: soft lockup - CPU#1 stuck for 26s! [kworker/1:0:24]
Modules linked in:
irq event stamp: 131135
 hardirqs last  enabled at (131134): [<ffff80008ae8778c>] __exit_to_kernel_mode arch/arm64/kernel/entry-common.c:85 [inline]
 hardirqs last  enabled at (131134): [<ffff80008ae8778c>] exit_to_kernel_mode+0xdc/0x10c arch/arm64/kernel/entry-common.c:95
 hardirqs last disabled at (131135): [<ffff80008ae85378>] __el1_irq arch/arm64/kernel/entry-common.c:533 [inline]
 hardirqs last disabled at (131135): [<ffff80008ae85378>] el1_interrupt+0x24/0x68 arch/arm64/kernel/entry-common.c:551
 softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_hh_init net/core/neighbour.c:1538 [inline]
 softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_resolve_output+0x268/0x658 net/core/neighbour.c:1553
 softirqs last disabled at (125896): [<ffff80008904166c>] local_bh_disable+0x10/0x34 include/linux/bottom_half.h:19
CPU: 1 PID: 24 Comm: kworker/1:0 Not tainted 6.9.0-rc7-syzkaller-gfda5695d692c #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
Workqueue: mld mld_ifc_work
pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : __list_del include/linux/list.h:195 [inline]
 pc : __list_del_entry include/linux/list.h:218 [inline]
 pc : list_move_tail include/linux/list.h:310 [inline]
 pc : fq_tin_dequeue include/net/fq_impl.h:112 [inline]
 pc : ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854
 lr : __list_del_entry include/linux/list.h:218 [inline]
 lr : list_move_tail include/linux/list.h:310 [inline]
 lr : fq_tin_dequeue include/net/fq_impl.h:112 [inline]
 lr : ieee80211_tx_dequeue+0x67c/0x3b4c net/mac80211/tx.c:3854
sp : ffff800093d36700
x29: ffff800093d36a60 x28: ffff800093d36960 x27: dfff800000000000
x26: ffff0000d800ad50 x25: ffff0000d800abe0 x24: ffff0000d800abf0
x23: ffff0000e0032468 x22: ffff0000e00324d4 x21: ffff0000d800abf0
x20: ffff0000d800abf8 x19: ffff0000d800abf0 x18: ffff800093d363c0
x17: 000000000000d476 x16: ffff8000805519dc x15: ffff7000127a6cc8
x14: 1ffff000127a6cc8 x13: 0000000000000004 x12: ffffffffffffffff
x11: ffff7000127a6cc8 x10: 0000000000ff0100 x9 : 0000000000000000
x8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000000000
x5 : ffff80009287aa08 x4 : 0000000000000008 x3 : ffff80008034c7fc
x2 : ffff0000e0032468 x1 : 00000000da0e46b8 x0 : ffff0000e0032470
Call trace:
  __list_del include/linux/list.h:195 [inline]
  __list_del_entry include/linux/list.h:218 [inline]
  list_move_tail include/linux/list.h:310 [inline]
  fq_tin_dequeue include/net/fq_impl.h:112 [inline]
  ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854
  wake_tx_push_queue net/mac80211/util.c:294 [inline]
  ieee80211_handle_wake_tx_queue+0x118/0x274 net/mac80211/util.c:315
  drv_wake_tx_queue net/mac80211/driver-ops.h:1350 [inline]
  schedule_and_wake_txq net/mac80211/driver-ops.h:1357 [inline]
  ieee80211_queue_skb+0x18e8/0x2244 net/mac80211/tx.c:1664
  ieee80211_tx+0x260/0x400 net/mac80211/tx.c:1966
  ieee80211_xmit+0x278/0x354 net/mac80211/tx.c:2062
  __ieee80211_subif_start_xmit+0xab8/0x122c net/mac80211/tx.c:4338
  ieee80211_subif_start_xmit+0xe0/0x438 net/mac80211/tx.c:4532
  __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
  netdev_start_xmit include/linux/netdevice.h:4917 [inline]
  xmit_one net/core/dev.c:3531 [inline]
  dev_hard_start_xmit+0x27c/0x938 net/core/dev.c:3547
  __dev_queue_xmit+0x1678/0x33fc net/core/dev.c:4341
  dev_queue_xmit include/linux/netdevice.h:3091 [inline]
  neigh_resolve_output+0x558/0x658 net/core/neighbour.c:1563
  neigh_output include/net/neighbour.h:542 [inline]
  ip6_fini
---truncated---",Linux,Linux,"52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec"
960,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50302,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

HID: core: zero-initialize the report buffer

Since the report buffer is used by all kinds of drivers in various ways, let's
zero-initialize it during allocation to make sure that it can't be ever used
to leak kernel memory via specially-crafted report.",Linux,Linux,"27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca, 27ce405039bfe6d3f4143415c638f56a3df77dca"
961,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47713,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: use two-phase skb reclamation in ieee80211_do_stop()

Since '__dev_queue_xmit()' should be called with interrupts enabled,
the following backtrace:

ieee80211_do_stop()
 ...
 spin_lock_irqsave(&local->queue_stop_reason_lock, flags)
 ...
 ieee80211_free_txskb()
  ieee80211_report_used_skb()
   ieee80211_report_ack_skb()
    cfg80211_mgmt_tx_status_ext()
     nl80211_frame_tx_status()
      genlmsg_multicast_netns()
       genlmsg_multicast_netns_filtered()
        nlmsg_multicast_filtered()
	 netlink_broadcast_filtered()
	  do_one_broadcast()
	   netlink_broadcast_deliver()
	    __netlink_sendskb()
	     netlink_deliver_tap()
	      __netlink_deliver_tap_skb()
	       dev_queue_xmit()
	        __dev_queue_xmit() ; with IRQS disabled
 ...
 spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags)

issues the warning (as reported by syzbot reproducer):

WARNING: CPU: 2 PID: 5128 at kernel/softirq.c:362 __local_bh_enable_ip+0xc3/0x120

Fix this by implementing a two-phase skb reclamation in
'ieee80211_do_stop()', where actual work is performed
outside of a section with interrupts disabled.",Linux,Linux,"5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412"
962,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49936,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net/xen-netback: prevent UAF in xenvif_flush_hash()

During the list_for_each_entry_rcu iteration call of xenvif_flush_hash,
kfree_rcu does not exist inside the rcu read critical section, so if
kfree_rcu is called when the rcu grace period ends during the iteration,
UAF occurs when accessing head->next after the entry becomes free.

Therefore, to solve this, you need to change it to list_for_each_entry_safe.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
964,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49881,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: update orig_path in ext4_find_extent()

In ext4_find_extent(), if the path is not big enough, we free it and set
*orig_path to NULL. But after reallocating and successfully initializing
the path, we don't update *orig_path, in which case the caller gets a
valid path but a NULL ppath, and this may cause a NULL pointer dereference
or a path memory leak. For example:

ext4_split_extent
  path = *ppath = 2000
  ext4_find_extent
    if (depth > path[0].p_maxdepth)
      kfree(path = 2000);
      *orig_path = path = NULL;
      path = kcalloc() = 3000
  ext4_split_extent_at(*ppath = NULL)
    path = *ppath;
    ex = path[depth].p_ext;
    // NULL pointer dereference!

==================================================================
BUG: kernel NULL pointer dereference, address: 0000000000000010
CPU: 6 UID: 0 PID: 576 Comm: fsstress Not tainted 6.11.0-rc2-dirty #847
RIP: 0010:ext4_split_extent_at+0x6d/0x560
Call Trace:
 <TASK>
 ext4_split_extent.isra.0+0xcb/0x1b0
 ext4_ext_convert_to_initialized+0x168/0x6c0
 ext4_ext_handle_unwritten_extents+0x325/0x4d0
 ext4_ext_map_blocks+0x520/0xdb0
 ext4_map_blocks+0x2b0/0x690
 ext4_iomap_begin+0x20e/0x2c0
[...]
==================================================================

Therefore, *orig_path is updated when the extent lookup succeeds, so that
the caller can safely use path or *ppath.",Linux,Linux,"10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279"
955,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48788,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-rdma: fix possible use-after-free in transport error_recovery work

While nvme_rdma_submit_async_event_work is checking the ctrl and queue
state before preparing the AER command and scheduling io_work, in order
to fully prevent a race where this check is not reliable the error
recovery work must flush async_event_work before continuing to destroy
the admin queue after setting the ctrl state to RESETTING such that
there is no race .submit_async_event and the error recovery handler
itself changing the ctrl state.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
965,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2023-46343,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel before 6.5.9, there is a NULL pointer dereference in send_acknowledge in net/nfc/nci/spi.c.",n/a,n/a,n/a
966,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49896,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check stream before comparing them

[WHAT & HOW]
amdgpu_dm can pass a null stream to dc_is_stream_unchanged. It is
necessary to check for null before dereferencing them.

This fixes 1 FORWARD_NULL issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
967,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49959,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

jbd2: stop waiting for space when jbd2_cleanup_journal_tail() returns error

In __jbd2_log_wait_for_space(), we might call jbd2_cleanup_journal_tail()
to recover some journal space. But if an error occurs while executing
jbd2_cleanup_journal_tail() (e.g., an EIO), we don't stop waiting for free
space right away, we try other branches, and if j_committing_transaction
is NULL (i.e., the tid is 0), we will get the following complain:

============================================
JBD2: I/O error when updating journal superblock for sdd-8.
__jbd2_log_wait_for_space: needed 256 blocks and only had 217 space available
__jbd2_log_wait_for_space: no way to get more journal space in sdd-8
------------[ cut here ]------------
WARNING: CPU: 2 PID: 139804 at fs/jbd2/checkpoint.c:109 __jbd2_log_wait_for_space+0x251/0x2e0
Modules linked in:
CPU: 2 PID: 139804 Comm: kworker/u8:3 Not tainted 6.6.0+ #1
RIP: 0010:__jbd2_log_wait_for_space+0x251/0x2e0
Call Trace:
 <TASK>
 add_transaction_credits+0x5d1/0x5e0
 start_this_handle+0x1ef/0x6a0
 jbd2__journal_start+0x18b/0x340
 ext4_dirty_inode+0x5d/0xb0
 __mark_inode_dirty+0xe4/0x5d0
 generic_update_time+0x60/0x70
[...]
============================================

So only if jbd2_cleanup_journal_tail() returns 1, i.e., there is nothing to
clean up at the moment, continue to try to reclaim free space in other ways.

Note that this fix relies on commit 6f6a6fda2945 (""jbd2: fix ocfs2 corrupt
when updating journal superblock fails"") to make jbd2_cleanup_journal_tail
return the correct error code.",Linux,Linux,"8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550"
968,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50045,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: br_netfilter: fix panic with metadata_dst skb

Fix a kernel panic in the br_netfilter module when sending untagged
traffic via a VxLAN device.
This happens during the check for fragmentation in br_nf_dev_queue_xmit.

It is dependent on:
1) the br_netfilter module being loaded;
2) net.bridge.bridge-nf-call-iptables set to 1;
3) a bridge with a VxLAN (single-vxlan-device) netdevice as a bridge port;
4) untagged frames with size higher than the VxLAN MTU forwarded/flooded

When forwarding the untagged packet to the VxLAN bridge port, before
the netfilter hooks are called, br_handle_egress_vlan_tunnel is called and
changes the skb_dst to the tunnel dst. The tunnel_dst is a metadata type
of dst, i.e., skb_valid_dst(skb) is false, and metadata->dst.dev is NULL.

Then in the br_netfilter hooks, in br_nf_dev_queue_xmit, there's a check
for frames that needs to be fragmented: frames with higher MTU than the
VxLAN device end up calling br_nf_ip_fragment, which in turns call
ip_skb_dst_mtu.

The ip_dst_mtu tries to use the skb_dst(skb) as if it was a valid dst
with valid dst->dev, thus the crash.

This case was never supported in the first place, so drop the packet
instead.

PING 10.0.0.2 (10.0.0.2) from 0.0.0.0 h1-eth0: 2000(2028) bytes of data.
[  176.291791] Unable to handle kernel NULL pointer dereference at
virtual address 0000000000000110
[  176.292101] Mem abort info:
[  176.292184]   ESR = 0x0000000096000004
[  176.292322]   EC = 0x25: DABT (current EL), IL = 32 bits
[  176.292530]   SET = 0, FnV = 0
[  176.292709]   EA = 0, S1PTW = 0
[  176.292862]   FSC = 0x04: level 0 translation fault
[  176.293013] Data abort info:
[  176.293104]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
[  176.293488]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
[  176.293787]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[  176.293995] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000043ef5000
[  176.294166] [0000000000000110] pgd=0000000000000000,
p4d=0000000000000000
[  176.294827] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
[  176.295252] Modules linked in: vxlan ip6_udp_tunnel udp_tunnel veth
br_netfilter bridge stp llc ipv6 crct10dif_ce
[  176.295923] CPU: 0 PID: 188 Comm: ping Not tainted
6.8.0-rc3-g5b3fbd61b9d1 #2
[  176.296314] Hardware name: linux,dummy-virt (DT)
[  176.296535] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS
BTYPE=--)
[  176.296808] pc : br_nf_dev_queue_xmit+0x390/0x4ec [br_netfilter]
[  176.297382] lr : br_nf_dev_queue_xmit+0x2ac/0x4ec [br_netfilter]
[  176.297636] sp : ffff800080003630
[  176.297743] x29: ffff800080003630 x28: 0000000000000008 x27:
ffff6828c49ad9f8
[  176.298093] x26: ffff6828c49ad000 x25: 0000000000000000 x24:
00000000000003e8
[  176.298430] x23: 0000000000000000 x22: ffff6828c4960b40 x21:
ffff6828c3b16d28
[  176.298652] x20: ffff6828c3167048 x19: ffff6828c3b16d00 x18:
0000000000000014
[  176.298926] x17: ffffb0476322f000 x16: ffffb7e164023730 x15:
0000000095744632
[  176.299296] x14: ffff6828c3f1c880 x13: 0000000000000002 x12:
ffffb7e137926a70
[  176.299574] x11: 0000000000000001 x10: ffff6828c3f1c898 x9 :
0000000000000000
[  176.300049] x8 : ffff6828c49bf070 x7 : 0008460f18d5f20e x6 :
f20e0100bebafeca
[  176.300302] x5 : ffff6828c7f918fe x4 : ffff6828c49bf070 x3 :
0000000000000000
[  176.300586] x2 : 0000000000000000 x1 : ffff6828c3c7ad00 x0 :
ffff6828c7f918f0
[  176.300889] Call trace:
[  176.301123]  br_nf_dev_queue_xmit+0x390/0x4ec [br_netfilter]
[  176.301411]  br_nf_post_routing+0x2a8/0x3e4 [br_netfilter]
[  176.301703]  nf_hook_slow+0x48/0x124
[  176.302060]  br_forward_finish+0xc8/0xe8 [bridge]
[  176.302371]  br_nf_hook_thresh+0x124/0x134 [br_netfilter]
[  176.302605]  br_nf_forward_finish+0x118/0x22c [br_netfilter]
[  176.302824]  br_nf_forward_ip.part.0+0x264/0x290 [br_netfilter]
[  176.303136]  br_nf_forward+0x2b8/0x4e0 [br_netfilter]
[  176.303359]  nf_hook_slow+0x48/0x124
[  176.303
---truncated---",Linux,Linux,"11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd"
969,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50183,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Ensure DA_ID handling completion before deleting an NPIV instance

Deleting an NPIV instance requires all fabric ndlps to be released before
an NPIV's resources can be torn down.  Failure to release fabric ndlps
beforehand opens kref imbalance race conditions.  Fix by forcing the DA_ID
to complete synchronously with usage of wait_queue.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
970,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49995,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: guard against string buffer overrun

Smatch reports that copying media_name and if_name to name_parts may
overwrite the destination.

 .../bearer.c:166 bearer_name_validate() error: strcpy() 'media_name' too large for 'name_parts->media_name' (32 vs 16)
 .../bearer.c:167 bearer_name_validate() error: strcpy() 'if_name' too large for 'name_parts->if_name' (1010102 vs 16)

This does seem to be the case so guard against this possibility by using
strscpy() and failing if truncation occurs.

Introduced by commit b97bf3fd8f6a (""[TIPC] Initial merge"")

Compile tested only.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
956,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50047,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix UAF in async decryption

Doing an async decryption (large read) crashes with a
slab-use-after-free way down in the crypto API.

Reproducer:
    # mount.cifs -o ...,seal,esize=1 //srv/share /mnt
    # dd if=/mnt/largefile of=/dev/null
    ...
    [  194.196391] ==================================================================
    [  194.196844] BUG: KASAN: slab-use-after-free in gf128mul_4k_lle+0xc1/0x110
    [  194.197269] Read of size 8 at addr ffff888112bd0448 by task kworker/u77:2/899
    [  194.197707]
    [  194.197818] CPU: 12 UID: 0 PID: 899 Comm: kworker/u77:2 Not tainted 6.11.0-lku-00028-gfca3ca14a17a-dirty #43
    [  194.198400] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.2-3-gd478f380-prebuilt.qemu.org 04/01/2014
    [  194.199046] Workqueue: smb3decryptd smb2_decrypt_offload [cifs]
    [  194.200032] Call Trace:
    [  194.200191]  <TASK>
    [  194.200327]  dump_stack_lvl+0x4e/0x70
    [  194.200558]  ? gf128mul_4k_lle+0xc1/0x110
    [  194.200809]  print_report+0x174/0x505
    [  194.201040]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
    [  194.201352]  ? srso_return_thunk+0x5/0x5f
    [  194.201604]  ? __virt_addr_valid+0xdf/0x1c0
    [  194.201868]  ? gf128mul_4k_lle+0xc1/0x110
    [  194.202128]  kasan_report+0xc8/0x150
    [  194.202361]  ? gf128mul_4k_lle+0xc1/0x110
    [  194.202616]  gf128mul_4k_lle+0xc1/0x110
    [  194.202863]  ghash_update+0x184/0x210
    [  194.203103]  shash_ahash_update+0x184/0x2a0
    [  194.203377]  ? __pfx_shash_ahash_update+0x10/0x10
    [  194.203651]  ? srso_return_thunk+0x5/0x5f
    [  194.203877]  ? crypto_gcm_init_common+0x1ba/0x340
    [  194.204142]  gcm_hash_assoc_remain_continue+0x10a/0x140
    [  194.204434]  crypt_message+0xec1/0x10a0 [cifs]
    [  194.206489]  ? __pfx_crypt_message+0x10/0x10 [cifs]
    [  194.208507]  ? srso_return_thunk+0x5/0x5f
    [  194.209205]  ? srso_return_thunk+0x5/0x5f
    [  194.209925]  ? srso_return_thunk+0x5/0x5f
    [  194.210443]  ? srso_return_thunk+0x5/0x5f
    [  194.211037]  decrypt_raw_data+0x15f/0x250 [cifs]
    [  194.212906]  ? __pfx_decrypt_raw_data+0x10/0x10 [cifs]
    [  194.214670]  ? srso_return_thunk+0x5/0x5f
    [  194.215193]  smb2_decrypt_offload+0x12a/0x6c0 [cifs]

This is because TFM is being used in parallel.

Fix this by allocating a new AEAD TFM for async decryption, but keep
the existing one for synchronous READ cases (similar to what is done
in smb3_calc_signature()).

Also remove the calls to aead_request_set_callback() and
crypto_wait_req() since it's always going to be a synchronous operation.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
954,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49950,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix uaf in l2cap_connect

[Syzbot reported]
BUG: KASAN: slab-use-after-free in l2cap_connect.constprop.0+0x10d8/0x1270 net/bluetooth/l2cap_core.c:3949
Read of size 8 at addr ffff8880241e9800 by task kworker/u9:0/54

CPU: 0 UID: 0 PID: 54 Comm: kworker/u9:0 Not tainted 6.11.0-rc6-syzkaller-00268-g788220eee30d #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Workqueue: hci2 hci_rx_work
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:93 [inline]
 dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:119
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0xc3/0x620 mm/kasan/report.c:488
 kasan_report+0xd9/0x110 mm/kasan/report.c:601
 l2cap_connect.constprop.0+0x10d8/0x1270 net/bluetooth/l2cap_core.c:3949
 l2cap_connect_req net/bluetooth/l2cap_core.c:4080 [inline]
 l2cap_bredr_sig_cmd net/bluetooth/l2cap_core.c:4772 [inline]
 l2cap_sig_channel net/bluetooth/l2cap_core.c:5543 [inline]
 l2cap_recv_frame+0xf0b/0x8eb0 net/bluetooth/l2cap_core.c:6825
 l2cap_recv_acldata+0x9b4/0xb70 net/bluetooth/l2cap_core.c:7514
 hci_acldata_packet net/bluetooth/hci_core.c:3791 [inline]
 hci_rx_work+0xaab/0x1610 net/bluetooth/hci_core.c:4028
 process_one_work+0x9c5/0x1b40 kernel/workqueue.c:3231
 process_scheduled_works kernel/workqueue.c:3312 [inline]
 worker_thread+0x6c8/0xed0 kernel/workqueue.c:3389
 kthread+0x2c1/0x3a0 kernel/kthread.c:389
 ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
...

Freed by task 5245:
 kasan_save_stack+0x33/0x60 mm/kasan/common.c:47
 kasan_save_track+0x14/0x30 mm/kasan/common.c:68
 kasan_save_free_info+0x3b/0x60 mm/kasan/generic.c:579
 poison_slab_object+0xf7/0x160 mm/kasan/common.c:240
 __kasan_slab_free+0x32/0x50 mm/kasan/common.c:256
 kasan_slab_free include/linux/kasan.h:184 [inline]
 slab_free_hook mm/slub.c:2256 [inline]
 slab_free mm/slub.c:4477 [inline]
 kfree+0x12a/0x3b0 mm/slub.c:4598
 l2cap_conn_free net/bluetooth/l2cap_core.c:1810 [inline]
 kref_put include/linux/kref.h:65 [inline]
 l2cap_conn_put net/bluetooth/l2cap_core.c:1822 [inline]
 l2cap_conn_del+0x59d/0x730 net/bluetooth/l2cap_core.c:1802
 l2cap_connect_cfm+0x9e6/0xf80 net/bluetooth/l2cap_core.c:7241
 hci_connect_cfm include/net/bluetooth/hci_core.h:1960 [inline]
 hci_conn_failed+0x1c3/0x370 net/bluetooth/hci_conn.c:1265
 hci_abort_conn_sync+0x75a/0xb50 net/bluetooth/hci_sync.c:5583
 abort_conn_sync+0x197/0x360 net/bluetooth/hci_conn.c:2917
 hci_cmd_sync_work+0x1a4/0x410 net/bluetooth/hci_sync.c:328
 process_one_work+0x9c5/0x1b40 kernel/workqueue.c:3231
 process_scheduled_works kernel/workqueue.c:3312 [inline]
 worker_thread+0x6c8/0xed0 kernel/workqueue.c:3389
 kthread+0x2c1/0x3a0 kernel/kthread.c:389
 ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244",Linux,Linux,"7b064edae38d62d8587a8c574f93b53ce75ae749, 7b064edae38d62d8587a8c574f93b53ce75ae749, 7b064edae38d62d8587a8c574f93b53ce75ae749, 7b064edae38d62d8587a8c574f93b53ce75ae749, 7b064edae38d62d8587a8c574f93b53ce75ae749, 7b064edae38d62d8587a8c574f93b53ce75ae749"
938,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49000,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

iommu/vt-d: Fix PCI device refcount leak in has_external_pci()

for_each_pci_dev() is implemented by pci_get_device(). The comment of
pci_get_device() says that it will increase the reference count for the
returned pci_dev and also decrease the reference count for the input
pci_dev @from if it is not NULL.

If we break for_each_pci_dev() loop with pdev not NULL, we need to call
pci_dev_put() to decrease the reference count. Add the missing
pci_dev_put() before 'return true' to avoid reference count leak.",Linux,Linux,"89a6079df791aeace2044ea93be1b397195824ec, 89a6079df791aeace2044ea93be1b397195824ec, 89a6079df791aeace2044ea93be1b397195824ec, 89a6079df791aeace2044ea93be1b397195824ec"
900,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46760,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: rtw88: usb: schedule rx work after everything is set up

Right now it's possible to hit NULL pointer dereference in
rtw_rx_fill_rx_status on hw object and/or its fields because
initialization routine can start getting USB replies before
rtw_dev is fully setup.

The stack trace looks like this:

rtw_rx_fill_rx_status
rtw8821c_query_rx_desc
rtw_usb_rx_handler
...
queue_work
rtw_usb_read_port_complete
...
usb_submit_urb
rtw_usb_rx_resubmit
rtw_usb_init_rx
rtw_usb_probe

So while we do the async stuff rtw_usb_probe continues and calls
rtw_register_hw, which does all kinds of initialization (e.g.
via ieee80211_register_hw) that rtw_rx_fill_rx_status relies on.

Fix this by moving the first usb_submit_urb after everything
is set up.

For me, this bug manifested as:
[    8.893177] rtw_8821cu 1-1:1.2: band wrong, packet dropped
[    8.910904] rtw_8821cu 1-1:1.2: hw->conf.chandef.chan NULL in rtw_rx_fill_rx_status
because I'm using Larry's backport of rtw88 driver with the NULL
checks in rtw_rx_fill_rx_status.",Linux,Linux,"e3037485c68ec1a299ff41160d8fedbd4abc29b9, e3037485c68ec1a299ff41160d8fedbd4abc29b9, e3037485c68ec1a299ff41160d8fedbd4abc29b9"
939,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,n/a,n/a,n/a,
940,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49858,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

efistub/tpm: Use ACPI reclaim memory for event log to avoid corruption

The TPM event log table is a Linux specific construct, where the data
produced by the GetEventLog() boot service is cached in memory, and
passed on to the OS using an EFI configuration table.

The use of EFI_LOADER_DATA here results in the region being left
unreserved in the E820 memory map constructed by the EFI stub, and this
is the memory description that is passed on to the incoming kernel by
kexec, which is therefore unaware that the region should be reserved.

Even though the utility of the TPM2 event log after a kexec is
questionable, any corruption might send the parsing code off into the
weeds and crash the kernel. So let's use EFI_ACPI_RECLAIM_MEMORY
instead, which is always treated as reserved by the E820 conversion
logic.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
941,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2021-47612,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nfc: fix segfault in nfc_genl_dump_devices_done

When kmalloc in nfc_genl_dump_devices() fails then
nfc_genl_dump_devices_done() segfaults as below

KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
CPU: 0 PID: 25 Comm: kworker/0:1 Not tainted 5.16.0-rc4-01180-g2a987e65025e-dirty #5
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-6.fc35 04/01/2014
Workqueue: events netlink_sock_destruct_work
RIP: 0010:klist_iter_exit+0x26/0x80
Call Trace:
<TASK>
class_dev_iter_exit+0x15/0x20
nfc_genl_dump_devices_done+0x3b/0x50
genl_lock_done+0x84/0xd0
netlink_sock_destruct+0x8f/0x270
__sk_destruct+0x64/0x3b0
sk_destruct+0xa8/0xd0
__sk_free+0x2e8/0x3d0
sk_free+0x51/0x90
netlink_sock_destruct_work+0x1c/0x20
process_one_work+0x411/0x710
worker_thread+0x6fd/0xa80",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
942,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49884,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix slab-use-after-free in ext4_split_extent_at()

We hit the following use-after-free:

==================================================================
BUG: KASAN: slab-use-after-free in ext4_split_extent_at+0xba8/0xcc0
Read of size 2 at addr ffff88810548ed08 by task kworker/u20:0/40
CPU: 0 PID: 40 Comm: kworker/u20:0 Not tainted 6.9.0-dirty #724
Call Trace:
 <TASK>
 kasan_report+0x93/0xc0
 ext4_split_extent_at+0xba8/0xcc0
 ext4_split_extent.isra.0+0x18f/0x500
 ext4_split_convert_extents+0x275/0x750
 ext4_ext_handle_unwritten_extents+0x73e/0x1580
 ext4_ext_map_blocks+0xe20/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]

Allocated by task 40:
 __kmalloc_noprof+0x1ac/0x480
 ext4_find_extent+0xf3b/0x1e70
 ext4_ext_map_blocks+0x188/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]

Freed by task 40:
 kfree+0xf1/0x2b0
 ext4_find_extent+0xa71/0x1e70
 ext4_ext_insert_extent+0xa22/0x3260
 ext4_split_extent_at+0x3ef/0xcc0
 ext4_split_extent.isra.0+0x18f/0x500
 ext4_split_convert_extents+0x275/0x750
 ext4_ext_handle_unwritten_extents+0x73e/0x1580
 ext4_ext_map_blocks+0xe20/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]
==================================================================

The flow of issue triggering is as follows:

ext4_split_extent_at
  path = *ppath
  ext4_ext_insert_extent(ppath)
    ext4_ext_create_new_leaf(ppath)
      ext4_find_extent(orig_path)
        path = *orig_path
        read_extent_tree_block
          // return -ENOMEM or -EIO
        ext4_free_ext_path(path)
          kfree(path)
        *orig_path = NULL
  a. If err is -ENOMEM:
  ext4_ext_dirty(path + path->p_depth)
  // path use-after-free !!!
  b. If err is -EIO and we have EXT_DEBUG defined:
  ext4_ext_show_leaf(path)
    eh = path[depth].p_hdr
    // path also use-after-free !!!

So when trying to zeroout or fix the extent length, call ext4_find_extent()
to update the path.

In addition we use *ppath directly as an ext4_ext_show_leaf() input to
avoid possible use-after-free when EXT_DEBUG is defined, and to avoid
unnecessary path updates.",Linux,Linux,"dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4"
943,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46724,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix out-of-bounds read of df_v1_7_channel_number

Check the fb_channel_number range to avoid the array out-of-bounds
read error",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
944,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50074,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

parport: Proper fix for array out-of-bounds access

The recent fix for array out-of-bounds accesses replaced sprintf()
calls blindly with snprintf().  However, since snprintf() returns the
would-be-printed size, not the actually output size, the length
calculation can still go over the given limit.

Use scnprintf() instead of snprintf(), which returns the actually
output letters, for addressing the potential out-of-bounds access
properly.",Linux,Linux,"166a0bddcc27de41fe13f861c8348e8e53e988c8, 47b3dce100778001cd76f7e9188944b5cb27a76d, a44f88f7576bc1916d8d6293f5c62fbe7cbe03e0, c719b393374d3763e64900ee19aaed767d5a08d6, 7f4da759092a1a6ce35fb085182d02de8cc4cc84, b579ea3516c371ecf59d073772bc45dfd28c8a0e, ab11dac93d2d568d151b1918d7b84c2d02bacbd5, ab11dac93d2d568d151b1918d7b84c2d02bacbd5"
946,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46813,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check link_index before accessing dc->links[]

[WHY & HOW]
dc->links[] has max size of MAX_LINKS and NULL is return when trying to
access with out-of-bound index.

This fixes 3 OVERRUN and 1 RESOURCE_LEAK issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
953,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46800,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

sch/netem: fix use after free in netem_dequeue

If netem_dequeue() enqueues packet to inner qdisc and that qdisc
returns __NET_XMIT_STOLEN. The packet is dropped but
qdisc_tree_reduce_backlog() is not called to update the parent's
q.qlen, leading to the similar use-after-free as Commit
e04991a48dbaf382 (""netem: fix return value if duplicate enqueue
fails"")

Commands to trigger KASAN UaF:

ip link add type dummy
ip link set lo up
ip link set dummy0 up
tc qdisc add dev lo parent root handle 1: drr
tc filter add dev lo parent 1: basic classid 1:1
tc class add dev lo classid 1:1 drr
tc qdisc add dev lo parent 1:1 handle 2: netem
tc qdisc add dev lo parent 2: handle 3: drr
tc filter add dev lo parent 3: basic classid 3:1 action mirred egress
redirect dev dummy0
tc class add dev lo classid 3:1 drr
ping -c1 -W0.01 localhost # Trigger bug
tc class del dev lo classid 1:1
tc class add dev lo classid 1:1 drr
ping -c1 -W0.01 localhost # UaF",Linux,Linux,"50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe"
947,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47673,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: pause TCM when the firmware is stopped

Not doing so will make us send a host command to the transport while the
firmware is not alive, which will trigger a WARNING.

bad state = 0
WARNING: CPU: 2 PID: 17434 at drivers/net/wireless/intel/iwlwifi/iwl-trans.c:115 iwl_trans_send_cmd+0x1cb/0x1e0 [iwlwifi]
RIP: 0010:iwl_trans_send_cmd+0x1cb/0x1e0 [iwlwifi]
Call Trace:
 <TASK>
 iwl_mvm_send_cmd+0x40/0xc0 [iwlmvm]
 iwl_mvm_config_scan+0x198/0x260 [iwlmvm]
 iwl_mvm_recalc_tcm+0x730/0x11d0 [iwlmvm]
 iwl_mvm_tcm_work+0x1d/0x30 [iwlmvm]
 process_one_work+0x29e/0x640
 worker_thread+0x2df/0x690
 ? rescuer_thread+0x540/0x540
 kthread+0x192/0x1e0
 ? set_kthread_struct+0x90/0x90
 ret_from_fork+0x22/0x30",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
948,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50024,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: Fix an unsafe loop on the list

The kernel may crash when deleting a genetlink family if there are still
listeners for that family:

Oops: Kernel access of bad area, sig: 11 [#1]
  ...
  NIP [c000000000c080bc] netlink_update_socket_mc+0x3c/0xc0
  LR [c000000000c0f764] __netlink_clear_multicast_users+0x74/0xc0
  Call Trace:
__netlink_clear_multicast_users+0x74/0xc0
genl_unregister_family+0xd4/0x2d0

Change the unsafe loop on the list to a safe one, because inside the
loop there is an element removal from this list.",Linux,Linux,"b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289"
949,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47684,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: check skb is non-NULL in tcp_rto_delta_us()

We have some machines running stock Ubuntu 20.04.6 which is their 5.4.0-174-generic
kernel that are running ceph and recently hit a null ptr dereference in
tcp_rearm_rto(). Initially hitting it from the TLP path, but then later we also
saw it getting hit from the RACK case as well. Here are examples of the oops
messages we saw in each of those cases:

Jul 26 15:05:02 rx [11061395.780353] BUG: kernel NULL pointer dereference, address: 0000000000000020
Jul 26 15:05:02 rx [11061395.787572] #PF: supervisor read access in kernel mode
Jul 26 15:05:02 rx [11061395.792971] #PF: error_code(0x0000) - not-present page
Jul 26 15:05:02 rx [11061395.798362] PGD 0 P4D 0
Jul 26 15:05:02 rx [11061395.801164] Oops: 0000 [#1] SMP NOPTI
Jul 26 15:05:02 rx [11061395.805091] CPU: 0 PID: 9180 Comm: msgr-worker-1 Tainted: G W 5.4.0-174-generic #193-Ubuntu
Jul 26 15:05:02 rx [11061395.814996] Hardware name: Supermicro SMC 2x26 os-gen8 64C NVME-Y 256G/H12SSW-NTR, BIOS 2.5.V1.2U.NVMe.UEFI 05/09/2023
Jul 26 15:05:02 rx [11061395.825952] RIP: 0010:tcp_rearm_rto+0xe4/0x160
Jul 26 15:05:02 rx [11061395.830656] Code: 87 ca 04 00 00 00 5b 41 5c 41 5d 5d c3 c3 49 8b bc 24 40 06 00 00 eb 8d 48 bb cf f7 53 e3 a5 9b c4 20 4c 89 ef e8 0c fe 0e 00 <48> 8b 78 20 48 c1 ef 03 48 89 f8 41 8b bc 24 80 04 00 00 48 f7 e3
Jul 26 15:05:02 rx [11061395.849665] RSP: 0018:ffffb75d40003e08 EFLAGS: 00010246
Jul 26 15:05:02 rx [11061395.855149] RAX: 0000000000000000 RBX: 20c49ba5e353f7cf RCX: 0000000000000000
Jul 26 15:05:02 rx [11061395.862542] RDX: 0000000062177c30 RSI: 000000000000231c RDI: ffff9874ad283a60
Jul 26 15:05:02 rx [11061395.869933] RBP: ffffb75d40003e20 R08: 0000000000000000 R09: ffff987605e20aa8
Jul 26 15:05:02 rx [11061395.877318] R10: ffffb75d40003f00 R11: ffffb75d4460f740 R12: ffff9874ad283900
Jul 26 15:05:02 rx [11061395.884710] R13: ffff9874ad283a60 R14: ffff9874ad283980 R15: ffff9874ad283d30
Jul 26 15:05:02 rx [11061395.892095] FS: 00007f1ef4a2e700(0000) GS:ffff987605e00000(0000) knlGS:0000000000000000
Jul 26 15:05:02 rx [11061395.900438] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
Jul 26 15:05:02 rx [11061395.906435] CR2: 0000000000000020 CR3: 0000003e450ba003 CR4: 0000000000760ef0
Jul 26 15:05:02 rx [11061395.913822] PKRU: 55555554
Jul 26 15:05:02 rx [11061395.916786] Call Trace:
Jul 26 15:05:02 rx [11061395.919488]
Jul 26 15:05:02 rx [11061395.921765] ? show_regs.cold+0x1a/0x1f
Jul 26 15:05:02 rx [11061395.925859] ? __die+0x90/0xd9
Jul 26 15:05:02 rx [11061395.929169] ? no_context+0x196/0x380
Jul 26 15:05:02 rx [11061395.933088] ? ip6_protocol_deliver_rcu+0x4e0/0x4e0
Jul 26 15:05:02 rx [11061395.938216] ? ip6_sublist_rcv_finish+0x3d/0x50
Jul 26 15:05:02 rx [11061395.943000] ? __bad_area_nosemaphore+0x50/0x1a0
Jul 26 15:05:02 rx [11061395.947873] ? bad_area_nosemaphore+0x16/0x20
Jul 26 15:05:02 rx [11061395.952486] ? do_user_addr_fault+0x267/0x450
Jul 26 15:05:02 rx [11061395.957104] ? ipv6_list_rcv+0x112/0x140
Jul 26 15:05:02 rx [11061395.961279] ? __do_page_fault+0x58/0x90
Jul 26 15:05:02 rx [11061395.965458] ? do_page_fault+0x2c/0xe0
Jul 26 15:05:02 rx [11061395.969465] ? page_fault+0x34/0x40
Jul 26 15:05:02 rx [11061395.973217] ? tcp_rearm_rto+0xe4/0x160
Jul 26 15:05:02 rx [11061395.977313] ? tcp_rearm_rto+0xe4/0x160
Jul 26 15:05:02 rx [11061395.981408] tcp_send_loss_probe+0x10b/0x220
Jul 26 15:05:02 rx [11061395.985937] tcp_write_timer_handler+0x1b4/0x240
Jul 26 15:05:02 rx [11061395.990809] tcp_write_timer+0x9e/0xe0
Jul 26 15:05:02 rx [11061395.994814] ? tcp_write_timer_handler+0x240/0x240
Jul 26 15:05:02 rx [11061395.999866] call_timer_fn+0x32/0x130
Jul 26 15:05:02 rx [11061396.003782] __run_timers.part.0+0x180/0x280
Jul 26 15:05:02 rx [11061396.008309] ? recalibrate_cpu_khz+0x10/0x10
Jul 26 15:05:02 rx [11061396.012841] ? native_x2apic_icr_write+0x30/0x30
Jul 26 15:05:02 rx [11061396.017718] ? lapic_next_even
---truncated---",Linux,Linux,"e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410"
950,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49965,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: remove unreasonable unlock in ocfs2_read_blocks

Patch series ""Misc fixes for ocfs2_read_blocks"", v5.

This series contains 2 fixes for ocfs2_read_blocks().  The first patch fix
the issue reported by syzbot, which detects bad unlock balance in
ocfs2_read_blocks().  The second patch fixes an issue reported by Heming
Zhao when reviewing above fix.


This patch (of 2):

There was a lock release before exiting, so remove the unreasonable unlock.",Linux,Linux,"6c150df9c2e80b5cf86f5a0d98beb7390ad63bfc, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687"
951,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50125,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: SCO: Fix UAF on sco_sock_timeout

conn->sk maybe have been unlinked/freed while waiting for sco_conn_lock
so this checks if the conn->sk is still valid by checking if it part of
sco_sk_list.",Linux,Linux,"ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043, ba316be1b6a00db7126ed9a39f9bee434a508043"
952,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-36886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: fix UAF in error path

Sam Page (sam4k) working with Trend Micro Zero Day Initiative reported
a UAF in the tipc_buf_append() error path:

BUG: KASAN: slab-use-after-free in kfree_skb_list_reason+0x47e/0x4c0
linux/net/core/skbuff.c:1183
Read of size 8 at addr ffff88804d2a7c80 by task poc/8034

CPU: 1 PID: 8034 Comm: poc Not tainted 6.8.2 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
1.16.0-debian-1.16.0-5 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack linux/lib/dump_stack.c:88
 dump_stack_lvl+0xd9/0x1b0 linux/lib/dump_stack.c:106
 print_address_description linux/mm/kasan/report.c:377
 print_report+0xc4/0x620 linux/mm/kasan/report.c:488
 kasan_report+0xda/0x110 linux/mm/kasan/report.c:601
 kfree_skb_list_reason+0x47e/0x4c0 linux/net/core/skbuff.c:1183
 skb_release_data+0x5af/0x880 linux/net/core/skbuff.c:1026
 skb_release_all linux/net/core/skbuff.c:1094
 __kfree_skb linux/net/core/skbuff.c:1108
 kfree_skb_reason+0x12d/0x210 linux/net/core/skbuff.c:1144
 kfree_skb linux/./include/linux/skbuff.h:1244
 tipc_buf_append+0x425/0xb50 linux/net/tipc/msg.c:186
 tipc_link_input+0x224/0x7c0 linux/net/tipc/link.c:1324
 tipc_link_rcv+0x76e/0x2d70 linux/net/tipc/link.c:1824
 tipc_rcv+0x45f/0x10f0 linux/net/tipc/node.c:2159
 tipc_udp_recv+0x73b/0x8f0 linux/net/tipc/udp_media.c:390
 udp_queue_rcv_one_skb+0xad2/0x1850 linux/net/ipv4/udp.c:2108
 udp_queue_rcv_skb+0x131/0xb00 linux/net/ipv4/udp.c:2186
 udp_unicast_rcv_skb+0x165/0x3b0 linux/net/ipv4/udp.c:2346
 __udp4_lib_rcv+0x2594/0x3400 linux/net/ipv4/udp.c:2422
 ip_protocol_deliver_rcu+0x30c/0x4e0 linux/net/ipv4/ip_input.c:205
 ip_local_deliver_finish+0x2e4/0x520 linux/net/ipv4/ip_input.c:233
 NF_HOOK linux/./include/linux/netfilter.h:314
 NF_HOOK linux/./include/linux/netfilter.h:308
 ip_local_deliver+0x18e/0x1f0 linux/net/ipv4/ip_input.c:254
 dst_input linux/./include/net/dst.h:461
 ip_rcv_finish linux/net/ipv4/ip_input.c:449
 NF_HOOK linux/./include/linux/netfilter.h:314
 NF_HOOK linux/./include/linux/netfilter.h:308
 ip_rcv+0x2c5/0x5d0 linux/net/ipv4/ip_input.c:569
 __netif_receive_skb_one_core+0x199/0x1e0 linux/net/core/dev.c:5534
 __netif_receive_skb+0x1f/0x1c0 linux/net/core/dev.c:5648
 process_backlog+0x101/0x6b0 linux/net/core/dev.c:5976
 __napi_poll.constprop.0+0xba/0x550 linux/net/core/dev.c:6576
 napi_poll linux/net/core/dev.c:6645
 net_rx_action+0x95a/0xe90 linux/net/core/dev.c:6781
 __do_softirq+0x21f/0x8e7 linux/kernel/softirq.c:553
 do_softirq linux/kernel/softirq.c:454
 do_softirq+0xb2/0xf0 linux/kernel/softirq.c:441
 </IRQ>
 <TASK>
 __local_bh_enable_ip+0x100/0x120 linux/kernel/softirq.c:381
 local_bh_enable linux/./include/linux/bottom_half.h:33
 rcu_read_unlock_bh linux/./include/linux/rcupdate.h:851
 __dev_queue_xmit+0x871/0x3ee0 linux/net/core/dev.c:4378
 dev_queue_xmit linux/./include/linux/netdevice.h:3169
 neigh_hh_output linux/./include/net/neighbour.h:526
 neigh_output linux/./include/net/neighbour.h:540
 ip_finish_output2+0x169f/0x2550 linux/net/ipv4/ip_output.c:235
 __ip_finish_output linux/net/ipv4/ip_output.c:313
 __ip_finish_output+0x49e/0x950 linux/net/ipv4/ip_output.c:295
 ip_finish_output+0x31/0x310 linux/net/ipv4/ip_output.c:323
 NF_HOOK_COND linux/./include/linux/netfilter.h:303
 ip_output+0x13b/0x2a0 linux/net/ipv4/ip_output.c:433
 dst_output linux/./include/net/dst.h:451
 ip_local_out linux/net/ipv4/ip_output.c:129
 ip_send_skb+0x3e5/0x560 linux/net/ipv4/ip_output.c:1492
 udp_send_skb+0x73f/0x1530 linux/net/ipv4/udp.c:963
 udp_sendmsg+0x1a36/0x2b40 linux/net/ipv4/udp.c:1250
 inet_sendmsg+0x105/0x140 linux/net/ipv4/af_inet.c:850
 sock_sendmsg_nosec linux/net/socket.c:730
 __sock_sendmsg linux/net/socket.c:745
 __sys_sendto+0x42c/0x4e0 linux/net/socket.c:2191
 __do_sys_sendto linux/net/socket.c:2203
 __se_sys_sendto linux/net/socket.c:2199
 __x64_sys_sendto+0xe0/0x1c0 linux/net/socket.c:2199
 do_syscall_x64 linux/arch/x86/entry/common.c:52
 do_syscall_
---truncated---",Linux,Linux,"1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89"
901,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47001,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xprtrdma: Fix cwnd update ordering

After a reconnect, the reply handler is opening the cwnd (and thus
enabling more RPC Calls to be sent) /before/ rpcrdma_post_recvs()
can post enough Receive WRs to receive their replies. This causes an
RNR and the new connection is lost immediately.

The race is most clearly exposed when KASAN and disconnect injection
are enabled. This slows down rpcrdma_rep_create() enough to allow
the send side to post a bunch of RPC Calls before the Receive
completion handler can invoke ib_post_recv().",Linux,Linux,"2ae50ad68cd79224198b525f7bd645c9da98b6ff, 2ae50ad68cd79224198b525f7bd645c9da98b6ff, 2ae50ad68cd79224198b525f7bd645c9da98b6ff, 2ae50ad68cd79224198b525f7bd645c9da98b6ff"
891,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49877,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix possible null-ptr-deref in ocfs2_set_buffer_uptodate

When doing cleanup, if flags without OCFS2_BH_READAHEAD, it may trigger
NULL pointer dereference in the following ocfs2_set_buffer_uptodate() if
bh is NULL.",Linux,Linux,"6c150df9c2e80b5cf86f5a0d98beb7390ad63bfc, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687"
899,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2022-48938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

CDC-NCM: avoid overflow in sanity checking

A broken device may give an extreme offset like 0xFFF0
and a reasonable length for a fragment. In the sanity
check as formulated now, this will create an integer
overflow, defeating the sanity check. Both offset
and offset + len need to be checked in such a manner
that no overflow can occur.
And those quantities should be unsigned.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
898,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46693,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

soc: qcom: pmic_glink: Fix race during initialization

As pointed out by Stephen Boyd it is possible that during initialization
of the pmic_glink child drivers, the protection-domain notifiers fires,
and the associated work is scheduled, before the client registration
returns and as a result the local ""client"" pointer has been initialized.

The outcome of this is a NULL pointer dereference as the ""client""
pointer is blindly dereferenced.

Timeline provided by Stephen:
 CPU0                               CPU1
 ----                               ----
 ucsi->client = NULL;
 devm_pmic_glink_register_client()
  client->pdr_notify(client->priv, pg->client_state)
   pmic_glink_ucsi_pdr_notify()
    schedule_work(&ucsi->register_work)
    <schedule away>
                                    pmic_glink_ucsi_register()
                                     ucsi_register()
                                      pmic_glink_ucsi_read_version()
                                       pmic_glink_ucsi_read()
                                        pmic_glink_ucsi_read()
                                         pmic_glink_send(ucsi->client)
                                         <client is NULL BAD>
 ucsi->client = client // Too late!

This code is identical across the altmode, battery manager and usci
child drivers.

Resolve this by splitting the allocation of the ""client"" object and the
registration thereof into two operations.

This only happens if the protection domain registry is populated at the
time of registration, which by the introduction of commit '1ebcde047c54
(""soc: qcom: add pd-mapper implementation"")' became much more likely.",Linux,Linux,"58ef4ece1e41ac525db3e79529909683325d85df, 58ef4ece1e41ac525db3e79529909683325d85df, 58ef4ece1e41ac525db3e79529909683325d85df"
846,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44990,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bonding: fix null pointer deref in bond_ipsec_offload_ok

We must check if there is an active slave before dereferencing the pointer.",Linux,Linux,"18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4, 18cb261afd7bf50134e5ccacc5ec91ea16efadd4"
847,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42265,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

protect the fetch of ->fd[fd] in do_dup2() from mispredictions

both callers have verified that fd is not greater than ->max_fds;
however, misprediction might end up with
        tofree = fdt->fd[fd];
being speculatively executed.  That's wrong for the same reasons
why it's wrong in close_fd()/file_close_fd_locked(); the same
solution applies - array_index_nospec(fd, fdt->max_fds) could differ
from fd only in case of speculative execution on mispredicted path.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
848,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44987,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: prevent UAF in ip6_send_skb()

syzbot reported an UAF in ip6_send_skb() [1]

After ip6_local_out() has returned, we no longer can safely
dereference rt, unless we hold rcu_read_lock().

A similar issue has been fixed in commit
a688caa34beb (""ipv6: take rcu lock in rawv6_send_hdrinc()"")

Another potential issue in ip6_finish_output2() is handled in a
separate patch.

[1]
 BUG: KASAN: slab-use-after-free in ip6_send_skb+0x18d/0x230 net/ipv6/ip6_output.c:1964
Read of size 8 at addr ffff88806dde4858 by task syz.1.380/6530

CPU: 1 UID: 0 PID: 6530 Comm: syz.1.380 Not tainted 6.11.0-rc3-syzkaller-00306-gdf6cbc62cc9b #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:93 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
  print_address_description mm/kasan/report.c:377 [inline]
  print_report+0x169/0x550 mm/kasan/report.c:488
  kasan_report+0x143/0x180 mm/kasan/report.c:601
  ip6_send_skb+0x18d/0x230 net/ipv6/ip6_output.c:1964
  rawv6_push_pending_frames+0x75c/0x9e0 net/ipv6/raw.c:588
  rawv6_sendmsg+0x19c7/0x23c0 net/ipv6/raw.c:926
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x1a6/0x270 net/socket.c:745
  sock_write_iter+0x2dd/0x400 net/socket.c:1160
 do_iter_readv_writev+0x60a/0x890
  vfs_writev+0x37c/0xbb0 fs/read_write.c:971
  do_writev+0x1b1/0x350 fs/read_write.c:1018
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f936bf79e79
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f936cd7f038 EFLAGS: 00000246 ORIG_RAX: 0000000000000014
RAX: ffffffffffffffda RBX: 00007f936c115f80 RCX: 00007f936bf79e79
RDX: 0000000000000001 RSI: 0000000020000040 RDI: 0000000000000004
RBP: 00007f936bfe7916 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f936c115f80 R15: 00007fff2860a7a8
 </TASK>

Allocated by task 6530:
  kasan_save_stack mm/kasan/common.c:47 [inline]
  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
  unpoison_slab_object mm/kasan/common.c:312 [inline]
  __kasan_slab_alloc+0x66/0x80 mm/kasan/common.c:338
  kasan_slab_alloc include/linux/kasan.h:201 [inline]
  slab_post_alloc_hook mm/slub.c:3988 [inline]
  slab_alloc_node mm/slub.c:4037 [inline]
  kmem_cache_alloc_noprof+0x135/0x2a0 mm/slub.c:4044
  dst_alloc+0x12b/0x190 net/core/dst.c:89
  ip6_blackhole_route+0x59/0x340 net/ipv6/route.c:2670
  make_blackhole net/xfrm/xfrm_policy.c:3120 [inline]
  xfrm_lookup_route+0xd1/0x1c0 net/xfrm/xfrm_policy.c:3313
  ip6_dst_lookup_flow+0x13e/0x180 net/ipv6/ip6_output.c:1257
  rawv6_sendmsg+0x1283/0x23c0 net/ipv6/raw.c:898
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x1a6/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2597
  ___sys_sendmsg net/socket.c:2651 [inline]
  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2680
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Freed by task 45:
  kasan_save_stack mm/kasan/common.c:47 [inline]
  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
  kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579
  poison_slab_object+0xe0/0x150 mm/kasan/common.c:240
  __kasan_slab_free+0x37/0x60 mm/kasan/common.c:256
  kasan_slab_free include/linux/kasan.h:184 [inline]
  slab_free_hook mm/slub.c:2252 [inline]
  slab_free mm/slub.c:4473 [inline]
  kmem_cache_free+0x145/0x350 mm/slub.c:4548
  dst_destroy+0x2ac/0x460 net/core/dst.c:124
  rcu_do_batch kernel/rcu/tree.c:2569 [inline]
  rcu_core+0xafd/0x1830 kernel/rcu/tree.
---truncated---",Linux,Linux,"0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e, 0625491493d9000e4556bf566d205c28c8e7dc4e"
849,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43866,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Always drain health in shutdown callback

There is no point in recovery during device shutdown. if health
work started need to wait for it to avoid races and NULL pointer
access.

Hence, drain health WQ on shutdown callback.",Linux,Linux,"d2aa060d40fa060e963f9a356d43481e43ba3dac, d2aa060d40fa060e963f9a356d43481e43ba3dac, d2aa060d40fa060e963f9a356d43481e43ba3dac, d2aa060d40fa060e963f9a356d43481e43ba3dac"
850,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44982,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/msm/dpu: cleanup FB if dpu_format_populate_layout fails

If the dpu_format_populate_layout() fails, then FB is prepared, but not
cleaned up. This ends up leaking the pin_count on the GEM object and
causes a splat during DRM file closure:

msm_obj->pin_count
WARNING: CPU: 2 PID: 569 at drivers/gpu/drm/msm/msm_gem.c:121 update_lru_locked+0xc4/0xcc
[...]
Call trace:
 update_lru_locked+0xc4/0xcc
 put_pages+0xac/0x100
 msm_gem_free_object+0x138/0x180
 drm_gem_object_free+0x1c/0x30
 drm_gem_object_handle_put_unlocked+0x108/0x10c
 drm_gem_object_release_handle+0x58/0x70
 idr_for_each+0x68/0xec
 drm_gem_release+0x28/0x40
 drm_file_free+0x174/0x234
 drm_release+0xb0/0x160
 __fput+0xc0/0x2c8
 __fput_sync+0x50/0x5c
 __arm64_sys_close+0x38/0x7c
 invoke_syscall+0x48/0x118
 el0_svc_common.constprop.0+0x40/0xe0
 do_el0_svc+0x1c/0x28
 el0_svc+0x4c/0x120
 el0t_64_sync_handler+0x100/0x12c
 el0t_64_sync+0x190/0x194
irq event stamp: 129818
hardirqs last  enabled at (129817): [<ffffa5f6d953fcc0>] console_unlock+0x118/0x124
hardirqs last disabled at (129818): [<ffffa5f6da7dcf04>] el1_dbg+0x24/0x8c
softirqs last  enabled at (129808): [<ffffa5f6d94afc18>] handle_softirqs+0x4c8/0x4e8
softirqs last disabled at (129785): [<ffffa5f6d94105e4>] __do_softirq+0x14/0x20

Patchwork: https://patchwork.freedesktop.org/patch/600714/",Linux,Linux,"25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef, 25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef, 25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef, 25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef, 25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef"
851,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-40915,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

riscv: rewrite __kernel_map_pages() to fix sleeping in invalid context

__kernel_map_pages() is a debug function which clears the valid bit in page
table entry for deallocated pages to detect illegal memory accesses to
freed pages.

This function set/clear the valid bit using __set_memory(). __set_memory()
acquires init_mm's semaphore, and this operation may sleep. This is
problematic, because  __kernel_map_pages() can be called in atomic context,
and thus is illegal to sleep. An example warning that this causes:

BUG: sleeping function called from invalid context at kernel/locking/rwsem.c:1578
in_atomic(): 1, irqs_disabled(): 0, non_block: 0, pid: 2, name: kthreadd
preempt_count: 2, expected: 0
CPU: 0 PID: 2 Comm: kthreadd Not tainted 6.9.0-g1d4c6d784ef6 #37
Hardware name: riscv-virtio,qemu (DT)
Call Trace:
[<ffffffff800060dc>] dump_backtrace+0x1c/0x24
[<ffffffff8091ef6e>] show_stack+0x2c/0x38
[<ffffffff8092baf8>] dump_stack_lvl+0x5a/0x72
[<ffffffff8092bb24>] dump_stack+0x14/0x1c
[<ffffffff8003b7ac>] __might_resched+0x104/0x10e
[<ffffffff8003b7f4>] __might_sleep+0x3e/0x62
[<ffffffff8093276a>] down_write+0x20/0x72
[<ffffffff8000cf00>] __set_memory+0x82/0x2fa
[<ffffffff8000d324>] __kernel_map_pages+0x5a/0xd4
[<ffffffff80196cca>] __alloc_pages_bulk+0x3b2/0x43a
[<ffffffff8018ee82>] __vmalloc_node_range+0x196/0x6ba
[<ffffffff80011904>] copy_process+0x72c/0x17ec
[<ffffffff80012ab4>] kernel_clone+0x60/0x2fe
[<ffffffff80012f62>] kernel_thread+0x82/0xa0
[<ffffffff8003552c>] kthreadd+0x14a/0x1be
[<ffffffff809357de>] ret_from_fork+0xe/0x1c

Rewrite this function with apply_to_existing_page_range(). It is fine to
not have any locking, because __kernel_map_pages() works with pages being
allocated/deallocated and those pages are not changed by anyone else in the
meantime.",Linux,Linux,"5fde3db5eb028b95aeefa1ab192d36800414e8b8, 5fde3db5eb028b95aeefa1ab192d36800414e8b8, 5fde3db5eb028b95aeefa1ab192d36800414e8b8, 5fde3db5eb028b95aeefa1ab192d36800414e8b8"
852,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46730,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Ensure array index tg_inst won't be -1

[WHY & HOW]
tg_inst will be a negative if timing_generator_count equals 0, which
should be checked before used.

This fixes 2 OVERRUN issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
853,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46728,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check index for aux_rd_interval before using

aux_rd_interval has size of 7 and should be checked.

This fixes 3 OVERRUN and 1 INTEGER_OVERFLOW issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
854,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46694,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: avoid using null object of framebuffer

Instead of using state->fb->obj[0] directly, get object from framebuffer
by calling drm_gem_fb_get_obj() and return error code when object is
null to avoid using null object of framebuffer.

(cherry picked from commit 73dd0ad9e5dad53766ea3e631303430116f834b3)",Linux,Linux,"5d945cbcd4b16a29d6470a80dfb19738f9a4319f, 5d945cbcd4b16a29d6470a80dfb19738f9a4319f, 5d945cbcd4b16a29d6470a80dfb19738f9a4319f, 5d945cbcd4b16a29d6470a80dfb19738f9a4319f"
855,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45011,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

char: xillybus: Check USB endpoints when probing device

Ensure, as the driver probes the device, that all endpoints that the
driver may attempt to access exist and are of the correct type.

All XillyUSB devices must have a Bulk IN and Bulk OUT endpoint at
address 1. This is verified in xillyusb_setup_base_eps().

On top of that, a XillyUSB device may have additional Bulk OUT
endpoints. The information about these endpoints' addresses is deduced
from a data structure (the IDT) that the driver fetches from the device
while probing it. These endpoints are checked in setup_channels().

A XillyUSB device never has more than one IN endpoint, as all data
towards the host is multiplexed in this single Bulk IN endpoint. This is
why setup_channels() only checks OUT endpoints.",Linux,Linux,"a53d1202aef122894b6e46116a92174a9123db5d, a53d1202aef122894b6e46116a92174a9123db5d, a53d1202aef122894b6e46116a92174a9123db5d, a53d1202aef122894b6e46116a92174a9123db5d, a53d1202aef122894b6e46116a92174a9123db5d"
856,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38597,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

eth: sungem: remove .ndo_poll_controller to avoid deadlocks

Erhard reports netpoll warnings from sungem:

  netpoll_send_skb_on_dev(): eth0 enabled interrupts in poll (gem_start_xmit+0x0/0x398)
  WARNING: CPU: 1 PID: 1 at net/core/netpoll.c:370 netpoll_send_skb+0x1fc/0x20c

gem_poll_controller() disables interrupts, which may sleep.
We can't sleep in netpoll, it has interrupts disabled completely.
Strangely, gem_poll_controller() doesn't even poll the completions,
and instead acts as if an interrupt has fired so it just schedules
NAPI and exits. None of this has been necessary for years, since
netpoll invokes NAPI directly.",Linux,Linux,"fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308, fe09bb619096a0aa139210748ddc668c2dbe2308"
857,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49982,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

aoe: fix the potential use-after-free problem in more places

For fixing CVE-2023-6270, f98364e92662 (""aoe: fix the potential
use-after-free problem in aoecmd_cfg_pkts"") makes tx() calling dev_put()
instead of doing in aoecmd_cfg_pkts(). It avoids that the tx() runs
into use-after-free.

Then Nicolai Stange found more places in aoe have potential use-after-free
problem with tx(). e.g. revalidate(), aoecmd_ata_rw(), resend(), probe()
and aoecmd_cfg_rsp(). Those functions also use aoenet_xmit() to push
packet to tx queue. So they should also use dev_hold() to increase the
refcnt of skb->dev.

On the other hand, moving dev_put() to tx() causes that the refcnt of
skb->dev be reduced to a negative value, because corresponding
dev_hold() are not called in revalidate(), aoecmd_ata_rw(), resend(),
probe(), and aoecmd_cfg_rsp(). This patch fixed this issue.",Linux,Linux,"ad80c34944d7175fa1f5c7a55066020002921a99, 1a54aa506b3b2f31496731039e49778f54eee881, faf0b4c5e00bb680e8e43ac936df24d3f48c8e65, 7dd09fa80b0765ce68bfae92f4e2f395ccf0fba4, 74ca3ef68d2f449bc848c0a814cefc487bf755fa, eb48680b0255a9e8a9bdc93d6a55b11c31262e62, f98364e926626c678fb4b9004b75cacf92ff0662, f98364e926626c678fb4b9004b75cacf92ff0662, f98364e926626c678fb4b9004b75cacf92ff0662"
858,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43911,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: fix NULL dereference at band check in starting tx ba session

In MLD connection, link_data/link_conf are dynamically allocated. They
don't point to vif->bss_conf. So, there will be no chanreq assigned to
vif->bss_conf and then the chan will be NULL. Tweak the code to check
ht_supported/vht_supported/has_he/has_eht on sta deflink.

Crash log (with rtw89 version under MLO development):
[ 9890.526087] BUG: kernel NULL pointer dereference, address: 0000000000000000
[ 9890.526102] #PF: supervisor read access in kernel mode
[ 9890.526105] #PF: error_code(0x0000) - not-present page
[ 9890.526109] PGD 0 P4D 0
[ 9890.526114] Oops: 0000 [#1] PREEMPT SMP PTI
[ 9890.526119] CPU: 2 PID: 6367 Comm: kworker/u16:2 Kdump: loaded Tainted: G           OE      6.9.0 #1
[ 9890.526123] Hardware name: LENOVO 2356AD1/2356AD1, BIOS G7ETB3WW (2.73 ) 11/28/2018
[ 9890.526126] Workqueue: phy2 rtw89_core_ba_work [rtw89_core]
[ 9890.526203] RIP: 0010:ieee80211_start_tx_ba_session (net/mac80211/agg-tx.c:618 (discriminator 1)) mac80211
[ 9890.526279] Code: f7 e8 d5 93 3e ea 48 83 c4 28 89 d8 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc 49 8b 84 24 e0 f1 ff ff 48 8b 80 90 1b 00 00 <83> 38 03 0f 84 37 fe ff ff bb ea ff ff ff eb cc 49 8b 84 24 10 f3
All code
========
   0:	f7 e8                	imul   %eax
   2:	d5                   	(bad)
   3:	93                   	xchg   %eax,%ebx
   4:	3e ea                	ds (bad)
   6:	48 83 c4 28          	add    $0x28,%rsp
   a:	89 d8                	mov    %ebx,%eax
   c:	5b                   	pop    %rbx
   d:	41 5c                	pop    %r12
   f:	41 5d                	pop    %r13
  11:	41 5e                	pop    %r14
  13:	41 5f                	pop    %r15
  15:	5d                   	pop    %rbp
  16:	c3                   	retq
  17:	cc                   	int3
  18:	cc                   	int3
  19:	cc                   	int3
  1a:	cc                   	int3
  1b:	49 8b 84 24 e0 f1 ff 	mov    -0xe20(%r12),%rax
  22:	ff
  23:	48 8b 80 90 1b 00 00 	mov    0x1b90(%rax),%rax
  2a:*	83 38 03             	cmpl   $0x3,(%rax)		<-- trapping instruction
  2d:	0f 84 37 fe ff ff    	je     0xfffffffffffffe6a
  33:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
  38:	eb cc                	jmp    0x6
  3a:	49                   	rex.WB
  3b:	8b                   	.byte 0x8b
  3c:	84 24 10             	test   %ah,(%rax,%rdx,1)
  3f:	f3                   	repz

Code starting with the faulting instruction
===========================================
   0:	83 38 03             	cmpl   $0x3,(%rax)
   3:	0f 84 37 fe ff ff    	je     0xfffffffffffffe40
   9:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
   e:	eb cc                	jmp    0xffffffffffffffdc
  10:	49                   	rex.WB
  11:	8b                   	.byte 0x8b
  12:	84 24 10             	test   %ah,(%rax,%rdx,1)
  15:	f3                   	repz
[ 9890.526285] RSP: 0018:ffffb8db09013d68 EFLAGS: 00010246
[ 9890.526291] RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9308e0d656c8
[ 9890.526295] RDX: 0000000000000000 RSI: ffffffffab99460b RDI: ffffffffab9a7685
[ 9890.526300] RBP: ffffb8db09013db8 R08: 0000000000000000 R09: 0000000000000873
[ 9890.526304] R10: ffff9308e0d64800 R11: 0000000000000002 R12: ffff9308e5ff6e70
[ 9890.526308] R13: ffff930952500e20 R14: ffff9309192a8c00 R15: 0000000000000000
[ 9890.526313] FS:  0000000000000000(0000) GS:ffff930b4e700000(0000) knlGS:0000000000000000
[ 9890.526316] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 9890.526318] CR2: 0000000000000000 CR3: 0000000391c58005 CR4: 00000000001706f0
[ 9890.526321] Call Trace:
[ 9890.526324]  <TASK>
[ 9890.526327] ? show_regs (arch/x86/kernel/dumpstack.c:479)
[ 9890.526335] ? __die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434)
[ 9890.526340] ? page_fault_oops (arch/x86/mm/fault.c:713)
[ 9890.526347] ? search_module_extables (kernel/module/main.c:3256 (discriminator
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
859,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42271,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/iucv: fix use after free in iucv_sock_close()

iucv_sever_path() is called from process context and from bh context.
iucv->path is used as indicator whether somebody else is taking care of
severing the path (or it is already removed / never existed).
This needs to be done with atomic compare and swap, otherwise there is a
small window where iucv_sock_close() will try to work with a path that has
already been severed and freed by iucv_callback_connrej() called by
iucv_tasklet_fn().

Example:
[452744.123844] Call Trace:
[452744.123845] ([<0000001e87f03880>] 0x1e87f03880)
[452744.123966]  [<00000000d593001e>] iucv_path_sever+0x96/0x138
[452744.124330]  [<000003ff801ddbca>] iucv_sever_path+0xc2/0xd0 [af_iucv]
[452744.124336]  [<000003ff801e01b6>] iucv_sock_close+0xa6/0x310 [af_iucv]
[452744.124341]  [<000003ff801e08cc>] iucv_sock_release+0x3c/0xd0 [af_iucv]
[452744.124345]  [<00000000d574794e>] __sock_release+0x5e/0xe8
[452744.124815]  [<00000000d5747a0c>] sock_close+0x34/0x48
[452744.124820]  [<00000000d5421642>] __fput+0xba/0x268
[452744.124826]  [<00000000d51b382c>] task_work_run+0xbc/0xf0
[452744.124832]  [<00000000d5145710>] do_notify_resume+0x88/0x90
[452744.124841]  [<00000000d5978096>] system_call+0xe2/0x2c8
[452744.125319] Last Breaking-Event-Address:
[452744.125321]  [<00000000d5930018>] iucv_path_sever+0x90/0x138
[452744.125324]
[452744.125325] Kernel panic - not syncing: Fatal exception in interrupt

Note that bh_lock_sock() is not serializing the tasklet context against
process context, because the check for sock_owned_by_user() and
corresponding handling is missing.

Ideas for a future clean-up patch:
A) Correct usage of bh_lock_sock() in tasklet context, as described in
Re-enqueue, if needed. This may require adding return values to the
tasklet functions and thus changes to all users of iucv.

B) Change iucv tasklet into worker and use only lock_sock() in af_iucv.",Linux,Linux,"7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e, 7d316b9453523498246e9e19a659c423d4c5081e"
860,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42302,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI/DPC: Fix use-after-free on concurrent DPC and hot-removal

Keith reports a use-after-free when a DPC event occurs concurrently to
hot-removal of the same portion of the hierarchy:

The dpc_handler() awaits readiness of the secondary bus below the
Downstream Port where the DPC event occurred.  To do so, it polls the
config space of the first child device on the secondary bus.  If that
child device is concurrently removed, accesses to its struct pci_dev
cause the kernel to oops.

That's because pci_bridge_wait_for_secondary_bus() neglects to hold a
reference on the child device.  Before v6.3, the function was only
called on resume from system sleep or on runtime resume.  Holding a
reference wasn't necessary back then because the pciehp IRQ thread
could never run concurrently.  (On resume from system sleep, IRQs are
not enabled until after the resume_noirq phase.  And runtime resume is
always awaited before a PCI device is removed.)

However starting with v6.3, pci_bridge_wait_for_secondary_bus() is also
called on a DPC event.  Commit 53b54ad074de (""PCI/DPC: Await readiness
of secondary bus after reset""), which introduced that, failed to
appreciate that pci_bridge_wait_for_secondary_bus() now needs to hold a
reference on the child device because dpc_handler() and pciehp may
indeed run concurrently.  The commit was backported to v5.10+ stable
kernels, so that's the oldest one affected.

Add the missing reference acquisition.

Abridged stack trace:

  BUG: unable to handle page fault for address: 00000000091400c0
  CPU: 15 PID: 2464 Comm: irq/53-pcie-dpc 6.9.0
  RIP: pci_bus_read_config_dword+0x17/0x50
  pci_dev_wait()
  pci_bridge_wait_for_secondary_bus()
  dpc_reset_link()
  pcie_do_recovery()
  dpc_handler()",Linux,Linux,"d0292124bb5787a2f1ab1316509e801ca89c10fb, ffe2318405e605f1b3985ce188eff69e6d1d1baa, 189f856e76f5463f59efb5fc18dcc1692d04c41a, 53b54ad074de1896f8b021615f65b27f557ce874, 53b54ad074de1896f8b021615f65b27f557ce874, 53b54ad074de1896f8b021615f65b27f557ce874"
845,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44973,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm, slub: do not call do_slab_free for kfence object

In 782f8906f805 the freeing of kfence objects was moved from deep
inside do_slab_free to the wrapper functions outside. This is a nice
change, but unfortunately it missed one spot in __kmem_cache_free_bulk.

This results in a crash like this:

BUG skbuff_head_cache (Tainted: G S  B       E     ): Padding overwritten. 0xffff88907fea0f00-0xffff88907fea0fff @offset=3840

slab_err (mm/slub.c:1129)
free_to_partial_list (mm/slub.c:? mm/slub.c:4036)
slab_pad_check (mm/slub.c:864 mm/slub.c:1290)
check_slab (mm/slub.c:?)
free_to_partial_list (mm/slub.c:3171 mm/slub.c:4036)
kmem_cache_alloc_bulk (mm/slub.c:? mm/slub.c:4495 mm/slub.c:4586 mm/slub.c:4635)
napi_build_skb (net/core/skbuff.c:348 net/core/skbuff.c:527 net/core/skbuff.c:549)

All the other callers to do_slab_free appear to be ok.

Add a kfence_free check in __kmem_cache_free_bulk to avoid the crash.",Linux,Linux,"782f8906f8057efc7151b4b98b0a0280a71d005f, 782f8906f8057efc7151b4b98b0a0280a71d005f"
844,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52917,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ntb: intel: Fix the NULL vs IS_ERR() bug for debugfs_create_dir()

The debugfs_create_dir() function returns error pointers.
It never returns NULL. So use IS_ERR() to check it.",Linux,Linux,"e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3, e26a5843f7f5014ae4460030ca4de029a3ac35d3"
843,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50188,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: phy: dp83869: fix memory corruption when enabling fiber

When configuring the fiber port, the DP83869 PHY driver incorrectly
calls linkmode_set_bit() with a bit mask (1 << 10) rather than a bit
number (10). This corrupts some other memory location -- in case of
arm64 the priv pointer in the same structure.

Since the advertising flags are updated from supported at the end of the
function the incorrect line isn't needed at all and can be removed.",Linux,Linux,"a29de52ba2a156873505d8b8cef44e69925b8114, a29de52ba2a156873505d8b8cef44e69925b8114, a29de52ba2a156873505d8b8cef44e69925b8114, a29de52ba2a156873505d8b8cef44e69925b8114, a29de52ba2a156873505d8b8cef44e69925b8114, a29de52ba2a156873505d8b8cef44e69925b8114"
834,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50015,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: dax: fix overflowing extents beyond inode size when partially writing

The dax_iomap_rw() does two things in each iteration: map written blocks
and copy user data to blocks. If the process is killed by user(See signal
handling in dax_iomap_iter()), the copied data will be returned and added
on inode size, which means that the length of written extents may exceed
the inode size, then fsck will fail. An example is given as:

dd if=/dev/urandom of=file bs=4M count=1
 dax_iomap_rw
  iomap_iter // round 1
   ext4_iomap_begin
    ext4_iomap_alloc // allocate 0~2M extents(written flag)
  dax_iomap_iter // copy 2M data
  iomap_iter // round 2
   iomap_iter_advance
    iter->pos += iter->processed // iter->pos = 2M
   ext4_iomap_begin
    ext4_iomap_alloc // allocate 2~4M extents(written flag)
  dax_iomap_iter
   fatal_signal_pending
  done = iter->pos - iocb->ki_pos // done = 2M
 ext4_handle_inode_extension
  ext4_update_inode_size // inode size = 2M

fsck reports: Inode 13, i_size is 2097152, should be 4194304.  Fix?

Fix the problem by truncating extents if the written length is smaller
than expected.",Linux,Linux,"776722e85d3b0936253ecc3d14db4fba37f191ba, 776722e85d3b0936253ecc3d14db4fba37f191ba, 776722e85d3b0936253ecc3d14db4fba37f191ba, 776722e85d3b0936253ecc3d14db4fba37f191ba, 776722e85d3b0936253ecc3d14db4fba37f191ba, 776722e85d3b0936253ecc3d14db4fba37f191ba, 776722e85d3b0936253ecc3d14db4fba37f191ba"
828,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47696,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/iwcm: Fix WARNING:at_kernel/workqueue.c:#check_flush_dependency

In the commit aee2424246f9 (""RDMA/iwcm: Fix a use-after-free related to
destroying CM IDs""), the function flush_workqueue is invoked to flush the
work queue iwcm_wq.

But at that time, the work queue iwcm_wq was created via the function
alloc_ordered_workqueue without the flag WQ_MEM_RECLAIM.

Because the current process is trying to flush the whole iwcm_wq, if
iwcm_wq doesn't have the flag WQ_MEM_RECLAIM, verify that the current
process is not reclaiming memory or running on a workqueue which doesn't
have the flag WQ_MEM_RECLAIM as that can break forward-progress guarantee
leading to a deadlock.

The call trace is as below:

[  125.350876][ T1430] Call Trace:
[  125.356281][ T1430]  <TASK>
[ 125.361285][ T1430] ? __warn (kernel/panic.c:693)
[ 125.367640][ T1430] ? check_flush_dependency (kernel/workqueue.c:3706 (discriminator 9))
[ 125.375689][ T1430] ? report_bug (lib/bug.c:180 lib/bug.c:219)
[ 125.382505][ T1430] ? handle_bug (arch/x86/kernel/traps.c:239)
[ 125.388987][ T1430] ? exc_invalid_op (arch/x86/kernel/traps.c:260 (discriminator 1))
[ 125.395831][ T1430] ? asm_exc_invalid_op (arch/x86/include/asm/idtentry.h:621)
[ 125.403125][ T1430] ? check_flush_dependency (kernel/workqueue.c:3706 (discriminator 9))
[ 125.410984][ T1430] ? check_flush_dependency (kernel/workqueue.c:3706 (discriminator 9))
[ 125.418764][ T1430] __flush_workqueue (kernel/workqueue.c:3970)
[ 125.426021][ T1430] ? __pfx___might_resched (kernel/sched/core.c:10151)
[ 125.433431][ T1430] ? destroy_cm_id (drivers/infiniband/core/iwcm.c:375) iw_cm
[ 125.441209][ T1430] ? __pfx___flush_workqueue (kernel/workqueue.c:3910)
[ 125.473900][ T1430] ? _raw_spin_lock_irqsave (arch/x86/include/asm/atomic.h:107 include/linux/atomic/atomic-arch-fallback.h:2170 include/linux/atomic/atomic-instrumented.h:1302 include/asm-generic/qspinlock.h:111 include/linux/spinlock.h:187 include/linux/spinlock_api_smp.h:111 kernel/locking/spinlock.c:162)
[ 125.473909][ T1430] ? __pfx__raw_spin_lock_irqsave (kernel/locking/spinlock.c:161)
[ 125.482537][ T1430] _destroy_id (drivers/infiniband/core/cma.c:2044) rdma_cm
[ 125.495072][ T1430] nvme_rdma_free_queue (drivers/nvme/host/rdma.c:656 drivers/nvme/host/rdma.c:650) nvme_rdma
[ 125.505827][ T1430] nvme_rdma_reset_ctrl_work (drivers/nvme/host/rdma.c:2180) nvme_rdma
[ 125.505831][ T1430] process_one_work (kernel/workqueue.c:3231)
[ 125.515122][ T1430] worker_thread (kernel/workqueue.c:3306 kernel/workqueue.c:3393)
[ 125.515127][ T1430] ? __pfx_worker_thread (kernel/workqueue.c:3339)
[ 125.531837][ T1430] kthread (kernel/kthread.c:389)
[ 125.539864][ T1430] ? __pfx_kthread (kernel/kthread.c:342)
[ 125.550628][ T1430] ret_from_fork (arch/x86/kernel/process.c:147)
[ 125.558840][ T1430] ? __pfx_kthread (kernel/kthread.c:342)
[ 125.558844][ T1430] ret_from_fork_asm (arch/x86/entry/entry_64.S:257)
[  125.566487][ T1430]  </TASK>
[  125.566488][ T1430] ---[ end trace 0000000000000000 ]---",Linux,Linux,"d91d253c87fd1efece521ff2612078a35af673c6, 7f25f296fc9bd0435be14e89bf657cd615a23574, 94ee7ff99b87435ec63211f632918dc7f44dac79, 557d035fe88d78dd51664f4dc0e1896c04c97cf6, dc8074b8901caabb97c2d353abd6b4e7fa5a59a5, ff5bbbdee08287d75d72e65b72a2b76d9637892a, ee39384ee787e86e9db4efb843818ef0ea9cb8ae, aee2424246f9f1dadc33faa78990c1e2eb7826e4, aee2424246f9f1dadc33faa78990c1e2eb7826e4"
829,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42303,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: imx-pxp: Fix ERR_PTR dereference in pxp_probe()

devm_regmap_init_mmio() can fail, add a check and bail out in case of
error.",Linux,Linux,"4e5bd3fdbeb3100d1f120999130afb2a7d41d82a, 4e5bd3fdbeb3100d1f120999130afb2a7d41d82a, 4e5bd3fdbeb3100d1f120999130afb2a7d41d82a"
830,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46853,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

spi: nxp-fspi: fix the KASAN report out-of-bounds bug

Change the memcpy length to fix the out-of-bounds issue when writing the
data that is not 4 byte aligned to TX FIFO.

To reproduce the issue, write 3 bytes data to NOR chip.

dd if=3b of=/dev/mtd0
[   36.926103] ==================================================================
[   36.933409] BUG: KASAN: slab-out-of-bounds in nxp_fspi_exec_op+0x26ec/0x2838
[   36.940514] Read of size 4 at addr ffff00081037c2a0 by task dd/455
[   36.946721]
[   36.948235] CPU: 3 UID: 0 PID: 455 Comm: dd Not tainted 6.11.0-rc5-gc7b0e37c8434 #1070
[   36.956185] Hardware name: Freescale i.MX8QM MEK (DT)
[   36.961260] Call trace:
[   36.963723]  dump_backtrace+0x90/0xe8
[   36.967414]  show_stack+0x18/0x24
[   36.970749]  dump_stack_lvl+0x78/0x90
[   36.974451]  print_report+0x114/0x5cc
[   36.978151]  kasan_report+0xa4/0xf0
[   36.981670]  __asan_report_load_n_noabort+0x1c/0x28
[   36.986587]  nxp_fspi_exec_op+0x26ec/0x2838
[   36.990800]  spi_mem_exec_op+0x8ec/0xd30
[   36.994762]  spi_mem_no_dirmap_read+0x190/0x1e0
[   36.999323]  spi_mem_dirmap_write+0x238/0x32c
[   37.003710]  spi_nor_write_data+0x220/0x374
[   37.007932]  spi_nor_write+0x110/0x2e8
[   37.011711]  mtd_write_oob_std+0x154/0x1f0
[   37.015838]  mtd_write_oob+0x104/0x1d0
[   37.019617]  mtd_write+0xb8/0x12c
[   37.022953]  mtdchar_write+0x224/0x47c
[   37.026732]  vfs_write+0x1e4/0x8c8
[   37.030163]  ksys_write+0xec/0x1d0
[   37.033586]  __arm64_sys_write+0x6c/0x9c
[   37.037539]  invoke_syscall+0x6c/0x258
[   37.041327]  el0_svc_common.constprop.0+0x160/0x22c
[   37.046244]  do_el0_svc+0x44/0x5c
[   37.049589]  el0_svc+0x38/0x78
[   37.052681]  el0t_64_sync_handler+0x13c/0x158
[   37.057077]  el0t_64_sync+0x190/0x194
[   37.060775]
[   37.062274] Allocated by task 455:
[   37.065701]  kasan_save_stack+0x2c/0x54
[   37.069570]  kasan_save_track+0x20/0x3c
[   37.073438]  kasan_save_alloc_info+0x40/0x54
[   37.077736]  __kasan_kmalloc+0xa0/0xb8
[   37.081515]  __kmalloc_noprof+0x158/0x2f8
[   37.085563]  mtd_kmalloc_up_to+0x120/0x154
[   37.089690]  mtdchar_write+0x130/0x47c
[   37.093469]  vfs_write+0x1e4/0x8c8
[   37.096901]  ksys_write+0xec/0x1d0
[   37.100332]  __arm64_sys_write+0x6c/0x9c
[   37.104287]  invoke_syscall+0x6c/0x258
[   37.108064]  el0_svc_common.constprop.0+0x160/0x22c
[   37.112972]  do_el0_svc+0x44/0x5c
[   37.116319]  el0_svc+0x38/0x78
[   37.119401]  el0t_64_sync_handler+0x13c/0x158
[   37.123788]  el0t_64_sync+0x190/0x194
[   37.127474]
[   37.128977] The buggy address belongs to the object at ffff00081037c2a0
[   37.128977]  which belongs to the cache kmalloc-8 of size 8
[   37.141177] The buggy address is located 0 bytes inside of
[   37.141177]  allocated 3-byte region [ffff00081037c2a0, ffff00081037c2a3)
[   37.153465]
[   37.154971] The buggy address belongs to the physical page:
[   37.160559] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x89037c
[   37.168596] flags: 0xbfffe0000000000(node=0|zone=2|lastcpupid=0x1ffff)
[   37.175149] page_type: 0xfdffffff(slab)
[   37.179021] raw: 0bfffe0000000000 ffff000800002500 dead000000000122 0000000000000000
[   37.186788] raw: 0000000000000000 0000000080800080 00000001fdffffff 0000000000000000
[   37.194553] page dumped because: kasan: bad access detected
[   37.200144]
[   37.201647] Memory state around the buggy address:
[   37.206460]  ffff00081037c180: fa fc fc fc fa fc fc fc fa fc fc fc fa fc fc fc
[   37.213701]  ffff00081037c200: fa fc fc fc 05 fc fc fc 03 fc fc fc 02 fc fc fc
[   37.220946] >ffff00081037c280: 06 fc fc fc 03 fc fc fc fc fc fc fc fc fc fc fc
[   37.228186]                                ^
[   37.232473]  ffff00081037c300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[   37.239718]  ffff00081037c380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[   37.246962] ==============================================================
---truncated---",Linux,Linux,"a5356aef6a907c2e2aed0caaa2b88b6021394471, a5356aef6a907c2e2aed0caaa2b88b6021394471, a5356aef6a907c2e2aed0caaa2b88b6021394471, a5356aef6a907c2e2aed0caaa2b88b6021394471, a5356aef6a907c2e2aed0caaa2b88b6021394471, a5356aef6a907c2e2aed0caaa2b88b6021394471, a5356aef6a907c2e2aed0caaa2b88b6021394471"
831,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41091,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tun: add missing verification for short frame

The cited commit missed to check against the validity of the frame length
in the tun_xdp_one() path, which could cause a corrupted skb to be sent
downstack. Even before the skb is transmitted, the
tun_xdp_one-->eth_type_trans() may access the Ethernet header although it
can be less than ETH_HLEN. Once transmitted, this could either cause
out-of-bound access beyond the actual length, or confuse the underlayer
with incorrect or inconsistent header length in the skb metadata.

In the alternative path, tun_get_user() already prohibits short frame which
has the length less than Ethernet header size from being transmitted for
IFF_TAP.

This is to drop any frame shorter than the Ethernet header size just like
how tun_get_user() does.

CVE: CVE-2024-41091",Linux,Linux,"043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c, 043d222f93ab8c76b56a3b315cd8692e35affb6c"
832,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43904,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null checks for 'stream' and 'plane' before dereferencing

This commit adds null checks for the 'stream' and 'plane' variables in
the dcn30_apply_idle_power_optimizations function. These variables were
previously assumed to be null at line 922, but they were used later in
the code without checking if they were null. This could potentially lead
to a null pointer dereference, which would cause a crash.

The null checks ensure that 'stream' and 'plane' are not null before
they are used, preventing potential crashes.

Fixes the below static smatch checker:
drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:938 dcn30_apply_idle_power_optimizations() error: we previously assumed 'stream' could be null (see line 922)
drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:940 dcn30_apply_idle_power_optimizations() error: we previously assumed 'plane' could be null (see line 922)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
833,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46795,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ksmbd: unset the binding mark of a reused connection

Steve French reported null pointer dereference error from sha256 lib.
cifs.ko can send session setup requests on reused connection.
If reused connection is used for binding session, conn->binding can
still remain true and generate_preauth_hash() will not set
sess->Preauth_HashValue and it will be NULL.
It is used as a material to create an encryption key in
ksmbd_gen_smb311_encryptionkey. ->Preauth_HashValue cause null pointer
dereference error from crypto_shash_update().

BUG: kernel NULL pointer dereference, address: 0000000000000000
#PF: supervisor read access in kernel mode
#PF: error_code(0x0000) - not-present page
PGD 0 P4D 0
Oops: 0000 [#1] PREEMPT SMP PTI
CPU: 8 PID: 429254 Comm: kworker/8:39
Hardware name: LENOVO 20MAS08500/20MAS08500, BIOS N2CET69W (1.52 )
Workqueue: ksmbd-io handle_ksmbd_work [ksmbd]
RIP: 0010:lib_sha256_base_do_update.isra.0+0x11e/0x1d0 [sha256_ssse3]
<TASK>
? show_regs+0x6d/0x80
? __die+0x24/0x80
? page_fault_oops+0x99/0x1b0
? do_user_addr_fault+0x2ee/0x6b0
? exc_page_fault+0x83/0x1b0
? asm_exc_page_fault+0x27/0x30
? __pfx_sha256_transform_rorx+0x10/0x10 [sha256_ssse3]
? lib_sha256_base_do_update.isra.0+0x11e/0x1d0 [sha256_ssse3]
? __pfx_sha256_transform_rorx+0x10/0x10 [sha256_ssse3]
? __pfx_sha256_transform_rorx+0x10/0x10 [sha256_ssse3]
_sha256_update+0x77/0xa0 [sha256_ssse3]
sha256_avx2_update+0x15/0x30 [sha256_ssse3]
crypto_shash_update+0x1e/0x40
hmac_update+0x12/0x20
crypto_shash_update+0x1e/0x40
generate_key+0x234/0x380 [ksmbd]
generate_smb3encryptionkey+0x40/0x1c0 [ksmbd]
ksmbd_gen_smb311_encryptionkey+0x72/0xa0 [ksmbd]
ntlm_authenticate.isra.0+0x423/0x5d0 [ksmbd]
smb2_sess_setup+0x952/0xaa0 [ksmbd]
__process_request+0xa3/0x1d0 [ksmbd]
__handle_ksmbd_work+0x1c4/0x2f0 [ksmbd]
handle_ksmbd_work+0x2d/0xa0 [ksmbd]
process_one_work+0x16c/0x350
worker_thread+0x306/0x440
? __pfx_worker_thread+0x10/0x10
kthread+0xef/0x120
? __pfx_kthread+0x10/0x10
ret_from_fork+0x44/0x70
? __pfx_kthread+0x10/0x10
ret_from_fork_asm+0x1b/0x30
</TASK>",Linux,Linux,"f5a544e3bab78142207e0242d22442db85ba1eff, f5a544e3bab78142207e0242d22442db85ba1eff, f5a544e3bab78142207e0242d22442db85ba1eff, f5a544e3bab78142207e0242d22442db85ba1eff, f5a544e3bab78142207e0242d22442db85ba1eff"
835,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46706,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tty: serial: fsl_lpuart: mark last busy before uart_add_one_port

With ""earlycon initcall_debug=1 loglevel=8"" in bootargs, kernel
sometimes boot hang. It is because normal console still is not ready,
but runtime suspend is called, so early console putchar will hang
in waiting TRDE set in UARTSTAT.

The lpuart driver has auto suspend delay set to 3000ms, but during
uart_add_one_port, a child device serial ctrl will added and probed with
its pm runtime enabled(see serial_ctrl.c).
The runtime suspend call path is:
device_add
     |-> bus_probe_device
           |->device_initial_probe
	           |->__device_attach
                         |-> pm_runtime_get_sync(dev->parent);
			 |-> pm_request_idle(dev);
			 |-> pm_runtime_put(dev->parent);

So in the end, before normal console ready, the lpuart get runtime
suspended. And earlycon putchar will hang.

To address the issue, mark last busy just after pm_runtime_enable,
three seconds is long enough to switch from bootconsole to normal
console.",Linux,Linux,"43543e6f539b3e646348c253059f75e27d63c94d, 43543e6f539b3e646348c253059f75e27d63c94d, 43543e6f539b3e646348c253059f75e27d63c94d"
842,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46726,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Ensure index calculation will not overflow

[WHY & HOW]
Make sure vmid0p72_idx, vnom0p8_idx and vmax0p9_idx calculation will
never overflow and exceess array size.

This fixes 3 OVERRUN and 1 INTEGER_OVERFLOW issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
836,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43829,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/qxl: Add check for drm_cvt_mode

Add check for the return value of drm_cvt_mode() and return the error if
it fails in order to avoid NULL pointer dereference.",Linux,Linux,"1b043677d4be206c96b51811855502e50057f343, 1b043677d4be206c96b51811855502e50057f343, 1b043677d4be206c96b51811855502e50057f343, 1b043677d4be206c96b51811855502e50057f343, 1b043677d4be206c96b51811855502e50057f343, 1b043677d4be206c96b51811855502e50057f343, 1b043677d4be206c96b51811855502e50057f343"
837,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36968,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix div-by-zero in l2cap_le_flowctl_init()

l2cap_le_flowctl_init() can cause both div-by-zero and an integer
overflow since hdev->le_mtu may not fall in the valid range.

Move MTU from hci_dev to hci_conn to validate MTU and stop the connection
process earlier if MTU is invalid.
Also, add a missing validation in read_buffer_size() and make it return
an error value if the validation fails.
Now hci_conn_add() returns ERR_PTR() as it can fail due to the both a
kzalloc failure and invalid MTU value.

divide error: 0000 [#1] PREEMPT SMP KASAN NOPTI
CPU: 0 PID: 67 Comm: kworker/u5:0 Tainted: G        W          6.9.0-rc5+ #20
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
Workqueue: hci0 hci_rx_work
RIP: 0010:l2cap_le_flowctl_init+0x19e/0x3f0 net/bluetooth/l2cap_core.c:547
Code: e8 17 17 0c 00 66 41 89 9f 84 00 00 00 bf 01 00 00 00 41 b8 02 00 00 00 4c
89 fe 4c 89 e2 89 d9 e8 27 17 0c 00 44 89 f0 31 d2 <66> f7 f3 89 c3 ff c3 4d 8d
b7 88 00 00 00 4c 89 f0 48 c1 e8 03 42
RSP: 0018:ffff88810bc0f858 EFLAGS: 00010246
RAX: 00000000000002a0 RBX: 0000000000000000 RCX: dffffc0000000000
RDX: 0000000000000000 RSI: ffff88810bc0f7c0 RDI: ffffc90002dcb66f
RBP: ffff88810bc0f880 R08: aa69db2dda70ff01 R09: 0000ffaaaaaaaaaa
R10: 0084000000ffaaaa R11: 0000000000000000 R12: ffff88810d65a084
R13: dffffc0000000000 R14: 00000000000002a0 R15: ffff88810d65a000
FS:  0000000000000000(0000) GS:ffff88811ac00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000100 CR3: 0000000103268003 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <TASK>
 l2cap_le_connect_req net/bluetooth/l2cap_core.c:4902 [inline]
 l2cap_le_sig_cmd net/bluetooth/l2cap_core.c:5420 [inline]
 l2cap_le_sig_channel net/bluetooth/l2cap_core.c:5486 [inline]
 l2cap_recv_frame+0xe59d/0x11710 net/bluetooth/l2cap_core.c:6809
 l2cap_recv_acldata+0x544/0x10a0 net/bluetooth/l2cap_core.c:7506
 hci_acldata_packet net/bluetooth/hci_core.c:3939 [inline]
 hci_rx_work+0x5e5/0xb20 net/bluetooth/hci_core.c:4176
 process_one_work kernel/workqueue.c:3254 [inline]
 process_scheduled_works+0x90f/0x1530 kernel/workqueue.c:3335
 worker_thread+0x926/0xe70 kernel/workqueue.c:3416
 kthread+0x2e3/0x380 kernel/kthread.c:388
 ret_from_fork+0x5c/0x90 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---",Linux,Linux,"6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf, 6ed58ec520ad2b2fe3f955c8a5fd0eecafccebdf"
838,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47674,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm: avoid leaving partial pfn mappings around in error case

As Jann points out, PFN mappings are special, because unlike normal
memory mappings, there is no lifetime information associated with the
mapping - it is just a raw mapping of PFNs with no reference counting of
a 'struct page'.

That's all very much intentional, but it does mean that it's easy to
mess up the cleanup in case of errors.  Yes, a failed mmap() will always
eventually clean up any partial mappings, but without any explicit
lifetime in the page table mapping itself, it's very easy to do the
error handling in the wrong order.

In particular, it's easy to mistakenly free the physical backing store
before the page tables are actually cleaned up and (temporarily) have
stale dangling PTE entries.

To make this situation less error-prone, just make sure that any partial
pfn mapping is torn down early, before any other error handling.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
839,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42307,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

cifs: fix potential null pointer use in destroy_workqueue in init_cifs error path

Dan Carpenter reported a Smack static checker warning:
   fs/smb/client/cifsfs.c:1981 init_cifs()
   error: we previously assumed 'serverclose_wq' could be null (see line 1895)

The patch which introduced the serverclose workqueue used the wrong
oredering in error paths in init_cifs() for freeing it on errors.",Linux,Linux,"8c99dfb49bdc17edffc7ff3d46b400c8c291686c, 6f17163b9339fac92023a1d9bef22128db3b9a4b, 173217bd73365867378b5e75a86f0049e1069ee8, 173217bd73365867378b5e75a86f0049e1069ee8"
840,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45008,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Input: MT - limit max slots

syzbot is reporting too large allocation at input_mt_init_slots(), for
num_slots is supplied from userspace using ioctl(UI_DEV_CREATE).

Since nobody knows possible max slots, this patch chose 1024.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
841,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46788,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tracing/osnoise: Use a cpumask to know what threads are kthreads

The start_kthread() and stop_thread() code was not always called with the
interface_lock held. This means that the kthread variable could be
unexpectedly changed causing the kthread_stop() to be called on it when it
should not have been, leading to:

 while true; do
   rtla timerlat top -u -q & PID=$!;
   sleep 5;
   kill -INT $PID;
   sleep 0.001;
   kill -TERM $PID;
   wait $PID;
  done

Causing the following OOPS:

 Oops: general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN PTI
 KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]
 CPU: 5 UID: 0 PID: 885 Comm: timerlatu/5 Not tainted 6.11.0-rc4-test-00002-gbc754cc76d1b-dirty #125 a533010b71dab205ad2f507188ce8c82203b0254
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
 RIP: 0010:hrtimer_active+0x58/0x300
 Code: 48 c1 ee 03 41 54 48 01 d1 48 01 d6 55 53 48 83 ec 20 80 39 00 0f 85 30 02 00 00 49 8b 6f 30 4c 8d 75 10 4c 89 f0 48 c1 e8 03 <0f> b6 3c 10 4c 89 f0 83 e0 07 83 c0 03 40 38 f8 7c 09 40 84 ff 0f
 RSP: 0018:ffff88811d97f940 EFLAGS: 00010202
 RAX: 0000000000000002 RBX: ffff88823c6b5b28 RCX: ffffed10478d6b6b
 RDX: dffffc0000000000 RSI: ffffed10478d6b6c RDI: ffff88823c6b5b28
 RBP: 0000000000000000 R08: ffff88823c6b5b58 R09: ffff88823c6b5b60
 R10: ffff88811d97f957 R11: 0000000000000010 R12: 00000000000a801d
 R13: ffff88810d8b35d8 R14: 0000000000000010 R15: ffff88823c6b5b28
 FS:  0000000000000000(0000) GS:ffff88823c680000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 0000561858ad7258 CR3: 000000007729e001 CR4: 0000000000170ef0
 Call Trace:
  <TASK>
  ? die_addr+0x40/0xa0
  ? exc_general_protection+0x154/0x230
  ? asm_exc_general_protection+0x26/0x30
  ? hrtimer_active+0x58/0x300
  ? __pfx_mutex_lock+0x10/0x10
  ? __pfx_locks_remove_file+0x10/0x10
  hrtimer_cancel+0x15/0x40
  timerlat_fd_release+0x8e/0x1f0
  ? security_file_release+0x43/0x80
  __fput+0x372/0xb10
  task_work_run+0x11e/0x1f0
  ? _raw_spin_lock+0x85/0xe0
  ? __pfx_task_work_run+0x10/0x10
  ? poison_slab_object+0x109/0x170
  ? do_exit+0x7a0/0x24b0
  do_exit+0x7bd/0x24b0
  ? __pfx_migrate_enable+0x10/0x10
  ? __pfx_do_exit+0x10/0x10
  ? __pfx_read_tsc+0x10/0x10
  ? ktime_get+0x64/0x140
  ? _raw_spin_lock_irq+0x86/0xe0
  do_group_exit+0xb0/0x220
  get_signal+0x17ba/0x1b50
  ? vfs_read+0x179/0xa40
  ? timerlat_fd_read+0x30b/0x9d0
  ? __pfx_get_signal+0x10/0x10
  ? __pfx_timerlat_fd_read+0x10/0x10
  arch_do_signal_or_restart+0x8c/0x570
  ? __pfx_arch_do_signal_or_restart+0x10/0x10
  ? vfs_read+0x179/0xa40
  ? ksys_read+0xfe/0x1d0
  ? __pfx_ksys_read+0x10/0x10
  syscall_exit_to_user_mode+0xbc/0x130
  do_syscall_64+0x74/0x110
  ? __pfx___rseq_handle_notify_resume+0x10/0x10
  ? __pfx_ksys_read+0x10/0x10
  ? fpregs_restore_userregs+0xdb/0x1e0
  ? fpregs_restore_userregs+0xdb/0x1e0
  ? syscall_exit_to_user_mode+0x116/0x130
  ? do_syscall_64+0x74/0x110
  ? do_syscall_64+0x74/0x110
  ? do_syscall_64+0x74/0x110
  entry_SYSCALL_64_after_hwframe+0x71/0x79
 RIP: 0033:0x7ff0070eca9c
 Code: Unable to access opcode bytes at 0x7ff0070eca72.
 RSP: 002b:00007ff006dff8c0 EFLAGS: 00000246 ORIG_RAX: 0000000000000000
 RAX: 0000000000000000 RBX: 0000000000000005 RCX: 00007ff0070eca9c
 RDX: 0000000000000400 RSI: 00007ff006dff9a0 RDI: 0000000000000003
 RBP: 00007ff006dffde0 R08: 0000000000000000 R09: 00007ff000000ba0
 R10: 00007ff007004b08 R11: 0000000000000246 R12: 0000000000000003
 R13: 00007ff006dff9a0 R14: 0000000000000007 R15: 0000000000000008
  </TASK>
 Modules linked in: snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_hda_codec snd_hwdep snd_hda_core
 ---[ end trace 0000000000000000 ]---

This is because it would mistakenly call kthread_stop() on a user space
thread making it ""exit"" before it actually exits.

Since kthread
---truncated---",Linux,Linux,"e88ed227f639ebcb31ed4e5b88756b47d904584b, e88ed227f639ebcb31ed4e5b88756b47d904584b, e88ed227f639ebcb31ed4e5b88756b47d904584b"
861,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47101,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

asix: fix uninit-value in asix_mdio_read()

asix_read_cmd() may read less than sizeof(smsr) bytes and in this case
smsr will be uninitialized.

Fail log:
BUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]
BUG: KMSAN: uninit-value in asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497
BUG: KMSAN: uninit-value in asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497
 asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline]
 asix_check_host_enable drivers/net/usb/asix_common.c:82 [inline] drivers/net/usb/asix_common.c:497
 asix_mdio_read+0x3c1/0xb00 drivers/net/usb/asix_common.c:497 drivers/net/usb/asix_common.c:497",Linux,Linux,"d9fe64e511144c1ee7d7555b4111f09dde9692ef, d9fe64e511144c1ee7d7555b4111f09dde9692ef"
863,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46834,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ethtool: fail closed if we can't get max channel used in indirection tables

Commit 0d1b7d6c9274 (""bnxt: fix crashes when reducing ring count with
active RSS contexts"") proves that allowing indirection table to contain
channels with out of bounds IDs may lead to crashes. Currently the
max channel check in the core gets skipped if driver can't fetch
the indirection table or when we can't allocate memory.

Both of those conditions should be extremely rare but if they do
happen we should try to be safe and fail the channel change.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
864,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46793,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: Intel: Boards: Fix NULL pointer deref in BYT/CHT boards harder

Since commit 13f58267cda3 (""ASoC: soc.h: don't create dummy Component
via COMP_DUMMY()"") dummy codecs declared like this:

SND_SOC_DAILINK_DEF(dummy,
        DAILINK_COMP_ARRAY(COMP_DUMMY()));

expand to:

static struct snd_soc_dai_link_component dummy[] = {
};

Which means that dummy is a zero sized array and thus dais[i].codecs should
not be dereferenced *at all* since it points to the address of the next
variable stored in the data section as the ""dummy"" variable has an address
but no size, so even dereferencing dais[0] is already an out of bounds
array reference.

Which means that the if (dais[i].codecs->name) check added in
commit 7d99a70b6595 (""ASoC: Intel: Boards: Fix NULL pointer deref
in BYT/CHT boards"") relies on that the part of the next variable which
the name member maps to just happens to be NULL.

Which apparently so far it usually is, except when it isn't
and then it results in crashes like this one:

[   28.795659] BUG: unable to handle page fault for address: 0000000000030011
...
[   28.795780] Call Trace:
[   28.795787]  <TASK>
...
[   28.795862]  ? strcmp+0x18/0x40
[   28.795872]  0xffffffffc150c605
[   28.795887]  platform_probe+0x40/0xa0
...
[   28.795979]  ? __pfx_init_module+0x10/0x10 [snd_soc_sst_bytcr_wm5102]

Really fix things this time around by checking dais.num_codecs != 0.",Linux,Linux,"7d99a70b65951108d82e1618c67abe69c3ed7720, 7d99a70b65951108d82e1618c67abe69c3ed7720"
890,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46719,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: typec: ucsi: Fix null pointer dereference in trace

ucsi_register_altmode checks IS_ERR for the alt pointer and treats
NULL as valid. When CONFIG_TYPEC_DP_ALTMODE is not enabled,
ucsi_register_displayport returns NULL which causes a NULL pointer
dereference in trace. Rather than return NULL, call
typec_port_register_altmode to register DisplayPort alternate mode
as a non-controllable mode when CONFIG_TYPEC_DP_ALTMODE is not enabled.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
884,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47706,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

block, bfq: fix possible UAF for bfqq->bic with merge chain

1) initial state, three tasks:

		Process 1       Process 2	Process 3
		 (BIC1)          (BIC2)		 (BIC3)
		  |  Λ            |  Λ		  |  Λ
		  |  |            |  |		  |  |
		  V  |            V  |		  V  |
		  bfqq1           bfqq2		  bfqq3
process ref:	   1		    1		    1

2) bfqq1 merged to bfqq2:

		Process 1       Process 2	Process 3
		 (BIC1)          (BIC2)		 (BIC3)
		  |               |		  |  Λ
		  \--------------\|		  |  |
		                  V		  V  |
		  bfqq1--------->bfqq2		  bfqq3
process ref:	   0		    2		    1

3) bfqq2 merged to bfqq3:

		Process 1       Process 2	Process 3
		 (BIC1)          (BIC2)		 (BIC3)
	 here -> Λ                |		  |
		  \--------------\ \-------------\|
		                  V		  V
		  bfqq1--------->bfqq2---------->bfqq3
process ref:	   0		    1		    3

In this case, IO from Process 1 will get bfqq2 from BIC1 first, and then
get bfqq3 through merge chain, and finially handle IO by bfqq3.
Howerver, current code will think bfqq2 is owned by BIC1, like initial
state, and set bfqq2->bic to BIC1.

bfq_insert_request
-> by Process 1
 bfqq = bfq_init_rq(rq)
  bfqq = bfq_get_bfqq_handle_split
   bfqq = bic_to_bfqq
   -> get bfqq2 from BIC1
 bfqq->ref++
 rq->elv.priv[0] = bic
 rq->elv.priv[1] = bfqq
 if (bfqq_process_refs(bfqq) == 1)
  bfqq->bic = bic
  -> record BIC1 to bfqq2

  __bfq_insert_request
   new_bfqq = bfq_setup_cooperator
   -> get bfqq3 from bfqq2->new_bfqq
   bfqq_request_freed(bfqq)
   new_bfqq->ref++
   rq->elv.priv[1] = new_bfqq
   -> handle IO by bfqq3

Fix the problem by checking bfqq is from merge chain fist. And this
might fix a following problem reported by our syzkaller(unreproducible):

==================================================================
BUG: KASAN: slab-use-after-free in bfq_do_early_stable_merge block/bfq-iosched.c:5692 [inline]
BUG: KASAN: slab-use-after-free in bfq_do_or_sched_stable_merge block/bfq-iosched.c:5805 [inline]
BUG: KASAN: slab-use-after-free in bfq_get_queue+0x25b0/0x2610 block/bfq-iosched.c:5889
Write of size 1 at addr ffff888123839eb8 by task kworker/0:1H/18595

CPU: 0 PID: 18595 Comm: kworker/0:1H Tainted: G             L     6.6.0-07439-gba2303cacfda #6
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
Workqueue: kblockd blk_mq_requeue_work
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x91/0xf0 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:364 [inline]
 print_report+0x10d/0x610 mm/kasan/report.c:475
 kasan_report+0x8e/0xc0 mm/kasan/report.c:588
 bfq_do_early_stable_merge block/bfq-iosched.c:5692 [inline]
 bfq_do_or_sched_stable_merge block/bfq-iosched.c:5805 [inline]
 bfq_get_queue+0x25b0/0x2610 block/bfq-iosched.c:5889
 bfq_get_bfqq_handle_split+0x169/0x5d0 block/bfq-iosched.c:6757
 bfq_init_rq block/bfq-iosched.c:6876 [inline]
 bfq_insert_request block/bfq-iosched.c:6254 [inline]
 bfq_insert_requests+0x1112/0x5cf0 block/bfq-iosched.c:6304
 blk_mq_insert_request+0x290/0x8d0 block/blk-mq.c:2593
 blk_mq_requeue_work+0x6bc/0xa70 block/blk-mq.c:1502
 process_one_work kernel/workqueue.c:2627 [inline]
 process_scheduled_works+0x432/0x13f0 kernel/workqueue.c:2700
 worker_thread+0x6f2/0x1160 kernel/workqueue.c:2781
 kthread+0x33c/0x440 kernel/kthread.c:388
 ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:305
 </TASK>

Allocated by task 20776:
 kasan_save_stack+0x20/0x40 mm/kasan/common.c:45
 kasan_set_track+0x25/0x30 mm/kasan/common.c:52
 __kasan_slab_alloc+0x87/0x90 mm/kasan/common.c:328
 kasan_slab_alloc include/linux/kasan.h:188 [inline]
 slab_post_alloc_hook mm/slab.h:763 [inline]
 slab_alloc_node mm/slub.c:3458 [inline]
 kmem_cache_alloc_node+0x1a4/0x6f0 mm/slub.c:3503
 ioc_create_icq block/blk-ioc.c:370 [inline]
---truncated---",Linux,Linux,"36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4"
885,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43857,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix null reference error when checking end of zone

This patch fixes a potentially null pointer being accessed by
is_end_zone_blkaddr() that checks the last block of a zone
when f2fs is mounted as a single device.",Linux,Linux,"e067dc3c6b9c419bac43c6a0be2d85f44681f863, e067dc3c6b9c419bac43c6a0be2d85f44681f863, e067dc3c6b9c419bac43c6a0be2d85f44681f863"
886,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46702,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

thunderbolt: Mark XDomain as unplugged when router is removed

I noticed that when we do discrete host router NVM upgrade and it gets
hot-removed from the PCIe side as a result of NVM firmware authentication,
if there is another host connected with enabled paths we hang in tearing
them down. This is due to fact that the Thunderbolt networking driver
also tries to cleanup the paths and ends up blocking in
tb_disconnect_xdomain_paths() waiting for the domain lock.

However, at this point we already cleaned the paths in tb_stop() so
there is really no need for tb_disconnect_xdomain_paths() to do that
anymore. Furthermore it already checks if the XDomain is unplugged and
bails out early so take advantage of that and mark the XDomain as
unplugged when we remove the parent router.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
887,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47747,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: seeq: Fix use after free vulnerability in ether3 Driver Due to Race Condition

In the ether3_probe function, a timer is initialized with a callback
function ether3_ledoff, bound to &prev(dev)->timer. Once the timer is
started, there is a risk of a race condition if the module or device
is removed, triggering the ether3_remove function to perform cleanup.
The sequence of operations that may lead to a UAF bug is as follows:

CPU0                                    CPU1

                      |  ether3_ledoff
ether3_remove         |
  free_netdev(dev);   |
  put_devic           |
  kfree(dev);         |
 |  ether3_outw(priv(dev)->regs.config2 |= CFG2_CTRLO, REG_CONFIG2);
                      | // use dev

Fix it by ensuring that the timer is canceled before proceeding with
the cleanup in ether3_remove.",Linux,Linux,"6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56, 6fd9c53f71862a4797b7ed8a5de80e2c64829f56"
888,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44963,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: do not BUG_ON() when freeing tree block after error

When freeing a tree block, at btrfs_free_tree_block(), if we fail to
create a delayed reference we don't deal with the error and just do a
BUG_ON(). The error most likely to happen is -ENOMEM, and we have a
comment mentioning that only -ENOMEM can happen, but that is not true,
because in case qgroups are enabled any error returned from
btrfs_qgroup_trace_extent_post() (can be -EUCLEAN or anything returned
from btrfs_search_slot() for example) can be propagated back to
btrfs_free_tree_block().

So stop doing a BUG_ON() and return the error to the callers and make
them abort the transaction to prevent leaking space. Syzbot was
triggering this, likely due to memory allocation failure injection.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
889,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41011,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdkfd: don't allow mapping the MMIO HDP page with large pages

We don't get the right offset in that case.  The GPU has
an unused 4K area of the register BAR space into which you can
remap registers.  We remap the HDP flush registers into this
space to allow userspace (CPU or GPU) to flush the HDP when it
updates VRAM.  However, on systems with >4K pages, we end up
exposing PAGE_SIZE of MMIO space.",Linux,Linux,"d8e408a82704c86ba87c3d58cfe69dcdb758aa07, d8e408a82704c86ba87c3d58cfe69dcdb758aa07, d8e408a82704c86ba87c3d58cfe69dcdb758aa07, d8e408a82704c86ba87c3d58cfe69dcdb758aa07, d8e408a82704c86ba87c3d58cfe69dcdb758aa07, d8e408a82704c86ba87c3d58cfe69dcdb758aa07, d8e408a82704c86ba87c3d58cfe69dcdb758aa07"
972,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46816,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Stop amdgpu_dm initialize when link nums greater than max_links

[Why]
Coverity report OVERRUN warning. There are
only max_links elements within dc->links. link
count could up to AMDGPU_DM_MAX_DISPLAY_INDEX 31.

[How]
Make sure link count less than max_links.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
882,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41020,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

filelock: Fix fcntl/close race recovery compat path

When I wrote commit 3cad1bc01041 (""filelock: Remove locks reliably when
fcntl/close race is detected""), I missed that there are two copies of the
code I was patching: The normal version, and the version for 64-bit offsets
on 32-bit kernels.
Thanks to Greg KH for stumbling over this while doing the stable
backport...

Apply exactly the same fix to the compat path for 32-bit kernels.",Linux,Linux,"c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d"
892,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42291,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ice: Add a per-VF limit on number of FDIR filters

While the iavf driver adds a s/w limit (128) on the number of FDIR
filters that the VF can request, a malicious VF driver can request more
than that and exhaust the resources for other VFs.

Add a similar limit in ice.",Linux,Linux,"1f7ea1cd6a3748427512ccc9582e18cd9efea966, 1f7ea1cd6a3748427512ccc9582e18cd9efea966, 1f7ea1cd6a3748427512ccc9582e18cd9efea966, 1f7ea1cd6a3748427512ccc9582e18cd9efea966, 1f7ea1cd6a3748427512ccc9582e18cd9efea966"
893,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43902,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null checker before passing variables

Checks null pointer before passing variables to functions.

This fixes 3 NULL_RETURNS issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
894,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43818,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: amd: Adjust error handling in case of absent codec device

acpi_get_first_physical_node() can return NULL in several cases (no such
device, ACPI table error, reference count drop to 0, etc).
Existing check just emit error message, but doesn't perform return.
Then this NULL pointer is passed to devm_acpi_dev_add_driver_gpios()
where it is dereferenced.

Adjust this error handling by adding error code return.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"02527c3f2300100a25524c8c020d98c7957e485e, 02527c3f2300100a25524c8c020d98c7957e485e, 02527c3f2300100a25524c8c020d98c7957e485e, 02527c3f2300100a25524c8c020d98c7957e485e"
895,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44947,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fuse: Initialize beyond-EOF page contents before setting uptodate

fuse_notify_store(), unlike fuse_do_readpage(), does not enable page
zeroing (because it can be used to change partial page contents).

So fuse_notify_store() must be more careful to fully initialize page
contents (including parts of the page that are beyond end-of-file)
before marking the page uptodate.

The current code can leave beyond-EOF page contents uninitialized, which
makes these uninitialized page contents visible to userspace via mmap().

This is an information leak, but only affects systems which do not
enable init-on-alloc (via CONFIG_INIT_ON_ALLOC_DEFAULT_ON=y or the
corresponding kernel command line parameter).",Linux,Linux,"a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863, a1d75f258230b75d46aecdf28b2e732413028863"
896,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38538,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: xmit: make sure we have at least eth header len bytes

syzbot triggered an uninit value[1] error in bridge device's xmit path
by sending a short (less than ETH_HLEN bytes) skb. To fix it check if
we can actually pull that amount instead of assuming.

Tested with dropwatch:
 drop at: br_dev_xmit+0xb93/0x12d0 [bridge] (0xffffffffc06739b3)
 origin: software
 timestamp: Mon May 13 11:31:53 2024 778214037 nsec
 protocol: 0x88a8
 length: 2
 original length: 2
 drop reason: PKT_TOO_SMALL

[1]
BUG: KMSAN: uninit-value in br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
 netdev_start_xmit include/linux/netdevice.h:4917 [inline]
 xmit_one net/core/dev.c:3531 [inline]
 dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547
 __dev_queue_xmit+0x34db/0x5350 net/core/dev.c:4341
 dev_queue_xmit include/linux/netdevice.h:3091 [inline]
 __bpf_tx_skb net/core/filter.c:2136 [inline]
 __bpf_redirect_common net/core/filter.c:2180 [inline]
 __bpf_redirect+0x14a6/0x1620 net/core/filter.c:2187
 ____bpf_clone_redirect net/core/filter.c:2460 [inline]
 bpf_clone_redirect+0x328/0x470 net/core/filter.c:2432
 ___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997
 __bpf_prog_run512+0xb5/0xe0 kernel/bpf/core.c:2238
 bpf_dispatcher_nop_func include/linux/bpf.h:1234 [inline]
 __bpf_prog_run include/linux/filter.h:657 [inline]
 bpf_prog_run include/linux/filter.h:664 [inline]
 bpf_test_run+0x499/0xc30 net/bpf/test_run.c:425
 bpf_prog_test_run_skb+0x14ea/0x1f20 net/bpf/test_run.c:1058
 bpf_prog_test_run+0x6b7/0xad0 kernel/bpf/syscall.c:4269
 __sys_bpf+0x6aa/0xd90 kernel/bpf/syscall.c:5678
 __do_sys_bpf kernel/bpf/syscall.c:5767 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5765 [inline]
 __x64_sys_bpf+0xa0/0xe0 kernel/bpf/syscall.c:5765
 x64_sys_call+0x96b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
897,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44985,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: prevent possible UAF in ip6_xmit()

If skb_expand_head() returns NULL, skb has been freed
and the associated dst/idev could also have been freed.

We must use rcu_read_lock() to prevent a possible UAF.",Linux,Linux,"81d626b00bdba16504eeae9cc891b18e83a9471a, ee6b1db17f8287b615448488fc37f42bcfe9ece6, 0c9f227bee11910a49e1d159abe102d06e3745d5, 0c9f227bee11910a49e1d159abe102d06e3745d5, 0c9f227bee11910a49e1d159abe102d06e3745d5, 0c9f227bee11910a49e1d159abe102d06e3745d5, 0c9f227bee11910a49e1d159abe102d06e3745d5"
883,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46782,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ila: call nf_unregister_net_hooks() sooner

syzbot found an use-after-free Read in ila_nf_input [1]

Issue here is that ila_xlat_exit_net() frees the rhashtable,
then call nf_unregister_net_hooks().

It should be done in the reverse way, with a synchronize_rcu().

This is a good match for a pre_exit() method.

[1]
 BUG: KASAN: use-after-free in rht_key_hashfn include/linux/rhashtable.h:159 [inline]
 BUG: KASAN: use-after-free in __rhashtable_lookup include/linux/rhashtable.h:604 [inline]
 BUG: KASAN: use-after-free in rhashtable_lookup include/linux/rhashtable.h:646 [inline]
 BUG: KASAN: use-after-free in rhashtable_lookup_fast+0x77a/0x9b0 include/linux/rhashtable.h:672
Read of size 4 at addr ffff888064620008 by task ksoftirqd/0/16

CPU: 0 UID: 0 PID: 16 Comm: ksoftirqd/0 Not tainted 6.11.0-rc4-syzkaller-00238-g2ad6d23f465a #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:93 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
  print_address_description mm/kasan/report.c:377 [inline]
  print_report+0x169/0x550 mm/kasan/report.c:488
  kasan_report+0x143/0x180 mm/kasan/report.c:601
  rht_key_hashfn include/linux/rhashtable.h:159 [inline]
  __rhashtable_lookup include/linux/rhashtable.h:604 [inline]
  rhashtable_lookup include/linux/rhashtable.h:646 [inline]
  rhashtable_lookup_fast+0x77a/0x9b0 include/linux/rhashtable.h:672
  ila_lookup_wildcards net/ipv6/ila/ila_xlat.c:132 [inline]
  ila_xlat_addr net/ipv6/ila/ila_xlat.c:652 [inline]
  ila_nf_input+0x1fe/0x3c0 net/ipv6/ila/ila_xlat.c:190
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xc3/0x220 net/netfilter/core.c:626
  nf_hook include/linux/netfilter.h:269 [inline]
  NF_HOOK+0x29e/0x450 include/linux/netfilter.h:312
  __netif_receive_skb_one_core net/core/dev.c:5661 [inline]
  __netif_receive_skb+0x1ea/0x650 net/core/dev.c:5775
  process_backlog+0x662/0x15b0 net/core/dev.c:6108
  __napi_poll+0xcb/0x490 net/core/dev.c:6772
  napi_poll net/core/dev.c:6841 [inline]
  net_rx_action+0x89b/0x1240 net/core/dev.c:6963
  handle_softirqs+0x2c4/0x970 kernel/softirq.c:554
  run_ksoftirqd+0xca/0x130 kernel/softirq.c:928
  smpboot_thread_fn+0x544/0xa30 kernel/smpboot.c:164
  kthread+0x2f0/0x390 kernel/kthread.c:389
  ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
 </TASK>

The buggy address belongs to the physical page:
page: refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x64620
flags: 0xfff00000000000(node=0|zone=1|lastcpupid=0x7ff)
page_type: 0xbfffffff(buddy)
raw: 00fff00000000000 ffffea0000959608 ffffea00019d9408 0000000000000000
raw: 0000000000000000 0000000000000003 00000000bfffffff 0000000000000000
page dumped because: kasan: bad access detected
page_owner tracks the page as freed
page last allocated via order 3, migratetype Unmovable, gfp_mask 0x52dc0(GFP_KERNEL|__GFP_NOWARN|__GFP_NORETRY|__GFP_COMP|__GFP_ZERO), pid 5242, tgid 5242 (syz-executor), ts 73611328570, free_ts 618981657187
  set_page_owner include/linux/page_owner.h:32 [inline]
  post_alloc_hook+0x1f3/0x230 mm/page_alloc.c:1493
  prep_new_page mm/page_alloc.c:1501 [inline]
  get_page_from_freelist+0x2e4c/0x2f10 mm/page_alloc.c:3439
  __alloc_pages_noprof+0x256/0x6c0 mm/page_alloc.c:4695
  __alloc_pages_node_noprof include/linux/gfp.h:269 [inline]
  alloc_pages_node_noprof include/linux/gfp.h:296 [inline]
  ___kmalloc_large_node+0x8b/0x1d0 mm/slub.c:4103
  __kmalloc_large_node_noprof+0x1a/0x80 mm/slub.c:4130
  __do_kmalloc_node mm/slub.c:4146 [inline]
  __kmalloc_node_noprof+0x2d2/0x440 mm/slub.c:4164
  __kvmalloc_node_noprof+0x72/0x190 mm/util.c:650
  bucket_table_alloc lib/rhashtable.c:186 [inline]
  rhashtable_init_noprof+0x534/0xa60 lib/rhashtable.c:1071
  ila_xlat_init_net+0xa0/0x110 net/ipv6/ila/ila_xlat.c:613
  ops_ini
---truncated---",Linux,Linux,"7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd, 7f00feaf107645d95a6d87e99b4d141ac0a08efd"
881,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47709,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

can: bcm: Clear bo->bcm_proc_read after remove_proc_entry().

syzbot reported a warning in bcm_release(). [0]

The blamed change fixed another warning that is triggered when
connect() is issued again for a socket whose connect()ed device has
been unregistered.

However, if the socket is just close()d without the 2nd connect(), the
remaining bo->bcm_proc_read triggers unnecessary remove_proc_entry()
in bcm_release().

Let's clear bo->bcm_proc_read after remove_proc_entry() in bcm_notify().

[0]
name '4986'
WARNING: CPU: 0 PID: 5234 at fs/proc/generic.c:711 remove_proc_entry+0x2e7/0x5d0 fs/proc/generic.c:711
Modules linked in:
CPU: 0 UID: 0 PID: 5234 Comm: syz-executor606 Not tainted 6.11.0-rc5-syzkaller-00178-g5517ae241919 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
RIP: 0010:remove_proc_entry+0x2e7/0x5d0 fs/proc/generic.c:711
Code: ff eb 05 e8 cb 1e 5e ff 48 8b 5c 24 10 48 c7 c7 e0 f7 aa 8e e8 2a 38 8e 09 90 48 c7 c7 60 3a 1b 8c 48 89 de e8 da 42 20 ff 90 <0f> 0b 90 90 48 8b 44 24 18 48 c7 44 24 40 0e 36 e0 45 49 c7 04 07
RSP: 0018:ffffc9000345fa20 EFLAGS: 00010246
RAX: 2a2d0aee2eb64600 RBX: ffff888032f1f548 RCX: ffff888029431e00
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffc9000345fb08 R08: ffffffff8155b2f2 R09: 1ffff1101710519a
R10: dffffc0000000000 R11: ffffed101710519b R12: ffff888011d38640
R13: 0000000000000004 R14: 0000000000000000 R15: dffffc0000000000
FS:  0000000000000000(0000) GS:ffff8880b8800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fcfb52722f0 CR3: 000000000e734000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 bcm_release+0x250/0x880 net/can/bcm.c:1578
 __sock_release net/socket.c:659 [inline]
 sock_close+0xbc/0x240 net/socket.c:1421
 __fput+0x24a/0x8a0 fs/file_table.c:422
 task_work_run+0x24f/0x310 kernel/task_work.c:228
 exit_task_work include/linux/task_work.h:40 [inline]
 do_exit+0xa2f/0x27f0 kernel/exit.c:882
 do_group_exit+0x207/0x2c0 kernel/exit.c:1031
 __do_sys_exit_group kernel/exit.c:1042 [inline]
 __se_sys_exit_group kernel/exit.c:1040 [inline]
 __x64_sys_exit_group+0x3f/0x40 kernel/exit.c:1040
 x64_sys_call+0x2634/0x2640 arch/x86/include/generated/asm/syscalls_64.h:232
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7fcfb51ee969
Code: Unable to access opcode bytes at 0x7fcfb51ee93f.
RSP: 002b:00007ffce0109ca8 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 0000000000000001 RCX: 00007fcfb51ee969
RDX: 000000000000003c RSI: 00000000000000e7 RDI: 0000000000000001
RBP: 00007fcfb526f3b0 R08: ffffffffffffffb8 R09: 0000555500000000
R10: 0000555500000000 R11: 0000000000000246 R12: 00007fcfb526f3b0
R13: 0000000000000000 R14: 00007fcfb5271ee0 R15: 00007fcfb51bf160
 </TASK>",Linux,Linux,"5c680022c4e28ba18ea500f3e29f0428271afa92, 33ed4ba73caae39f34ab874ba79138badc2c65dd, aec92dbebdbec7567d9f56d7c9296a572b8fd849, 10bfacbd5e8d821011d857bee73310457c9c989a, 3b39dc2901aa7a679a5ca981a3de9f8d5658afe8, 4377b79323df62eb5d310354f19b4d130ff58d50, abb0a615569ec008e8a93d9f3ab2d5b418ea94d4, 76fe372ccb81b0c89b6cd2fec26e2f38c958be85, 76fe372ccb81b0c89b6cd2fec26e2f38c958be85"
865,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42156,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/pkey: Wipe copies of clear-key structures on failure

Wipe all sensitive data from stack for all IOCTLs, which convert a
clear-key into a protected- or secure-key.",Linux,Linux,"e80d4af0a320972aac58e2004d0ba4e44ef4c5c7, e80d4af0a320972aac58e2004d0ba4e44ef4c5c7, e80d4af0a320972aac58e2004d0ba4e44ef4c5c7"
872,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43909,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu/pm: Fix the null pointer dereference for smu7

optimize the code to avoid pass a null pointer (hwmgr->backend)
to function smu7_update_edc_leakage_table.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
866,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45009,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: pm: only decrement add_addr_accepted for MPJ req

Adding the following warning ...

  WARN_ON_ONCE(msk->pm.add_addr_accepted == 0)

... before decrementing the add_addr_accepted counter helped to find a
bug when running the ""remove single subflow"" subtest from the
mptcp_join.sh selftest.

Removing a 'subflow' endpoint will first trigger a RM_ADDR, then the
subflow closure. Before this patch, and upon the reception of the
RM_ADDR, the other peer will then try to decrement this
add_addr_accepted. That's not correct because the attached subflows have
not been created upon the reception of an ADD_ADDR.

A way to solve that is to decrement the counter only if the attached
subflow was an MP_JOIN to a remote id that was not 0, and initiated by
the host receiving the RM_ADDR.",Linux,Linux,"d0876b2284cf8b34dd214b2d0aa21071c345da59, d0876b2284cf8b34dd214b2d0aa21071c345da59, d0876b2284cf8b34dd214b2d0aa21071c345da59, d0876b2284cf8b34dd214b2d0aa21071c345da59, d0876b2284cf8b34dd214b2d0aa21071c345da59"
867,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46772,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check denominator crb_pipes before used

[WHAT & HOW]
A denominator cannot be 0, and is checked before used.

This fixes 2 DIVIDE_BY_ZERO issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
868,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42313,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: venus: fix use after free in vdec_close

There appears to be a possible use after free with vdec_close().
The firmware will add buffer release work to the work queue through
HFI callbacks as a normal part of decoding. Randomly closing the
decoder device from userspace during normal decoding can incur
a read after free for inst.

Fix it by cancelling the work in vdec_close.",Linux,Linux,"af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115"
869,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45028,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mmc: mmc_test: Fix NULL dereference on allocation failure

If the ""test->highmem = alloc_pages()"" allocation fails then calling
__free_pages(test->highmem) will result in a NULL dereference.  Also
change the error code to -ENOMEM instead of returning success.",Linux,Linux,"2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9, 2661081f5ab9cb25359d27f88707a018cf4e68e9"
870,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52757,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential deadlock when releasing mids

All release_mid() callers seem to hold a reference of @mid so there is
no need to call kref_put(&mid->refcount, __release_mid) under
@server->mid_lock spinlock.  If they don't, then an use-after-free bug
would have occurred anyways.

By getting rid of such spinlock also fixes a potential deadlock as
shown below

CPU 0                                CPU 1
------------------------------------------------------------------
cifs_demultiplex_thread()            cifs_debug_data_proc_show()
 release_mid()
  spin_lock(&server->mid_lock);
                                     spin_lock(&cifs_tcp_ses_lock)
				      spin_lock(&server->mid_lock)
  __release_mid()
   smb2_find_smb_tcon()
    spin_lock(&cifs_tcp_ses_lock) *deadlock*",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
871,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42301,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

dev/parport: fix the array out-of-bounds risk

Fixed array out-of-bounds issues caused by sprintf
by replacing it with snprintf for safer data copying,
ensuring the destination buffer is not overflowed.

Below is the stack trace I encountered during the actual issue:

[ 66.575408s] [pid:5118,cpu4,QThread,4]Kernel panic - not syncing: stack-protector:
Kernel stack is corrupted in: do_hardware_base_addr+0xcc/0xd0 [parport]
[ 66.575408s] [pid:5118,cpu4,QThread,5]CPU: 4 PID: 5118 Comm:
QThread Tainted: G S W O 5.10.97-arm64-desktop #7100.57021.2
[ 66.575439s] [pid:5118,cpu4,QThread,6]TGID: 5087 Comm: EFileApp
[ 66.575439s] [pid:5118,cpu4,QThread,7]Hardware name: HUAWEI HUAWEI QingYun
PGUX-W515x-B081/SP1PANGUXM, BIOS 1.00.07 04/29/2024
[ 66.575439s] [pid:5118,cpu4,QThread,8]Call trace:
[ 66.575469s] [pid:5118,cpu4,QThread,9] dump_backtrace+0x0/0x1c0
[ 66.575469s] [pid:5118,cpu4,QThread,0] show_stack+0x14/0x20
[ 66.575469s] [pid:5118,cpu4,QThread,1] dump_stack+0xd4/0x10c
[ 66.575500s] [pid:5118,cpu4,QThread,2] panic+0x1d8/0x3bc
[ 66.575500s] [pid:5118,cpu4,QThread,3] __stack_chk_fail+0x2c/0x38
[ 66.575500s] [pid:5118,cpu4,QThread,4] do_hardware_base_addr+0xcc/0xd0 [parport]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
873,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42321,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: flow_dissector: use DEBUG_NET_WARN_ON_ONCE

The following splat is easy to reproduce upstream as well as in -stable
kernels. Florian Westphal provided the following commit:

  d1dab4f71d37 (""net: add and use __skb_get_hash_symmetric_net"")

but this complementary fix has been also suggested by Willem de Bruijn
and it can be easily backported to -stable kernel which consists in
using DEBUG_NET_WARN_ON_ONCE instead to silence the following splat
given __skb_get_hash() is used by the nftables tracing infrastructure to
to identify packets in traces.

[69133.561393] ------------[ cut here ]------------
[69133.561404] WARNING: CPU: 0 PID: 43576 at net/core/flow_dissector.c:1104 __skb_flow_dissect+0x134f/
[...]
[69133.561944] CPU: 0 PID: 43576 Comm: socat Not tainted 6.10.0-rc7+ #379
[69133.561959] RIP: 0010:__skb_flow_dissect+0x134f/0x2ad0
[69133.561970] Code: 83 f9 04 0f 84 b3 00 00 00 45 85 c9 0f 84 aa 00 00 00 41 83 f9 02 0f 84 81 fc ff
ff 44 0f b7 b4 24 80 00 00 00 e9 8b f9 ff ff <0f> 0b e9 20 f3 ff ff 41 f6 c6 20 0f 84 e4 ef ff ff 48 8d 7b 12 e8
[69133.561979] RSP: 0018:ffffc90000006fc0 EFLAGS: 00010246
[69133.561988] RAX: 0000000000000000 RBX: ffffffff82f33e20 RCX: ffffffff81ab7e19
[69133.561994] RDX: dffffc0000000000 RSI: ffffc90000007388 RDI: ffff888103a1b418
[69133.562001] RBP: ffffc90000007310 R08: 0000000000000000 R09: 0000000000000000
[69133.562007] R10: ffffc90000007388 R11: ffffffff810cface R12: ffff888103a1b400
[69133.562013] R13: 0000000000000000 R14: ffffffff82f33e2a R15: ffffffff82f33e28
[69133.562020] FS:  00007f40f7131740(0000) GS:ffff888390800000(0000) knlGS:0000000000000000
[69133.562027] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[69133.562033] CR2: 00007f40f7346ee0 CR3: 000000015d200001 CR4: 00000000001706f0
[69133.562040] Call Trace:
[69133.562044]  <IRQ>
[69133.562049]  ? __warn+0x9f/0x1a0
[ 1211.841384]  ? __skb_flow_dissect+0x107e/0x2860
[...]
[ 1211.841496]  ? bpf_flow_dissect+0x160/0x160
[ 1211.841753]  __skb_get_hash+0x97/0x280
[ 1211.841765]  ? __skb_get_hash_symmetric+0x230/0x230
[ 1211.841776]  ? mod_find+0xbf/0xe0
[ 1211.841786]  ? get_stack_info_noinstr+0x12/0xe0
[ 1211.841798]  ? bpf_ksym_find+0x56/0xe0
[ 1211.841807]  ? __rcu_read_unlock+0x2a/0x70
[ 1211.841819]  nft_trace_init+0x1b9/0x1c0 [nf_tables]
[ 1211.841895]  ? nft_trace_notify+0x830/0x830 [nf_tables]
[ 1211.841964]  ? get_stack_info+0x2b/0x80
[ 1211.841975]  ? nft_do_chain_arp+0x80/0x80 [nf_tables]
[ 1211.842044]  nft_do_chain+0x79c/0x850 [nf_tables]",Linux,Linux,"9b52e3f267a6835efd50ed9002d530666d16a411, 9b52e3f267a6835efd50ed9002d530666d16a411, 9b52e3f267a6835efd50ed9002d530666d16a411, 9b52e3f267a6835efd50ed9002d530666d16a411"
880,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47742,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

firmware_loader: Block path traversal

Most firmware names are hardcoded strings, or are constructed from fairly
constrained format strings where the dynamic parts are just some hex
numbers or such.

However, there are a couple codepaths in the kernel where firmware file
names contain string components that are passed through from a device or
semi-privileged userspace; the ones I could find (not counting interfaces
that require root privileges) are:

 - lpfc_sli4_request_firmware_update() seems to construct the firmware
   filename from ""ModelName"", a string that was previously parsed out of
   some descriptor (""Vital Product Data"") in lpfc_fill_vpd()
 - nfp_net_fw_find() seems to construct a firmware filename from a model
   name coming from nfp_hwinfo_lookup(pf->hwinfo, ""nffw.partno""), which I
   think parses some descriptor that was read from the device.
   (But this case likely isn't exploitable because the format string looks
   like ""netronome/nic_%s"", and there shouldn't be any *folders* starting
   with ""netronome/nic_"". The previous case was different because there,
   the ""%s"" is *at the start* of the format string.)
 - module_flash_fw_schedule() is reachable from the
   ETHTOOL_MSG_MODULE_FW_FLASH_ACT netlink command, which is marked as
   GENL_UNS_ADMIN_PERM (meaning CAP_NET_ADMIN inside a user namespace is
   enough to pass the privilege check), and takes a userspace-provided
   firmware name.
   (But I think to reach this case, you need to have CAP_NET_ADMIN over a
   network namespace that a special kind of ethernet device is mapped into,
   so I think this is not a viable attack path in practice.)

Fix it by rejecting any firmware names containing "".."" path components.

For what it's worth, I went looking and haven't found any USB device
drivers that use the firmware loader dangerously.",Linux,Linux,"abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e"
874,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38544,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/rxe: Fix seg fault in rxe_comp_queue_pkt

In rxe_comp_queue_pkt() an incoming response packet skb is enqueued to the
resp_pkts queue and then a decision is made whether to run the completer
task inline or schedule it. Finally the skb is dereferenced to bump a 'hw'
performance counter. This is wrong because if the completer task is
already running in a separate thread it may have already processed the skb
and freed it which can cause a seg fault.  This has been observed
infrequently in testing at high scale.

This patch fixes this by changing the order of enqueuing the packet until
after the counter is accessed.",Linux,Linux,"0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0, 0b1e5b99a48b5b810e3e38f1d6e0d39306b99ec0"
875,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42273,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: assign CURSEG_ALL_DATA_ATGC if blkaddr is valid

mkdir /mnt/test/comp
f2fs_io setflags compression /mnt/test/comp
dd if=/dev/zero of=/mnt/test/comp/testfile bs=16k count=1
truncate --size 13 /mnt/test/comp/testfile

In the above scenario, we can get a BUG_ON.
 kernel BUG at fs/f2fs/segment.c:3589!
 Call Trace:
  do_write_page+0x78/0x390 [f2fs]
  f2fs_outplace_write_data+0x62/0xb0 [f2fs]
  f2fs_do_write_data_page+0x275/0x740 [f2fs]
  f2fs_write_single_data_page+0x1dc/0x8f0 [f2fs]
  f2fs_write_multi_pages+0x1e5/0xae0 [f2fs]
  f2fs_write_cache_pages+0xab1/0xc60 [f2fs]
  f2fs_write_data_pages+0x2d8/0x330 [f2fs]
  do_writepages+0xcf/0x270
  __writeback_single_inode+0x44/0x350
  writeback_sb_inodes+0x242/0x530
  __writeback_inodes_wb+0x54/0xf0
  wb_writeback+0x192/0x310
  wb_workfn+0x30d/0x400

The reason is we gave CURSEG_ALL_DATA_ATGC to COMPR_ADDR where the
page was set the gcing flag by set_cluster_dirty().",Linux,Linux,"7c972c89457511007dfc933814c06786905e515c, 417b8a91f4e8831cadaf85c3f15c6991c1f54dde, 4961acdd65c956e97c1a000c82d91a8c1cdbe44b, 4961acdd65c956e97c1a000c82d91a8c1cdbe44b"
876,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26893,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

firmware: arm_scmi: Fix double free in SMC transport cleanup path

When the generic SCMI code tears down a channel, it calls the chan_free
callback function, defined by each transport. Since multiple protocols
might share the same transport_info member, chan_free() might want to
clean up the same member multiple times within the given SCMI transport
implementation. In this case, it is SMC transport. This will lead to a NULL
pointer dereference at the second time:

    | scmi_protocol scmi_dev.1: Enabled polling mode TX channel - prot_id:16
    | arm-scmi firmware:scmi: SCMI Notifications - Core Enabled.
    | arm-scmi firmware:scmi: unable to communicate with SCMI
    | Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
    | Mem abort info:
    |   ESR = 0x0000000096000004
    |   EC = 0x25: DABT (current EL), IL = 32 bits
    |   SET = 0, FnV = 0
    |   EA = 0, S1PTW = 0
    |   FSC = 0x04: level 0 translation fault
    | Data abort info:
    |   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
    |   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
    |   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
    | user pgtable: 4k pages, 48-bit VAs, pgdp=0000000881ef8000
    | [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
    | Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
    | Modules linked in:
    | CPU: 4 PID: 1 Comm: swapper/0 Not tainted 6.7.0-rc2-00124-g455ef3d016c9-dirty #793
    | Hardware name: FVP Base RevC (DT)
    | pstate: 61400009 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)
    | pc : smc_chan_free+0x3c/0x6c
    | lr : smc_chan_free+0x3c/0x6c
    | Call trace:
    |  smc_chan_free+0x3c/0x6c
    |  idr_for_each+0x68/0xf8
    |  scmi_cleanup_channels.isra.0+0x2c/0x58
    |  scmi_probe+0x434/0x734
    |  platform_probe+0x68/0xd8
    |  really_probe+0x110/0x27c
    |  __driver_probe_device+0x78/0x12c
    |  driver_probe_device+0x3c/0x118
    |  __driver_attach+0x74/0x128
    |  bus_for_each_dev+0x78/0xe0
    |  driver_attach+0x24/0x30
    |  bus_add_driver+0xe4/0x1e8
    |  driver_register+0x60/0x128
    |  __platform_driver_register+0x28/0x34
    |  scmi_driver_init+0x84/0xc0
    |  do_one_initcall+0x78/0x33c
    |  kernel_init_freeable+0x2b8/0x51c
    |  kernel_init+0x24/0x130
    |  ret_from_fork+0x10/0x20
    | Code: f0004701 910a0021 aa1403e5 97b91c70 (b9400280)
    | ---[ end trace 0000000000000000 ]---

Simply check for the struct pointer being NULL before trying to access
its members, to avoid this situation.

This was found when a transport doesn't really work (for instance no SMC
service), the probe routines then tries to clean up, and triggers a crash.",Linux,Linux,"1dc6558062dadfabd2fb3bd885fa6e92ec7196f2, 1dc6558062dadfabd2fb3bd885fa6e92ec7196f2, 1dc6558062dadfabd2fb3bd885fa6e92ec7196f2, 1dc6558062dadfabd2fb3bd885fa6e92ec7196f2, 1dc6558062dadfabd2fb3bd885fa6e92ec7196f2"
877,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47720,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null check for set_output_gamma in dcn30_set_output_transfer_func

This commit adds a null check for the set_output_gamma function pointer
in the  dcn30_set_output_transfer_func function. Previously,
set_output_gamma was being checked for nullity at line 386, but then it
was being dereferenced without any nullity check at line 401. This
could potentially lead to a null pointer dereference error if
set_output_gamma is indeed null.

To fix this, we now ensure that set_output_gamma is not null before
dereferencing it. We do this by adding a nullity check for
set_output_gamma before the call to set_output_gamma at line 401. If
set_output_gamma is null, we log an error message and do not call the
function.

This fix prevents a potential null pointer dereference error.

drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c:401 dcn30_set_output_transfer_func()
error: we previously assumed 'mpc->funcs->set_output_gamma' could be null (see line 386)

drivers/gpu/drm/amd/amdgpu/../display/dc/hwss/dcn30/dcn30_hwseq.c
    373 bool dcn30_set_output_transfer_func(struct dc *dc,
    374                                 struct pipe_ctx *pipe_ctx,
    375                                 const struct dc_stream_state *stream)
    376 {
    377         int mpcc_id = pipe_ctx->plane_res.hubp->inst;
    378         struct mpc *mpc = pipe_ctx->stream_res.opp->ctx->dc->res_pool->mpc;
    379         const struct pwl_params *params = NULL;
    380         bool ret = false;
    381
    382         /* program OGAM or 3DLUT only for the top pipe*/
    383         if (pipe_ctx->top_pipe == NULL) {
    384                 /*program rmu shaper and 3dlut in MPC*/
    385                 ret = dcn30_set_mpc_shaper_3dlut(pipe_ctx, stream);
    386                 if (ret == false && mpc->funcs->set_output_gamma) {
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ If this is NULL

    387                         if (stream->out_transfer_func.type == TF_TYPE_HWPWL)
    388                                 params = &stream->out_transfer_func.pwl;
    389                         else if (pipe_ctx->stream->out_transfer_func.type ==
    390                                         TF_TYPE_DISTRIBUTED_POINTS &&
    391                                         cm3_helper_translate_curve_to_hw_format(
    392                                         &stream->out_transfer_func,
    393                                         &mpc->blender_params, false))
    394                                 params = &mpc->blender_params;
    395                          /* there are no ROM LUTs in OUTGAM */
    396                         if (stream->out_transfer_func.type == TF_TYPE_PREDEFINED)
    397                                 BREAK_TO_DEBUGGER();
    398                 }
    399         }
    400
--> 401         mpc->funcs->set_output_gamma(mpc, mpcc_id, params);
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Then it will crash

    402         return ret;
    403 }",Linux,Linux,"d99f13878d6f9c286b13860d8bf0b4db9ffb189a, d99f13878d6f9c286b13860d8bf0b4db9ffb189a, d99f13878d6f9c286b13860d8bf0b4db9ffb189a, d99f13878d6f9c286b13860d8bf0b4db9ffb189a, d99f13878d6f9c286b13860d8bf0b4db9ffb189a, d99f13878d6f9c286b13860d8bf0b4db9ffb189a"
878,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42298,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: fsl: fsl_qmc_audio: Check devm_kasprintf() returned value

devm_kasprintf() can return a NULL pointer on failure but this returned
value is not checked.

Fix this lack and check the returned value.",Linux,Linux,"075c7125b11c72e7933401d73000d6d151196072, 075c7125b11c72e7933401d73000d6d151196072, 075c7125b11c72e7933401d73000d6d151196072"
879,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41064,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/eeh: avoid possible crash when edev->pdev changes

If a PCI device is removed during eeh_pe_report_edev(), edev->pdev
will change and can cause a crash, hold the PCI rescan/remove lock
while taking a copy of edev->pdev->bus.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
971,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-26852,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net/ipv6: avoid possible UAF in ip6_route_mpath_notify()

syzbot found another use-after-free in ip6_route_mpath_notify() [1]

Commit f7225172f25a (""net/ipv6: prevent use after free in
ip6_route_mpath_notify"") was not able to fix the root cause.

We need to defer the fib6_info_release() calls after
ip6_route_mpath_notify(), in the cleanup phase.

[1]
BUG: KASAN: slab-use-after-free in rt6_fill_node+0x1460/0x1ac0
Read of size 4 at addr ffff88809a07fc64 by task syz-executor.2/23037

CPU: 0 PID: 23037 Comm: syz-executor.2 Not tainted 6.8.0-rc4-syzkaller-01035-gea7f3cfaa588 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x1e7/0x2e0 lib/dump_stack.c:106
  print_address_description mm/kasan/report.c:377 [inline]
  print_report+0x167/0x540 mm/kasan/report.c:488
  kasan_report+0x142/0x180 mm/kasan/report.c:601
 rt6_fill_node+0x1460/0x1ac0
  inet6_rt_notify+0x13b/0x290 net/ipv6/route.c:6184
  ip6_route_mpath_notify net/ipv6/route.c:5198 [inline]
  ip6_route_multipath_add net/ipv6/route.c:5404 [inline]
  inet6_rtm_newroute+0x1d0f/0x2300 net/ipv6/route.c:5517
  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597
  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543
  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]
  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367
  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x221/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584
  ___sys_sendmsg net/socket.c:2638 [inline]
  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667
 do_syscall_64+0xf9/0x240
 entry_SYSCALL_64_after_hwframe+0x6f/0x77
RIP: 0033:0x7f73dd87dda9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 e1 20 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f73de6550c8 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 00007f73dd9ac050 RCX: 00007f73dd87dda9
RDX: 0000000000000000 RSI: 0000000020000140 RDI: 0000000000000005
RBP: 00007f73dd8ca47a R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000006e R14: 00007f73dd9ac050 R15: 00007ffdbdeb7858
 </TASK>

Allocated by task 23037:
  kasan_save_stack mm/kasan/common.c:47 [inline]
  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
  poison_kmalloc_redzone mm/kasan/common.c:372 [inline]
  __kasan_kmalloc+0x98/0xb0 mm/kasan/common.c:389
  kasan_kmalloc include/linux/kasan.h:211 [inline]
  __do_kmalloc_node mm/slub.c:3981 [inline]
  __kmalloc+0x22e/0x490 mm/slub.c:3994
  kmalloc include/linux/slab.h:594 [inline]
  kzalloc include/linux/slab.h:711 [inline]
  fib6_info_alloc+0x2e/0xf0 net/ipv6/ip6_fib.c:155
  ip6_route_info_create+0x445/0x12b0 net/ipv6/route.c:3758
  ip6_route_multipath_add net/ipv6/route.c:5298 [inline]
  inet6_rtm_newroute+0x744/0x2300 net/ipv6/route.c:5517
  rtnetlink_rcv_msg+0x885/0x1040 net/core/rtnetlink.c:6597
  netlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543
  netlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]
  netlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367
  netlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x221/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2584
  ___sys_sendmsg net/socket.c:2638 [inline]
  __sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667
 do_syscall_64+0xf9/0x240
 entry_SYSCALL_64_after_hwframe+0x6f/0x77

Freed by task 16:
  kasan_save_stack mm/kasan/common.c:47 [inline]
  kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
  kasan_save_free_info+0x4e/0x60 mm/kasan/generic.c:640
  poison_slab_object+0xa6/0xe0 m
---truncated---",Linux,Linux,"3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a, 3b1137fe74829e021f483756a648cbb87c8a1b4a"
981,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53066,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nfs: Fix KMSAN warning in decode_getfattr_attrs()

Fix the following KMSAN warning:

CPU: 1 UID: 0 PID: 7651 Comm: cp Tainted: G    B
Tainted: [B]=BAD_PAGE
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009)
=====================================================
=====================================================
BUG: KMSAN: uninit-value in decode_getfattr_attrs+0x2d6d/0x2f90
 decode_getfattr_attrs+0x2d6d/0x2f90
 decode_getfattr_generic+0x806/0xb00
 nfs4_xdr_dec_getattr+0x1de/0x240
 rpcauth_unwrap_resp_decode+0xab/0x100
 rpcauth_unwrap_resp+0x95/0xc0
 call_decode+0x4ff/0xb50
 __rpc_execute+0x57b/0x19d0
 rpc_execute+0x368/0x5e0
 rpc_run_task+0xcfe/0xee0
 nfs4_proc_getattr+0x5b5/0x990
 __nfs_revalidate_inode+0x477/0xd00
 nfs_access_get_cached+0x1021/0x1cc0
 nfs_do_access+0x9f/0xae0
 nfs_permission+0x1e4/0x8c0
 inode_permission+0x356/0x6c0
 link_path_walk+0x958/0x1330
 path_lookupat+0xce/0x6b0
 filename_lookup+0x23e/0x770
 vfs_statx+0xe7/0x970
 vfs_fstatat+0x1f2/0x2c0
 __se_sys_newfstatat+0x67/0x880
 __x64_sys_newfstatat+0xbd/0x120
 x64_sys_call+0x1826/0x3cf0
 do_syscall_64+0xd0/0x1b0
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

The KMSAN warning is triggered in decode_getfattr_attrs(), when calling
decode_attr_mdsthreshold(). It appears that fattr->mdsthreshold is not
initialized.

Fix the issue by initializing fattr->mdsthreshold to NULL in
nfs_fattr_init().",Linux,Linux,"88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c, 88034c3d88c2c48b215f2cc5eb22e564aa817f9c"
973,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47679,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

vfs: fix race between evice_inodes() and find_inode()&iput()

Hi, all

Recently I noticed a bug[1] in btrfs, after digged it into
and I believe it'a race in vfs.

Let's assume there's a inode (ie ino 261) with i_count 1 is
called by iput(), and there's a concurrent thread calling
generic_shutdown_super().

cpu0:                              cpu1:
iput() // i_count is 1
  ->spin_lock(inode)
  ->dec i_count to 0
  ->iput_final()                    generic_shutdown_super()
    ->__inode_add_lru()               ->evict_inodes()
      // cause some reason[2]           ->if (atomic_read(inode->i_count)) continue;
      // return before                  // inode 261 passed the above check
      // list_lru_add_obj()             // and then schedule out
   ->spin_unlock()
// note here: the inode 261
// was still at sb list and hash list,
// and I_FREEING|I_WILL_FREE was not been set

btrfs_iget()
  // after some function calls
  ->find_inode()
    // found the above inode 261
    ->spin_lock(inode)
   // check I_FREEING|I_WILL_FREE
   // and passed
      ->__iget()
    ->spin_unlock(inode)                // schedule back
                                        ->spin_lock(inode)
                                        // check (I_NEW|I_FREEING|I_WILL_FREE) flags,
                                        // passed and set I_FREEING
iput()                                  ->spin_unlock(inode)
  ->spin_lock(inode)			  ->evict()
  // dec i_count to 0
  ->iput_final()
    ->spin_unlock()
    ->evict()

Now, we have two threads simultaneously evicting
the same inode, which may trigger the BUG(inode->i_state & I_CLEAR)
statement both within clear_inode() and iput().

To fix the bug, recheck the inode->i_count after holding i_lock.
Because in the most scenarios, the first check is valid, and
the overhead of spin_lock() can be reduced.

If there is any misunderstanding, please let me know, thanks.

[1]: https://lore.kernel.org/linux-btrfs/000000000000eabe1d0619c48986@google.com/
[2]: The reason might be 1. SB_ACTIVE was removed or 2. mapping_shrinkable()
return false when I reproduced the bug.",Linux,Linux,"63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb"
974,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-42229,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

crypto: aead,cipher - zeroize key buffer after use

I.G 9.7.B for FIPS 140-3 specifies that variables temporarily holding
cryptographic information should be zeroized once they are no longer
needed. Accomplish this by using kfree_sensitive for buffers that
previously held the private key.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1066,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49883,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: aovid use-after-free in ext4_ext_insert_extent()

As Ojaswin mentioned in Link, in ext4_ext_insert_extent(), if the path is
reallocated in ext4_ext_create_new_leaf(), we'll use the stale path and
cause UAF. Below is a sample trace with dummy values:

ext4_ext_insert_extent
  path = *ppath = 2000
  ext4_ext_create_new_leaf(ppath)
    ext4_find_extent(ppath)
      path = *ppath = 2000
      if (depth > path[0].p_maxdepth)
            kfree(path = 2000);
            *ppath = path = NULL;
      path = kcalloc() = 3000
      *ppath = 3000;
      return path;
  /* here path is still 2000, UAF! */
  eh = path[depth].p_hdr

==================================================================
BUG: KASAN: slab-use-after-free in ext4_ext_insert_extent+0x26d4/0x3330
Read of size 8 at addr ffff8881027bf7d0 by task kworker/u36:1/179
CPU: 3 UID: 0 PID: 179 Comm: kworker/u6:1 Not tainted 6.11.0-rc2-dirty #866
Call Trace:
 <TASK>
 ext4_ext_insert_extent+0x26d4/0x3330
 ext4_ext_map_blocks+0xe22/0x2d40
 ext4_map_blocks+0x71e/0x1700
 ext4_do_writepages+0x1290/0x2800
[...]

Allocated by task 179:
 ext4_find_extent+0x81c/0x1f70
 ext4_ext_map_blocks+0x146/0x2d40
 ext4_map_blocks+0x71e/0x1700
 ext4_do_writepages+0x1290/0x2800
 ext4_writepages+0x26d/0x4e0
 do_writepages+0x175/0x700
[...]

Freed by task 179:
 kfree+0xcb/0x240
 ext4_find_extent+0x7c0/0x1f70
 ext4_ext_insert_extent+0xa26/0x3330
 ext4_ext_map_blocks+0xe22/0x2d40
 ext4_map_blocks+0x71e/0x1700
 ext4_do_writepages+0x1290/0x2800
 ext4_writepages+0x26d/0x4e0
 do_writepages+0x175/0x700
[...]
==================================================================

So use *ppath to update the path to avoid the above problem.",Linux,Linux,"10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279"
1067,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50236,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath10k: Fix memory leak in management tx

In the current logic, memory is allocated for storing the MSDU context
during management packet TX but this memory is not being freed during
management TX completion. Similar leaks are seen in the management TX
cleanup logic.

Kmemleak reports this problem as below,

unreferenced object 0xffffff80b64ed250 (size 16):
  comm ""kworker/u16:7"", pid 148, jiffies 4294687130 (age 714.199s)
  hex dump (first 16 bytes):
    00 2b d8 d8 80 ff ff ff c4 74 e9 fd 07 00 00 00  .+.......t......
  backtrace:
    [<ffffffe6e7b245dc>] __kmem_cache_alloc_node+0x1e4/0x2d8
    [<ffffffe6e7adde88>] kmalloc_trace+0x48/0x110
    [<ffffffe6bbd765fc>] ath10k_wmi_tlv_op_gen_mgmt_tx_send+0xd4/0x1d8 [ath10k_core]
    [<ffffffe6bbd3eed4>] ath10k_mgmt_over_wmi_tx_work+0x134/0x298 [ath10k_core]
    [<ffffffe6e78d5974>] process_scheduled_works+0x1ac/0x400
    [<ffffffe6e78d60b8>] worker_thread+0x208/0x328
    [<ffffffe6e78dc890>] kthread+0x100/0x1c0
    [<ffffffe6e78166c0>] ret_from_fork+0x10/0x20

Free the memory during completion and cleanup to fix the leak.

Protect the mgmt_pending_tx idr_remove() operation in
ath10k_wmi_tlv_op_cleanup_mgmt_tx_send() using ar->data_lock similar to
other instances.

Tested-on: WCN3990 hw1.0 SNOC WLAN.HL.2.0-01387-QCAHLSWMTPLZ-1",Linux,Linux,"dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d, dc405152bb64d4ae01c9ac669de25b2d1fb6fc2d"
1068,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46840,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: clean up our handling of refs == 0 in snapshot delete

In reada we BUG_ON(refs == 0), which could be unkind since we aren't
holding a lock on the extent leaf and thus could get a transient
incorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which
could happen if we have extent tree corruption.  Change that to return
-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,
however we return -EIO, which -EUCLEAN is a more appropriate error code.
Finally in walk_up_proc we have the same BUG_ON(refs == 0), so convert
that to proper error handling.  Also adjust the error message so we can
actually do something with the information.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1069,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49014,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: tun: Fix use-after-free in tun_detach()

syzbot reported use-after-free in tun_detach() [1].  This causes call
trace like below:

==================================================================
BUG: KASAN: use-after-free in notifier_call_chain+0x1ee/0x200 kernel/notifier.c:75
Read of size 8 at addr ffff88807324e2a8 by task syz-executor.0/3673

CPU: 0 PID: 3673 Comm: syz-executor.0 Not tainted 6.1.0-rc5-syzkaller-00044-gcc675d22e422 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:284 [inline]
 print_report+0x15e/0x461 mm/kasan/report.c:395
 kasan_report+0xbf/0x1f0 mm/kasan/report.c:495
 notifier_call_chain+0x1ee/0x200 kernel/notifier.c:75
 call_netdevice_notifiers_info+0x86/0x130 net/core/dev.c:1942
 call_netdevice_notifiers_extack net/core/dev.c:1983 [inline]
 call_netdevice_notifiers net/core/dev.c:1997 [inline]
 netdev_wait_allrefs_any net/core/dev.c:10237 [inline]
 netdev_run_todo+0xbc6/0x1100 net/core/dev.c:10351
 tun_detach drivers/net/tun.c:704 [inline]
 tun_chr_close+0xe4/0x190 drivers/net/tun.c:3467
 __fput+0x27c/0xa90 fs/file_table.c:320
 task_work_run+0x16f/0x270 kernel/task_work.c:179
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0xb3d/0x2a30 kernel/exit.c:820
 do_group_exit+0xd4/0x2a0 kernel/exit.c:950
 get_signal+0x21b1/0x2440 kernel/signal.c:2858
 arch_do_signal_or_restart+0x86/0x2300 arch/x86/kernel/signal.c:869
 exit_to_user_mode_loop kernel/entry/common.c:168 [inline]
 exit_to_user_mode_prepare+0x15f/0x250 kernel/entry/common.c:203
 __syscall_exit_to_user_mode_work kernel/entry/common.c:285 [inline]
 syscall_exit_to_user_mode+0x1d/0x50 kernel/entry/common.c:296
 do_syscall_64+0x46/0xb0 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x63/0xcd

The cause of the issue is that sock_put() from __tun_detach() drops
last reference count for struct net, and then notifier_call_chain()
from netdev_state_change() accesses that struct net.

This patch fixes the issue by calling sock_put() from tun_detach()
after all necessary accesses for the struct net has done.",Linux,Linux,"83c1f36f9880814b24cdf6c2f91f66f61db65326, 83c1f36f9880814b24cdf6c2f91f66f61db65326, 83c1f36f9880814b24cdf6c2f91f66f61db65326, 83c1f36f9880814b24cdf6c2f91f66f61db65326, 83c1f36f9880814b24cdf6c2f91f66f61db65326, 83c1f36f9880814b24cdf6c2f91f66f61db65326"
1070,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49996,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

cifs: Fix buffer overflow when parsing NFS reparse points

ReparseDataLength is sum of the InodeType size and DataBuffer size.
So to get DataBuffer size it is needed to subtract InodeType's size from
ReparseDataLength.

Function cifs_strndup_from_utf16() is currentlly accessing buf->DataBuffer
at position after the end of the buffer because it does not subtract
InodeType size from the length. Fix this problem and correctly subtract
variable len.

Member InodeType is present only when reparse buffer is large enough. Check
for ReparseDataLength before accessing InodeType to prevent another invalid
memory access.

Major and minor rdev values are present also only when reparse buffer is
large enough. Check for reparse buffer size before calling reparse_mkdev().",Linux,Linux,"d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553, d5ecebc4900df7f6e8dff0717574668885110553"
1071,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48972,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

mac802154: fix missing INIT_LIST_HEAD in ieee802154_if_add()

Kernel fault injection test reports null-ptr-deref as follows:

BUG: kernel NULL pointer dereference, address: 0000000000000008
RIP: 0010:cfg802154_netdev_notifier_call+0x120/0x310 include/linux/list.h:114
Call Trace:
 <TASK>
 raw_notifier_call_chain+0x6d/0xa0 kernel/notifier.c:87
 call_netdevice_notifiers_info+0x6e/0xc0 net/core/dev.c:1944
 unregister_netdevice_many_notify+0x60d/0xcb0 net/core/dev.c:1982
 unregister_netdevice_queue+0x154/0x1a0 net/core/dev.c:10879
 register_netdevice+0x9a8/0xb90 net/core/dev.c:10083
 ieee802154_if_add+0x6ed/0x7e0 net/mac802154/iface.c:659
 ieee802154_register_hw+0x29c/0x330 net/mac802154/main.c:229
 mcr20a_probe+0xaaa/0xcb1 drivers/net/ieee802154/mcr20a.c:1316

ieee802154_if_add() allocates wpan_dev as netdev's private data, but not
init the list in struct wpan_dev. cfg802154_netdev_notifier_call() manage
the list when device register/unregister, and may lead to null-ptr-deref.

Use INIT_LIST_HEAD() on it to initialize it correctly.",Linux,Linux,"fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232, fcf39e6e88e9492f6688ec8ba4e1be622b904232"
1072,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47670,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: add bounds checking to ocfs2_xattr_find_entry()

Add a paranoia check to make sure it doesn't stray beyond valid memory
region containing ocfs2 xattr entries when scanning for a match.  It will
prevent out-of-bound access in case of crafted images.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1073,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46818,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check gpio_id before used as array index

[WHY & HOW]
GPIO_ID_UNKNOWN (-1) is not a valid value for array index and therefore
should be checked in advance.

This fixes 5 OVERRUN issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1074,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48809,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: fix a memleak when uncloning an skb dst and its metadata

When uncloning an skb dst and its associated metadata, a new
dst+metadata is allocated and later replaces the old one in the skb.
This is helpful to have a non-shared dst+metadata attached to a specific
skb.

The issue is the uncloned dst+metadata is initialized with a refcount of
1, which is increased to 2 before attaching it to the skb. When
tun_dst_unclone returns, the dst+metadata is only referenced from a
single place (the skb) while its refcount is 2. Its refcount will never
drop to 0 (when the skb is consumed), leading to a memory leak.

Fix this by removing the call to dst_hold in tun_dst_unclone, as the
dst+metadata refcount is already 1.",Linux,Linux,"fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404, fc4099f17240767554ff3a73977acb78ef615404"
1075,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46848,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

perf/x86/intel: Limit the period on Haswell

Running the ltp test cve-2015-3290 concurrently reports the following
warnings.

perfevents: irq loop stuck!
  WARNING: CPU: 31 PID: 32438 at arch/x86/events/intel/core.c:3174
  intel_pmu_handle_irq+0x285/0x370
  Call Trace:
   <NMI>
   ? __warn+0xa4/0x220
   ? intel_pmu_handle_irq+0x285/0x370
   ? __report_bug+0x123/0x130
   ? intel_pmu_handle_irq+0x285/0x370
   ? __report_bug+0x123/0x130
   ? intel_pmu_handle_irq+0x285/0x370
   ? report_bug+0x3e/0xa0
   ? handle_bug+0x3c/0x70
   ? exc_invalid_op+0x18/0x50
   ? asm_exc_invalid_op+0x1a/0x20
   ? irq_work_claim+0x1e/0x40
   ? intel_pmu_handle_irq+0x285/0x370
   perf_event_nmi_handler+0x3d/0x60
   nmi_handle+0x104/0x330

Thanks to Thomas Gleixner's analysis, the issue is caused by the low
initial period (1) of the frequency estimation algorithm, which triggers
the defects of the HW, specifically erratum HSW11 and HSW143. (For the
details, please refer https://lore.kernel.org/lkml/87plq9l5d2.ffs@tglx/)

The HSW11 requires a period larger than 100 for the INST_RETIRED.ALL
event, but the initial period in the freq mode is 1. The erratum is the
same as the BDM11, which has been supported in the kernel. A minimum
period of 128 is enforced as well on HSW.

HSW143 is regarding that the fixed counter 1 may overcount 32 with the
Hyper-Threading is enabled. However, based on the test, the hardware
has more issues than it tells. Besides the fixed counter 1, the message
'interrupt took too long' can be observed on any counter which was armed
with a period < 32 and two events expired in the same NMI. A minimum
period of 32 is enforced for the rest of the events.
The recommended workaround code of the HSW143 is not implemented.
Because it only addresses the issue for the fixed counter. It brings
extra overhead through extra MSR writing. No related overcounting issue
has been reported so far.",Linux,Linux,"3a632cb229bfb18b6d09822cc842451ea46c013e, 3a632cb229bfb18b6d09822cc842451ea46c013e, 3a632cb229bfb18b6d09822cc842451ea46c013e, 3a632cb229bfb18b6d09822cc842451ea46c013e"
1076,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49860,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ACPI: sysfs: validate return type of _STR method

Only buffer objects are valid return values of _STR.

If something else is returned description_show() will access invalid
memory.",Linux,Linux,"d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba"
1077,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-44931,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

gpio: prevent potential speculation leaks in gpio_device_get_desc()

Userspace may trigger a speculative read of an address outside the gpio
descriptor array.
Users can do that by calling gpio_ioctl() with an offset out of range.
Offset is copied from user and then used as an array index to get
the gpio descriptor without sanitization in gpio_device_get_desc().

This change ensures that the offset is sanitized by using
array_index_nospec() to mitigate any possibility of speculative
information leaks.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1078,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50234,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlegacy: Clear stale interrupts before resuming device

iwl4965 fails upon resume from hibernation on my laptop. The reason
seems to be a stale interrupt which isn't being cleared out before
interrupts are enabled. We end up with a race beween the resume
trying to bring things back up, and the restart work (queued form
the interrupt handler) trying to bring things down. Eventually
the whole thing blows up.

Fix the problem by clearing out any stale interrupts before
interrupts get enabled during resume.

Here's a debug log of the indicent:
[   12.042589] ieee80211 phy0: il_isr ISR inta 0x00000080, enabled 0xaa00008b, fh 0x00000000
[   12.042625] ieee80211 phy0: il4965_irq_tasklet inta 0x00000080, enabled 0x00000000, fh 0x00000000
[   12.042651] iwl4965 0000:10:00.0: RF_KILL bit toggled to enable radio.
[   12.042653] iwl4965 0000:10:00.0: On demand firmware reload
[   12.042690] ieee80211 phy0: il4965_irq_tasklet End inta 0x00000000, enabled 0xaa00008b, fh 0x00000000, flags 0x00000282
[   12.052207] ieee80211 phy0: il4965_mac_start enter
[   12.052212] ieee80211 phy0: il_prep_station Add STA to driver ID 31: ff:ff:ff:ff:ff:ff
[   12.052244] ieee80211 phy0: il4965_set_hw_ready hardware  ready
[   12.052324] ieee80211 phy0: il_apm_init Init card's basic functions
[   12.052348] ieee80211 phy0: il_apm_init L1 Enabled; Disabling L0S
[   12.055727] ieee80211 phy0: il4965_load_bsm Begin load bsm
[   12.056140] ieee80211 phy0: il4965_verify_bsm Begin verify bsm
[   12.058642] ieee80211 phy0: il4965_verify_bsm BSM bootstrap uCode image OK
[   12.058721] ieee80211 phy0: il4965_load_bsm BSM write complete, poll 1 iterations
[   12.058734] ieee80211 phy0: __il4965_up iwl4965 is coming up
[   12.058737] ieee80211 phy0: il4965_mac_start Start UP work done.
[   12.058757] ieee80211 phy0: __il4965_down iwl4965 is going down
[   12.058761] ieee80211 phy0: il_scan_cancel_timeout Scan cancel timeout
[   12.058762] ieee80211 phy0: il_do_scan_abort Not performing scan to abort
[   12.058765] ieee80211 phy0: il_clear_ucode_stations Clearing ucode stations in driver
[   12.058767] ieee80211 phy0: il_clear_ucode_stations No active stations found to be cleared
[   12.058819] ieee80211 phy0: _il_apm_stop Stop card, put in low power state
[   12.058827] ieee80211 phy0: _il_apm_stop_master stop master
[   12.058864] ieee80211 phy0: il4965_clear_free_frames 0 frames on pre-allocated heap on clear.
[   12.058869] ieee80211 phy0: Hardware restart was requested
[   16.132299] iwl4965 0000:10:00.0: START_ALIVE timeout after 4000ms.
[   16.132303] ------------[ cut here ]------------
[   16.132304] Hardware became unavailable upon resume. This could be a software issue prior to suspend or a hardware issue.
[   16.132338] WARNING: CPU: 0 PID: 181 at net/mac80211/util.c:1826 ieee80211_reconfig+0x8f/0x14b0 [mac80211]
[   16.132390] Modules linked in: ctr ccm sch_fq_codel xt_tcpudp xt_multiport xt_state iptable_filter iptable_nat nf_nat nf_conntrack nf_defrag_ipv4 ip_tables x_tables binfmt_misc joydev mousedev btusb btrtl btintel btbcm bluetooth ecdh_generic ecc iTCO_wdt i2c_dev iwl4965 iwlegacy coretemp snd_hda_codec_analog pcspkr psmouse mac80211 snd_hda_codec_generic libarc4 sdhci_pci cqhci sha256_generic sdhci libsha256 firewire_ohci snd_hda_intel snd_intel_dspcfg mmc_core snd_hda_codec snd_hwdep firewire_core led_class iosf_mbi snd_hda_core uhci_hcd lpc_ich crc_itu_t cfg80211 ehci_pci ehci_hcd snd_pcm usbcore mfd_core rfkill snd_timer snd usb_common soundcore video parport_pc parport intel_agp wmi intel_gtt backlight e1000e agpgart evdev
[   16.132456] CPU: 0 UID: 0 PID: 181 Comm: kworker/u8:6 Not tainted 6.11.0-cl+ #143
[   16.132460] Hardware name: Hewlett-Packard HP Compaq 6910p/30BE, BIOS 68MCU Ver. F.19 07/06/2010
[   16.132463] Workqueue: async async_run_entry_fn
[   16.132469] RIP: 0010:ieee80211_reconfig+0x8f/0x14b0 [mac80211]
[   16.132501] Code: da 02 00 0
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1079,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50194,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

arm64: probes: Fix uprobes for big-endian kernels

The arm64 uprobes code is broken for big-endian kernels as it doesn't
convert the in-memory instruction encoding (which is always
little-endian) into the kernel's native endianness before analyzing and
simulating instructions. This may result in a few distinct problems:

* The kernel may may erroneously reject probing an instruction which can
  safely be probed.

* The kernel may erroneously erroneously permit stepping an
  instruction out-of-line when that instruction cannot be stepped
  out-of-line safely.

* The kernel may erroneously simulate instruction incorrectly dur to
  interpretting the byte-swapped encoding.

The endianness mismatch isn't caught by the compiler or sparse because:

* The arch_uprobe::{insn,ixol} fields are encoded as arrays of u8, so
  the compiler and sparse have no idea these contain a little-endian
  32-bit value. The core uprobes code populates these with a memcpy()
  which similarly does not handle endianness.

* While the uprobe_opcode_t type is an alias for __le32, both
  arch_uprobe_analyze_insn() and arch_uprobe_skip_sstep() cast from u8[]
  to the similarly-named probe_opcode_t, which is an alias for u32.
  Hence there is no endianness conversion warning.

Fix this by changing the arch_uprobe::{insn,ixol} fields to __le32 and
adding the appropriate __le32_to_cpu() conversions prior to consuming
the instruction encoding. The core uprobes copies these fields as opaque
ranges of bytes, and so is unaffected by this change.

At the same time, remove MAX_UINSN_BYTES and consistently use
AARCH64_INSN_SIZE for clarity.

Tested with the following:

| #include <stdio.h>
| #include <stdbool.h>
|
| #define noinline __attribute__((noinline))
|
| static noinline void *adrp_self(void)
| {
|         void *addr;
|
|         asm volatile(
|         ""       adrp    %x0, adrp_self\n""
|         ""       add     %x0, %x0, :lo12:adrp_self\n""
|         : ""=r"" (addr));
| }
|
|
| int main(int argc, char *argv)
| {
|         void *ptr = adrp_self();
|         bool equal = (ptr == adrp_self);
|
|         printf(""adrp_self   => %p\n""
|                ""adrp_self() => %p\n""
|                ""%s\n"",
|                adrp_self, ptr, equal ? ""EQUAL"" : ""NOT EQUAL"");
|
|         return 0;
| }

.... where the adrp_self() function was compiled to:

| 00000000004007e0 <adrp_self>:
|   4007e0:       90000000        adrp    x0, 400000 <__ehdr_start>
|   4007e4:       911f8000        add     x0, x0, #0x7e0
|   4007e8:       d65f03c0        ret

Before this patch, the ADRP is not recognized, and is assumed to be
steppable, resulting in corruption of the result:

| # ./adrp-self
| adrp_self   => 0x4007e0
| adrp_self() => 0x4007e0
| EQUAL
| # echo 'p /root/adrp-self:0x007e0' > /sys/kernel/tracing/uprobe_events
| # echo 1 > /sys/kernel/tracing/events/uprobes/enable
| # ./adrp-self
| adrp_self   => 0x4007e0
| adrp_self() => 0xffffffffff7e0
| NOT EQUAL

After this patch, the ADRP is correctly recognized and simulated:

| # ./adrp-self
| adrp_self   => 0x4007e0
| adrp_self() => 0x4007e0
| EQUAL
| #
| # echo 'p /root/adrp-self:0x007e0' > /sys/kernel/tracing/uprobe_events
| # echo 1 > /sys/kernel/tracing/events/uprobes/enable
| # ./adrp-self
| adrp_self   => 0x4007e0
| adrp_self() => 0x4007e0
| EQUAL",Linux,Linux,"9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09"
1080,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2021-47163,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: wait and exit until all work queues are done

On some host, a crash could be triggered simply by repeating these
commands several times:

  # modprobe tipc
  # tipc bearer enable media udp name UDP1 localip 127.0.0.1
  # rmmod tipc

  [] BUG: unable to handle kernel paging request at ffffffffc096bb00
  [] Workqueue: events 0xffffffffc096bb00
  [] Call Trace:
  []  ? process_one_work+0x1a7/0x360
  []  ? worker_thread+0x30/0x390
  []  ? create_worker+0x1a0/0x1a0
  []  ? kthread+0x116/0x130
  []  ? kthread_flush_work_fn+0x10/0x10
  []  ? ret_from_fork+0x35/0x40

When removing the TIPC module, the UDP tunnel sock will be delayed to
release in a work queue as sock_release() can't be done in rtnl_lock().
If the work queue is schedule to run after the TIPC module is removed,
kernel will crash as the work queue function cleanup_beareri() code no
longer exists when trying to invoke it.

To fix it, this patch introduce a member wq_count in tipc_net to track
the numbers of work queues in schedule, and  wait and exit until all
work queues are done in tipc_exit_net().",Linux,Linux,"d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836"
1065,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-39476,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

md/raid5: fix deadlock that raid5d() wait for itself to clear MD_SB_CHANGE_PENDING

Xiao reported that lvm2 test lvconvert-raid-takeover.sh can hang with
small possibility, the root cause is exactly the same as commit
bed9e27baf52 (""Revert ""md/raid5: Wait for MD_SB_CHANGE_PENDING in raid5d"""")

However, Dan reported another hang after that, and junxiao investigated
the problem and found out that this is caused by plugged bio can't issue
from raid5d().

Current implementation in raid5d() has a weird dependence:

1) md_check_recovery() from raid5d() must hold 'reconfig_mutex' to clear
   MD_SB_CHANGE_PENDING;
2) raid5d() handles IO in a deadloop, until all IO are issued;
3) IO from raid5d() must wait for MD_SB_CHANGE_PENDING to be cleared;

This behaviour is introduce before v2.6, and for consequence, if other
context hold 'reconfig_mutex', and md_check_recovery() can't update
super_block, then raid5d() will waste one cpu 100% by the deadloop, until
'reconfig_mutex' is released.

Refer to the implementation from raid1 and raid10, fix this problem by
skipping issue IO if MD_SB_CHANGE_PENDING is still set after
md_check_recovery(), daemon thread will be woken up when 'reconfig_mutex'
is released. Meanwhile, the hang problem will be fixed as well.",Linux,Linux,"f3d55bd5b7b928ad82f8075d89c908702f3593ab, 1c00bb624cd084e2006520ad0edacaff0fb941c4, 782b3e71c957991ac8ae53318bc369049d49bb53, 9e86dffd0b02594d2e7c60c6db9e889c0395414b, 5e2cf333b7bd5d3e62595a44d598a254c697cd74, 5e2cf333b7bd5d3e62595a44d598a254c697cd74, 5e2cf333b7bd5d3e62595a44d598a254c697cd74, 5e2cf333b7bd5d3e62595a44d598a254c697cd74"
1064,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48951,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: ops: Check bounds for second channel in snd_soc_put_volsw_sx()

The bounds checks in snd_soc_put_volsw_sx() are only being applied to the
first channel, meaning it is possible to write out of bounds values to the
second channel in stereo controls. Add appropriate checks.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1063,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47698,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drivers: media: dvb-frontends/rtl2832: fix an out-of-bounds write error

Ensure index in rtl2832_pid_filter does not exceed 31 to prevent
out-of-bounds access.

dev->filters is a 32-bit value, so set_bit and clear_bit functions should
only operate on indices from 0 to 31. If index is 32, it will attempt to
access a non-existent 33rd bit, leading to out-of-bounds access.
Change the boundary check from index > 32 to index >= 32 to resolve this
issue.

[hverkuil: added fixes tag, rtl2830_pid_filter -> rtl2832_pid_filter in logmsg]",Linux,Linux,"4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b"
1054,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50278,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

dm cache: fix potential out-of-bounds access on the first resume

Out-of-bounds access occurs if the fast device is expanded unexpectedly
before the first-time resume of the cache table. This happens because
expanding the fast device requires reloading the cache table for
cache_create to allocate new in-core data structures that fit the new
size, and the check in cache_preresume is not performed during the
first resume, leading to the issue.

Reproduce steps:

1. prepare component devices:

dmsetup create cmeta --table ""0 8192 linear /dev/sdc 0""
dmsetup create cdata --table ""0 65536 linear /dev/sdc 8192""
dmsetup create corig --table ""0 524288 linear /dev/sdc 262144""
dd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1 oflag=direct

2. load a cache table of 512 cache blocks, and deliberately expand the
   fast device before resuming the cache, making the in-core data
   structures inadequate.

dmsetup create cache --notable
dmsetup reload cache --table ""0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0""
dmsetup reload cdata --table ""0 131072 linear /dev/sdc 8192""
dmsetup resume cdata
dmsetup resume cache

3. suspend the cache to write out the in-core dirty bitset and hint
   array, leading to out-of-bounds access to the dirty bitset at offset
   0x40:

dmsetup suspend cache

KASAN reports:

  BUG: KASAN: vmalloc-out-of-bounds in is_dirty_callback+0x2b/0x80
  Read of size 8 at addr ffffc90000085040 by task dmsetup/90

  (...snip...)
  The buggy address belongs to the virtual mapping at
   [ffffc90000085000, ffffc90000087000) created by:
   cache_ctr+0x176a/0x35f0

  (...snip...)
  Memory state around the buggy address:
   ffffc90000084f00: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc90000084f80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
  >ffffc90000085000: 00 00 00 00 00 00 00 00 f8 f8 f8 f8 f8 f8 f8 f8
                                             ^
   ffffc90000085080: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc90000085100: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8

Fix by checking the size change on the first resume.",Linux,Linux,"f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498"
1048,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53085,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tpm: Lock TPM chip in tpm_pm_suspend() first

Setting TPM_CHIP_FLAG_SUSPENDED in the end of tpm_pm_suspend() can be racy
according, as this leaves window for tpm_hwrng_read() to be called while
the operation is in progress. The recent bug report gives also evidence of
this behaviour.

Aadress this by locking the TPM chip before checking any chip->flags both
in tpm_pm_suspend() and tpm_hwrng_read(). Move TPM_CHIP_FLAG_SUSPENDED
check inside tpm_get_random() so that it will be always checked only when
the lock is reserved.",Linux,Linux,"99d46450625590d410f86fe4660a5eff7d3b8343, 99d46450625590d410f86fe4660a5eff7d3b8343, 99d46450625590d410f86fe4660a5eff7d3b8343"
1049,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49925,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

fbdev: efifb: Register sysfs groups through driver core

The driver core can register and cleanup sysfs groups already.
Make use of that functionality to simplify the error handling and
cleanup.

Also avoid a UAF race during unregistering where the sysctl attributes
were usable after the info struct was freed.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1050,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49020,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net/9p: Fix a potential socket leak in p9_socket_open

Both p9_fd_create_tcp() and p9_fd_create_unix() will call
p9_socket_open(). If the creation of p9_trans_fd fails,
p9_fd_create_tcp() and p9_fd_create_unix() will return an
error directly instead of releasing the cscoket, which will
result in a socket leak.

This patch adds sock_release() to fix the leak issue.",Linux,Linux,"6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9, 6b18662e239a032f908b7f6e164bdf7e2e0a32c9"
1051,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49851,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tpm: Clean up TPM space after command failure

tpm_dev_transmit prepares the TPM space before attempting command
transmission. However if the command fails no rollback of this
preparation is done. This can result in transient handles being leaked
if the device is subsequently closed with no further commands performed.

Fix this by flushing the space in the event of command transmission
failure.",Linux,Linux,"745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68"
1052,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49029,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

hwmon: (ibmpex) Fix possible UAF when ibmpex_register_bmc() fails

Smatch report warning as follows:

drivers/hwmon/ibmpex.c:509 ibmpex_register_bmc() warn:
  '&data->list' not removed from list

If ibmpex_find_sensors() fails in ibmpex_register_bmc(), data will
be freed, but data->list will not be removed from driver_data.bmc_data,
then list traversal may cause UAF.

Fix by removeing it from driver_data.bmc_data before free().",Linux,Linux,"57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab, 57c7c3a0fdea95eddcaeba31e7ca7dfc917682ab"
1053,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48997,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

char: tpm: Protect tpm_pm_suspend with locks

Currently tpm transactions are executed unconditionally in
tpm_pm_suspend() function, which may lead to races with other tpm
accessors in the system.

Specifically, the hw_random tpm driver makes use of tpm_get_random(),
and this function is called in a loop from a kthread, which means it's
not frozen alongside userspace, and so can race with the work done
during system suspend:

  tpm tpm0: tpm_transmit: tpm_recv: error -52
  tpm tpm0: invalid TPM_STS.x 0xff, dumping stack for forensics
  CPU: 0 PID: 1 Comm: init Not tainted 6.1.0-rc5+ #135
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.0-20220807_005459-localhost 04/01/2014
  Call Trace:
   tpm_tis_status.cold+0x19/0x20
   tpm_transmit+0x13b/0x390
   tpm_transmit_cmd+0x20/0x80
   tpm1_pm_suspend+0xa6/0x110
   tpm_pm_suspend+0x53/0x80
   __pnp_bus_suspend+0x35/0xe0
   __device_suspend+0x10f/0x350

Fix this by calling tpm_try_get_ops(), which itself is a wrapper around
tpm_chip_start(), but takes the appropriate mutex.

[Jason: reworked commit message, added metadata]",Linux,Linux,"e891db1a18bf11e02533ec2386b796cfd8d60666, e891db1a18bf11e02533ec2386b796cfd8d60666, e891db1a18bf11e02533ec2386b796cfd8d60666, e891db1a18bf11e02533ec2386b796cfd8d60666, e891db1a18bf11e02533ec2386b796cfd8d60666"
1055,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50210,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

posix-clock: posix-clock: Fix unbalanced locking in pc_clock_settime()

If get_clock_desc() succeeds, it calls fget() for the clockid's fd,
and get the clk->rwsem read lock, so the error path should release
the lock to make the lock balance and fput the clockid's fd to make
the refcount balance and release the fd related resource.

However the below commit left the error path locked behind resulting in
unbalanced locking. Check timespec64_valid_strict() before
get_clock_desc() to fix it, because the ""ts"" is not changed
after that.

[pabeni@redhat.com: fixed commit message typo]",Linux,Linux,"29f085345cde24566efb751f39e5d367c381c584, e0c966bd3e31911b57ef76cec4c5796ebd88e512, 673a1c5a2998acbd429d6286e6cad10f17f4f073, c8789fbe2bbf75845e45302cba6ffa44e1884d01, 27abbde44b6e71ee3891de13e1a228aa7ce95bfe, a3f169e398215e71361774d13bf91a0101283ac2, 1ff7247101af723731ea42ed565d54fb8f341264, d8794ac20a299b647ba9958f6d657051fc51a540"
1062,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46841,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: don't BUG_ON on ENOMEM from btrfs_lookup_extent_info() in walk_down_proc()

We handle errors here properly, ENOMEM isn't fatal, return the error.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1056,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47685,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_reject_ipv6: fix nf_reject_ip6_tcphdr_put()

syzbot reported that nf_reject_ip6_tcphdr_put() was possibly sending
garbage on the four reserved tcp bits (th->res1)

Use skb_put_zero() to clear the whole TCP header,
as done in nf_reject_ip_tcphdr_put()

BUG: KMSAN: uninit-value in nf_reject_ip6_tcphdr_put+0x688/0x6c0 net/ipv6/netfilter/nf_reject_ipv6.c:255
  nf_reject_ip6_tcphdr_put+0x688/0x6c0 net/ipv6/netfilter/nf_reject_ipv6.c:255
  nf_send_reset6+0xd84/0x15b0 net/ipv6/netfilter/nf_reject_ipv6.c:344
  nft_reject_inet_eval+0x3c1/0x880 net/netfilter/nft_reject_inet.c:48
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x438/0x22a0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_inet+0x41a/0x4f0 net/netfilter/nft_chain_filter.c:161
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626
  nf_hook include/linux/netfilter.h:269 [inline]
  NF_HOOK include/linux/netfilter.h:312 [inline]
  ipv6_rcv+0x29b/0x390 net/ipv6/ip6_input.c:310
  __netif_receive_skb_one_core net/core/dev.c:5661 [inline]
  __netif_receive_skb+0x1da/0xa00 net/core/dev.c:5775
  process_backlog+0x4ad/0xa50 net/core/dev.c:6108
  __napi_poll+0xe7/0x980 net/core/dev.c:6772
  napi_poll net/core/dev.c:6841 [inline]
  net_rx_action+0xa5a/0x19b0 net/core/dev.c:6963
  handle_softirqs+0x1ce/0x800 kernel/softirq.c:554
  __do_softirq+0x14/0x1a kernel/softirq.c:588
  do_softirq+0x9a/0x100 kernel/softirq.c:455
  __local_bh_enable_ip+0x9f/0xb0 kernel/softirq.c:382
  local_bh_enable include/linux/bottom_half.h:33 [inline]
  rcu_read_unlock_bh include/linux/rcupdate.h:908 [inline]
  __dev_queue_xmit+0x2692/0x5610 net/core/dev.c:4450
  dev_queue_xmit include/linux/netdevice.h:3105 [inline]
  neigh_resolve_output+0x9ca/0xae0 net/core/neighbour.c:1565
  neigh_output include/net/neighbour.h:542 [inline]
  ip6_finish_output2+0x2347/0x2ba0 net/ipv6/ip6_output.c:141
  __ip6_finish_output net/ipv6/ip6_output.c:215 [inline]
  ip6_finish_output+0xbb8/0x14b0 net/ipv6/ip6_output.c:226
  NF_HOOK_COND include/linux/netfilter.h:303 [inline]
  ip6_output+0x356/0x620 net/ipv6/ip6_output.c:247
  dst_output include/net/dst.h:450 [inline]
  NF_HOOK include/linux/netfilter.h:314 [inline]
  ip6_xmit+0x1ba6/0x25d0 net/ipv6/ip6_output.c:366
  inet6_csk_xmit+0x442/0x530 net/ipv6/inet6_connection_sock.c:135
  __tcp_transmit_skb+0x3b07/0x4880 net/ipv4/tcp_output.c:1466
  tcp_transmit_skb net/ipv4/tcp_output.c:1484 [inline]
  tcp_connect+0x35b6/0x7130 net/ipv4/tcp_output.c:4143
  tcp_v6_connect+0x1bcc/0x1e40 net/ipv6/tcp_ipv6.c:333
  __inet_stream_connect+0x2ef/0x1730 net/ipv4/af_inet.c:679
  inet_stream_connect+0x6a/0xd0 net/ipv4/af_inet.c:750
  __sys_connect_file net/socket.c:2061 [inline]
  __sys_connect+0x606/0x690 net/socket.c:2078
  __do_sys_connect net/socket.c:2088 [inline]
  __se_sys_connect net/socket.c:2085 [inline]
  __x64_sys_connect+0x91/0xe0 net/socket.c:2085
  x64_sys_call+0x27a5/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:43
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was stored to memory at:
  nf_reject_ip6_tcphdr_put+0x60c/0x6c0 net/ipv6/netfilter/nf_reject_ipv6.c:249
  nf_send_reset6+0xd84/0x15b0 net/ipv6/netfilter/nf_reject_ipv6.c:344
  nft_reject_inet_eval+0x3c1/0x880 net/netfilter/nft_reject_inet.c:48
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x438/0x22a0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_inet+0x41a/0x4f0 net/netfilter/nft_chain_filter.c:161
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626
  nf_hook include/linux/netfilter.h:269 [inline]
  NF_HOOK include/linux/netfilter.h:312 [inline]
  ipv6_rcv+0x29b/0x390 net/ipv6/ip6_input.c:310
  __netif_receive_skb_one_core
---truncated---",Linux,Linux,"c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb"
1057,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50044,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: RFCOMM: FIX possible deadlock in rfcomm_sk_state_change

rfcomm_sk_state_change attempts to use sock_lock so it must never be
called with it locked but rfcomm_sock_ioctl always attempt to lock it
causing the following trace:

======================================================
WARNING: possible circular locking dependency detected
6.8.0-syzkaller-08951-gfe46a7dd189e #0 Not tainted
------------------------------------------------------
syz-executor386/5093 is trying to acquire lock:
ffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1671 [inline]
ffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{0:0}, at: rfcomm_sk_state_change+0x5b/0x310 net/bluetooth/rfcomm/sock.c:73

but task is already holding lock:
ffff88807badfd28 (&d->lock){+.+.}-{3:3}, at: __rfcomm_dlc_close+0x226/0x6a0 net/bluetooth/rfcomm/core.c:491",Linux,Linux,"3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626"
1058,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49894,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix index out of bounds in degamma hardware format translation

Fixes index out of bounds issue in
`cm_helper_translate_curve_to_degamma_hw_format` function. The issue
could occur when the index 'i' exceeds the number of transfer function
points (TRANSFER_FUNC_POINTS).

The fix adds a check to ensure 'i' is within bounds before accessing the
transfer function points. If 'i' is out of bounds the function returns
false to indicate an error.

Reported by smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:594 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:595 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:596 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1059,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2023-52881,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: do not accept ACK of bytes we never sent

This patch is based on a detailed report and ideas from Yepeng Pan
and Christian Rossow.

ACK seq validation is currently following RFC 5961 5.2 guidelines:

   The ACK value is considered acceptable only if
   it is in the range of ((SND.UNA - MAX.SND.WND) <= SEG.ACK <=
   SND.NXT).  All incoming segments whose ACK value doesn't satisfy the
   above condition MUST be discarded and an ACK sent back.  It needs to
   be noted that RFC 793 on page 72 (fifth check) says: ""If the ACK is a
   duplicate (SEG.ACK < SND.UNA), it can be ignored.  If the ACK
   acknowledges something not yet sent (SEG.ACK > SND.NXT) then send an
   ACK, drop the segment, and return"".  The ""ignored"" above implies that
   the processing of the incoming data segment continues, which means
   the ACK value is treated as acceptable.  This mitigation makes the
   ACK check more stringent since any ACK < SND.UNA wouldn't be
   accepted, instead only ACKs that are in the range ((SND.UNA -
   MAX.SND.WND) <= SEG.ACK <= SND.NXT) get through.

This can be refined for new (and possibly spoofed) flows,
by not accepting ACK for bytes that were never sent.

This greatly improves TCP security at a little cost.

I added a Fixes: tag to make sure this patch will reach stable trees,
even if the 'blamed' patch was adhering to the RFC.

tp->bytes_acked was added in linux-4.2

Following packetdrill test (courtesy of Yepeng Pan) shows
the issue at hand:

0 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
+0 bind(3, ..., ...) = 0
+0 listen(3, 1024) = 0

// ---------------- Handshake ------------------- //

// when window scale is set to 14 the window size can be extended to
// 65535 * (2^14) = 1073725440. Linux would accept an ACK packet
// with ack number in (Server_ISN+1-1073725440. Server_ISN+1)
// ,though this ack number acknowledges some data never
// sent by the server.

+0 < S 0:0(0) win 65535 <mss 1400,nop,wscale 14>
+0 > S. 0:0(0) ack 1 <...>
+0 < . 1:1(0) ack 1 win 65535
+0 accept(3, ..., ...) = 4

// For the established connection, we send an ACK packet,
// the ack packet uses ack number 1 - 1073725300 + 2^32,
// where 2^32 is used to wrap around.
// Note: we used 1073725300 instead of 1073725440 to avoid possible
// edge cases.
// 1 - 1073725300 + 2^32 = 3221241997

// Oops, old kernels happily accept this packet.
+0 < . 1:1001(1000) ack 3221241997 win 65535

// After the kernel fix the following will be replaced by a challenge ACK,
// and prior malicious frame would be dropped.
+0 > . 1:1(0) ack 1001",Linux,Linux,"354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25, 354e4aa391ed50a4d827ff6fc11e0667d0859b25"
1060,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50187,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/vc4: Stop the active perfmon before being destroyed

Upon closing the file descriptor, the active performance monitor is not
stopped. Although all perfmons are destroyed in `vc4_perfmon_close_file()`,
the active performance monitor's pointer (`vc4->active_perfmon`) is still
retained.

If we open a new file descriptor and submit a few jobs with performance
monitors, the driver will attempt to stop the active performance monitor
using the stale pointer in `vc4->active_perfmon`. However, this pointer
is no longer valid because the previous process has already terminated,
and all performance monitors associated with it have been destroyed and
freed.

To fix this, when the active performance monitor belongs to a given
process, explicitly stop it before destroying and freeing it.",Linux,Linux,"65101d8c9108201118efa7e08f4e2c57f438deb9, 65101d8c9108201118efa7e08f4e2c57f438deb9, 65101d8c9108201118efa7e08f4e2c57f438deb9, 65101d8c9108201118efa7e08f4e2c57f438deb9"
1061,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46771,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

can: bcm: Remove proc entry when dev is unregistered.

syzkaller reported a warning in bcm_connect() below. [0]

The repro calls connect() to vxcan1, removes vxcan1, and calls
connect() with ifindex == 0.

Calling connect() for a BCM socket allocates a proc entry.
Then, bcm_sk(sk)->bound is set to 1 to prevent further connect().

However, removing the bound device resets bcm_sk(sk)->bound to 0
in bcm_notify().

The 2nd connect() tries to allocate a proc entry with the same
name and sets NULL to bcm_sk(sk)->bcm_proc_read, leaking the
original proc entry.

Since the proc entry is available only for connect()ed sockets,
let's clean up the entry when the bound netdev is unregistered.

[0]:
proc_dir_entry 'can-bcm/2456' already registered
WARNING: CPU: 1 PID: 394 at fs/proc/generic.c:376 proc_register+0x645/0x8f0 fs/proc/generic.c:375
Modules linked in:
CPU: 1 PID: 394 Comm: syz-executor403 Not tainted 6.10.0-rc7-g852e42cc2dd4
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
RIP: 0010:proc_register+0x645/0x8f0 fs/proc/generic.c:375
Code: 00 00 00 00 00 48 85 ed 0f 85 97 02 00 00 4d 85 f6 0f 85 9f 02 00 00 48 c7 c7 9b cb cf 87 48 89 de 4c 89 fa e8 1c 6f eb fe 90 <0f> 0b 90 90 48 c7 c7 98 37 99 89 e8 cb 7e 22 05 bb 00 00 00 10 48
RSP: 0018:ffa0000000cd7c30 EFLAGS: 00010246
RAX: 9e129be1950f0200 RBX: ff1100011b51582c RCX: ff1100011857cd80
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000002
RBP: 0000000000000000 R08: ffd400000000000f R09: ff1100013e78cac0
R10: ffac800000cd7980 R11: ff1100013e12b1f0 R12: 0000000000000000
R13: 0000000000000000 R14: 0000000000000000 R15: ff1100011a99a2ec
FS:  00007fbd7086f740(0000) GS:ff1100013fd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000200071c0 CR3: 0000000118556004 CR4: 0000000000771ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <TASK>
 proc_create_net_single+0x144/0x210 fs/proc/proc_net.c:220
 bcm_connect+0x472/0x840 net/can/bcm.c:1673
 __sys_connect_file net/socket.c:2049 [inline]
 __sys_connect+0x5d2/0x690 net/socket.c:2066
 __do_sys_connect net/socket.c:2076 [inline]
 __se_sys_connect net/socket.c:2073 [inline]
 __x64_sys_connect+0x8f/0x100 net/socket.c:2073
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xd9/0x1c0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x4b/0x53
RIP: 0033:0x7fbd708b0e5d
Code: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 9f 1b 00 f7 d8 64 89 01 48
RSP: 002b:00007fff8cd33f08 EFLAGS: 00000246 ORIG_RAX: 000000000000002a
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fbd708b0e5d
RDX: 0000000000000010 RSI: 0000000020000040 RDI: 0000000000000003
RBP: 0000000000000000 R08: 0000000000000040 R09: 0000000000000040
R10: 0000000000000040 R11: 0000000000000246 R12: 00007fff8cd34098
R13: 0000000000401280 R14: 0000000000406de8 R15: 00007fbd70ab9000
 </TASK>
remove_proc_entry: removing non-empty directory 'net/can-bcm', leaking at least '2456'",Linux,Linux,"ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828"
1081,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2021-46936,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: fix use-after-free in tw_timer_handler

A real world panic issue was found as follow in Linux 5.4.

    BUG: unable to handle page fault for address: ffffde49a863de28
    PGD 7e6fe62067 P4D 7e6fe62067 PUD 7e6fe63067 PMD f51e064067 PTE 0
    RIP: 0010:tw_timer_handler+0x20/0x40
    Call Trace:
     <IRQ>
     call_timer_fn+0x2b/0x120
     run_timer_softirq+0x1ef/0x450
     __do_softirq+0x10d/0x2b8
     irq_exit+0xc7/0xd0
     smp_apic_timer_interrupt+0x68/0x120
     apic_timer_interrupt+0xf/0x20

This issue was also reported since 2017 in the thread [1],
unfortunately, the issue was still can be reproduced after fixing
DCCP.

The ipv4_mib_exit_net is called before tcp_sk_exit_batch when a net
namespace is destroyed since tcp_sk_ops is registered befrore
ipv4_mib_ops, which means tcp_sk_ops is in the front of ipv4_mib_ops
in the list of pernet_list. There will be a use-after-free on
net->mib.net_statistics in tw_timer_handler after ipv4_mib_exit_net
if there are some inflight time-wait timers.

This bug is not introduced by commit f2bf415cfed7 (""mib: add net to
NET_ADD_STATS_BH"") since the net_statistics is a global variable
instead of dynamic allocation and freeing. Actually, commit
61a7e26028b9 (""mib: put net statistics on struct net"") introduces
the bug since it put net statistics on struct net and free it when
net namespace is destroyed.

Moving init_ipv4_mibs() to the front of tcp_init() to fix this bug
and replace pr_crit() with panic() since continuing is meaningless
when init_ipv4_mibs() fails.

[1] https://groups.google.com/g/syzkaller/c/p1tn-_Kc6l4/m/smuL_FMAAgAJ?pli=1",Linux,Linux,"61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0, 61a7e26028b94805fd686a6dc9dbd9941f8f19b0"
1082,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49882,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix double brelse() the buffer of the extents path

In ext4_ext_try_to_merge_up(), set path[1].p_bh to NULL after it has been
released, otherwise it may be released twice. An example of what triggers
this is as follows:

  split2    map    split1
|--------|-------|--------|

ext4_ext_map_blocks
 ext4_ext_handle_unwritten_extents
  ext4_split_convert_extents
   // path->p_depth == 0
   ext4_split_extent
     // 1. do split1
     ext4_split_extent_at
       |ext4_ext_insert_extent
       |  ext4_ext_create_new_leaf
       |    ext4_ext_grow_indepth
       |      le16_add_cpu(&neh->eh_depth, 1)
       |    ext4_find_extent
       |      // return -ENOMEM
       |// get error and try zeroout
       |path = ext4_find_extent
       |  path->p_depth = 1
       |ext4_ext_try_to_merge
       |  ext4_ext_try_to_merge_up
       |    path->p_depth = 0
       |    brelse(path[1].p_bh)  ---> not set to NULL here
       |// zeroout success
     // 2. update path
     ext4_find_extent
     // 3. do split2
     ext4_split_extent_at
       ext4_ext_insert_extent
         ext4_ext_create_new_leaf
           ext4_ext_grow_indepth
             le16_add_cpu(&neh->eh_depth, 1)
           ext4_find_extent
             path[0].p_bh = NULL;
             path->p_depth = 1
             read_extent_tree_block  ---> return err
             // path[1].p_bh is still the old value
             ext4_free_ext_path
               ext4_ext_drop_refs
                 // path->p_depth == 1
                 brelse(path[1].p_bh)  ---> brelse a buffer twice

Finally got the following WARRNING when removing the buffer from lru:

============================================
VFS: brelse: Trying to free free buffer
WARNING: CPU: 2 PID: 72 at fs/buffer.c:1241 __brelse+0x58/0x90
CPU: 2 PID: 72 Comm: kworker/u19:1 Not tainted 6.9.0-dirty #716
RIP: 0010:__brelse+0x58/0x90
Call Trace:
 <TASK>
 __find_get_block+0x6e7/0x810
 bdev_getblk+0x2b/0x480
 __ext4_get_inode_loc+0x48a/0x1240
 ext4_get_inode_loc+0xb2/0x150
 ext4_reserve_inode_write+0xb7/0x230
 __ext4_mark_inode_dirty+0x144/0x6a0
 ext4_ext_insert_extent+0x9c8/0x3230
 ext4_ext_map_blocks+0xf45/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]
============================================",Linux,Linux,"ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4"
1083,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48853,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

swiotlb: fix info leak with DMA_FROM_DEVICE

The problem I'm addressing was discovered by the LTP test covering
cve-2018-1000204.

A short description of what happens follows:
1) The test case issues a command code 00 (TEST UNIT READY) via the SG_IO
   interface with: dxfer_len == 524288, dxdfer_dir == SG_DXFER_FROM_DEV
   and a corresponding dxferp. The peculiar thing about this is that TUR
   is not reading from the device.
2) In sg_start_req() the invocation of blk_rq_map_user() effectively
   bounces the user-space buffer. As if the device was to transfer into
   it. Since commit a45b599ad808 (""scsi: sg: allocate with __GFP_ZERO in
   sg_build_indirect()"") we make sure this first bounce buffer is
   allocated with GFP_ZERO.
3) For the rest of the story we keep ignoring that we have a TUR, so the
   device won't touch the buffer we prepare as if the we had a
   DMA_FROM_DEVICE type of situation. My setup uses a virtio-scsi device
   and the  buffer allocated by SG is mapped by the function
   virtqueue_add_split() which uses DMA_FROM_DEVICE for the ""in"" sgs (here
   scatter-gather and not scsi generics). This mapping involves bouncing
   via the swiotlb (we need swiotlb to do virtio in protected guest like
   s390 Secure Execution, or AMD SEV).
4) When the SCSI TUR is done, we first copy back the content of the second
   (that is swiotlb) bounce buffer (which most likely contains some
   previous IO data), to the first bounce buffer, which contains all
   zeros.  Then we copy back the content of the first bounce buffer to
   the user-space buffer.
5) The test case detects that the buffer, which it zero-initialized,
  ain't all zeros and fails.

One can argue that this is an swiotlb problem, because without swiotlb
we leak all zeros, and the swiotlb should be transparent in a sense that
it does not affect the outcome (if all other participants are well
behaved).

Copying the content of the original buffer into the swiotlb buffer is
the only way I can think of to make swiotlb transparent in such
scenarios. So let's do just that if in doubt, but allow the driver
to tell us that the whole mapped buffer is going to be overwritten,
in which case we can preserve the old behavior and avoid the performance
impact of the extra bounce.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1109,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-38538,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: xmit: make sure we have at least eth header len bytes

syzbot triggered an uninit value[1] error in bridge device's xmit path
by sending a short (less than ETH_HLEN bytes) skb. To fix it check if
we can actually pull that amount instead of assuming.

Tested with dropwatch:
 drop at: br_dev_xmit+0xb93/0x12d0 [bridge] (0xffffffffc06739b3)
 origin: software
 timestamp: Mon May 13 11:31:53 2024 778214037 nsec
 protocol: 0x88a8
 length: 2
 original length: 2
 drop reason: PKT_TOO_SMALL

[1]
BUG: KMSAN: uninit-value in br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 br_dev_xmit+0x61d/0x1cb0 net/bridge/br_device.c:65
 __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
 netdev_start_xmit include/linux/netdevice.h:4917 [inline]
 xmit_one net/core/dev.c:3531 [inline]
 dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3547
 __dev_queue_xmit+0x34db/0x5350 net/core/dev.c:4341
 dev_queue_xmit include/linux/netdevice.h:3091 [inline]
 __bpf_tx_skb net/core/filter.c:2136 [inline]
 __bpf_redirect_common net/core/filter.c:2180 [inline]
 __bpf_redirect+0x14a6/0x1620 net/core/filter.c:2187
 ____bpf_clone_redirect net/core/filter.c:2460 [inline]
 bpf_clone_redirect+0x328/0x470 net/core/filter.c:2432
 ___bpf_prog_run+0x13fe/0xe0f0 kernel/bpf/core.c:1997
 __bpf_prog_run512+0xb5/0xe0 kernel/bpf/core.c:2238
 bpf_dispatcher_nop_func include/linux/bpf.h:1234 [inline]
 __bpf_prog_run include/linux/filter.h:657 [inline]
 bpf_prog_run include/linux/filter.h:664 [inline]
 bpf_test_run+0x499/0xc30 net/bpf/test_run.c:425
 bpf_prog_test_run_skb+0x14ea/0x1f20 net/bpf/test_run.c:1058
 bpf_prog_test_run+0x6b7/0xad0 kernel/bpf/syscall.c:4269
 __sys_bpf+0x6aa/0xd90 kernel/bpf/syscall.c:5678
 __do_sys_bpf kernel/bpf/syscall.c:5767 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5765 [inline]
 __x64_sys_bpf+0xa0/0xe0 kernel/bpf/syscall.c:5765
 x64_sys_call+0x96b/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:322
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1103,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49021,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: phy: fix null-ptr-deref while probe() failed

I got a null-ptr-deref report as following when doing fault injection test:

BUG: kernel NULL pointer dereference, address: 0000000000000058
Oops: 0000 [#1] PREEMPT SMP KASAN PTI
CPU: 1 PID: 253 Comm: 507-spi-dm9051 Tainted: G    B            N 6.1.0-rc3+
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
RIP: 0010:klist_put+0x2d/0xd0
Call Trace:
 <TASK>
 klist_remove+0xf1/0x1c0
 device_release_driver_internal+0x23e/0x2d0
 bus_remove_device+0x1bd/0x240
 device_del+0x357/0x770
 phy_device_remove+0x11/0x30
 mdiobus_unregister+0xa5/0x140
 release_nodes+0x6a/0xa0
 devres_release_all+0xf8/0x150
 device_unbind_cleanup+0x19/0xd0

//probe path:
phy_device_register()
  device_add()

phy_connect
  phy_attach_direct() //set device driver
    probe() //it's failed, driver is not bound
    device_bind_driver() // probe failed, it's not called

//remove path:
phy_device_remove()
  device_del()
    device_release_driver_internal()
      __device_release_driver() //dev->drv is not NULL
        klist_remove() <- knode_driver is not added yet, cause null-ptr-deref

In phy_attach_direct(), after setting the 'dev->driver', probe() fails,
device_bind_driver() is not called, so the knode_driver->n_klist is not
set, then it causes null-ptr-deref in __device_release_driver() while
deleting device. Fix this by setting dev->driver to NULL in the error
path in phy_attach_direct().",Linux,Linux,"e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c, e13934563db047043ccead26412f552375cea90c"
1104,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50279,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

dm cache: fix out-of-bounds access to the dirty bitset when resizing

dm-cache checks the dirty bits of the cache blocks to be dropped when
shrinking the fast device, but an index bug in bitset iteration causes
out-of-bounds access.

Reproduce steps:

1. create a cache device of 1024 cache blocks (128 bytes dirty bitset)

dmsetup create cmeta --table ""0 8192 linear /dev/sdc 0""
dmsetup create cdata --table ""0 131072 linear /dev/sdc 8192""
dmsetup create corig --table ""0 524288 linear /dev/sdc 262144""
dd if=/dev/zero of=/dev/mapper/cmeta bs=4k count=1 oflag=direct
dmsetup create cache --table ""0 524288 cache /dev/mapper/cmeta \
/dev/mapper/cdata /dev/mapper/corig 128 2 metadata2 writethrough smq 0""

2. shrink the fast device to 512 cache blocks, triggering out-of-bounds
   access to the dirty bitset (offset 0x80)

dmsetup suspend cache
dmsetup reload cdata --table ""0 65536 linear /dev/sdc 8192""
dmsetup resume cdata
dmsetup resume cache

KASAN reports:

  BUG: KASAN: vmalloc-out-of-bounds in cache_preresume+0x269/0x7b0
  Read of size 8 at addr ffffc900000f3080 by task dmsetup/131

  (...snip...)
  The buggy address belongs to the virtual mapping at
   [ffffc900000f3000, ffffc900000f5000) created by:
   cache_ctr+0x176a/0x35f0

  (...snip...)
  Memory state around the buggy address:
   ffffc900000f2f80: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc900000f3000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  >ffffc900000f3080: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
                     ^
   ffffc900000f3100: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8
   ffffc900000f3180: f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8

Fix by making the index post-incremented.",Linux,Linux,"f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498, f494a9c6b1b6dd9a9f21bbb75d9210d478eeb498"
1105,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47742,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

firmware_loader: Block path traversal

Most firmware names are hardcoded strings, or are constructed from fairly
constrained format strings where the dynamic parts are just some hex
numbers or such.

However, there are a couple codepaths in the kernel where firmware file
names contain string components that are passed through from a device or
semi-privileged userspace; the ones I could find (not counting interfaces
that require root privileges) are:

 - lpfc_sli4_request_firmware_update() seems to construct the firmware
   filename from ""ModelName"", a string that was previously parsed out of
   some descriptor (""Vital Product Data"") in lpfc_fill_vpd()
 - nfp_net_fw_find() seems to construct a firmware filename from a model
   name coming from nfp_hwinfo_lookup(pf->hwinfo, ""nffw.partno""), which I
   think parses some descriptor that was read from the device.
   (But this case likely isn't exploitable because the format string looks
   like ""netronome/nic_%s"", and there shouldn't be any *folders* starting
   with ""netronome/nic_"". The previous case was different because there,
   the ""%s"" is *at the start* of the format string.)
 - module_flash_fw_schedule() is reachable from the
   ETHTOOL_MSG_MODULE_FW_FLASH_ACT netlink command, which is marked as
   GENL_UNS_ADMIN_PERM (meaning CAP_NET_ADMIN inside a user namespace is
   enough to pass the privilege check), and takes a userspace-provided
   firmware name.
   (But I think to reach this case, you need to have CAP_NET_ADMIN over a
   network namespace that a special kind of ethernet device is mapped into,
   so I think this is not a viable attack path in practice.)

Fix it by rejecting any firmware names containing "".."" path components.

For what it's worth, I went looking and haven't found any USB device
drivers that use the firmware loader dangerously.",Linux,Linux,"abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e, abb139e75c2cdbb955e840d6331cb5863e409d0e"
1106,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47706,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

block, bfq: fix possible UAF for bfqq->bic with merge chain

1) initial state, three tasks:

		Process 1       Process 2	Process 3
		 (BIC1)          (BIC2)		 (BIC3)
		  |  Λ            |  Λ		  |  Λ
		  |  |            |  |		  |  |
		  V  |            V  |		  V  |
		  bfqq1           bfqq2		  bfqq3
process ref:	   1		    1		    1

2) bfqq1 merged to bfqq2:

		Process 1       Process 2	Process 3
		 (BIC1)          (BIC2)		 (BIC3)
		  |               |		  |  Λ
		  \--------------\|		  |  |
		                  V		  V  |
		  bfqq1--------->bfqq2		  bfqq3
process ref:	   0		    2		    1

3) bfqq2 merged to bfqq3:

		Process 1       Process 2	Process 3
		 (BIC1)          (BIC2)		 (BIC3)
	 here -> Λ                |		  |
		  \--------------\ \-------------\|
		                  V		  V
		  bfqq1--------->bfqq2---------->bfqq3
process ref:	   0		    1		    3

In this case, IO from Process 1 will get bfqq2 from BIC1 first, and then
get bfqq3 through merge chain, and finially handle IO by bfqq3.
Howerver, current code will think bfqq2 is owned by BIC1, like initial
state, and set bfqq2->bic to BIC1.

bfq_insert_request
-> by Process 1
 bfqq = bfq_init_rq(rq)
  bfqq = bfq_get_bfqq_handle_split
   bfqq = bic_to_bfqq
   -> get bfqq2 from BIC1
 bfqq->ref++
 rq->elv.priv[0] = bic
 rq->elv.priv[1] = bfqq
 if (bfqq_process_refs(bfqq) == 1)
  bfqq->bic = bic
  -> record BIC1 to bfqq2

  __bfq_insert_request
   new_bfqq = bfq_setup_cooperator
   -> get bfqq3 from bfqq2->new_bfqq
   bfqq_request_freed(bfqq)
   new_bfqq->ref++
   rq->elv.priv[1] = new_bfqq
   -> handle IO by bfqq3

Fix the problem by checking bfqq is from merge chain fist. And this
might fix a following problem reported by our syzkaller(unreproducible):

==================================================================
BUG: KASAN: slab-use-after-free in bfq_do_early_stable_merge block/bfq-iosched.c:5692 [inline]
BUG: KASAN: slab-use-after-free in bfq_do_or_sched_stable_merge block/bfq-iosched.c:5805 [inline]
BUG: KASAN: slab-use-after-free in bfq_get_queue+0x25b0/0x2610 block/bfq-iosched.c:5889
Write of size 1 at addr ffff888123839eb8 by task kworker/0:1H/18595

CPU: 0 PID: 18595 Comm: kworker/0:1H Tainted: G             L     6.6.0-07439-gba2303cacfda #6
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qemu.org 04/01/2014
Workqueue: kblockd blk_mq_requeue_work
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x91/0xf0 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:364 [inline]
 print_report+0x10d/0x610 mm/kasan/report.c:475
 kasan_report+0x8e/0xc0 mm/kasan/report.c:588
 bfq_do_early_stable_merge block/bfq-iosched.c:5692 [inline]
 bfq_do_or_sched_stable_merge block/bfq-iosched.c:5805 [inline]
 bfq_get_queue+0x25b0/0x2610 block/bfq-iosched.c:5889
 bfq_get_bfqq_handle_split+0x169/0x5d0 block/bfq-iosched.c:6757
 bfq_init_rq block/bfq-iosched.c:6876 [inline]
 bfq_insert_request block/bfq-iosched.c:6254 [inline]
 bfq_insert_requests+0x1112/0x5cf0 block/bfq-iosched.c:6304
 blk_mq_insert_request+0x290/0x8d0 block/blk-mq.c:2593
 blk_mq_requeue_work+0x6bc/0xa70 block/blk-mq.c:1502
 process_one_work kernel/workqueue.c:2627 [inline]
 process_scheduled_works+0x432/0x13f0 kernel/workqueue.c:2700
 worker_thread+0x6f2/0x1160 kernel/workqueue.c:2781
 kthread+0x33c/0x440 kernel/kthread.c:388
 ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:305
 </TASK>

Allocated by task 20776:
 kasan_save_stack+0x20/0x40 mm/kasan/common.c:45
 kasan_set_track+0x25/0x30 mm/kasan/common.c:52
 __kasan_slab_alloc+0x87/0x90 mm/kasan/common.c:328
 kasan_slab_alloc include/linux/kasan.h:188 [inline]
 slab_post_alloc_hook mm/slab.h:763 [inline]
 slab_alloc_node mm/slub.c:3458 [inline]
 kmem_cache_alloc_node+0x1a4/0x6f0 mm/slub.c:3503
 ioc_create_icq block/blk-ioc.c:370 [inline]
---truncated---",Linux,Linux,"36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4, 36eca894832351feed9072d0f97eb06fc9482ca4"
1107,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50135,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-pci: fix race condition between reset and nvme_dev_disable()

nvme_dev_disable() modifies the dev->online_queues field, therefore
nvme_pci_update_nr_queues() should avoid racing against it, otherwise
we could end up passing invalid values to blk_mq_update_nr_hw_queues().

 WARNING: CPU: 39 PID: 61303 at drivers/pci/msi/api.c:347
          pci_irq_get_affinity+0x187/0x210
 Workqueue: nvme-reset-wq nvme_reset_work [nvme]
 RIP: 0010:pci_irq_get_affinity+0x187/0x210
 Call Trace:
  <TASK>
  ? blk_mq_pci_map_queues+0x87/0x3c0
  ? pci_irq_get_affinity+0x187/0x210
  blk_mq_pci_map_queues+0x87/0x3c0
  nvme_pci_map_queues+0x189/0x460 [nvme]
  blk_mq_update_nr_hw_queues+0x2a/0x40
  nvme_reset_work+0x1be/0x2a0 [nvme]

Fix the bug by locking the shutdown_lock mutex before using
dev->online_queues. Give up if nvme_dev_disable() is running or if
it has been executed already.",Linux,Linux,"949928c1c731417cc0f070912c63878b62b544f4, 949928c1c731417cc0f070912c63878b62b544f4, 949928c1c731417cc0f070912c63878b62b544f4"
1108,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49877,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix possible null-ptr-deref in ocfs2_set_buffer_uptodate

When doing cleanup, if flags without OCFS2_BH_READAHEAD, it may trigger
NULL pointer dereference in the following ocfs2_set_buffer_uptodate() if
bh is NULL.",Linux,Linux,"6c150df9c2e80b5cf86f5a0d98beb7390ad63bfc, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687"
1110,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48973,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

gpio: amd8111: Fix PCI device reference count leak

for_each_pci_dev() is implemented by pci_get_device(). The comment of
pci_get_device() says that it will increase the reference count for the
returned pci_dev and also decrease the reference count for the input
pci_dev @from if it is not NULL.

If we break for_each_pci_dev() loop with pdev not NULL, we need to call
pci_dev_put() to decrease the reference count. Add the missing
pci_dev_put() after the 'out' label. Since pci_dev_put() can handle NULL
input parameter, there is no problem for the 'Device not found' branch.
For the normal path, add pci_dev_put() in amd_gpio_exit().",Linux,Linux,"f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea, f942a7de047d8c599cc1a9a26293c8c7400450ea"
1101,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-36954,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: fix a possible memleak in tipc_buf_append

__skb_linearize() doesn't free the skb when it fails, so move
'*buf = NULL' after __skb_linearize(), so that the skb can be
freed on the err path.",Linux,Linux,"4b1761898861117c97066aea6c58f68a7787f0bf, 64d17ec9f1ded042c4b188d15734f33486ed9966, 6da24cfc83ba4f97ea44fc7ae9999a006101755c, b7df21cf1b79ab7026f545e7bf837bd5750ac026, b7df21cf1b79ab7026f545e7bf837bd5750ac026, b7df21cf1b79ab7026f545e7bf837bd5750ac026, b7df21cf1b79ab7026f545e7bf837bd5750ac026, b7df21cf1b79ab7026f545e7bf837bd5750ac026"
1111,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48966,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: mvneta: Prevent out of bounds read in mvneta_config_rss()

The pp->indir[0] value comes from the user.  It is passed to:

	if (cpu_online(pp->rxq_def))

inside the mvneta_percpu_elect() function.  It needs bounds checkeding
to ensure that it is not beyond the end of the cpu bitmap.",Linux,Linux,"cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e, cad5d847a093077b499a8b0bbfe6804b9226c03e"
1112,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53114,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

x86/CPU/AMD: Clear virtualized VMLOAD/VMSAVE on Zen4 client

A number of Zen4 client SoCs advertise the ability to use virtualized
VMLOAD/VMSAVE, but using these instructions is reported to be a cause
of a random host reboot.

These instructions aren't intended to be advertised on Zen4 client
so clear the capability.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1113,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50058,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

serial: protect uart_port_dtr_rts() in uart_shutdown() too

Commit af224ca2df29 (serial: core: Prevent unsafe uart port access, part
3) added few uport == NULL checks. It added one to uart_shutdown(), so
the commit assumes, uport can be NULL in there. But right after that
protection, there is an unprotected ""uart_port_dtr_rts(uport, false);""
call. That is invoked only if HUPCL is set, so I assume that is the
reason why we do not see lots of these reports.

Or it cannot be NULL at this point at all for some reason :P.

Until the above is investigated, stay on the safe side and move this
dereference to the if too.

I got this inconsistency from Coverity under CID 1585130. Thanks.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1114,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-42145,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

IB/core: Implement a limit on UMAD receive List

The existing behavior of ib_umad, which maintains received MAD
packets in an unbounded list, poses a risk of uncontrolled growth.
As user-space applications extract packets from this list, the rate
of extraction may not match the rate of incoming packets, leading
to potential list overflow.

To address this, we introduce a limit to the size of the list. After
considering typical scenarios, such as OpenSM processing, which can
handle approximately 100k packets per second, and the 1-second retry
timeout for most packets, we set the list size limit to 200k. Packets
received beyond this limit are dropped, assuming they are likely timed
out by the time they are handled by user-space.

Notably, packets queued on the receive list due to reasons like
timed-out sends are preserved even when the list is full.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1115,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-45016,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

netem: fix return value if duplicate enqueue fails

There is a bug in netem_enqueue() introduced by
commit 5845f706388a (""net: netem: fix skb length BUG_ON in __skb_to_sgvec"")
that can lead to a use-after-free.

This commit made netem_enqueue() always return NET_XMIT_SUCCESS
when a packet is duplicated, which can cause the parent qdisc's q.qlen
to be mistakenly incremented. When this happens qlen_notify() may be
skipped on the parent during destruction, leaving a dangling pointer
for some classful qdiscs like DRR.

There are two ways for the bug happen:

- If the duplicated packet is dropped by rootq->enqueue() and then
  the original packet is also dropped.
- If rootq->enqueue() sends the duplicated packet to a different qdisc
  and the original packet is dropped.

In both cases NET_XMIT_SUCCESS is returned even though no packets
are enqueued at the netem qdisc.

The fix is to defer the enqueue of the duplicate packet until after
the original packet has been guaranteed to return NET_XMIT_SUCCESS.",Linux,Linux,"5845f706388a4cde0f6b80f9e5d33527e942b7d9, 5845f706388a4cde0f6b80f9e5d33527e942b7d9, 5845f706388a4cde0f6b80f9e5d33527e942b7d9, 5845f706388a4cde0f6b80f9e5d33527e942b7d9, 5845f706388a4cde0f6b80f9e5d33527e942b7d9, 5845f706388a4cde0f6b80f9e5d33527e942b7d9, 5845f706388a4cde0f6b80f9e5d33527e942b7d9"
826,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46697,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: ensure that nfsd4_fattr_args.context is zeroed out

If nfsd4_encode_fattr4 ends up doing a ""goto out"" before we get to
checking for the security label, then args.context will be set to
uninitialized junk on the stack, which we'll then try to free.
Initialize it early.",Linux,Linux,"f59388a579c6a395de8f7372b267d3abecd8d6bf, f59388a579c6a395de8f7372b267d3abecd8d6bf"
1102,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47745,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

mm: call the security_mmap_file() LSM hook in remap_file_pages()

The remap_file_pages syscall handler calls do_mmap() directly, which
doesn't contain the LSM security check. And if the process has called
personality(READ_IMPLIES_EXEC) before and remap_file_pages() is called for
RW pages, this will actually result in remapping the pages to RWX,
bypassing a W^X policy enforced by SELinux.

So we should check prot by security_mmap_file LSM hook in the
remap_file_pages syscall handler before do_mmap() is called. Otherwise, it
potentially permits an attacker to bypass a W^X policy enforced by
SELinux.

The bypass is similar to CVE-2016-10044, which bypass the same thing via
AIO and can be found in [1].

The PoC:

$ cat > test.c

int main(void) {
	size_t pagesz = sysconf(_SC_PAGE_SIZE);
	int mfd = syscall(SYS_memfd_create, ""test"", 0);
	const char *buf = mmap(NULL, 4 * pagesz, PROT_READ | PROT_WRITE,
		MAP_SHARED, mfd, 0);
	unsigned int old = syscall(SYS_personality, 0xffffffff);
	syscall(SYS_personality, READ_IMPLIES_EXEC | old);
	syscall(SYS_remap_file_pages, buf, pagesz, 0, 2, 0);
	syscall(SYS_personality, old);
	// show the RWX page exists even if W^X policy is enforced
	int fd = open(""/proc/self/maps"", O_RDONLY);
	unsigned char buf2[1024];
	while (1) {
		int ret = read(fd, buf2, 1024);
		if (ret <= 0) break;
		write(1, buf2, ret);
	}
	close(fd);
}

$ gcc test.c -o test
$ ./test | grep rwx
7f1836c34000-7f1836c35000 rwxs 00002000 00:01 2050 /memfd:test (deleted)

[PM: subject line tweaks]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1100,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46834,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ethtool: fail closed if we can't get max channel used in indirection tables

Commit 0d1b7d6c9274 (""bnxt: fix crashes when reducing ring count with
active RSS contexts"") proves that allowing indirection table to contain
channels with out of bounds IDs may lead to crashes. Currently the
max channel check in the core gets skipped if driver can't fetch
the indirection table or when we can't allocate memory.

Both of those conditions should be extremely rare but if they do
happen we should try to be safe and fail the channel change.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1084,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48946,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

udf: Fix preallocation discarding at indirect extent boundary

When preallocation extent is the first one in the extent block, the
code would corrupt extent tree header instead. Fix the problem and use
udf_delete_aext() for deleting extent to avoid some code duplication.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1091,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47696,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/iwcm: Fix WARNING:at_kernel/workqueue.c:#check_flush_dependency

In the commit aee2424246f9 (""RDMA/iwcm: Fix a use-after-free related to
destroying CM IDs""), the function flush_workqueue is invoked to flush the
work queue iwcm_wq.

But at that time, the work queue iwcm_wq was created via the function
alloc_ordered_workqueue without the flag WQ_MEM_RECLAIM.

Because the current process is trying to flush the whole iwcm_wq, if
iwcm_wq doesn't have the flag WQ_MEM_RECLAIM, verify that the current
process is not reclaiming memory or running on a workqueue which doesn't
have the flag WQ_MEM_RECLAIM as that can break forward-progress guarantee
leading to a deadlock.

The call trace is as below:

[  125.350876][ T1430] Call Trace:
[  125.356281][ T1430]  <TASK>
[ 125.361285][ T1430] ? __warn (kernel/panic.c:693)
[ 125.367640][ T1430] ? check_flush_dependency (kernel/workqueue.c:3706 (discriminator 9))
[ 125.375689][ T1430] ? report_bug (lib/bug.c:180 lib/bug.c:219)
[ 125.382505][ T1430] ? handle_bug (arch/x86/kernel/traps.c:239)
[ 125.388987][ T1430] ? exc_invalid_op (arch/x86/kernel/traps.c:260 (discriminator 1))
[ 125.395831][ T1430] ? asm_exc_invalid_op (arch/x86/include/asm/idtentry.h:621)
[ 125.403125][ T1430] ? check_flush_dependency (kernel/workqueue.c:3706 (discriminator 9))
[ 125.410984][ T1430] ? check_flush_dependency (kernel/workqueue.c:3706 (discriminator 9))
[ 125.418764][ T1430] __flush_workqueue (kernel/workqueue.c:3970)
[ 125.426021][ T1430] ? __pfx___might_resched (kernel/sched/core.c:10151)
[ 125.433431][ T1430] ? destroy_cm_id (drivers/infiniband/core/iwcm.c:375) iw_cm
[ 125.441209][ T1430] ? __pfx___flush_workqueue (kernel/workqueue.c:3910)
[ 125.473900][ T1430] ? _raw_spin_lock_irqsave (arch/x86/include/asm/atomic.h:107 include/linux/atomic/atomic-arch-fallback.h:2170 include/linux/atomic/atomic-instrumented.h:1302 include/asm-generic/qspinlock.h:111 include/linux/spinlock.h:187 include/linux/spinlock_api_smp.h:111 kernel/locking/spinlock.c:162)
[ 125.473909][ T1430] ? __pfx__raw_spin_lock_irqsave (kernel/locking/spinlock.c:161)
[ 125.482537][ T1430] _destroy_id (drivers/infiniband/core/cma.c:2044) rdma_cm
[ 125.495072][ T1430] nvme_rdma_free_queue (drivers/nvme/host/rdma.c:656 drivers/nvme/host/rdma.c:650) nvme_rdma
[ 125.505827][ T1430] nvme_rdma_reset_ctrl_work (drivers/nvme/host/rdma.c:2180) nvme_rdma
[ 125.505831][ T1430] process_one_work (kernel/workqueue.c:3231)
[ 125.515122][ T1430] worker_thread (kernel/workqueue.c:3306 kernel/workqueue.c:3393)
[ 125.515127][ T1430] ? __pfx_worker_thread (kernel/workqueue.c:3339)
[ 125.531837][ T1430] kthread (kernel/kthread.c:389)
[ 125.539864][ T1430] ? __pfx_kthread (kernel/kthread.c:342)
[ 125.550628][ T1430] ret_from_fork (arch/x86/kernel/process.c:147)
[ 125.558840][ T1430] ? __pfx_kthread (kernel/kthread.c:342)
[ 125.558844][ T1430] ret_from_fork_asm (arch/x86/entry/entry_64.S:257)
[  125.566487][ T1430]  </TASK>
[  125.566488][ T1430] ---[ end trace 0000000000000000 ]---",Linux,Linux,"d91d253c87fd1efece521ff2612078a35af673c6, 7f25f296fc9bd0435be14e89bf657cd615a23574, 94ee7ff99b87435ec63211f632918dc7f44dac79, 557d035fe88d78dd51664f4dc0e1896c04c97cf6, dc8074b8901caabb97c2d353abd6b4e7fa5a59a5, ff5bbbdee08287d75d72e65b72a2b76d9637892a, ee39384ee787e86e9db4efb843818ef0ea9cb8ae, aee2424246f9f1dadc33faa78990c1e2eb7826e4, aee2424246f9f1dadc33faa78990c1e2eb7826e4"
1085,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53104,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: uvcvideo: Skip parsing frames of type UVC_VS_UNDEFINED in uvc_parse_format

This can lead to out of bounds writes since frames of this type were not
taken into account when calculating the size of the frames buffer in
uvc_parse_streaming.",Linux,Linux,"c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c, c0efd232929c2cd87238de2cccdaf4e845be5b0c"
1086,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49011,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

hwmon: (coretemp) fix pci device refcount leak in nv1a_ram_new()

As comment of pci_get_domain_bus_and_slot() says, it returns
a pci device with refcount increment, when finish using it,
the caller must decrement the reference count by calling
pci_dev_put(). So call it after using to avoid refcount leak.",Linux,Linux,"14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3, 14513ee696a0cd12a19318e433b75a786808adc3"
1087,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50301,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

security/keys: fix slab-out-of-bounds in key_task_permission

KASAN reports an out of bounds read:
BUG: KASAN: slab-out-of-bounds in __kuid_val include/linux/uidgid.h:36
BUG: KASAN: slab-out-of-bounds in uid_eq include/linux/uidgid.h:63 [inline]
BUG: KASAN: slab-out-of-bounds in key_task_permission+0x394/0x410
security/keys/permission.c:54
Read of size 4 at addr ffff88813c3ab618 by task stress-ng/4362

CPU: 2 PID: 4362 Comm: stress-ng Not tainted 5.10.0-14930-gafbffd6c3ede #15
Call Trace:
 __dump_stack lib/dump_stack.c:82 [inline]
 dump_stack+0x107/0x167 lib/dump_stack.c:123
 print_address_description.constprop.0+0x19/0x170 mm/kasan/report.c:400
 __kasan_report.cold+0x6c/0x84 mm/kasan/report.c:560
 kasan_report+0x3a/0x50 mm/kasan/report.c:585
 __kuid_val include/linux/uidgid.h:36 [inline]
 uid_eq include/linux/uidgid.h:63 [inline]
 key_task_permission+0x394/0x410 security/keys/permission.c:54
 search_nested_keyrings+0x90e/0xe90 security/keys/keyring.c:793

This issue was also reported by syzbot.

It can be reproduced by following these steps(more details [1]):
1. Obtain more than 32 inputs that have similar hashes, which ends with the
   pattern '0xxxxxxxe6'.
2. Reboot and add the keys obtained in step 1.

The reproducer demonstrates how this issue happened:
1. In the search_nested_keyrings function, when it iterates through the
   slots in a node(below tag ascend_to_node), if the slot pointer is meta
   and node->back_pointer != NULL(it means a root), it will proceed to
   descend_to_node. However, there is an exception. If node is the root,
   and one of the slots points to a shortcut, it will be treated as a
   keyring.
2. Whether the ptr is keyring decided by keyring_ptr_is_keyring function.
   However, KEYRING_PTR_SUBTYPE is 0x2UL, the same as
   ASSOC_ARRAY_PTR_SUBTYPE_MASK.
3. When 32 keys with the similar hashes are added to the tree, the ROOT
   has keys with hashes that are not similar (e.g. slot 0) and it splits
   NODE A without using a shortcut. When NODE A is filled with keys that
   all hashes are xxe6, the keys are similar, NODE A will split with a
   shortcut. Finally, it forms the tree as shown below, where slot 6 points
   to a shortcut.

                      NODE A
              +------>+---+
      ROOT    |       | 0 | xxe6
      +---+   |       +---+
 xxxx | 0 | shortcut  :   : xxe6
      +---+   |       +---+
 xxe6 :   :   |       |   | xxe6
      +---+   |       +---+
      | 6 |---+       :   : xxe6
      +---+           +---+
 xxe6 :   :           | f | xxe6
      +---+           +---+
 xxe6 | f |
      +---+

4. As mentioned above, If a slot(slot 6) of the root points to a shortcut,
   it may be mistakenly transferred to a key*, leading to a read
   out-of-bounds read.

To fix this issue, one should jump to descend_to_node if the ptr is a
shortcut, regardless of whether the node is root or not.

[1] https://lore.kernel.org/linux-kernel/1cfa878e-8c7b-4570-8606-21daf5e13ce7@huaweicloud.com/

[jarkko: tweaked the commit message a bit to have an appropriate closes
 tag.]",Linux,Linux,"b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69, b2a4df200d570b2c33a57e1ebfa5896e4bc81b69"
1088,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49991,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdkfd: amdkfd_free_gtt_mem clear the correct pointer

Pass pointer reference to amdgpu_bo_unref to clear the correct pointer,
otherwise amdgpu_bo_unref clear the local variable, the original pointer
not set to NULL, this could cause use-after-free bug.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1089,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50179,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ceph: remove the incorrect Fw reference check when dirtying pages

When doing the direct-io reads it will also try to mark pages dirty,
but for the read path it won't hold the Fw caps and there is case
will it get the Fw reference.",Linux,Linux,"5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29"
1090,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48962,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: hisilicon: Fix potential use-after-free in hisi_femac_rx()

The skb is delivered to napi_gro_receive() which may free it, after
calling this, dereferencing skb may trigger use-after-free.",Linux,Linux,"542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056, 542ae60af24f02e130e62cb3b7c23163a2350056"
1092,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50073,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tty: n_gsm: Fix use-after-free in gsm_cleanup_mux

BUG: KASAN: slab-use-after-free in gsm_cleanup_mux+0x77b/0x7b0
drivers/tty/n_gsm.c:3160 [n_gsm]
Read of size 8 at addr ffff88815fe99c00 by task poc/3379
CPU: 0 UID: 0 PID: 3379 Comm: poc Not tainted 6.11.0+ #56
Hardware name: VMware, Inc. VMware Virtual Platform/440BX
Desktop Reference Platform, BIOS 6.00 11/12/2020
Call Trace:
 <TASK>
 gsm_cleanup_mux+0x77b/0x7b0 drivers/tty/n_gsm.c:3160 [n_gsm]
 __pfx_gsm_cleanup_mux+0x10/0x10 drivers/tty/n_gsm.c:3124 [n_gsm]
 __pfx_sched_clock_cpu+0x10/0x10 kernel/sched/clock.c:389
 update_load_avg+0x1c1/0x27b0 kernel/sched/fair.c:4500
 __pfx_min_vruntime_cb_rotate+0x10/0x10 kernel/sched/fair.c:846
 __rb_insert_augmented+0x492/0xbf0 lib/rbtree.c:161
 gsmld_ioctl+0x395/0x1450 drivers/tty/n_gsm.c:3408 [n_gsm]
 _raw_spin_lock_irqsave+0x92/0xf0 arch/x86/include/asm/atomic.h:107
 __pfx_gsmld_ioctl+0x10/0x10 drivers/tty/n_gsm.c:3822 [n_gsm]
 ktime_get+0x5e/0x140 kernel/time/timekeeping.c:195
 ldsem_down_read+0x94/0x4e0 arch/x86/include/asm/atomic64_64.h:79
 __pfx_ldsem_down_read+0x10/0x10 drivers/tty/tty_ldsem.c:338
 __pfx_do_vfs_ioctl+0x10/0x10 fs/ioctl.c:805
 tty_ioctl+0x643/0x1100 drivers/tty/tty_io.c:2818

Allocated by task 65:
 gsm_data_alloc.constprop.0+0x27/0x190 drivers/tty/n_gsm.c:926 [n_gsm]
 gsm_send+0x2c/0x580 drivers/tty/n_gsm.c:819 [n_gsm]
 gsm1_receive+0x547/0xad0 drivers/tty/n_gsm.c:3038 [n_gsm]
 gsmld_receive_buf+0x176/0x280 drivers/tty/n_gsm.c:3609 [n_gsm]
 tty_ldisc_receive_buf+0x101/0x1e0 drivers/tty/tty_buffer.c:391
 tty_port_default_receive_buf+0x61/0xa0 drivers/tty/tty_port.c:39
 flush_to_ldisc+0x1b0/0x750 drivers/tty/tty_buffer.c:445
 process_scheduled_works+0x2b0/0x10d0 kernel/workqueue.c:3229
 worker_thread+0x3dc/0x950 kernel/workqueue.c:3391
 kthread+0x2a3/0x370 kernel/kthread.c:389
 ret_from_fork+0x2d/0x70 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:257

Freed by task 3367:
 kfree+0x126/0x420 mm/slub.c:4580
 gsm_cleanup_mux+0x36c/0x7b0 drivers/tty/n_gsm.c:3160 [n_gsm]
 gsmld_ioctl+0x395/0x1450 drivers/tty/n_gsm.c:3408 [n_gsm]
 tty_ioctl+0x643/0x1100 drivers/tty/tty_io.c:2818

[Analysis]
gsm_msg on the tx_ctrl_list or tx_data_list of gsm_mux
can be freed by multi threads through ioctl,which leads
to the occurrence of uaf. Protect it by gsm tx lock.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1099,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50218,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: pass u64 to ocfs2_truncate_inline maybe overflow

Syzbot reported a kernel BUG in ocfs2_truncate_inline.  There are two
reasons for this: first, the parameter value passed is greater than
ocfs2_max_inline_data_with_xattr, second, the start and end parameters of
ocfs2_truncate_inline are ""unsigned int"".

So, we need to add a sanity check for byte_start and byte_len right before
ocfs2_truncate_inline() in ocfs2_remove_inode_range(), if they are greater
than ocfs2_max_inline_data_with_xattr return -EINVAL.",Linux,Linux,"1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9, 1afc32b952335f665327a1a9001ba1b44bb76fd9"
1093,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

NFC: nci: Bounds check struct nfc_target arrays

While running under CONFIG_FORTIFY_SOURCE=y, syzkaller reported:

  memcpy: detected field-spanning write (size 129) of single field ""target->sensf_res"" at net/nfc/nci/ntf.c:260 (size 18)

This appears to be a legitimate lack of bounds checking in
nci_add_new_protocol(). Add the missing checks.",Linux,Linux,"019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5, 019c4fbaa790e2b3f11dab0c8b7d9896d77db3e5"
1094,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47674,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

mm: avoid leaving partial pfn mappings around in error case

As Jann points out, PFN mappings are special, because unlike normal
memory mappings, there is no lifetime information associated with the
mapping - it is just a raw mapping of PFNs with no reference counting of
a 'struct page'.

That's all very much intentional, but it does mean that it's easy to
mess up the cleanup in case of errors.  Yes, a failed mmap() will always
eventually clean up any partial mappings, but without any explicit
lifetime in the page table mapping itself, it's very easy to do the
error handling in the wrong order.

In particular, it's easy to mistakenly free the physical backing store
before the page tables are actually cleaned up and (temporarily) have
stale dangling PTE entries.

To make this situation less error-prone, just make sure that any partial
pfn mapping is torn down early, before any other error handling.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1095,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2023-52898,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

xhci: Fix null pointer dereference when host dies

Make sure xhci_free_dev() and xhci_kill_endpoint_urbs() do not race
and cause null pointer dereference when host suddenly dies.

Usb core may call xhci_free_dev() which frees the xhci->devs[slot_id]
virt device at the same time that xhci_kill_endpoint_urbs() tries to
loop through all the device's endpoints, checking if there are any
cancelled urbs left to give back.

hold the xhci spinlock while freeing the virt device",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1096,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2021-47416,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

phy: mdio: fix memory leak

Syzbot reported memory leak in MDIO bus interface, the problem was in
wrong state logic.

MDIOBUS_ALLOCATED indicates 2 states:
	1. Bus is only allocated
	2. Bus allocated and __mdiobus_register() fails, but
	   device_register() was called

In case of device_register() has been called we should call put_device()
to correctly free the memory allocated for this device, but mdiobus_free()
calls just kfree(dev) in case of MDIOBUS_ALLOCATED state

To avoid this behaviour we need to set bus->state to MDIOBUS_UNREGISTERED
_before_ calling device_register(), because put_device() should be
called even in case of device_register() failure.",Linux,Linux,"46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9, 46abc02175b3c246dd5141d878f565a8725060c9"
1097,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47707,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: avoid possible NULL deref in rt6_uncached_list_flush_dev()

Blamed commit accidentally removed a check for rt->rt6i_idev being NULL,
as spotted by syzbot:

Oops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 1 UID: 0 PID: 10998 Comm: syz-executor Not tainted 6.11.0-rc6-syzkaller-00208-g625403177711 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
 RIP: 0010:rt6_uncached_list_flush_dev net/ipv6/route.c:177 [inline]
 RIP: 0010:rt6_disable_ip+0x33e/0x7e0 net/ipv6/route.c:4914
Code: 41 80 3c 04 00 74 0a e8 90 d0 9b f7 48 8b 7c 24 08 48 8b 07 48 89 44 24 10 4c 89 f0 48 c1 e8 03 48 b9 00 00 00 00 00 fc ff df <80> 3c 08 00 74 08 4c 89 f7 e8 64 d0 9b f7 48 8b 44 24 18 49 39 06
RSP: 0018:ffffc900047374e0 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 1ffff1100fdf8f33 RCX: dffffc0000000000
RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff88807efc78c0
RBP: ffffc900047375d0 R08: 0000000000000003 R09: fffff520008e6e8c
R10: dffffc0000000000 R11: fffff520008e6e8c R12: 1ffff1100fdf8f18
R13: ffff88807efc7998 R14: 0000000000000000 R15: ffff88807efc7930
FS:  0000000000000000(0000) GS:ffff8880b8900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020002a80 CR3: 0000000022f62000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
  addrconf_ifdown+0x15d/0x1bd0 net/ipv6/addrconf.c:3856
 addrconf_notify+0x3cb/0x1020
  notifier_call_chain+0x19f/0x3e0 kernel/notifier.c:93
  call_netdevice_notifiers_extack net/core/dev.c:2032 [inline]
  call_netdevice_notifiers net/core/dev.c:2046 [inline]
  unregister_netdevice_many_notify+0xd81/0x1c40 net/core/dev.c:11352
  unregister_netdevice_many net/core/dev.c:11414 [inline]
  unregister_netdevice_queue+0x303/0x370 net/core/dev.c:11289
  unregister_netdevice include/linux/netdevice.h:3129 [inline]
  __tun_detach+0x6b9/0x1600 drivers/net/tun.c:685
  tun_detach drivers/net/tun.c:701 [inline]
  tun_chr_close+0x108/0x1b0 drivers/net/tun.c:3510
  __fput+0x24a/0x8a0 fs/file_table.c:422
  task_work_run+0x24f/0x310 kernel/task_work.c:228
  exit_task_work include/linux/task_work.h:40 [inline]
  do_exit+0xa2f/0x27f0 kernel/exit.c:882
  do_group_exit+0x207/0x2c0 kernel/exit.c:1031
  __do_sys_exit_group kernel/exit.c:1042 [inline]
  __se_sys_exit_group kernel/exit.c:1040 [inline]
  __x64_sys_exit_group+0x3f/0x40 kernel/exit.c:1040
  x64_sys_call+0x2634/0x2640 arch/x86/include/generated/asm/syscalls_64.h:232
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f1acc77def9
Code: Unable to access opcode bytes at 0x7f1acc77decf.
RSP: 002b:00007ffeb26fa738 EFLAGS: 00000246 ORIG_RAX: 00000000000000e7
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f1acc77def9
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000043
RBP: 00007f1acc7dd508 R08: 00007ffeb26f84d7 R09: 0000000000000003
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000001
R13: 0000000000000003 R14: 00000000ffffffff R15: 00007ffeb26fa8e0
 </TASK>
Modules linked in:
---[ end trace 0000000000000000 ]---
 RIP: 0010:rt6_uncached_list_flush_dev net/ipv6/route.c:177 [inline]
 RIP: 0010:rt6_disable_ip+0x33e/0x7e0 net/ipv6/route.c:4914
Code: 41 80 3c 04 00 74 0a e8 90 d0 9b f7 48 8b 7c 24 08 48 8b 07 48 89 44 24 10 4c 89 f0 48 c1 e8 03 48 b9 00 00 00 00 00 fc ff df <80> 3c 08 00 74 08 4c 89 f7 e8 64 d0 9b f7 48 8b 44 24 18 49 39 06
RSP: 0018:ffffc900047374e0 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 1ffff1100fdf8f33 RCX: dffffc0000000000
RDX: 0000000000000000 RSI: 0000000000000004 RDI: ffff88807efc78c0
R
---truncated---",Linux,Linux,"e332bc67cf5e5e5b71a1aec9750d0791aac65183, e332bc67cf5e5e5b71a1aec9750d0791aac65183, e332bc67cf5e5e5b71a1aec9750d0791aac65183, e332bc67cf5e5e5b71a1aec9750d0791aac65183, e332bc67cf5e5e5b71a1aec9750d0791aac65183"
1098,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49982,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

aoe: fix the potential use-after-free problem in more places

For fixing CVE-2023-6270, f98364e92662 (""aoe: fix the potential
use-after-free problem in aoecmd_cfg_pkts"") makes tx() calling dev_put()
instead of doing in aoecmd_cfg_pkts(). It avoids that the tx() runs
into use-after-free.

Then Nicolai Stange found more places in aoe have potential use-after-free
problem with tx(). e.g. revalidate(), aoecmd_ata_rw(), resend(), probe()
and aoecmd_cfg_rsp(). Those functions also use aoenet_xmit() to push
packet to tx queue. So they should also use dev_hold() to increase the
refcnt of skb->dev.

On the other hand, moving dev_put() to tx() causes that the refcnt of
skb->dev be reduced to a negative value, because corresponding
dev_hold() are not called in revalidate(), aoecmd_ata_rw(), resend(),
probe(), and aoecmd_cfg_rsp(). This patch fixed this issue.",Linux,Linux,"ad80c34944d7175fa1f5c7a55066020002921a99, 1a54aa506b3b2f31496731039e49778f54eee881, faf0b4c5e00bb680e8e43ac936df24d3f48c8e65, 7dd09fa80b0765ce68bfae92f4e2f395ccf0fba4, 74ca3ef68d2f449bc848c0a814cefc487bf755fa, eb48680b0255a9e8a9bdc93d6a55b11c31262e62, f98364e926626c678fb4b9004b75cacf92ff0662, f98364e926626c678fb4b9004b75cacf92ff0662, f98364e926626c678fb4b9004b75cacf92ff0662"
1047,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48978,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

HID: core: fix shift-out-of-bounds in hid_report_raw_event

Syzbot reported shift-out-of-bounds in hid_report_raw_event.

microsoft 0003:045E:07DA.0001: hid_field_extract() called with n (128) >
32! (swapper/0)
======================================================================
UBSAN: shift-out-of-bounds in drivers/hid/hid-core.c:1323:20
shift exponent 127 is too large for 32-bit type 'int'
CPU: 0 PID: 0 Comm: swapper/0 Not tainted
6.1.0-rc4-syzkaller-00159-g4bbf3422df78 #0
Hardware name: Google Compute Engine/Google Compute Engine, BIOS
Google 10/26/2022
Call Trace:
 <IRQ>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x1e3/0x2cb lib/dump_stack.c:106
 ubsan_epilogue lib/ubsan.c:151 [inline]
 __ubsan_handle_shift_out_of_bounds+0x3a6/0x420 lib/ubsan.c:322
 snto32 drivers/hid/hid-core.c:1323 [inline]
 hid_input_fetch_field drivers/hid/hid-core.c:1572 [inline]
 hid_process_report drivers/hid/hid-core.c:1665 [inline]
 hid_report_raw_event+0xd56/0x18b0 drivers/hid/hid-core.c:1998
 hid_input_report+0x408/0x4f0 drivers/hid/hid-core.c:2066
 hid_irq_in+0x459/0x690 drivers/hid/usbhid/hid-core.c:284
 __usb_hcd_giveback_urb+0x369/0x530 drivers/usb/core/hcd.c:1671
 dummy_timer+0x86b/0x3110 drivers/usb/gadget/udc/dummy_hcd.c:1988
 call_timer_fn+0xf5/0x210 kernel/time/timer.c:1474
 expire_timers kernel/time/timer.c:1519 [inline]
 __run_timers+0x76a/0x980 kernel/time/timer.c:1790
 run_timer_softirq+0x63/0xf0 kernel/time/timer.c:1803
 __do_softirq+0x277/0x75b kernel/softirq.c:571
 __irq_exit_rcu+0xec/0x170 kernel/softirq.c:650
 irq_exit_rcu+0x5/0x20 kernel/softirq.c:662
 sysvec_apic_timer_interrupt+0x91/0xb0 arch/x86/kernel/apic/apic.c:1107
======================================================================

If the size of the integer (unsigned n) is bigger than 32 in snto32(),
shift exponent will be too large for 32-bit type 'int', resulting in a
shift-out-of-bounds bug.
Fix this by adding a check on the size of the integer (unsigned n) in
snto32(). To add support for n greater than 32 bits, set n to 32, if n
is greater than 32.",Linux,Linux,"dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa, dde5845a529ff753364a6d1aea61180946270bfa"
1046,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-40965,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

i2c: lpi2c: Avoid calling clk_get_rate during transfer

Instead of repeatedly calling clk_get_rate for each transfer, lock
the clock rate and cache the value.
A deadlock has been observed while adding tlv320aic32x4 audio codec to
the system. When this clock provider adds its clock, the clk mutex is
locked already, it needs to access i2c, which in return needs the mutex
for clk_get_rate as well.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1045,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49966,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: cancel dqi_sync_work before freeing oinfo

ocfs2_global_read_info() will initialize and schedule dqi_sync_work at the
end, if error occurs after successfully reading global quota, it will
trigger the following warning with CONFIG_DEBUG_OBJECTS_* enabled:

ODEBUG: free active (active state 0) object: 00000000d8b0ce28 object type: timer_list hint: qsync_work_fn+0x0/0x16c

This reports that there is an active delayed work when freeing oinfo in
error handling, so cancel dqi_sync_work first.  BTW, return status instead
of -1 when .read_file_info fails.",Linux,Linux,"171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475"
1000,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49945,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net/ncsi: Disable the ncsi work before freeing the associated structure

The work function can run after the ncsi device is freed, resulting
in use-after-free bugs or kernel panic.",Linux,Linux,"2d283bdd079c0ad4da020bbc9e9c2a4280823098, 2d283bdd079c0ad4da020bbc9e9c2a4280823098, 2d283bdd079c0ad4da020bbc9e9c2a4280823098"
994,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49027,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

iavf: Fix error handling in iavf_init_module()

The iavf_init_module() won't destroy workqueue when pci_register_driver()
failed. Call destroy_workqueue() when pci_register_driver() failed to
prevent the resource leak.

Similar to the handling of u132_hcd_init in commit f276e002793c
(""usb: u132-hcd: fix resource leak"")",Linux,Linux,"2803b16c10ea7eec170c485388f5f26ae30e92fe, 2803b16c10ea7eec170c485388f5f26ae30e92fe, 2803b16c10ea7eec170c485388f5f26ae30e92fe, 2803b16c10ea7eec170c485388f5f26ae30e92fe"
995,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49957,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix null-ptr-deref when journal load failed.

During the mounting process, if journal_reset() fails because of too short
journal, then lead to jbd2_journal_load() fails with NULL j_sb_buffer. 
Subsequently, ocfs2_journal_shutdown() calls
jbd2_journal_flush()->jbd2_cleanup_journal_tail()->
__jbd2_update_log_tail()->jbd2_journal_update_sb_log_tail()
->lock_buffer(journal->j_sb_buffer), resulting in a null-pointer
dereference error.

To resolve this issue, we should check the JBD2_LOADED flag to ensure the
journal was properly loaded.  Additionally, use journal instead of
osb->journal directly to simplify the code.",Linux,Linux,"f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1"
996,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49962,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ACPICA: check null return of ACPI_ALLOCATE_ZEROED() in acpi_db_convert_to_package()

ACPICA commit 4d4547cf13cca820ff7e0f859ba83e1a610b9fd0

ACPI_ALLOCATE_ZEROED() may fail, elements might be NULL and will cause
NULL pointer dereference later.

[ rjw: Subject and changelog edits ]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
997,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-26804,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: ip_tunnel: prevent perpetual headroom growth

syzkaller triggered following kasan splat:
BUG: KASAN: use-after-free in __skb_flow_dissect+0x19d1/0x7a50 net/core/flow_dissector.c:1170
Read of size 1 at addr ffff88812fb4000e by task syz-executor183/5191
[..]
 kasan_report+0xda/0x110 mm/kasan/report.c:588
 __skb_flow_dissect+0x19d1/0x7a50 net/core/flow_dissector.c:1170
 skb_flow_dissect_flow_keys include/linux/skbuff.h:1514 [inline]
 ___skb_get_hash net/core/flow_dissector.c:1791 [inline]
 __skb_get_hash+0xc7/0x540 net/core/flow_dissector.c:1856
 skb_get_hash include/linux/skbuff.h:1556 [inline]
 ip_tunnel_xmit+0x1855/0x33c0 net/ipv4/ip_tunnel.c:748
 ipip_tunnel_xmit+0x3cc/0x4e0 net/ipv4/ipip.c:308
 __netdev_start_xmit include/linux/netdevice.h:4940 [inline]
 netdev_start_xmit include/linux/netdevice.h:4954 [inline]
 xmit_one net/core/dev.c:3548 [inline]
 dev_hard_start_xmit+0x13d/0x6d0 net/core/dev.c:3564
 __dev_queue_xmit+0x7c1/0x3d60 net/core/dev.c:4349
 dev_queue_xmit include/linux/netdevice.h:3134 [inline]
 neigh_connected_output+0x42c/0x5d0 net/core/neighbour.c:1592
 ...
 ip_finish_output2+0x833/0x2550 net/ipv4/ip_output.c:235
 ip_finish_output+0x31/0x310 net/ipv4/ip_output.c:323
 ..
 iptunnel_xmit+0x5b4/0x9b0 net/ipv4/ip_tunnel_core.c:82
 ip_tunnel_xmit+0x1dbc/0x33c0 net/ipv4/ip_tunnel.c:831
 ipgre_xmit+0x4a1/0x980 net/ipv4/ip_gre.c:665
 __netdev_start_xmit include/linux/netdevice.h:4940 [inline]
 netdev_start_xmit include/linux/netdevice.h:4954 [inline]
 xmit_one net/core/dev.c:3548 [inline]
 dev_hard_start_xmit+0x13d/0x6d0 net/core/dev.c:3564
 ...

The splat occurs because skb->data points past skb->head allocated area.
This is because neigh layer does:
  __skb_pull(skb, skb_network_offset(skb));

... but skb_network_offset() returns a negative offset and __skb_pull()
arg is unsigned.  IOW, we skb->data gets ""adjusted"" by a huge value.

The negative value is returned because skb->head and skb->data distance is
more than 64k and skb->network_header (u16) has wrapped around.

The bug is in the ip_tunnel infrastructure, which can cause
dev->needed_headroom to increment ad infinitum.

The syzkaller reproducer consists of packets getting routed via a gre
tunnel, and route of gre encapsulated packets pointing at another (ipip)
tunnel.  The ipip encapsulation finds gre0 as next output device.

This results in the following pattern:

1). First packet is to be sent out via gre0.
Route lookup found an output device, ipip0.

2).
ip_tunnel_xmit for gre0 bumps gre0->needed_headroom based on the future
output device, rt.dev->needed_headroom (ipip0).

3).
ip output / start_xmit moves skb on to ipip0. which runs the same
code path again (xmit recursion).

4).
Routing step for the post-gre0-encap packet finds gre0 as output device
to use for ipip0 encapsulated packet.

tunl0->needed_headroom is then incremented based on the (already bumped)
gre0 device headroom.

This repeats for every future packet:

gre0->needed_headroom gets inflated because previous packets' ipip0 step
incremented rt->dev (gre0) headroom, and ipip0 incremented because gre0
needed_headroom was increased.

For each subsequent packet, gre/ipip0->needed_headroom grows until
post-expand-head reallocations result in a skb->head/data distance of
more than 64k.

Once that happens, skb->network_header (u16) wraps around when
pskb_expand_head tries to make sure that skb_network_offset() is unchanged
after the headroom expansion/reallocation.

After this skb_network_offset(skb) returns a different (and negative)
result post headroom expansion.

The next trip to neigh layer (or anything else that would __skb_pull the
network header) makes skb->data point to a memory location outside
skb->head area.

v2: Cap the needed_headroom update to an arbitarily chosen upperlimit to
prevent perpetual increase instead of dropping the headroom increment
completely.",Linux,Linux,"243aad830e8a4cdda261626fbaeddde16b08d04a, 243aad830e8a4cdda261626fbaeddde16b08d04a, 243aad830e8a4cdda261626fbaeddde16b08d04a, 243aad830e8a4cdda261626fbaeddde16b08d04a, 243aad830e8a4cdda261626fbaeddde16b08d04a, 243aad830e8a4cdda261626fbaeddde16b08d04a, 243aad830e8a4cdda261626fbaeddde16b08d04a"
998,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48971,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: Fix not cleanup led when bt_init fails

bt_init() calls bt_leds_init() to register led, but if it fails later,
bt_leds_cleanup() is not called to unregister it.

This can cause panic if the argument ""bluetooth-power"" in text is freed
and then another led_trigger_register() tries to access it:

BUG: unable to handle page fault for address: ffffffffc06d3bc0
RIP: 0010:strcmp+0xc/0x30
  Call Trace:
    <TASK>
    led_trigger_register+0x10d/0x4f0
    led_trigger_register_simple+0x7d/0x100
    bt_init+0x39/0xf7 [bluetooth]
    do_one_initcall+0xd0/0x4e0",Linux,Linux,"e64c97b53bc6727aa4385535166aaa047281e02d, e64c97b53bc6727aa4385535166aaa047281e02d, e64c97b53bc6727aa4385535166aaa047281e02d, e64c97b53bc6727aa4385535166aaa047281e02d, e64c97b53bc6727aa4385535166aaa047281e02d, e64c97b53bc6727aa4385535166aaa047281e02d"
999,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49958,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: reserve space for inline xattr before attaching reflink tree

One of our customers reported a crash and a corrupted ocfs2 filesystem. 
The crash was due to the detection of corruption.  Upon troubleshooting,
the fsck -fn output showed the below corruption

[EXTENT_LIST_FREE] Extent list in owner 33080590 claims 230 as the next free chain record,
but fsck believes the largest valid value is 227.  Clamp the next record value? n

The stat output from the debugfs.ocfs2 showed the following corruption
where the ""Next Free Rec:"" had overshot the ""Count:"" in the root metadata
block.

        Inode: 33080590   Mode: 0640   Generation: 2619713622 (0x9c25a856)
        FS Generation: 904309833 (0x35e6ac49)
        CRC32: 00000000   ECC: 0000
        Type: Regular   Attr: 0x0   Flags: Valid
        Dynamic Features: (0x16) HasXattr InlineXattr Refcounted
        Extended Attributes Block: 0  Extended Attributes Inline Size: 256
        User: 0 (root)   Group: 0 (root)   Size: 281320357888
        Links: 1   Clusters: 141738
        ctime: 0x66911b56 0x316edcb8 -- Fri Jul 12 06:02:30.829349048 2024
        atime: 0x66911d6b 0x7f7a28d -- Fri Jul 12 06:11:23.133669517 2024
        mtime: 0x66911b56 0x12ed75d7 -- Fri Jul 12 06:02:30.317552087 2024
        dtime: 0x0 -- Wed Dec 31 17:00:00 1969
        Refcount Block: 2777346
        Last Extblk: 2886943   Orphan Slot: 0
        Sub Alloc Slot: 0   Sub Alloc Bit: 14
        Tree Depth: 1   Count: 227   Next Free Rec: 230
        ## Offset        Clusters       Block#
        0  0             2310           2776351
        1  2310          2139           2777375
        2  4449          1221           2778399
        3  5670          731            2779423
        4  6401          566            2780447
        .......          ....           .......
        .......          ....           .......

The issue was in the reflink workfow while reserving space for inline
xattr.  The problematic function is ocfs2_reflink_xattr_inline().  By the
time this function is called the reflink tree is already recreated at the
destination inode from the source inode.  At this point, this function
reserves space for inline xattrs at the destination inode without even
checking if there is space at the root metadata block.  It simply reduces
the l_count from 243 to 227 thereby making space of 256 bytes for inline
xattr whereas the inode already has extents beyond this index (in this
case up to 230), thereby causing corruption.

The fix for this is to reserve space for inline metadata at the destination
inode before the reflink tree gets recreated. The customer has verified the
fix.",Linux,Linux,"ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf"
1001,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2023-6270,n/a,n/a,Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"A flaw was found in the ATA over Ethernet (AoE) driver in the Linux kernel. The aoecmd_cfg_pkts() function improperly updates the refcnt on `struct net_device`, and a use-after-free can be triggered by racing between the free on the struct and the access through the `skbtxq` global queue. This could lead to a denial of service condition or potential code execution.",Red Hat,Red Hat Enterprise Linux 6,
992,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50117,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd: Guard against bad data for ATIF ACPI method

If a BIOS provides bad data in response to an ATIF method call
this causes a NULL pointer dereference in the caller.

```
? show_regs (arch/x86/kernel/dumpstack.c:478 (discriminator 1))
? __die (arch/x86/kernel/dumpstack.c:423 arch/x86/kernel/dumpstack.c:434)
? page_fault_oops (arch/x86/mm/fault.c:544 (discriminator 2) arch/x86/mm/fault.c:705 (discriminator 2))
? do_user_addr_fault (arch/x86/mm/fault.c:440 (discriminator 1) arch/x86/mm/fault.c:1232 (discriminator 1))
? acpi_ut_update_object_reference (drivers/acpi/acpica/utdelete.c:642)
? exc_page_fault (arch/x86/mm/fault.c:1542)
? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:623)
? amdgpu_atif_query_backlight_caps.constprop.0 (drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c:387 (discriminator 2)) amdgpu
? amdgpu_atif_query_backlight_caps.constprop.0 (drivers/gpu/drm/amd/amdgpu/amdgpu_acpi.c:386 (discriminator 1)) amdgpu
```

It has been encountered on at least one system, so guard for it.

(cherry picked from commit c9b7c809b89f24e9372a4e7f02d64c950b07fdee)",Linux,Linux,"d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21, d38ceaf99ed015f2a0b9af3499791bd3a3daae21"
1002,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49891,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Validate hdwq pointers before dereferencing in reset/errata paths

When the HBA is undergoing a reset or is handling an errata event, NULL ptr
dereference crashes may occur in routines such as
lpfc_sli_flush_io_rings(), lpfc_dev_loss_tmo_callbk(), or
lpfc_abort_handler().

Add NULL ptr checks before dereferencing hdwq pointers that may have been
freed due to operations colliding with a reset or errata event handler.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1003,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-36905,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: defer shutdown(SEND_SHUTDOWN) for TCP_SYN_RECV sockets

TCP_SYN_RECV state is really special, it is only used by
cross-syn connections, mostly used by fuzzers.

In the following crash [1], syzbot managed to trigger a divide
by zero in tcp_rcv_space_adjust()

A socket makes the following state transitions,
without ever calling tcp_init_transfer(),
meaning tcp_init_buffer_space() is also not called.

         TCP_CLOSE
connect()
         TCP_SYN_SENT
         TCP_SYN_RECV
shutdown() -> tcp_shutdown(sk, SEND_SHUTDOWN)
         TCP_FIN_WAIT1

To fix this issue, change tcp_shutdown() to not
perform a TCP_SYN_RECV -> TCP_FIN_WAIT1 transition,
which makes no sense anyway.

When tcp_rcv_state_process() later changes socket state
from TCP_SYN_RECV to TCP_ESTABLISH, then look at
sk->sk_shutdown to finally enter TCP_FIN_WAIT1 state,
and send a FIN packet from a sane socket state.

This means tcp_send_fin() can now be called from BH
context, and must use GFP_ATOMIC allocations.

[1]
divide error: 0000 [#1] PREEMPT SMP KASAN NOPTI
CPU: 1 PID: 5084 Comm: syz-executor358 Not tainted 6.9.0-rc6-syzkaller-00022-g98369dccd2f8 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
 RIP: 0010:tcp_rcv_space_adjust+0x2df/0x890 net/ipv4/tcp_input.c:767
Code: e3 04 4c 01 eb 48 8b 44 24 38 0f b6 04 10 84 c0 49 89 d5 0f 85 a5 03 00 00 41 8b 8e c8 09 00 00 89 e8 29 c8 48 0f af c3 31 d2 <48> f7 f1 48 8d 1c 43 49 8d 96 76 08 00 00 48 89 d0 48 c1 e8 03 48
RSP: 0018:ffffc900031ef3f0 EFLAGS: 00010246
RAX: 0c677a10441f8f42 RBX: 000000004fb95e7e RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: 0000000027d4b11f R08: ffffffff89e535a4 R09: 1ffffffff25e6ab7
R10: dffffc0000000000 R11: ffffffff8135e920 R12: ffff88802a9f8d30
R13: dffffc0000000000 R14: ffff88802a9f8d00 R15: 1ffff1100553f2da
FS:  00005555775c0380(0000) GS:ffff8880b9500000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f1155bf2304 CR3: 000000002b9f2000 CR4: 0000000000350ef0
Call Trace:
 <TASK>
  tcp_recvmsg_locked+0x106d/0x25a0 net/ipv4/tcp.c:2513
  tcp_recvmsg+0x25d/0x920 net/ipv4/tcp.c:2578
  inet6_recvmsg+0x16a/0x730 net/ipv6/af_inet6.c:680
  sock_recvmsg_nosec net/socket.c:1046 [inline]
  sock_recvmsg+0x109/0x280 net/socket.c:1068
  ____sys_recvmsg+0x1db/0x470 net/socket.c:2803
  ___sys_recvmsg net/socket.c:2845 [inline]
  do_recvmmsg+0x474/0xae0 net/socket.c:2939
  __sys_recvmmsg net/socket.c:3018 [inline]
  __do_sys_recvmmsg net/socket.c:3041 [inline]
  __se_sys_recvmmsg net/socket.c:3034 [inline]
  __x64_sys_recvmmsg+0x199/0x250 net/socket.c:3034
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7faeb6363db9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 c1 17 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007ffcc1997168 EFLAGS: 00000246 ORIG_RAX: 000000000000012b
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007faeb6363db9
RDX: 0000000000000001 RSI: 0000000020000bc0 RDI: 0000000000000005
RBP: 0000000000000000 R08: 0000000000000000 R09: 000000000000001c
R10: 0000000000000122 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 0000000000000001 R15: 0000000000000001",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1004,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50148,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: bnep: fix wild-memory-access in proto_unregister

There's issue as follows:
  KASAN: maybe wild-memory-access in range [0xdead...108-0xdead...10f]
  CPU: 3 UID: 0 PID: 2805 Comm: rmmod Tainted: G        W
  RIP: 0010:proto_unregister+0xee/0x400
  Call Trace:
   <TASK>
   __do_sys_delete_module+0x318/0x580
   do_syscall_64+0xc1/0x1d0
   entry_SYSCALL_64_after_hwframe+0x77/0x7f

As bnep_init() ignore bnep_sock_init()'s return value, and bnep_sock_init()
will cleanup all resource. Then when remove bnep module will call
bnep_sock_cleanup() to cleanup sock's resource.
To solve above issue just return bnep_sock_init()'s return value in
bnep_exit().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1005,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50095,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/mad: Improve handling of timed out WRs of mad agent

Current timeout handler of mad agent acquires/releases mad_agent_priv
lock for every timed out WRs. This causes heavy locking contention
when higher no. of WRs are to be handled inside timeout handler.

This leads to softlockup with below trace in some use cases where
rdma-cm path is used to establish connection between peer nodes

Trace:
-----
 BUG: soft lockup - CPU#4 stuck for 26s! [kworker/u128:3:19767]
 CPU: 4 PID: 19767 Comm: kworker/u128:3 Kdump: loaded Tainted: G OE
     -------  ---  5.14.0-427.13.1.el9_4.x86_64 #1
 Hardware name: Dell Inc. PowerEdge R740/01YM03, BIOS 2.4.8 11/26/2019
 Workqueue: ib_mad1 timeout_sends [ib_core]
 RIP: 0010:__do_softirq+0x78/0x2ac
 RSP: 0018:ffffb253449e4f98 EFLAGS: 00000246
 RAX: 00000000ffffffff RBX: 0000000000000000 RCX: 000000000000001f
 RDX: 000000000000001d RSI: 000000003d1879ab RDI: fff363b66fd3a86b
 RBP: ffffb253604cbcd8 R08: 0000009065635f3b R09: 0000000000000000
 R10: 0000000000000040 R11: ffffb253449e4ff8 R12: 0000000000000000
 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000040
 FS:  0000000000000000(0000) GS:ffff8caa1fc80000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00007fd9ec9db900 CR3: 0000000891934006 CR4: 00000000007706e0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
 PKRU: 55555554
 Call Trace:
  <IRQ>
  ? show_trace_log_lvl+0x1c4/0x2df
  ? show_trace_log_lvl+0x1c4/0x2df
  ? __irq_exit_rcu+0xa1/0xc0
  ? watchdog_timer_fn+0x1b2/0x210
  ? __pfx_watchdog_timer_fn+0x10/0x10
  ? __hrtimer_run_queues+0x127/0x2c0
  ? hrtimer_interrupt+0xfc/0x210
  ? __sysvec_apic_timer_interrupt+0x5c/0x110
  ? sysvec_apic_timer_interrupt+0x37/0x90
  ? asm_sysvec_apic_timer_interrupt+0x16/0x20
  ? __do_softirq+0x78/0x2ac
  ? __do_softirq+0x60/0x2ac
  __irq_exit_rcu+0xa1/0xc0
  sysvec_call_function_single+0x72/0x90
  </IRQ>
  <TASK>
  asm_sysvec_call_function_single+0x16/0x20
 RIP: 0010:_raw_spin_unlock_irq+0x14/0x30
 RSP: 0018:ffffb253604cbd88 EFLAGS: 00000247
 RAX: 000000000001960d RBX: 0000000000000002 RCX: ffff8cad2a064800
 RDX: 000000008020001b RSI: 0000000000000001 RDI: ffff8cad5d39f66c
 RBP: ffff8cad5d39f600 R08: 0000000000000001 R09: 0000000000000000
 R10: ffff8caa443e0c00 R11: ffffb253604cbcd8 R12: ffff8cacb8682538
 R13: 0000000000000005 R14: ffffb253604cbd90 R15: ffff8cad5d39f66c
  cm_process_send_error+0x122/0x1d0 [ib_cm]
  timeout_sends+0x1dd/0x270 [ib_core]
  process_one_work+0x1e2/0x3b0
  ? __pfx_worker_thread+0x10/0x10
  worker_thread+0x50/0x3a0
  ? __pfx_worker_thread+0x10/0x10
  kthread+0xdd/0x100
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x29/0x50
  </TASK>

Simplified timeout handler by creating local list of timed out WRs
and invoke send handler post creating the list. The new method acquires/
releases lock once to fetch the list and hence helps to reduce locking
contetiong when processing higher no. of WRs",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1006,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50296,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: hns3: fix kernel crash when uninstalling driver

When the driver is uninstalled and the VF is disabled concurrently, a
kernel crash occurs. The reason is that the two actions call function
pci_disable_sriov(). The num_VFs is checked to determine whether to
release the corresponding resources. During the second calling, num_VFs
is not 0 and the resource release function is called. However, the
corresponding resource has been released during the first invoking.
Therefore, the problem occurs:

[15277.839633][T50670] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000020
...
[15278.131557][T50670] Call trace:
[15278.134686][T50670]  klist_put+0x28/0x12c
[15278.138682][T50670]  klist_del+0x14/0x20
[15278.142592][T50670]  device_del+0xbc/0x3c0
[15278.146676][T50670]  pci_remove_bus_device+0x84/0x120
[15278.151714][T50670]  pci_stop_and_remove_bus_device+0x6c/0x80
[15278.157447][T50670]  pci_iov_remove_virtfn+0xb4/0x12c
[15278.162485][T50670]  sriov_disable+0x50/0x11c
[15278.166829][T50670]  pci_disable_sriov+0x24/0x30
[15278.171433][T50670]  hnae3_unregister_ae_algo_prepare+0x60/0x90 [hnae3]
[15278.178039][T50670]  hclge_exit+0x28/0xd0 [hclge]
[15278.182730][T50670]  __se_sys_delete_module.isra.0+0x164/0x230
[15278.188550][T50670]  __arm64_sys_delete_module+0x1c/0x30
[15278.193848][T50670]  invoke_syscall+0x50/0x11c
[15278.198278][T50670]  el0_svc_common.constprop.0+0x158/0x164
[15278.203837][T50670]  do_el0_svc+0x34/0xcc
[15278.207834][T50670]  el0_svc+0x20/0x30

For details, see the following figure.

     rmmod hclge              disable VFs
----------------------------------------------------
hclge_exit()            sriov_numvfs_store()
  ...                     device_lock()
  pci_disable_sriov()     hns3_pci_sriov_configure()
                            pci_disable_sriov()
                              sriov_disable()
    sriov_disable()             if !num_VFs :
      if !num_VFs :               return;
        return;                 sriov_del_vfs()
      sriov_del_vfs()             ...
        ...                       klist_put()
        klist_put()               ...
        ...                     num_VFs = 0;
      num_VFs = 0;        device_unlock();

In this patch, when driver is removing, we get the device_lock()
to protect num_VFs, just like sriov_numvfs_store().",Linux,Linux,"b06ad258e01389ca3ff13bc180f3fcd6a608f1cd, c4b64011e458aa2b246cd4e42012cfd83d2d9a5c, d36b15e3e7b5937cb1f6ac590a85facc3a320642, 0dd8a25f355b4df2d41c08df1716340854c7d4c5, 0dd8a25f355b4df2d41c08df1716340854c7d4c5, 0dd8a25f355b4df2d41c08df1716340854c7d4c5, 0dd8a25f355b4df2d41c08df1716340854c7d4c5, 0dd8a25f355b4df2d41c08df1716340854c7d4c5"
1007,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2023-52918,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: pci: cx23885: check cx23885_vdev_init() return

cx23885_vdev_init() can return a NULL pointer, but that pointer
is used in the next line without a check.

Add a NULL pointer check and go to the error unwind if it is NULL.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
993,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50154,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tcp/dccp: Don't use timer_pending() in reqsk_queue_unlink().

Martin KaFai Lau reported use-after-free [0] in reqsk_timer_handler().

  """"""
  We are seeing a use-after-free from a bpf prog attached to
  trace_tcp_retransmit_synack. The program passes the req->sk to the
  bpf_sk_storage_get_tracing kernel helper which does check for null
  before using it.
  """"""

The commit 83fccfc3940c (""inet: fix potential deadlock in
reqsk_queue_unlink()"") added timer_pending() in reqsk_queue_unlink() not
to call del_timer_sync() from reqsk_timer_handler(), but it introduced a
small race window.

Before the timer is called, expire_timers() calls detach_timer(timer, true)
to clear timer->entry.pprev and marks it as not pending.

If reqsk_queue_unlink() checks timer_pending() just after expire_timers()
calls detach_timer(), TCP will miss del_timer_sync(); the reqsk timer will
continue running and send multiple SYN+ACKs until it expires.

The reported UAF could happen if req->sk is close()d earlier than the timer
expiration, which is 63s by default.

The scenario would be

  1. inet_csk_complete_hashdance() calls inet_csk_reqsk_queue_drop(),
     but del_timer_sync() is missed

  2. reqsk timer is executed and scheduled again

  3. req->sk is accept()ed and reqsk_put() decrements rsk_refcnt, but
     reqsk timer still has another one, and inet_csk_accept() does not
     clear req->sk for non-TFO sockets

  4. sk is close()d

  5. reqsk timer is executed again, and BPF touches req->sk

Let's not use timer_pending() by passing the caller context to
__inet_csk_reqsk_queue_drop().

Note that reqsk timer is pinned, so the issue does not happen in most
use cases. [1]

[0]
BUG: KFENCE: use-after-free read in bpf_sk_storage_get_tracing+0x2e/0x1b0

Use-after-free read at 0x00000000a891fb3a (in kfence-#1):
bpf_sk_storage_get_tracing+0x2e/0x1b0
bpf_prog_5ea3e95db6da0438_tcp_retransmit_synack+0x1d20/0x1dda
bpf_trace_run2+0x4c/0xc0
tcp_rtx_synack+0xf9/0x100
reqsk_timer_handler+0xda/0x3d0
run_timer_softirq+0x292/0x8a0
irq_exit_rcu+0xf5/0x320
sysvec_apic_timer_interrupt+0x6d/0x80
asm_sysvec_apic_timer_interrupt+0x16/0x20
intel_idle_irq+0x5a/0xa0
cpuidle_enter_state+0x94/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb

kfence-#1: 0x00000000a72cc7b6-0x00000000d97616d9, size=2376, cache=TCPv6

allocated by task 0 on cpu 9 at 260507.901592s:
sk_prot_alloc+0x35/0x140
sk_clone_lock+0x1f/0x3f0
inet_csk_clone_lock+0x15/0x160
tcp_create_openreq_child+0x1f/0x410
tcp_v6_syn_recv_sock+0x1da/0x700
tcp_check_req+0x1fb/0x510
tcp_v6_rcv+0x98b/0x1420
ipv6_list_rcv+0x2258/0x26e0
napi_complete_done+0x5b1/0x2990
mlx5e_napi_poll+0x2ae/0x8d0
net_rx_action+0x13e/0x590
irq_exit_rcu+0xf5/0x320
common_interrupt+0x80/0x90
asm_common_interrupt+0x22/0x40
cpuidle_enter_state+0xfb/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb

freed by task 0 on cpu 9 at 260507.927527s:
rcu_core_si+0x4ff/0xf10
irq_exit_rcu+0xf5/0x320
sysvec_apic_timer_interrupt+0x6d/0x80
asm_sysvec_apic_timer_interrupt+0x16/0x20
cpuidle_enter_state+0xfb/0x273
cpu_startup_entry+0x15e/0x260
start_secondary+0x8a/0x90
secondary_startup_64_no_verify+0xfa/0xfb",Linux,Linux,"83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af, 83fccfc3940c4a2db90fd7e7079f5b465cd8c6af"
991,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50167,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

be2net: fix potential memory leak in be_xmit()

The be_xmit() returns NETDEV_TX_OK without freeing skb
in case of be_xmit_enqueue() fails, add dev_kfree_skb_any() to fix it.",Linux,Linux,"760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803, 760c295e0e8d982917d004c9095cff61c0cbd803"
1009,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47672,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: don't wait for tx queues if firmware is dead

There is a WARNING in iwl_trans_wait_tx_queues_empty() (that was
recently converted from just a message), that can be hit if we
wait for TX queues to become empty after firmware died. Clearly,
we can't expect anything from the firmware after it's declared dead.

Don't call iwl_trans_wait_tx_queues_empty() in this case. While it could
be a good idea to stop the flow earlier, the flush functions do some
maintenance work that is not related to the firmware, so keep that part
of the code running even when the firmware is not running.

[edit commit message]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
982,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50150,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

usb: typec: altmode should keep reference to parent

The altmode device release refers to its parent device, but without keeping
a reference to it.

When registering the altmode, get a reference to the parent and put it in
the release function.

Before this fix, when using CONFIG_DEBUG_KOBJECT_RELEASE, we see issues
like this:

[   43.572860] kobject: 'port0.0' (ffff8880057ba008): kobject_release, parent 0000000000000000 (delayed 3000)
[   43.573532] kobject: 'port0.1' (ffff8880057bd008): kobject_release, parent 0000000000000000 (delayed 1000)
[   43.574407] kobject: 'port0' (ffff8880057b9008): kobject_release, parent 0000000000000000 (delayed 3000)
[   43.575059] kobject: 'port1.0' (ffff8880057ca008): kobject_release, parent 0000000000000000 (delayed 4000)
[   43.575908] kobject: 'port1.1' (ffff8880057c9008): kobject_release, parent 0000000000000000 (delayed 4000)
[   43.576908] kobject: 'typec' (ffff8880062dbc00): kobject_release, parent 0000000000000000 (delayed 4000)
[   43.577769] kobject: 'port1' (ffff8880057bf008): kobject_release, parent 0000000000000000 (delayed 3000)
[   46.612867] ==================================================================
[   46.613402] BUG: KASAN: slab-use-after-free in typec_altmode_release+0x38/0x129
[   46.614003] Read of size 8 at addr ffff8880057b9118 by task kworker/2:1/48
[   46.614538]
[   46.614668] CPU: 2 UID: 0 PID: 48 Comm: kworker/2:1 Not tainted 6.12.0-rc1-00138-gedbae730ad31 #535
[   46.615391] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014
[   46.616042] Workqueue: events kobject_delayed_cleanup
[   46.616446] Call Trace:
[   46.616648]  <TASK>
[   46.616820]  dump_stack_lvl+0x5b/0x7c
[   46.617112]  ? typec_altmode_release+0x38/0x129
[   46.617470]  print_report+0x14c/0x49e
[   46.617769]  ? rcu_read_unlock_sched+0x56/0x69
[   46.618117]  ? __virt_addr_valid+0x19a/0x1ab
[   46.618456]  ? kmem_cache_debug_flags+0xc/0x1d
[   46.618807]  ? typec_altmode_release+0x38/0x129
[   46.619161]  kasan_report+0x8d/0xb4
[   46.619447]  ? typec_altmode_release+0x38/0x129
[   46.619809]  ? process_scheduled_works+0x3cb/0x85f
[   46.620185]  typec_altmode_release+0x38/0x129
[   46.620537]  ? process_scheduled_works+0x3cb/0x85f
[   46.620907]  device_release+0xaf/0xf2
[   46.621206]  kobject_delayed_cleanup+0x13b/0x17a
[   46.621584]  process_scheduled_works+0x4f6/0x85f
[   46.621955]  ? __pfx_process_scheduled_works+0x10/0x10
[   46.622353]  ? hlock_class+0x31/0x9a
[   46.622647]  ? lock_acquired+0x361/0x3c3
[   46.622956]  ? move_linked_works+0x46/0x7d
[   46.623277]  worker_thread+0x1ce/0x291
[   46.623582]  ? __kthread_parkme+0xc8/0xdf
[   46.623900]  ? __pfx_worker_thread+0x10/0x10
[   46.624236]  kthread+0x17e/0x190
[   46.624501]  ? kthread+0xfb/0x190
[   46.624756]  ? __pfx_kthread+0x10/0x10
[   46.625015]  ret_from_fork+0x20/0x40
[   46.625268]  ? __pfx_kthread+0x10/0x10
[   46.625532]  ret_from_fork_asm+0x1a/0x30
[   46.625805]  </TASK>
[   46.625953]
[   46.626056] Allocated by task 678:
[   46.626287]  kasan_save_stack+0x24/0x44
[   46.626555]  kasan_save_track+0x14/0x2d
[   46.626811]  __kasan_kmalloc+0x3f/0x4d
[   46.627049]  __kmalloc_noprof+0x1bf/0x1f0
[   46.627362]  typec_register_port+0x23/0x491
[   46.627698]  cros_typec_probe+0x634/0xbb6
[   46.628026]  platform_probe+0x47/0x8c
[   46.628311]  really_probe+0x20a/0x47d
[   46.628605]  device_driver_attach+0x39/0x72
[   46.628940]  bind_store+0x87/0xd7
[   46.629213]  kernfs_fop_write_iter+0x1aa/0x218
[   46.629574]  vfs_write+0x1d6/0x29b
[   46.629856]  ksys_write+0xcd/0x13b
[   46.630128]  do_syscall_64+0xd4/0x139
[   46.630420]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[   46.630820]
[   46.630946] Freed by task 48:
[   46.631182]  kasan_save_stack+0x24/0x44
[   46.631493]  kasan_save_track+0x14/0x2d
[   46.631799]  kasan_save_free_info+0x3f/0x4d
[   46.632144]  __kasan_slab_free+0x37/0x45
[   46.632474]
---truncated---",Linux,Linux,"8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7, 8a37d87d72f0c69f837229c04d2fcd7117ea57e7"
975,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47735,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix spin_unlock_irqrestore() called with IRQs enabled

Fix missuse of spin_lock_irq()/spin_unlock_irq() when
spin_lock_irqsave()/spin_lock_irqrestore() was hold.

This was discovered through the lock debugging, and the corresponding
log is as follows:

raw_local_irq_restore() called with IRQs enabled
WARNING: CPU: 96 PID: 2074 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x30/0x40
...
Call trace:
 warn_bogus_irq_restore+0x30/0x40
 _raw_spin_unlock_irqrestore+0x84/0xc8
 add_qp_to_list+0x11c/0x148 [hns_roce_hw_v2]
 hns_roce_create_qp_common.constprop.0+0x240/0x780 [hns_roce_hw_v2]
 hns_roce_create_qp+0x98/0x160 [hns_roce_hw_v2]
 create_qp+0x138/0x258
 ib_create_qp_kernel+0x50/0xe8
 create_mad_qp+0xa8/0x128
 ib_mad_port_open+0x218/0x448
 ib_mad_init_device+0x70/0x1f8
 add_client_context+0xfc/0x220
 enable_device_and_get+0xd0/0x140
 ib_register_device.part.0+0xf4/0x1c8
 ib_register_device+0x34/0x50
 hns_roce_register_device+0x174/0x3d0 [hns_roce_hw_v2]
 hns_roce_init+0xfc/0x2c0 [hns_roce_hw_v2]
 __hns_roce_hw_v2_init_instance+0x7c/0x1d0 [hns_roce_hw_v2]
 hns_roce_hw_v2_init_instance+0x9c/0x180 [hns_roce_hw_v2]",Linux,Linux,"9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b"
976,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49952,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: prevent nf_skb_duplicated corruption

syzbot found that nf_dup_ipv4() or nf_dup_ipv6() could write
per-cpu variable nf_skb_duplicated in an unsafe way [1].

Disabling preemption as hinted by the splat is not enough,
we have to disable soft interrupts as well.

[1]
BUG: using __this_cpu_write() in preemptible [00000000] code: syz.4.282/6316
 caller is nf_dup_ipv4+0x651/0x8f0 net/ipv4/netfilter/nf_dup_ipv4.c:87
CPU: 0 UID: 0 PID: 6316 Comm: syz.4.282 Not tainted 6.11.0-rc7-syzkaller-00104-g7052622fccb1 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:93 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
  check_preemption_disabled+0x10e/0x120 lib/smp_processor_id.c:49
  nf_dup_ipv4+0x651/0x8f0 net/ipv4/netfilter/nf_dup_ipv4.c:87
  nft_dup_ipv4_eval+0x1db/0x300 net/ipv4/netfilter/nft_dup_ipv4.c:30
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x4ad/0x1da0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_ipv4+0x202/0x320 net/netfilter/nft_chain_filter.c:23
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xc3/0x220 net/netfilter/core.c:626
  nf_hook+0x2c4/0x450 include/linux/netfilter.h:269
  NF_HOOK_COND include/linux/netfilter.h:302 [inline]
  ip_output+0x185/0x230 net/ipv4/ip_output.c:433
  ip_local_out net/ipv4/ip_output.c:129 [inline]
  ip_send_skb+0x74/0x100 net/ipv4/ip_output.c:1495
  udp_send_skb+0xacf/0x1650 net/ipv4/udp.c:981
  udp_sendmsg+0x1c21/0x2a60 net/ipv4/udp.c:1269
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x1a6/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2597
  ___sys_sendmsg net/socket.c:2651 [inline]
  __sys_sendmmsg+0x3b2/0x740 net/socket.c:2737
  __do_sys_sendmmsg net/socket.c:2766 [inline]
  __se_sys_sendmmsg net/socket.c:2763 [inline]
  __x64_sys_sendmmsg+0xa0/0xb0 net/socket.c:2763
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f4ce4f7def9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f4ce5d4a038 EFLAGS: 00000246 ORIG_RAX: 0000000000000133
RAX: ffffffffffffffda RBX: 00007f4ce5135f80 RCX: 00007f4ce4f7def9
RDX: 0000000000000001 RSI: 0000000020005d40 RDI: 0000000000000006
RBP: 00007f4ce4ff0b76 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f4ce5135f80 R15: 00007ffd4cbc6d68
 </TASK>",Linux,Linux,"d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738"
977,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53142,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

initramfs: avoid filename buffer overrun

The initramfs filename field is defined in
Documentation/driver-api/early-userspace/buffer-format.rst as:

 37 cpio_file := ALGN(4) + cpio_header + filename + ""\0"" + ALGN(4) + data
...
 55 ============= ================== =========================
 56 Field name    Field size         Meaning
 57 ============= ================== =========================
...
 70 c_namesize    8 bytes            Length of filename, including final \0

When extracting an initramfs cpio archive, the kernel's do_name() path
handler assumes a zero-terminated path at @collected, passing it
directly to filp_open() / init_mkdir() / init_mknod().

If a specially crafted cpio entry carries a non-zero-terminated filename
and is followed by uninitialized memory, then a file may be created with
trailing characters that represent the uninitialized memory. The ability
to create an initramfs entry would imply already having full control of
the system, so the buffer overrun shouldn't be considered a security
vulnerability.

Append the output of the following bash script to an existing initramfs
and observe any created /initramfs_test_fname_overrunAA* path. E.g.
  ./reproducer.sh | gzip >> /myinitramfs

It's easiest to observe non-zero uninitialized memory when the output is
gzipped, as it'll overflow the heap allocated @out_buf in __gunzip(),
rather than the initrd_start+initrd_size block.

---- reproducer.sh ----
nilchar=""A""	# change to ""\0"" to properly zero terminate / pad
magic=""070701""
ino=1
mode=$(( 0100777 ))
uid=0
gid=0
nlink=1
mtime=1
filesize=0
devmajor=0
devminor=1
rdevmajor=0
rdevminor=0
csum=0
fname=""initramfs_test_fname_overrun""
namelen=$(( ${#fname} + 1 ))	# plus one to account for terminator

printf ""%s%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%08x%s"" \
	$magic $ino $mode $uid $gid $nlink $mtime $filesize \
	$devmajor $devminor $rdevmajor $rdevminor $namelen $csum $fname

termpadlen=$(( 1 + ((4 - ((110 + $namelen) & 3)) % 4) ))
printf ""%.s${nilchar}"" $(seq 1 $termpadlen)
---- reproducer.sh ----

Symlink filename fields handled in do_symlink() won't overrun past the
data segment, due to the explicit zero-termination of the symlink
target.

Fix filename buffer overrun by aborting the initramfs FSM if any cpio
entry doesn't carry a zero-terminator at the expected (name_len - 1)
offset.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
978,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48790,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nvme: fix a possible use-after-free in controller reset during load

Unlike .queue_rq, in .submit_async_event drivers may not check the ctrl
readiness for AER submission. This may lead to a use-after-free
condition that was observed with nvme-tcp.

The race condition may happen in the following scenario:
1. driver executes its reset_ctrl_work
2. -> nvme_stop_ctrl - flushes ctrl async_event_work
3. ctrl sends AEN which is received by the host, which in turn
   schedules AEN handling
4. teardown admin queue (which releases the queue socket)
5. AEN processed, submits another AER, calling the driver to submit
6. driver attempts to send the cmd
==> use-after-free

In order to fix that, add ctrl state check to validate the ctrl
is actually able to accept the AER submission.

This addresses the above race in controller resets because the driver
during teardown should:
1. change ctrl state to RESETTING
2. flush async_event_work (as well as other async work elements)

So after 1,2, any other AER command will find the
ctrl state to be RESETTING and bail out without submitting the AER.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
979,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48969,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

xen-netfront: Fix NULL sring after live migration

A NAPI is setup for each network sring to poll data to kernel
The sring with source host is destroyed before live migration and
new sring with target host is setup after live migration.
The NAPI for the old sring is not deleted until setup new sring
with target host after migration. With busy_poll/busy_read enabled,
the NAPI can be polled before got deleted when resume VM.

BUG: unable to handle kernel NULL pointer dereference at
0000000000000008
IP: xennet_poll+0xae/0xd20
PGD 0 P4D 0
Oops: 0000 [#1] SMP PTI
Call Trace:
 finish_task_switch+0x71/0x230
 timerqueue_del+0x1d/0x40
 hrtimer_try_to_cancel+0xb5/0x110
 xennet_alloc_rx_buffers+0x2a0/0x2a0
 napi_busy_loop+0xdb/0x270
 sock_poll+0x87/0x90
 do_sys_poll+0x26f/0x580
 tracing_map_insert+0x1d4/0x2f0
 event_hist_trigger+0x14a/0x260

 finish_task_switch+0x71/0x230
 __schedule+0x256/0x890
 recalc_sigpending+0x1b/0x50
 xen_sched_clock+0x15/0x20
 __rb_reserve_next+0x12d/0x140
 ring_buffer_lock_reserve+0x123/0x3d0
 event_triggers_call+0x87/0xb0
 trace_event_buffer_commit+0x1c4/0x210
 xen_clocksource_get_cycles+0x15/0x20
 ktime_get_ts64+0x51/0xf0
 SyS_ppoll+0x160/0x1a0
 SyS_ppoll+0x160/0x1a0
 do_syscall_64+0x73/0x130
 entry_SYSCALL_64_after_hwframe+0x41/0xa6
...
RIP: xennet_poll+0xae/0xd20 RSP: ffffb4f041933900
CR2: 0000000000000008
---[ end trace f8601785b354351c ]---

xen frontend should remove the NAPIs for the old srings before live
migration as the bond srings are destroyed

There is a tiny window between the srings are set to NULL and
the NAPIs are disabled, It is safe as the NAPI threads are still
frozen at that time",Linux,Linux,"4ec2411980d0fd2995e8dea8a06fe57aa47523cb, 4ec2411980d0fd2995e8dea8a06fe57aa47523cb, 4ec2411980d0fd2995e8dea8a06fe57aa47523cb, 4ec2411980d0fd2995e8dea8a06fe57aa47523cb, 4ec2411980d0fd2995e8dea8a06fe57aa47523cb, 4ec2411980d0fd2995e8dea8a06fe57aa47523cb"
980,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49002,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

iommu/vt-d: Fix PCI device refcount leak in dmar_dev_scope_init()

for_each_pci_dev() is implemented by pci_get_device(). The comment of
pci_get_device() says that it will increase the reference count for the
returned pci_dev and also decrease the reference count for the input
pci_dev @from if it is not NULL.

If we break for_each_pci_dev() loop with pdev not NULL, we need to call
pci_dev_put() to decrease the reference count. Add the missing
pci_dev_put() for the error path to avoid reference count leak.",Linux,Linux,"2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e, 2e45528930388658603ea24d49cf52867b928d3e"
983,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46802,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: added NULL check at start of dc_validate_stream

[Why]
prevent invalid memory access

[How]
check if dc and stream are NULL",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
990,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48988,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

memcg: fix possible use-after-free in memcg_write_event_control()

memcg_write_event_control() accesses the dentry->d_name of the specified
control fd to route the write call.  As a cgroup interface file can't be
renamed, it's safe to access d_name as long as the specified file is a
regular cgroup file.  Also, as these cgroup interface files can't be
removed before the directory, it's safe to access the parent too.

Prior to 347c4a874710 (""memcg: remove cgroup_event->cft""), there was a
call to __file_cft() which verified that the specified file is a regular
cgroupfs file before further accesses.  The cftype pointer returned from
__file_cft() was no longer necessary and the commit inadvertently dropped
the file type check with it allowing any file to slip through.  With the
invarients broken, the d_name and parent accesses can now race against
renames and removals of arbitrary files and cause use-after-free's.

Fix the bug by resurrecting the file type check in __file_cft().  Now that
cgroupfs is implemented through kernfs, checking the file operations needs
to go through a layer of indirection.  Instead, let's check the superblock
and dentry type.",Linux,Linux,"347c4a8747104a945ecced358944e42879176ca5, 347c4a8747104a945ecced358944e42879176ca5, 347c4a8747104a945ecced358944e42879176ca5, 347c4a8747104a945ecced358944e42879176ca5, 347c4a8747104a945ecced358944e42879176ca5, 347c4a8747104a945ecced358944e42879176ca5, 347c4a8747104a945ecced358944e42879176ca5"
984,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-26801,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: Avoid potential use-after-free in hci_error_reset

While handling the HCI_EV_HARDWARE_ERROR event, if the underlying
BT controller is not responding, the GPIO reset mechanism would
free the hci_dev and lead to a use-after-free in hci_error_reset.

Here's the call trace observed on a ChromeOS device with Intel AX201:
   queue_work_on+0x3e/0x6c
   __hci_cmd_sync_sk+0x2ee/0x4c0 [bluetooth <HASH:3b4a6>]
   ? init_wait_entry+0x31/0x31
   __hci_cmd_sync+0x16/0x20 [bluetooth <HASH:3b4a 6>]
   hci_error_reset+0x4f/0xa4 [bluetooth <HASH:3b4a 6>]
   process_one_work+0x1d8/0x33f
   worker_thread+0x21b/0x373
   kthread+0x13a/0x152
   ? pr_cont_work+0x54/0x54
   ? kthread_blkcg+0x31/0x31
    ret_from_fork+0x1f/0x30

This patch holds the reference count on the hci_dev while processing
a HCI_EV_HARDWARE_ERROR event to avoid potential crash.",Linux,Linux,"c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c, c7741d16a57cbf97eebe53f27e8216b1ff20e20c"
985,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-27043,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: edia: dvbdev: fix a use-after-free

In dvb_register_device, *pdvbdev is set equal to dvbdev, which is freed
in several error-handling paths. However, *pdvbdev is not set to NULL
after dvbdev's deallocation, causing use-after-frees in many places,
for example, in the following call chain:

budget_register
  |-> dvb_dmxdev_init
        |-> dvb_register_device
  |-> dvb_dmxdev_release
        |-> dvb_unregister_device
              |-> dvb_remove_device
                    |-> dvb_device_put
                          |-> kref_put

When calling dvb_unregister_device, dmxdev->dvbdev (i.e. *pdvbdev in
dvb_register_device) could point to memory that had been freed in
dvb_register_device. Thereafter, this pointer is transferred to
kref_put and triggering a use-after-free.",Linux,Linux,"b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e, b61901024776b25ce7b8edc31bb1757c7382a88e"
986,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53063,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: dvbdev: prevent the risk of out of memory access

The dvbdev contains a static variable used to store dvb minors.

The behavior of it depends if CONFIG_DVB_DYNAMIC_MINORS is set
or not. When not set, dvb_register_device() won't check for
boundaries, as it will rely that a previous call to
dvb_register_adapter() would already be enforcing it.

On a similar way, dvb_device_open() uses the assumption
that the register functions already did the needed checks.

This can be fragile if some device ends using different
calls. This also generate warnings on static check analysers
like Coverity.

So, add explicit guards to prevent potential risk of OOM issues.",Linux,Linux,"5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba, 5dd3f3071070f5a306bdf8d474c80062f5691cba"
987,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46777,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

udf: Avoid excessive partition lengths

Avoid mounting filesystems where the partition would overflow the
32-bits used for block number. Also refuse to mount filesystems where
the partition length is so large we cannot safely index bits in a
block bitmap.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
988,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48789,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-tcp: fix possible use-after-free in transport error_recovery work

While nvme_tcp_submit_async_event_work is checking the ctrl and queue
state before preparing the AER command and scheduling io_work, in order
to fully prevent a race where this check is not reliable the error
recovery work must flush async_event_work before continuing to destroy
the admin queue after setting the ctrl state to RESETTING such that
there is no race .submit_async_event and the error recovery handler
itself changing the ctrl state.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
989,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-35937,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: check A-MSDU format more carefully

If it looks like there's another subframe in the A-MSDU
but the header isn't fully there, we can end up reading
data out of bounds, only to discard later. Make this a
bit more careful and check if the subframe header can
even be present.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1008,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50006,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix i_data_sem unlock order in ext4_ind_migrate()

Fuzzing reports a possible deadlock in jbd2_log_wait_commit.

This issue is triggered when an EXT4_IOC_MIGRATE ioctl is set to require
synchronous updates because the file descriptor is opened with O_SYNC.
This can lead to the jbd2_journal_stop() function calling
jbd2_might_wait_for_commit(), potentially causing a deadlock if the
EXT4_IOC_MIGRATE call races with a write(2) system call.

This problem only arises when CONFIG_PROVE_LOCKING is enabled. In this
case, the jbd2_might_wait_for_commit macro locks jbd2_handle in the
jbd2_journal_stop function while i_data_sem is locked. This triggers
lockdep because the jbd2_journal_start function might also lock the same
jbd2_handle simultaneously.

Found by Linux Verification Center (linuxtesting.org) with syzkaller.

Rule: add",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1010,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-44958,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

sched/smt: Fix unbalance sched_smt_present dec/inc

I got the following warn report while doing stress test:

jump label: negative count!
WARNING: CPU: 3 PID: 38 at kernel/jump_label.c:263 static_key_slow_try_dec+0x9d/0xb0
Call Trace:
 <TASK>
 __static_key_slow_dec_cpuslocked+0x16/0x70
 sched_cpu_deactivate+0x26e/0x2a0
 cpuhp_invoke_callback+0x3ad/0x10d0
 cpuhp_thread_fun+0x3f5/0x680
 smpboot_thread_fn+0x56d/0x8d0
 kthread+0x309/0x400
 ret_from_fork+0x41/0x70
 ret_from_fork_asm+0x1b/0x30
 </TASK>

Because when cpuset_cpu_inactive() fails in sched_cpu_deactivate(),
the cpu offline failed, but sched_smt_present is decremented before
calling sched_cpu_deactivate(), it leads to unbalanced dec/inc, so
fix it by incrementing sched_smt_present in the error path.",Linux,Linux,"c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e"
1044,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47749,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/cxgb4: Added NULL check for lookup_atid

The lookup_atid() function can return NULL if the ATID is
invalid or does not exist in the identifier table, which
could lead to dereferencing a null pointer without a
check in the `act_establish()` and `act_open_rpl()` functions.
Add a NULL check to prevent null pointer dereferencing.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57"
1036,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50033,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

slip: make slhc_remember() more robust against malicious packets

syzbot found that slhc_remember() was missing checks against
malicious packets [1].

slhc_remember() only checked the size of the packet was at least 20,
which is not good enough.

We need to make sure the packet includes the IPv4 and TCP header
that are supposed to be carried.

Add iph and th pointers to make the code more readable.

[1]

BUG: KMSAN: uninit-value in slhc_remember+0x2e8/0x7b0 drivers/net/slip/slhc.c:666
  slhc_remember+0x2e8/0x7b0 drivers/net/slip/slhc.c:666
  ppp_receive_nonmp_frame+0xe45/0x35e0 drivers/net/ppp/ppp_generic.c:2455
  ppp_receive_frame drivers/net/ppp/ppp_generic.c:2372 [inline]
  ppp_do_recv+0x65f/0x40d0 drivers/net/ppp/ppp_generic.c:2212
  ppp_input+0x7dc/0xe60 drivers/net/ppp/ppp_generic.c:2327
  pppoe_rcv_core+0x1d3/0x720 drivers/net/ppp/pppoe.c:379
  sk_backlog_rcv+0x13b/0x420 include/net/sock.h:1113
  __release_sock+0x1da/0x330 net/core/sock.c:3072
  release_sock+0x6b/0x250 net/core/sock.c:3626
  pppoe_sendmsg+0x2b8/0xb90 drivers/net/ppp/pppoe.c:903
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
  slab_post_alloc_hook mm/slub.c:4091 [inline]
  slab_alloc_node mm/slub.c:4134 [inline]
  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4186
  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:587
  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:678
  alloc_skb include/linux/skbuff.h:1322 [inline]
  sock_wmalloc+0xfe/0x1a0 net/core/sock.c:2732
  pppoe_sendmsg+0x3a7/0xb90 drivers/net/ppp/pppoe.c:867
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

CPU: 0 UID: 0 PID: 5460 Comm: syz.2.33 Not tainted 6.12.0-rc2-syzkaller-00006-g87d6aab2389e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024",Linux,Linux,"b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff"
1030,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath9k_htc: Use __skb_set_length() for resetting urb before resubmit

Syzbot points out that skb_trim() has a sanity check on the existing length of
the skb, which can be uninitialised in some error paths. The intent here is
clearly just to reset the length to zero before resubmitting, so switch to
calling __skb_set_length(skb, 0) directly. In addition, __skb_set_length()
already contains a call to skb_reset_tail_pointer(), so remove the redundant
call.

The syzbot report came from ath9k_hif_usb_reg_in_cb(), but there's a similar
usage of skb_trim() in ath9k_hif_usb_rx_cb(), change both while we're at it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1031,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53088,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: fix race condition by adding filter's intermediate sync state

Fix a race condition in the i40e driver that leads to MAC/VLAN filters
becoming corrupted and leaking. Address the issue that occurs under
heavy load when multiple threads are concurrently modifying MAC/VLAN
filters by setting mac and port VLAN.

1. Thread T0 allocates a filter in i40e_add_filter() within
        i40e_ndo_set_vf_port_vlan().
2. Thread T1 concurrently frees the filter in __i40e_del_filter() within
        i40e_ndo_set_vf_mac().
3. Subsequently, i40e_service_task() calls i40e_sync_vsi_filters(), which
        refers to the already freed filter memory, causing corruption.

Reproduction steps:
1. Spawn multiple VFs.
2. Apply a concurrent heavy load by running parallel operations to change
        MAC addresses on the VFs and change port VLANs on the host.
3. Observe errors in dmesg:
""Error I40E_AQ_RC_ENOSPC adding RX filters on VF XX,
	please set promiscuous on manually for VF XX"".

Exact code for stable reproduction Intel can't open-source now.

The fix involves implementing a new intermediate filter state,
I40E_FILTER_NEW_SYNC, for the time when a filter is on a tmp_add_list.
These filters cannot be deleted from the hash list directly but
must be removed using the full process.",Linux,Linux,"278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621, 278e7d0b9d6864a9749b9473a273892aa1528621"
1032,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47737,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: call cache_put if xdr_reserve_space returns NULL

If not enough buffer space available, but idmap_lookup has triggered
lookup_fn which calls cache_get and returns successfully. Then we
missed to call cache_put here which pairs with cache_get.

Reviwed-by: Jeff Layton <jlayton@kernel.org>",Linux,Linux,"ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd"
1033,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50290,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

media: cx24116: prevent overflows on SNR calculus

as reported by Coverity, if reading SNR registers fail, a negative
number will be returned, causing an underflow when reading SNR
registers.

Prevent that.",Linux,Linux,"8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf, 8953db793d5bdeea5ac92c9e97f57d3ff8a7dccf"
1034,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48985,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: mana: Fix race on per-CQ variable napi work_done

After calling napi_complete_done(), the NAPIF_STATE_SCHED bit may be
cleared, and another CPU can start napi thread and access per-CQ variable,
cq->work_done. If the other thread (for example, from busy_poll) sets
it to a value >= budget, this thread will continue to run when it should
stop, and cause memory corruption and panic.

To fix this issue, save the per-CQ work_done variable in a local variable
before napi_complete_done(), so it won't be corrupted by a possible
concurrent thread after napi_complete_done().

Also, add a flag bit to advertise to the NIC firmware: the NAPI work_done
variable race is fixed, so the driver is able to reliably support features
like busy_poll.",Linux,Linux,"e1b5683ff62e7b328317aec08869495992053e9d, e1b5683ff62e7b328317aec08869495992053e9d, e1b5683ff62e7b328317aec08869495992053e9d"
1035,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50265,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: remove entry once instead of null-ptr-dereference in ocfs2_xa_remove()

Syzkaller is able to provoke null-ptr-dereference in ocfs2_xa_remove():

[   57.319872] (a.out,1161,7):ocfs2_xa_remove:2028 ERROR: status = -12
[   57.320420] (a.out,1161,7):ocfs2_xa_cleanup_value_truncate:1999 ERROR: Partial truncate while removing xattr overlay.upper.  Leaking 1 clusters and removing the entry
[   57.321727] BUG: kernel NULL pointer dereference, address: 0000000000000004
[...]
[   57.325727] RIP: 0010:ocfs2_xa_block_wipe_namevalue+0x2a/0xc0
[...]
[   57.331328] Call Trace:
[   57.331477]  <TASK>
[...]
[   57.333511]  ? do_user_addr_fault+0x3e5/0x740
[   57.333778]  ? exc_page_fault+0x70/0x170
[   57.334016]  ? asm_exc_page_fault+0x2b/0x30
[   57.334263]  ? __pfx_ocfs2_xa_block_wipe_namevalue+0x10/0x10
[   57.334596]  ? ocfs2_xa_block_wipe_namevalue+0x2a/0xc0
[   57.334913]  ocfs2_xa_remove_entry+0x23/0xc0
[   57.335164]  ocfs2_xa_set+0x704/0xcf0
[   57.335381]  ? _raw_spin_unlock+0x1a/0x40
[   57.335620]  ? ocfs2_inode_cache_unlock+0x16/0x20
[   57.335915]  ? trace_preempt_on+0x1e/0x70
[   57.336153]  ? start_this_handle+0x16c/0x500
[   57.336410]  ? preempt_count_sub+0x50/0x80
[   57.336656]  ? _raw_read_unlock+0x20/0x40
[   57.336906]  ? start_this_handle+0x16c/0x500
[   57.337162]  ocfs2_xattr_block_set+0xa6/0x1e0
[   57.337424]  __ocfs2_xattr_set_handle+0x1fd/0x5d0
[   57.337706]  ? ocfs2_start_trans+0x13d/0x290
[   57.337971]  ocfs2_xattr_set+0xb13/0xfb0
[   57.338207]  ? dput+0x46/0x1c0
[   57.338393]  ocfs2_xattr_trusted_set+0x28/0x30
[   57.338665]  ? ocfs2_xattr_trusted_set+0x28/0x30
[   57.338948]  __vfs_removexattr+0x92/0xc0
[   57.339182]  __vfs_removexattr_locked+0xd5/0x190
[   57.339456]  ? preempt_count_sub+0x50/0x80
[   57.339705]  vfs_removexattr+0x5f/0x100
[...]

Reproducer uses faultinject facility to fail ocfs2_xa_remove() ->
ocfs2_xa_value_truncate() with -ENOMEM.

In this case the comment mentions that we can return 0 if
ocfs2_xa_cleanup_value_truncate() is going to wipe the entry
anyway. But the following 'rc' check is wrong and execution flow do
'ocfs2_xa_remove_entry(loc);' twice:
* 1st: in ocfs2_xa_cleanup_value_truncate();
* 2nd: returning back to ocfs2_xa_remove() instead of going to 'out'.

Fix this by skipping the 2nd removal of the same entry and making
syzkaller repro happy.",Linux,Linux,"399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b, 399ff3a748cf4c8c853e96dd477153202636527b"
1037,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49901,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/msm/adreno: Assign msm_gpu->pdev earlier to avoid nullptrs

There are some cases, such as the one uncovered by Commit 46d4efcccc68
(""drm/msm/a6xx: Avoid a nullptr dereference when speedbin setting fails"")
where

msm_gpu_cleanup() : platform_set_drvdata(gpu->pdev, NULL);

is called on gpu->pdev == NULL, as the GPU device has not been fully
initialized yet.

Turns out that there's more than just the aforementioned path that
causes this to happen (e.g. the case when there's speedbin data in the
catalog, but opp-supported-hw is missing in DT).

Assigning msm_gpu->pdev earlier seems like the least painful solution
to this, therefore do so.

Patchwork: https://patchwork.freedesktop.org/patch/602742/",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1028,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-46809,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check BIOS images before it is used

BIOS images may fail to load and null checks are added before they are
used.

This fixes 6 NULL_RETURNS issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1038,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50273,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: reinitialize delayed ref list after deleting it from the list

At insert_delayed_ref() if we need to update the action of an existing
ref to BTRFS_DROP_DELAYED_REF, we delete the ref from its ref head's
ref_add_list using list_del(), which leaves the ref's add_list member
not reinitialized, as list_del() sets the next and prev members of the
list to LIST_POISON1 and LIST_POISON2, respectively.

If later we end up calling drop_delayed_ref() against the ref, which can
happen during merging or when destroying delayed refs due to a transaction
abort, we can trigger a crash since at drop_delayed_ref() we call
list_empty() against the ref's add_list, which returns false since
the list was not reinitialized after the list_del() and as a consequence
we call list_del() again at drop_delayed_ref(). This results in an
invalid list access since the next and prev members are set to poison
pointers, resulting in a splat if CONFIG_LIST_HARDENED and
CONFIG_DEBUG_LIST are set or invalid poison pointer dereferences
otherwise.

So fix this by deleting from the list with list_del_init() instead.",Linux,Linux,"1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db, 1d57ee941692d0cc928526e21a1557b2ae3e11db"
1039,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49949,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: avoid potential underflow in qdisc_pkt_len_init() with UFO

After commit 7c6d2ecbda83 (""net: be more gentle about silly gso
requests coming from user"") virtio_net_hdr_to_skb() had sanity check
to detect malicious attempts from user space to cook a bad GSO packet.

Then commit cf9acc90c80ec (""net: virtio_net_hdr_to_skb: count
transport header in UFO"") while fixing one issue, allowed user space
to cook a GSO packet with the following characteristic :

IPv4 SKB_GSO_UDP, gso_size=3, skb->len = 28.

When this packet arrives in qdisc_pkt_len_init(), we end up
with hdr_len = 28 (IPv4 header + UDP header), matching skb->len

Then the following sets gso_segs to 0 :

gso_segs = DIV_ROUND_UP(skb->len - hdr_len,
                        shinfo->gso_size);

Then later we set qdisc_skb_cb(skb)->pkt_len to back to zero :/

qdisc_skb_cb(skb)->pkt_len += (gso_segs - 1) * hdr_len;

This leads to the following crash in fq_codel [1]

qdisc_pkt_len_init() is best effort, we only want an estimation
of the bytes sent on the wire, not crashing the kernel.

This patch is fixing this particular issue, a following one
adds more sanity checks for another potential bug.

[1]
[   70.724101] BUG: kernel NULL pointer dereference, address: 0000000000000000
[   70.724561] #PF: supervisor read access in kernel mode
[   70.724561] #PF: error_code(0x0000) - not-present page
[   70.724561] PGD 10ac61067 P4D 10ac61067 PUD 107ee2067 PMD 0
[   70.724561] Oops: Oops: 0000 [#1] SMP NOPTI
[   70.724561] CPU: 11 UID: 0 PID: 2163 Comm: b358537762 Not tainted 6.11.0-virtme #991
[   70.724561] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
[   70.724561] RIP: 0010:fq_codel_enqueue (net/sched/sch_fq_codel.c:120 net/sched/sch_fq_codel.c:168 net/sched/sch_fq_codel.c:230) sch_fq_codel
[ 70.724561] Code: 24 08 49 c1 e1 06 44 89 7c 24 18 45 31 ed 45 31 c0 31 ff 89 44 24 14 4c 03 8b 90 01 00 00 eb 04 39 ca 73 37 4d 8b 39 83 c7 01 <49> 8b 17 49 89 11 41 8b 57 28 45 8b 5f 34 49 c7 07 00 00 00 00 49
All code
========
   0:	24 08                	and    $0x8,%al
   2:	49 c1 e1 06          	shl    $0x6,%r9
   6:	44 89 7c 24 18       	mov    %r15d,0x18(%rsp)
   b:	45 31 ed             	xor    %r13d,%r13d
   e:	45 31 c0             	xor    %r8d,%r8d
  11:	31 ff                	xor    %edi,%edi
  13:	89 44 24 14          	mov    %eax,0x14(%rsp)
  17:	4c 03 8b 90 01 00 00 	add    0x190(%rbx),%r9
  1e:	eb 04                	jmp    0x24
  20:	39 ca                	cmp    %ecx,%edx
  22:	73 37                	jae    0x5b
  24:	4d 8b 39             	mov    (%r9),%r15
  27:	83 c7 01             	add    $0x1,%edi
  2a:*	49 8b 17             	mov    (%r15),%rdx		<-- trapping instruction
  2d:	49 89 11             	mov    %rdx,(%r9)
  30:	41 8b 57 28          	mov    0x28(%r15),%edx
  34:	45 8b 5f 34          	mov    0x34(%r15),%r11d
  38:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
  3f:	49                   	rex.WB

Code starting with the faulting instruction
===========================================
   0:	49 8b 17             	mov    (%r15),%rdx
   3:	49 89 11             	mov    %rdx,(%r9)
   6:	41 8b 57 28          	mov    0x28(%r15),%edx
   a:	45 8b 5f 34          	mov    0x34(%r15),%r11d
   e:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
  15:	49                   	rex.WB
[   70.724561] RSP: 0018:ffff95ae85e6fb90 EFLAGS: 00000202
[   70.724561] RAX: 0000000002000000 RBX: ffff95ae841de000 RCX: 0000000000000000
[   70.724561] RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001
[   70.724561] RBP: ffff95ae85e6fbf8 R08: 0000000000000000 R09: ffff95b710a30000
[   70.724561] R10: 0000000000000000 R11: bdf289445ce31881 R12: ffff95ae85e6fc58
[   70.724561] R13: 0000000000000000 R14: 0000000000000040 R15: 0000000000000000
[   70.724561] FS:  000000002c5c1380(0000) GS:ffff95bd7fcc0000(0000) knlGS:0000000000000000
[   70.724561] CS:  0010 DS: 0000 ES: 0000 C
---truncated---",Linux,Linux,"960b360ca7463921c1a6b72e7066a706d6406223, fb2dbc124a7f800cd0e4f901a1bbb769a017104c, 8e6bae950da9dc2d2c6c18b1c6b206dc00dc8772, 0f810d06b507aa40fef8d1ac0a88e6d0590dbfc3, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff"
1040,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-49026,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

e100: Fix possible use after free in e100_xmit_prepare

In e100_xmit_prepare(), if we can't map the skb, then return -ENOMEM, so
e100_xmit_frame() will return NETDEV_TX_BUSY and the upper layer will
resend the skb. But the skb is already freed, which will cause UAF bug
when the upper layer resends the skb.

Remove the harmful free.",Linux,Linux,"5e5d49422dfb035ca9e280cd61d434095c151272, 5e5d49422dfb035ca9e280cd61d434095c151272, 5e5d49422dfb035ca9e280cd61d434095c151272, 5e5d49422dfb035ca9e280cd61d434095c151272"
1041,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50099,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

arm64: probes: Remove broken LDR (literal) uprobe support

The simulate_ldr_literal() and simulate_ldrsw_literal() functions are
unsafe to use for uprobes. Both functions were originally written for
use with kprobes, and access memory with plain C accesses. When uprobes
was added, these were reused unmodified even though they cannot safely
access user memory.

There are three key problems:

1) The plain C accesses do not have corresponding extable entries, and
   thus if they encounter a fault the kernel will treat these as
   unintentional accesses to user memory, resulting in a BUG() which
   will kill the kernel thread, and likely lead to further issues (e.g.
   lockup or panic()).

2) The plain C accesses are subject to HW PAN and SW PAN, and so when
   either is in use, any attempt to simulate an access to user memory
   will fault. Thus neither simulate_ldr_literal() nor
   simulate_ldrsw_literal() can do anything useful when simulating a
   user instruction on any system with HW PAN or SW PAN.

3) The plain C accesses are privileged, as they run in kernel context,
   and in practice can access a small range of kernel virtual addresses.
   The instructions they simulate have a range of +/-1MiB, and since the
   simulated instructions must itself be a user instructions in the
   TTBR0 address range, these can address the final 1MiB of the TTBR1
   acddress range by wrapping downwards from an address in the first
   1MiB of the TTBR0 address range.

   In contemporary kernels the last 8MiB of TTBR1 address range is
   reserved, and accesses to this will always fault, meaning this is no
   worse than (1).

   Historically, it was theoretically possible for the linear map or
   vmemmap to spill into the final 8MiB of the TTBR1 address range, but
   in practice this is extremely unlikely to occur as this would
   require either:

   * Having enough physical memory to fill the entire linear map all the
     way to the final 1MiB of the TTBR1 address range.

   * Getting unlucky with KASLR randomization of the linear map such
     that the populated region happens to overlap with the last 1MiB of
     the TTBR address range.

   ... and in either case if we were to spill into the final page there
   would be larger problems as the final page would alias with error
   pointers.

Practically speaking, (1) and (2) are the big issues. Given there have
been no reports of problems since the broken code was introduced, it
appears that no-one is relying on probing these instructions with
uprobes.

Avoid these issues by not allowing uprobes on LDR (literal) and LDRSW
(literal), limiting the use of simulate_ldr_literal() and
simulate_ldrsw_literal() to kprobes. Attempts to place uprobes on LDR
(literal) and LDRSW (literal) will be rejected as
arm_probe_decode_insn() will return INSN_REJECTED. In future we can
consider introducing working uprobes support for these instructions, but
this will require more significant work.",Linux,Linux,"9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09, 9842ceae9fa8deae141533d52a6ead7666962c09"
1042,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49920,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check null pointers before multiple uses

[WHAT & HOW]
Poniters, such as stream_enc and dc->bw_vbios, are null checked previously
in the same function, so Coverity warns ""implies that stream_enc and
dc->bw_vbios might be null"". They are used multiple times in the
subsequent code and need to be checked.

This fixes 10 FORWARD_NULL issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1043,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48960,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: hisilicon: Fix potential use-after-free in hix5hd2_rx()

The skb is delivered to napi_gro_receive() which may free it, after
calling this, dereferencing skb may trigger use-after-free.",Linux,Linux,"57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab, 57c5bc9ad7d799e9507ba6e993398d2c55f03fab"
1029,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48956,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: avoid use-after-free in ip6_fragment()

Blamed commit claimed rcu_read_lock() was held by ip6_fragment() callers.

It seems to not be always true, at least for UDP stack.

syzbot reported:

BUG: KASAN: use-after-free in ip6_dst_idev include/net/ip6_fib.h:245 [inline]
BUG: KASAN: use-after-free in ip6_fragment+0x2724/0x2770 net/ipv6/ip6_output.c:951
Read of size 8 at addr ffff88801d403e80 by task syz-executor.3/7618

CPU: 1 PID: 7618 Comm: syz-executor.3 Not tainted 6.1.0-rc6-syzkaller-00012-g4312098baf37 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 10/26/2022
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd1/0x138 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:284 [inline]
 print_report+0x15e/0x45d mm/kasan/report.c:395
 kasan_report+0xbf/0x1f0 mm/kasan/report.c:495
 ip6_dst_idev include/net/ip6_fib.h:245 [inline]
 ip6_fragment+0x2724/0x2770 net/ipv6/ip6_output.c:951
 __ip6_finish_output net/ipv6/ip6_output.c:193 [inline]
 ip6_finish_output+0x9a3/0x1170 net/ipv6/ip6_output.c:206
 NF_HOOK_COND include/linux/netfilter.h:291 [inline]
 ip6_output+0x1f1/0x540 net/ipv6/ip6_output.c:227
 dst_output include/net/dst.h:445 [inline]
 ip6_local_out+0xb3/0x1a0 net/ipv6/output_core.c:161
 ip6_send_skb+0xbb/0x340 net/ipv6/ip6_output.c:1966
 udp_v6_send_skb+0x82a/0x18a0 net/ipv6/udp.c:1286
 udp_v6_push_pending_frames+0x140/0x200 net/ipv6/udp.c:1313
 udpv6_sendmsg+0x18da/0x2c80 net/ipv6/udp.c:1606
 inet6_sendmsg+0x9d/0xe0 net/ipv6/af_inet6.c:665
 sock_sendmsg_nosec net/socket.c:714 [inline]
 sock_sendmsg+0xd3/0x120 net/socket.c:734
 sock_write_iter+0x295/0x3d0 net/socket.c:1108
 call_write_iter include/linux/fs.h:2191 [inline]
 new_sync_write fs/read_write.c:491 [inline]
 vfs_write+0x9ed/0xdd0 fs/read_write.c:584
 ksys_write+0x1ec/0x250 fs/read_write.c:637
 do_syscall_x64 arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x39/0xb0 arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x63/0xcd
RIP: 0033:0x7fde3588c0d9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 f1 19 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fde365b6168 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 00007fde359ac050 RCX: 00007fde3588c0d9
RDX: 000000000000ffdc RSI: 00000000200000c0 RDI: 000000000000000a
RBP: 00007fde358e7ae9 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007fde35acfb1f R14: 00007fde365b6300 R15: 0000000000022000
 </TASK>

Allocated by task 7618:
 kasan_save_stack+0x22/0x40 mm/kasan/common.c:45
 kasan_set_track+0x25/0x30 mm/kasan/common.c:52
 __kasan_slab_alloc+0x82/0x90 mm/kasan/common.c:325
 kasan_slab_alloc include/linux/kasan.h:201 [inline]
 slab_post_alloc_hook mm/slab.h:737 [inline]
 slab_alloc_node mm/slub.c:3398 [inline]
 slab_alloc mm/slub.c:3406 [inline]
 __kmem_cache_alloc_lru mm/slub.c:3413 [inline]
 kmem_cache_alloc+0x2b4/0x3d0 mm/slub.c:3422
 dst_alloc+0x14a/0x1f0 net/core/dst.c:92
 ip6_dst_alloc+0x32/0xa0 net/ipv6/route.c:344
 ip6_rt_pcpu_alloc net/ipv6/route.c:1369 [inline]
 rt6_make_pcpu_route net/ipv6/route.c:1417 [inline]
 ip6_pol_route+0x901/0x1190 net/ipv6/route.c:2254
 pol_lookup_func include/net/ip6_fib.h:582 [inline]
 fib6_rule_lookup+0x52e/0x6f0 net/ipv6/fib6_rules.c:121
 ip6_route_output_flags_noref+0x2e6/0x380 net/ipv6/route.c:2625
 ip6_route_output_flags+0x76/0x320 net/ipv6/route.c:2638
 ip6_route_output include/net/ip6_route.h:98 [inline]
 ip6_dst_lookup_tail+0x5ab/0x1620 net/ipv6/ip6_output.c:1092
 ip6_dst_lookup_flow+0x90/0x1d0 net/ipv6/ip6_output.c:1222
 ip6_sk_dst_lookup_flow+0x553/0x980 net/ipv6/ip6_output.c:1260
 udpv6_sendmsg+0x151d/0x2c80 net/ipv6/udp.c:1554
 inet6_sendmsg+0x9d/0xe0 net/ipv6/af_inet6.c:665
 sock_sendmsg_nosec n
---truncated---",Linux,Linux,"1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581, 1758fd4688eb92c796e75bdb1d256dc558ef9581"
1027,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48991,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

mm/khugepaged: invoke MMU notifiers in shmem/file collapse paths

Any codepath that zaps page table entries must invoke MMU notifiers to
ensure that secondary MMUs (like KVM) don't keep accessing pages which
aren't mapped anymore.  Secondary MMUs don't hold their own references to
pages that are mirrored over, so failing to notify them can lead to page
use-after-free.

I'm marking this as addressing an issue introduced in commit f3f0e1d2150b
(""khugepaged: add support of collapse for tmpfs/shmem pages""), but most of
the security impact of this only came in commit 27e1f8273113 (""khugepaged:
enable collapse pmd for pte-mapped THP""), which actually omitted flushes
for the removal of present PTEs, not just for the removal of empty page
tables.",Linux,Linux,"f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30, f3f0e1d2150b2b99da2cbdfaad000089efe9bf30"
1011,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50007,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ALSA: asihpi: Fix potential OOB array access

ASIHPI driver stores some values in the static array upon a response
from the driver, and its index depends on the firmware.  We shouldn't
trust it blindly.

This patch adds a sanity check of the array index to fit in the array
size.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1018,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50264,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

vsock/virtio: Initialization of the dangling pointer occurring in vsk->trans

During loopback communication, a dangling pointer can be created in
vsk->trans, potentially leading to a Use-After-Free condition.  This
issue is resolved by initializing vsk->trans to NULL.",Linux,Linux,"06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b"
1012,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-42131,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

mm: avoid overflows in dirty throttling logic

The dirty throttling logic is interspersed with assumptions that dirty
limits in PAGE_SIZE units fit into 32-bit (so that various multiplications
fit into 64-bits).  If limits end up being larger, we will hit overflows,
possible divisions by 0 etc.  Fix these problems by never allowing so
large dirty limits as they have dubious practical value anyway.  For
dirty_bytes / dirty_background_bytes interfaces we can just refuse to set
so large limits.  For dirty_ratio / dirty_background_ratio it isn't so
simple as the dirty limit is computed from the amount of available memory
which can change due to memory hotplug etc.  So when converting dirty
limits from ratios to numbers of pages, we just don't allow the result to
exceed UINT_MAX.

This is root-only triggerable problem which occurs when the operator
sets dirty limits to >16 TB.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1013,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50115,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: nSVM: Ignore nCR3[4:0] when loading PDPTEs from memory

Ignore nCR3[4:0] when loading PDPTEs from memory for nested SVM, as bits
4:0 of CR3 are ignored when PAE paging is used, and thus VMRUN doesn't
enforce 32-byte alignment of nCR3.

In the absolute worst case scenario, failure to ignore bits 4:0 can result
in an out-of-bounds read, e.g. if the target page is at the end of a
memslot, and the VMM isn't using guard pages.

Per the APM:

  The CR3 register points to the base address of the page-directory-pointer
  table. The page-directory-pointer table is aligned on a 32-byte boundary,
  with the low 5 address bits 4:0 assumed to be 0.

And the SDM's much more explicit:

  4:0    Ignored

Note, KVM gets this right when loading PDPTRs, it's only the nSVM flow
that is broken.",Linux,Linux,"e4e517b4be019787ada4cbbce2f04570c21b0cbd, e4e517b4be019787ada4cbbce2f04570c21b0cbd, e4e517b4be019787ada4cbbce2f04570c21b0cbd, e4e517b4be019787ada4cbbce2f04570c21b0cbd, e4e517b4be019787ada4cbbce2f04570c21b0cbd, e4e517b4be019787ada4cbbce2f04570c21b0cbd"
1014,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49868,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix a NULL pointer dereference when failed to start a new trasacntion

[BUG]
Syzbot reported a NULL pointer dereference with the following crash:

  FAULT_INJECTION: forcing a failure.
   start_transaction+0x830/0x1670 fs/btrfs/transaction.c:676
   prepare_to_relocate+0x31f/0x4c0 fs/btrfs/relocation.c:3642
   relocate_block_group+0x169/0xd20 fs/btrfs/relocation.c:3678
  ...
  BTRFS info (device loop0): balance: ended with status: -12
  Oops: general protection fault, probably for non-canonical address 0xdffffc00000000cc: 0000 [#1] PREEMPT SMP KASAN NOPTI
  KASAN: null-ptr-deref in range [0x0000000000000660-0x0000000000000667]
  RIP: 0010:btrfs_update_reloc_root+0x362/0xa80 fs/btrfs/relocation.c:926
  Call Trace:
   <TASK>
   commit_fs_roots+0x2ee/0x720 fs/btrfs/transaction.c:1496
   btrfs_commit_transaction+0xfaf/0x3740 fs/btrfs/transaction.c:2430
   del_balance_item fs/btrfs/volumes.c:3678 [inline]
   reset_balance_state+0x25e/0x3c0 fs/btrfs/volumes.c:3742
   btrfs_balance+0xead/0x10c0 fs/btrfs/volumes.c:4574
   btrfs_ioctl_balance+0x493/0x7c0 fs/btrfs/ioctl.c:3673
   vfs_ioctl fs/ioctl.c:51 [inline]
   __do_sys_ioctl fs/ioctl.c:907 [inline]
   __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893
   do_syscall_x64 arch/x86/entry/common.c:52 [inline]
   do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
   entry_SYSCALL_64_after_hwframe+0x77/0x7f

[CAUSE]
The allocation failure happens at the start_transaction() inside
prepare_to_relocate(), and during the error handling we call
unset_reloc_control(), which makes fs_info->balance_ctl to be NULL.

Then we continue the error path cleanup in btrfs_balance() by calling
reset_balance_state() which will call del_balance_item() to fully delete
the balance item in the root tree.

However during the small window between set_reloc_contrl() and
unset_reloc_control(), we can have a subvolume tree update and created a
reloc_root for that subvolume.

Then we go into the final btrfs_commit_transaction() of
del_balance_item(), and into btrfs_update_reloc_root() inside
commit_fs_roots().

That function checks if fs_info->reloc_ctl is in the merge_reloc_tree
stage, but since fs_info->reloc_ctl is NULL, it results a NULL pointer
dereference.

[FIX]
Just add extra check on fs_info->reloc_ctl inside
btrfs_update_reloc_root(), before checking
fs_info->reloc_ctl->merge_reloc_tree.

That DEAD_RELOC_TREE handling is to prevent further modification to the
reloc tree during merge stage, but since there is no reloc_ctl at all,
we do not need to bother that.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1015,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50237,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: do not pass a stopped vif to the driver in .get_txpower

Avoid potentially crashing in the driver because of uninitialized private data",Linux,Linux,"5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93, 5b3dc42b1b0db0264bbbe4ae44c15ab97bfd1e93"
1016,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49929,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: avoid NULL pointer dereference

iwl_mvm_tx_skb_sta() and iwl_mvm_tx_mpdu() verify that the mvmvsta
pointer is not NULL.
It retrieves this pointer using iwl_mvm_sta_from_mac80211, which is
dereferencing the ieee80211_sta pointer.
If sta is NULL, iwl_mvm_sta_from_mac80211 will dereference a NULL
pointer.
Fix this by checking the sta pointer before retrieving the mvmsta
from it. If sta is not NULL, then mvmsta isn't either.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1017,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-44995,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: hns3: fix a deadlock problem when config TC during resetting

When config TC during the reset process, may cause a deadlock, the flow is
as below:
                             pf reset start
                                 │
                                 ▼
                              ......
setup tc                         │
    │                            ▼
    ▼                      DOWN: napi_disable()
napi_disable()(skip)             │
    │                            │
    ▼                            ▼
  ......                      ......
    │                            │
    ▼                            │
napi_enable()                    │
                                 ▼
                           UINIT: netif_napi_del()
                                 │
                                 ▼
                              ......
                                 │
                                 ▼
                           INIT: netif_napi_add()
                                 │
                                 ▼
                              ......                 global reset start
                                 │                      │
                                 ▼                      ▼
                           UP: napi_enable()(skip)    ......
                                 │                      │
                                 ▼                      ▼
                              ......                 napi_disable()

In reset process, the driver will DOWN the port and then UINIT, in this
case, the setup tc process will UP the port before UINIT, so cause the
problem. Adds a DOWN process in UINIT to fix it.",Linux,Linux,"bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0"
1019,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2021-47162,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: skb_linearize the head skb when reassembling msgs

It's not a good idea to append the frag skb to a skb's frag_list if
the frag_list already has skbs from elsewhere, such as this skb was
created by pskb_copy() where the frag_list was cloned (all the skbs
in it were skb_get'ed) and shared by multiple skbs.

However, the new appended frag skb should have been only seen by the
current skb. Otherwise, it will cause use after free crashes as this
appended frag skb are seen by multiple skbs but it only got skb_get
called once.

The same thing happens with a skb updated by pskb_may_pull() with a
skb_cloned skb. Li Shuang has reported quite a few crashes caused
by this when doing testing over macvlan devices:

  [] kernel BUG at net/core/skbuff.c:1970!
  [] Call Trace:
  []  skb_clone+0x4d/0xb0
  []  macvlan_broadcast+0xd8/0x160 [macvlan]
  []  macvlan_process_broadcast+0x148/0x150 [macvlan]
  []  process_one_work+0x1a7/0x360
  []  worker_thread+0x30/0x390

  [] kernel BUG at mm/usercopy.c:102!
  [] Call Trace:
  []  __check_heap_object+0xd3/0x100
  []  __check_object_size+0xff/0x16b
  []  simple_copy_to_iter+0x1c/0x30
  []  __skb_datagram_iter+0x7d/0x310
  []  __skb_datagram_iter+0x2a5/0x310
  []  skb_copy_datagram_iter+0x3b/0x90
  []  tipc_recvmsg+0x14a/0x3a0 [tipc]
  []  ____sys_recvmsg+0x91/0x150
  []  ___sys_recvmsg+0x7b/0xc0

  [] kernel BUG at mm/slub.c:305!
  [] Call Trace:
  []  <IRQ>
  []  kmem_cache_free+0x3ff/0x400
  []  __netif_receive_skb_core+0x12c/0xc40
  []  ? kmem_cache_alloc+0x12e/0x270
  []  netif_receive_skb_internal+0x3d/0xb0
  []  ? get_rx_page_info+0x8e/0xa0 [be2net]
  []  be_poll+0x6ef/0xd00 [be2net]
  []  ? irq_exit+0x4f/0x100
  []  net_rx_action+0x149/0x3b0

  ...

This patch is to fix it by linearizing the head skb if it has frag_list
set in tipc_buf_append(). Note that we choose to do this before calling
skb_unshare(), as __skb_linearize() will avoid skb_copy(). Also, we can
not just drop the frag_list either as the early time.",Linux,Linux,"45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec, 45c8b7b175ceb2d542e0fe15247377bf3bce29ec"
1026,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-47660,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

fsnotify: clear PARENT_WATCHED flags lazily

In some setups directories can have many (usually negative) dentries.
Hence __fsnotify_update_child_dentry_flags() function can take a
significant amount of time. Since the bulk of this function happens
under inode->i_lock this causes a significant contention on the lock
when we remove the watch from the directory as the
__fsnotify_update_child_dentry_flags() call from fsnotify_recalc_mask()
races with __fsnotify_update_child_dentry_flags() calls from
__fsnotify_parent() happening on children. This can lead upto softlockup
reports reported by users.

Fix the problem by calling fsnotify_update_children_dentry_flags() to
set PARENT_WATCHED flags only when parent starts watching children.

When parent stops watching children, clear false positive PARENT_WATCHED
flags lazily in __fsnotify_parent() for each accessed child.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1020,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48958,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ethernet: aeroflex: fix potential skb leak in greth_init_rings()

The greth_init_rings() function won't free the newly allocated skb when
dma_mapping_error() returns error, so add dev_kfree_skb() to fix it.

Compile tested only.",Linux,Linux,"d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be, d4c41139df6e74c6fff0cbac43e51cab782133be"
1021,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2022-48949,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

igb: Initialize mailbox message for VF reset

When a MAC address is not assigned to the VF, that portion of the message
sent to the VF is not set. The memory, however, is allocated from the
stack meaning that information may be leaked to the VM. Initialize the
message buffer to 0 so that no information is passed to the VM in this
case.",Linux,Linux,"6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774, 6ddbc4cf1f4d5a3a58b4223c80881f299dae3774"
1022,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-53058,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

net: stmmac: TSO: Fix unbalanced DMA map/unmap for non-paged SKB data

In case the non-paged data of a SKB carries protocol header and protocol
payload to be transmitted on a certain platform that the DMA AXI address
width is configured to 40-bit/48-bit, or the size of the non-paged data
is bigger than TSO_MAX_BUFF_SIZE on a certain platform that the DMA AXI
address width is configured to 32-bit, then this SKB requires at least
two DMA transmit descriptors to serve it.

For example, three descriptors are allocated to split one DMA buffer
mapped from one piece of non-paged data:
    dma_desc[N + 0],
    dma_desc[N + 1],
    dma_desc[N + 2].
Then three elements of tx_q->tx_skbuff_dma[] will be allocated to hold
extra information to be reused in stmmac_tx_clean():
    tx_q->tx_skbuff_dma[N + 0],
    tx_q->tx_skbuff_dma[N + 1],
    tx_q->tx_skbuff_dma[N + 2].
Now we focus on tx_q->tx_skbuff_dma[entry].buf, which is the DMA buffer
address returned by DMA mapping call. stmmac_tx_clean() will try to
unmap the DMA buffer _ONLY_IF_ tx_q->tx_skbuff_dma[entry].buf
is a valid buffer address.

The expected behavior that saves DMA buffer address of this non-paged
data to tx_q->tx_skbuff_dma[entry].buf is:
    tx_q->tx_skbuff_dma[N + 0].buf = NULL;
    tx_q->tx_skbuff_dma[N + 1].buf = NULL;
    tx_q->tx_skbuff_dma[N + 2].buf = dma_map_single();
Unfortunately, the current code misbehaves like this:
    tx_q->tx_skbuff_dma[N + 0].buf = dma_map_single();
    tx_q->tx_skbuff_dma[N + 1].buf = NULL;
    tx_q->tx_skbuff_dma[N + 2].buf = NULL;

On the stmmac_tx_clean() side, when dma_desc[N + 0] is closed by the
DMA engine, tx_q->tx_skbuff_dma[N + 0].buf is a valid buffer address
obviously, then the DMA buffer will be unmapped immediately.
There may be a rare case that the DMA engine does not finish the
pending dma_desc[N + 1], dma_desc[N + 2] yet. Now things will go
horribly wrong, DMA is going to access a unmapped/unreferenced memory
region, corrupted data will be transmited or iommu fault will be
triggered :(

In contrast, the for-loop that maps SKB fragments behaves perfectly
as expected, and that is how the driver should do for both non-paged
data and paged frags actually.

This patch corrects DMA map/unmap sequences by fixing the array index
for tx_q->tx_skbuff_dma[entry].buf when assigning DMA buffer address.

Tested and verified on DWXGMAC CORE 3.20a",Linux,Linux,"f748be531d7012c456b97f66091d86b3675c5fef, f748be531d7012c456b97f66091d86b3675c5fef, f748be531d7012c456b97f66091d86b3675c5fef, f748be531d7012c456b97f66091d86b3675c5fef, f748be531d7012c456b97f66091d86b3675c5fef"
1023,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2023-52919,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

nfc: nci: fix possible NULL pointer dereference in send_acknowledge()

Handle memory allocation failure from nci_skb_alloc() (calling
alloc_skb()) to avoid possible NULL pointer dereference.",Linux,Linux,"391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3, 391d8a2da787257aeaf952c974405b53926e3fb3"
1024,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-49921,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check null pointers before used

[WHAT & HOW]
Poniters, such as dc->clk_mgr, are null checked previously in the same
function, so Coverity warns ""implies that ""dc->clk_mgr"" might be null"".
As a result, these pointers need to be checked when used again.

This fixes 10 FORWARD_NULL issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
1025,Multiples vulnérabilités dans le noyau Linux de SUSE ,Avis,2025-01-10,CVE-2024-50035,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0024/,"In the Linux kernel, the following vulnerability has been resolved:

ppp: fix ppp_async_encode() illegal access

syzbot reported an issue in ppp_async_encode() [1]

In this case, pppoe_sendmsg() is called with a zero size.
Then ppp_async_encode() is called with an empty skb.

BUG: KMSAN: uninit-value in ppp_async_encode drivers/net/ppp/ppp_async.c:545 [inline]
 BUG: KMSAN: uninit-value in ppp_async_push+0xb4f/0x2660 drivers/net/ppp/ppp_async.c:675
  ppp_async_encode drivers/net/ppp/ppp_async.c:545 [inline]
  ppp_async_push+0xb4f/0x2660 drivers/net/ppp/ppp_async.c:675
  ppp_async_send+0x130/0x1b0 drivers/net/ppp/ppp_async.c:634
  ppp_channel_bridge_input drivers/net/ppp/ppp_generic.c:2280 [inline]
  ppp_input+0x1f1/0xe60 drivers/net/ppp/ppp_generic.c:2304
  pppoe_rcv_core+0x1d3/0x720 drivers/net/ppp/pppoe.c:379
  sk_backlog_rcv+0x13b/0x420 include/net/sock.h:1113
  __release_sock+0x1da/0x330 net/core/sock.c:3072
  release_sock+0x6b/0x250 net/core/sock.c:3626
  pppoe_sendmsg+0x2b8/0xb90 drivers/net/ppp/pppoe.c:903
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
  slab_post_alloc_hook mm/slub.c:4092 [inline]
  slab_alloc_node mm/slub.c:4135 [inline]
  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4187
  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:587
  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:678
  alloc_skb include/linux/skbuff.h:1322 [inline]
  sock_wmalloc+0xfe/0x1a0 net/core/sock.c:2732
  pppoe_sendmsg+0x3a7/0xb90 drivers/net/ppp/pppoe.c:867
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

CPU: 1 UID: 0 PID: 5411 Comm: syz.1.14 Not tainted 6.12.0-rc1-syzkaller-00165-g360c1f1f24c6 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
827,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46687,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix a use-after-free when hitting errors inside btrfs_submit_chunk()

[BUG]
There is an internal report that KASAN is reporting use-after-free, with
the following backtrace:

  BUG: KASAN: slab-use-after-free in btrfs_check_read_bio+0xa68/0xb70 [btrfs]
  Read of size 4 at addr ffff8881117cec28 by task kworker/u16:2/45
  CPU: 1 UID: 0 PID: 45 Comm: kworker/u16:2 Not tainted 6.11.0-rc2-next-20240805-default+ #76
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014
  Workqueue: btrfs-endio btrfs_end_bio_work [btrfs]
  Call Trace:
   dump_stack_lvl+0x61/0x80
   print_address_description.constprop.0+0x5e/0x2f0
   print_report+0x118/0x216
   kasan_report+0x11d/0x1f0
   btrfs_check_read_bio+0xa68/0xb70 [btrfs]
   process_one_work+0xce0/0x12a0
   worker_thread+0x717/0x1250
   kthread+0x2e3/0x3c0
   ret_from_fork+0x2d/0x70
   ret_from_fork_asm+0x11/0x20

  Allocated by task 20917:
   kasan_save_stack+0x37/0x60
   kasan_save_track+0x10/0x30
   __kasan_slab_alloc+0x7d/0x80
   kmem_cache_alloc_noprof+0x16e/0x3e0
   mempool_alloc_noprof+0x12e/0x310
   bio_alloc_bioset+0x3f0/0x7a0
   btrfs_bio_alloc+0x2e/0x50 [btrfs]
   submit_extent_page+0x4d1/0xdb0 [btrfs]
   btrfs_do_readpage+0x8b4/0x12a0 [btrfs]
   btrfs_readahead+0x29a/0x430 [btrfs]
   read_pages+0x1a7/0xc60
   page_cache_ra_unbounded+0x2ad/0x560
   filemap_get_pages+0x629/0xa20
   filemap_read+0x335/0xbf0
   vfs_read+0x790/0xcb0
   ksys_read+0xfd/0x1d0
   do_syscall_64+0x6d/0x140
   entry_SYSCALL_64_after_hwframe+0x4b/0x53

  Freed by task 20917:
   kasan_save_stack+0x37/0x60
   kasan_save_track+0x10/0x30
   kasan_save_free_info+0x37/0x50
   __kasan_slab_free+0x4b/0x60
   kmem_cache_free+0x214/0x5d0
   bio_free+0xed/0x180
   end_bbio_data_read+0x1cc/0x580 [btrfs]
   btrfs_submit_chunk+0x98d/0x1880 [btrfs]
   btrfs_submit_bio+0x33/0x70 [btrfs]
   submit_one_bio+0xd4/0x130 [btrfs]
   submit_extent_page+0x3ea/0xdb0 [btrfs]
   btrfs_do_readpage+0x8b4/0x12a0 [btrfs]
   btrfs_readahead+0x29a/0x430 [btrfs]
   read_pages+0x1a7/0xc60
   page_cache_ra_unbounded+0x2ad/0x560
   filemap_get_pages+0x629/0xa20
   filemap_read+0x335/0xbf0
   vfs_read+0x790/0xcb0
   ksys_read+0xfd/0x1d0
   do_syscall_64+0x6d/0x140
   entry_SYSCALL_64_after_hwframe+0x4b/0x53

[CAUSE]
Although I cannot reproduce the error, the report itself is good enough
to pin down the cause.

The call trace is the regular endio workqueue context, but the
free-by-task trace is showing that during btrfs_submit_chunk() we
already hit a critical error, and is calling btrfs_bio_end_io() to error
out.  And the original endio function called bio_put() to free the whole
bio.

This means a double freeing thus causing use-after-free, e.g.:

1. Enter btrfs_submit_bio() with a read bio
   The read bio length is 128K, crossing two 64K stripes.

2. The first run of btrfs_submit_chunk()

2.1 Call btrfs_map_block(), which returns 64K
2.2 Call btrfs_split_bio()
    Now there are two bios, one referring to the first 64K, the other
    referring to the second 64K.
2.3 The first half is submitted.

3. The second run of btrfs_submit_chunk()

3.1 Call btrfs_map_block(), which by somehow failed
    Now we call btrfs_bio_end_io() to handle the error

3.2 btrfs_bio_end_io() calls the original endio function
    Which is end_bbio_data_read(), and it calls bio_put() for the
    original bio.

    Now the original bio is freed.

4. The submitted first 64K bio finished
   Now we call into btrfs_check_read_bio() and tries to advance the bio
   iter.
   But since the original bio (thus its iter) is already freed, we
   trigger the above use-after free.

   And even if the memory is not poisoned/corrupted, we will later call
   the original endio function, causing a double freeing.

[FIX]
Instead of calling btrfs_bio_end_io(), call btrfs_orig_bbio_end_io(),
which has the extra check on split bios and do the pr
---truncated---",Linux,Linux,"852eee62d31abd695cd43e1b875d664ed292a8ca, 852eee62d31abd695cd43e1b875d664ed292a8ca, 852eee62d31abd695cd43e1b875d664ed292a8ca"
862,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46865,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fou: fix initialization of grc

The grc must be initialize first. There can be a condition where if
fou is NULL, goto out will be executed and grc would be used
uninitialized.",Linux,Linux,"231c235d2f7a66f018f172e26ffd47c363f244ef, 4494bccb52ffda22ce5a1163a776d970e6229e08, d7567f098f54cb53ee3cee1c82e3d0ed9698b6b3, 1df42be305fe478ded1ee0c1d775f4ece713483b, c46cd6aaca81040deaea3500ba75126963294bd9, 7e4196935069947d8b70b09c1660b67b067e75cb"
825,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50179,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ceph: remove the incorrect Fw reference check when dirtying pages

When doing the direct-io reads it will also try to mark pages dirty,
but for the read path it won't hold the Fw caps and there is case
will it get the Fw reference.",Linux,Linux,"5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29, 5dda377cf0a6bd43f64a3c1efb670d7c668e7b29"
296,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49856,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/sgx: Fix deadlock in SGX NUMA node search

When the current node doesn't have an EPC section configured by firmware
and all other EPC sections are used up, CPU can get stuck inside the
while loop that looks for an available EPC page from remote nodes
indefinitely, leading to a soft lockup. Note how nid_of_current will
never be equal to nid in that while loop because nid_of_current is not
set in sgx_numa_mask.

Also worth mentioning is that it's perfectly fine for the firmware not
to setup an EPC section on a node. While setting up an EPC section on
each node can enhance performance, it is not a requirement for
functionality.

Rework the loop to start and end on *a* node that has SGX memory. This
avoids the deadlock looking for the current SGX-lacking node to show up
in the loop when it never will.",Linux,Linux,"901ddbb9ecf5425183ea0c09d10c2fd7868dce54, 901ddbb9ecf5425183ea0c09d10c2fd7868dce54, 901ddbb9ecf5425183ea0c09d10c2fd7868dce54, 901ddbb9ecf5425183ea0c09d10c2fd7868dce54, 901ddbb9ecf5425183ea0c09d10c2fd7868dce54, 901ddbb9ecf5425183ea0c09d10c2fd7868dce54"
360,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46750,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: Add missing bridge lock to pci_bus_lock()

One of the true positives that the cfg_access_lock lockdep effort
identified is this sequence:

  WARNING: CPU: 14 PID: 1 at drivers/pci/pci.c:4886 pci_bridge_secondary_bus_reset+0x5d/0x70
  RIP: 0010:pci_bridge_secondary_bus_reset+0x5d/0x70
  Call Trace:
   <TASK>
   ? __warn+0x8c/0x190
   ? pci_bridge_secondary_bus_reset+0x5d/0x70
   ? report_bug+0x1f8/0x200
   ? handle_bug+0x3c/0x70
   ? exc_invalid_op+0x18/0x70
   ? asm_exc_invalid_op+0x1a/0x20
   ? pci_bridge_secondary_bus_reset+0x5d/0x70
   pci_reset_bus+0x1d8/0x270
   vmd_probe+0x778/0xa10
   pci_device_probe+0x95/0x120

Where pci_reset_bus() users are triggering unlocked secondary bus resets.
Ironically pci_bus_reset(), several calls down from pci_reset_bus(), uses
pci_bus_lock() before issuing the reset which locks everything *but* the
bridge itself.

For the same motivation as adding:

  bridge = pci_upstream_bridge(dev);
  if (bridge)
    pci_dev_lock(bridge);

to pci_reset_function() for the ""bus"" and ""cxl_bus"" reset cases, add
pci_dev_lock() for @bus->self to pci_bus_lock().

[bhelgaas: squash in recursive locking deadlock fix from Keith Busch:
https://lore.kernel.org/r/20240711193650.701834-1-kbusch@meta.com]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
359,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43841,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: virt_wifi: avoid reporting connection success with wrong SSID

When user issues a connection with a different SSID than the one
virt_wifi has advertised, the __cfg80211_connect_result() will
trigger the warning: WARN_ON(bss_not_found).

The issue is because the connection code in virt_wifi does not
check the SSID from user space (it only checks the BSSID), and
virt_wifi will call cfg80211_connect_result() with WLAN_STATUS_SUCCESS
even if the SSID is different from the one virt_wifi has advertised.
Eventually cfg80211 won't be able to find the cfg80211_bss and generate
the warning.

Fixed it by checking the SSID (from user space) in the connection code.",Linux,Linux,"c7cdba31ed8b87526db978976392802d3f93110c, c7cdba31ed8b87526db978976392802d3f93110c, c7cdba31ed8b87526db978976392802d3f93110c, c7cdba31ed8b87526db978976392802d3f93110c, c7cdba31ed8b87526db978976392802d3f93110c, c7cdba31ed8b87526db978976392802d3f93110c, c7cdba31ed8b87526db978976392802d3f93110c"
358,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46800,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sch/netem: fix use after free in netem_dequeue

If netem_dequeue() enqueues packet to inner qdisc and that qdisc
returns __NET_XMIT_STOLEN. The packet is dropped but
qdisc_tree_reduce_backlog() is not called to update the parent's
q.qlen, leading to the similar use-after-free as Commit
e04991a48dbaf382 (""netem: fix return value if duplicate enqueue
fails"")

Commands to trigger KASAN UaF:

ip link add type dummy
ip link set lo up
ip link set dummy0 up
tc qdisc add dev lo parent root handle 1: drr
tc filter add dev lo parent 1: basic classid 1:1
tc class add dev lo classid 1:1 drr
tc qdisc add dev lo parent 1:1 handle 2: netem
tc qdisc add dev lo parent 2: handle 3: drr
tc filter add dev lo parent 3: basic classid 3:1 action mirred egress
redirect dev dummy0
tc class add dev lo classid 3:1 drr
ping -c1 -W0.01 localhost # Trigger bug
tc class del dev lo classid 1:1
tc class add dev lo classid 1:1 drr
ping -c1 -W0.01 localhost # UaF",Linux,Linux,"50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe, 50612537e9ab29693122fab20fc1eed235054ffe"
357,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47715,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mt76: mt7915: fix oops on non-dbdc mt7986

mt7915_band_config() sets band_idx = 1 on the main phy for mt7986
with MT7975_ONE_ADIE or MT7976_ONE_ADIE.

Commit 0335c034e726 (""wifi: mt76: fix race condition related to
checking tx queue fill status"") introduced a dereference of the
phys array indirectly indexed by band_idx via wcid->phy_idx in
mt76_wcid_cleanup(). This caused the following Oops on affected
mt7986 devices:

 Unable to handle kernel read from unreadable memory at virtual address 0000000000000024
 Mem abort info:
   ESR = 0x0000000096000005
   EC = 0x25: DABT (current EL), IL = 32 bits
   SET = 0, FnV = 0
   EA = 0, S1PTW = 0
   FSC = 0x05: level 1 translation fault
 Data abort info:
   ISV = 0, ISS = 0x00000005
   CM = 0, WnR = 0
 user pgtable: 4k pages, 39-bit VAs, pgdp=0000000042545000
 [0000000000000024] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000
 Internal error: Oops: 0000000096000005 [#1] SMP
 Modules linked in: ... mt7915e mt76_connac_lib mt76 mac80211 cfg80211 ...
 CPU: 2 PID: 1631 Comm: hostapd Not tainted 5.15.150 #0
 Hardware name: ZyXEL EX5700 (Telenor) (DT)
 pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : mt76_wcid_cleanup+0x84/0x22c [mt76]
 lr : mt76_wcid_cleanup+0x64/0x22c [mt76]
 sp : ffffffc00a803700
 x29: ffffffc00a803700 x28: ffffff80008f7300 x27: ffffff80003f3c00
 x26: ffffff80000a7880 x25: ffffffc008c26e00 x24: 0000000000000001
 x23: ffffffc000a68114 x22: 0000000000000000 x21: ffffff8004172cc8
 x20: ffffffc00a803748 x19: ffffff8004152020 x18: 0000000000000000
 x17: 00000000000017c0 x16: ffffffc008ef5000 x15: 0000000000000be0
 x14: ffffff8004172e28 x13: ffffff8004172e28 x12: 0000000000000000
 x11: 0000000000000000 x10: ffffff8004172e30 x9 : ffffff8004172e28
 x8 : 0000000000000000 x7 : ffffff8004156020 x6 : 0000000000000000
 x5 : 0000000000000031 x4 : 0000000000000000 x3 : 0000000000000001
 x2 : 0000000000000000 x1 : ffffff80008f7300 x0 : 0000000000000024
 Call trace:
  mt76_wcid_cleanup+0x84/0x22c [mt76]
  __mt76_sta_remove+0x70/0xbc [mt76]
  mt76_sta_state+0x8c/0x1a4 [mt76]
  mt7915_eeprom_get_power_delta+0x11e4/0x23a0 [mt7915e]
  drv_sta_state+0x144/0x274 [mac80211]
  sta_info_move_state+0x1cc/0x2a4 [mac80211]
  sta_set_sinfo+0xaf8/0xc24 [mac80211]
  sta_info_destroy_addr_bss+0x4c/0x6c [mac80211]

  ieee80211_color_change_finish+0x1c08/0x1e70 [mac80211]
  cfg80211_check_station_change+0x1360/0x4710 [cfg80211]
  genl_family_rcv_msg_doit+0xb4/0x110
  genl_rcv_msg+0xd0/0x1bc
  netlink_rcv_skb+0x58/0x120
  genl_rcv+0x34/0x50
  netlink_unicast+0x1f0/0x2ec
  netlink_sendmsg+0x198/0x3d0
  ____sys_sendmsg+0x1b0/0x210
  ___sys_sendmsg+0x80/0xf0
  __sys_sendmsg+0x44/0xa0
  __arm64_sys_sendmsg+0x20/0x30
  invoke_syscall.constprop.0+0x4c/0xe0
  do_el0_svc+0x40/0xd0
  el0_svc+0x14/0x4c
  el0t_64_sync_handler+0x100/0x110
  el0t_64_sync+0x15c/0x160
 Code: d2800002 910092c0 52800023 f9800011 (885f7c01)
 ---[ end trace 7e42dd9a39ed2281 ]---

Fix by using mt76_dev_phy() which will map band_idx to the correct phy
for all hardware combinations.",Linux,Linux,"d2defcddfe90b3be0cfccc2482495ab1fb759586, 0335c034e7265d36d956e806f33202c94a8a9860, 0335c034e7265d36d956e806f33202c94a8a9860, 0335c034e7265d36d956e806f33202c94a8a9860"
356,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44946,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

kcm: Serialise kcm_sendmsg() for the same socket.

syzkaller reported UAF in kcm_release(). [0]

The scenario is

  1. Thread A builds a skb with MSG_MORE and sets kcm->seq_skb.

  2. Thread A resumes building skb from kcm->seq_skb but is blocked
     by sk_stream_wait_memory()

  3. Thread B calls sendmsg() concurrently, finishes building kcm->seq_skb
     and puts the skb to the write queue

  4. Thread A faces an error and finally frees skb that is already in the
     write queue

  5. kcm_release() does double-free the skb in the write queue

When a thread is building a MSG_MORE skb, another thread must not touch it.

Let's add a per-sk mutex and serialise kcm_sendmsg().

[0]:
BUG: KASAN: slab-use-after-free in __skb_unlink include/linux/skbuff.h:2366 [inline]
BUG: KASAN: slab-use-after-free in __skb_dequeue include/linux/skbuff.h:2385 [inline]
BUG: KASAN: slab-use-after-free in __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]
BUG: KASAN: slab-use-after-free in __skb_queue_purge include/linux/skbuff.h:3181 [inline]
BUG: KASAN: slab-use-after-free in kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691
Read of size 8 at addr ffff0000ced0fc80 by task syz-executor329/6167

CPU: 1 PID: 6167 Comm: syz-executor329 Tainted: G    B              6.8.0-rc5-syzkaller-g9abbc24128bc #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/25/2024
Call trace:
 dump_backtrace+0x1b8/0x1e4 arch/arm64/kernel/stacktrace.c:291
 show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:298
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0xd0/0x124 lib/dump_stack.c:106
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x178/0x518 mm/kasan/report.c:488
 kasan_report+0xd8/0x138 mm/kasan/report.c:601
 __asan_report_load8_noabort+0x20/0x2c mm/kasan/report_generic.c:381
 __skb_unlink include/linux/skbuff.h:2366 [inline]
 __skb_dequeue include/linux/skbuff.h:2385 [inline]
 __skb_queue_purge_reason include/linux/skbuff.h:3175 [inline]
 __skb_queue_purge include/linux/skbuff.h:3181 [inline]
 kcm_release+0x170/0x4c8 net/kcm/kcmsock.c:1691
 __sock_release net/socket.c:659 [inline]
 sock_close+0xa4/0x1e8 net/socket.c:1421
 __fput+0x30c/0x738 fs/file_table.c:376
 ____fput+0x20/0x30 fs/file_table.c:404
 task_work_run+0x230/0x2e0 kernel/task_work.c:180
 exit_task_work include/linux/task_work.h:38 [inline]
 do_exit+0x618/0x1f64 kernel/exit.c:871
 do_group_exit+0x194/0x22c kernel/exit.c:1020
 get_signal+0x1500/0x15ec kernel/signal.c:2893
 do_signal+0x23c/0x3b44 arch/arm64/kernel/signal.c:1249
 do_notify_resume+0x74/0x1f4 arch/arm64/kernel/entry-common.c:148
 exit_to_user_mode_prepare arch/arm64/kernel/entry-common.c:169 [inline]
 exit_to_user_mode arch/arm64/kernel/entry-common.c:178 [inline]
 el0_svc+0xac/0x168 arch/arm64/kernel/entry-common.c:713
 el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:730
 el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:598

Allocated by task 6166:
 kasan_save_stack mm/kasan/common.c:47 [inline]
 kasan_save_track+0x40/0x78 mm/kasan/common.c:68
 kasan_save_alloc_info+0x70/0x84 mm/kasan/generic.c:626
 unpoison_slab_object mm/kasan/common.c:314 [inline]
 __kasan_slab_alloc+0x74/0x8c mm/kasan/common.c:340
 kasan_slab_alloc include/linux/kasan.h:201 [inline]
 slab_post_alloc_hook mm/slub.c:3813 [inline]
 slab_alloc_node mm/slub.c:3860 [inline]
 kmem_cache_alloc_node+0x204/0x4c0 mm/slub.c:3903
 __alloc_skb+0x19c/0x3d8 net/core/skbuff.c:641
 alloc_skb include/linux/skbuff.h:1296 [inline]
 kcm_sendmsg+0x1d3c/0x2124 net/kcm/kcmsock.c:783
 sock_sendmsg_nosec net/socket.c:730 [inline]
 __sock_sendmsg net/socket.c:745 [inline]
 sock_sendmsg+0x220/0x2c0 net/socket.c:768
 splice_to_socket+0x7cc/0xd58 fs/splice.c:889
 do_splice_from fs/splice.c:941 [inline]
 direct_splice_actor+0xec/0x1d8 fs/splice.c:1164
 splice_direct_to_actor+0x438/0xa0c fs/splice.c:1108
 do_splice_direct_actor 
---truncated---",Linux,Linux,"ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3, ab7ac4eb9832e32a09f4e8042705484d2fb0aad3"
355,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43826,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfs: pass explicit offset/count to trace events

nfs_folio_length is unsafe to use without having the folio locked and a
check for a NULL ->f_mapping that protects against truncations and can
lead to kernel crashes.  E.g. when running xfstests generic/065 with
all nfs trace points enabled.

Follow the model of the XFS trace points and pass in an explіcit offset
and length.  This has the additional benefit that these values can
be more accurate as some of the users touch partial folio ranges.",Linux,Linux,"eb5654b3b89d5e836312cea9f3fdb49457852e89, eb5654b3b89d5e836312cea9f3fdb49457852e89"
354,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45026,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/dasd: fix error recovery leading to data corruption on ESE devices

Extent Space Efficient (ESE) or thin provisioned volumes need to be
formatted on demand during usual IO processing.

The dasd_ese_needs_format function checks for error codes that signal
the non existence of a proper track format.

The check for incorrect length is to imprecise since other error cases
leading to transport of insufficient data also have this flag set.
This might lead to data corruption in certain error cases for example
during a storage server warmstart.

Fix by removing the check for incorrect length and replacing by
explicitly checking for invalid track format in transport mode.

Also remove the check for file protected since this is not a valid
ESE handling case.",Linux,Linux,"5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9, 5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9, 5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9, 5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9, 5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9, 5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9, 5e2b17e712cf10cc3cc98fde28a88e8f1a1267e9"
353,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49852,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: elx: libefc: Fix potential use after free in efc_nport_vport_del()

The kref_put() function will call nport->release if the refcount drops to
zero.  The nport->release release function is _efc_nport_free() which frees
""nport"".  But then we dereference ""nport"" on the next line which is a use
after free.  Re-order these lines to avoid the use after free.",Linux,Linux,"fcd427303eb90aa3cb08e7e0b68e0e67a6d47346, fcd427303eb90aa3cb08e7e0b68e0e67a6d47346, fcd427303eb90aa3cb08e7e0b68e0e67a6d47346, fcd427303eb90aa3cb08e7e0b68e0e67a6d47346, fcd427303eb90aa3cb08e7e0b68e0e67a6d47346, fcd427303eb90aa3cb08e7e0b68e0e67a6d47346"
352,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46787,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

userfaultfd: fix checks for huge PMDs

Patch series ""userfaultfd: fix races around pmd_trans_huge() check"", v2.

The pmd_trans_huge() code in mfill_atomic() is wrong in three different
ways depending on kernel version:

1. The pmd_trans_huge() check is racy and can lead to a BUG_ON() (if you hit
   the right two race windows) - I've tested this in a kernel build with
   some extra mdelay() calls. See the commit message for a description
   of the race scenario.
   On older kernels (before 6.5), I think the same bug can even
   theoretically lead to accessing transhuge page contents as a page table
   if you hit the right 5 narrow race windows (I haven't tested this case).
2. As pointed out by Qi Zheng, pmd_trans_huge() is not sufficient for
   detecting PMDs that don't point to page tables.
   On older kernels (before 6.5), you'd just have to win a single fairly
   wide race to hit this.
   I've tested this on 6.1 stable by racing migration (with a mdelay()
   patched into try_to_migrate()) against UFFDIO_ZEROPAGE - on my x86
   VM, that causes a kernel oops in ptlock_ptr().
3. On newer kernels (>=6.5), for shmem mappings, khugepaged is allowed
   to yank page tables out from under us (though I haven't tested that),
   so I think the BUG_ON() checks in mfill_atomic() are just wrong.

I decided to write two separate fixes for these (one fix for bugs 1+2, one
fix for bug 3), so that the first fix can be backported to kernels
affected by bugs 1+2.


This patch (of 2):

This fixes two issues.

I discovered that the following race can occur:

  mfill_atomic                other thread
  ============                ============
                              <zap PMD>
  pmdp_get_lockless() [reads none pmd]
  <bail if trans_huge>
  <if none:>
                              <pagefault creates transhuge zeropage>
    __pte_alloc [no-op]
                              <zap PMD>
  <bail if pmd_trans_huge(*dst_pmd)>
  BUG_ON(pmd_none(*dst_pmd))

I have experimentally verified this in a kernel with extra mdelay() calls;
the BUG_ON(pmd_none(*dst_pmd)) triggers.

On kernels newer than commit 0d940a9b270b (""mm/pgtable: allow
pte_offset_map[_lock]() to fail""), this can't lead to anything worse than
a BUG_ON(), since the page table access helpers are actually designed to
deal with page tables concurrently disappearing; but on older kernels
(<=6.4), I think we could probably theoretically race past the two
BUG_ON() checks and end up treating a hugepage as a page table.

The second issue is that, as Qi Zheng pointed out, there are other types
of huge PMDs that pmd_trans_huge() can't catch: devmap PMDs and swap PMDs
(in particular, migration PMDs).

On <=6.4, this is worse than the first issue: If mfill_atomic() runs on a
PMD that contains a migration entry (which just requires winning a single,
fairly wide race), it will pass the PMD to pte_offset_map_lock(), which
assumes that the PMD points to a page table.

Breakage follows: First, the kernel tries to take the PTE lock (which will
crash or maybe worse if there is no ""struct page"" for the address bits in
the migration entry PMD - I think at least on X86 there usually is no
corresponding ""struct page"" thanks to the PTE inversion mitigation, amd64
looks different).

If that didn't crash, the kernel would next try to write a PTE into what
it wrongly thinks is a page table.

As part of fixing these issues, get rid of the check for pmd_trans_huge()
before __pte_alloc() - that's redundant, we're going to have to check for
that after the __pte_alloc() anyway.

Backport note: pmdp_get_lockless() is pmd_read_atomic() in older kernels.",Linux,Linux,"c1a4de99fada21e2e9251e52cbb51eff5aadc757, c1a4de99fada21e2e9251e52cbb51eff5aadc757, c1a4de99fada21e2e9251e52cbb51eff5aadc757"
351,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44969,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/sclp: Prevent release of buffer in I/O

When a task waiting for completion of a Store Data operation is
interrupted, an attempt is made to halt this operation. If this attempt
fails due to a hardware or firmware problem, there is a chance that the
SCLP facility might store data into buffers referenced by the original
operation at a later time.

Handle this situation by not releasing the referenced data buffers if
the halt attempt fails. For current use cases, this might result in a
leak of few pages of memory in case of a rare hardware/firmware
malfunction.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
350,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43868,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

riscv/purgatory: align riscv_kernel_entry

When alignment handling is delegated to the kernel, everything must be
word-aligned in purgatory, since the trap handler is then set to the
kexec one. Without the alignment, hitting the exception would
ultimately crash. On other occasions, the kernel's handler would take
care of exceptions.
This has been tested on a JH7110 SoC with oreboot and its SBI delegating
unaligned access exceptions and the kernel configured to handle them.",Linux,Linux,"736e30af583fb6e0e2b8211b894ff99dea0f1ee7, 736e30af583fb6e0e2b8211b894ff99dea0f1ee7, 736e30af583fb6e0e2b8211b894ff99dea0f1ee7, 736e30af583fb6e0e2b8211b894ff99dea0f1ee7"
349,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38632,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vfio/pci: fix potential memory leak in vfio_intx_enable()

If vfio_irq_ctx_alloc() failed will lead to 'name' memory leak.",Linux,Linux,"4cb0d7532126d23145329826c38054b4e9a05e7c, 7d29d4c72c1e196cce6969c98072a272d1a703b3, 69276a555c740acfbff13fb5769ee9c92e1c828e, 18c198c96a815c962adc2b9b77909eec0be7df4d, 18c198c96a815c962adc2b9b77909eec0be7df4d"
348,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49965,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: remove unreasonable unlock in ocfs2_read_blocks

Patch series ""Misc fixes for ocfs2_read_blocks"", v5.

This series contains 2 fixes for ocfs2_read_blocks().  The first patch fix
the issue reported by syzbot, which detects bad unlock balance in
ocfs2_read_blocks().  The second patch fixes an issue reported by Heming
Zhao when reviewing above fix.


This patch (of 2):

There was a lock release before exiting, so remove the unreasonable unlock.",Linux,Linux,"6c150df9c2e80b5cf86f5a0d98beb7390ad63bfc, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687, cf76c78595ca87548ca5e45c862ac9e0949c4687"
347,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47684,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: check skb is non-NULL in tcp_rto_delta_us()

We have some machines running stock Ubuntu 20.04.6 which is their 5.4.0-174-generic
kernel that are running ceph and recently hit a null ptr dereference in
tcp_rearm_rto(). Initially hitting it from the TLP path, but then later we also
saw it getting hit from the RACK case as well. Here are examples of the oops
messages we saw in each of those cases:

Jul 26 15:05:02 rx [11061395.780353] BUG: kernel NULL pointer dereference, address: 0000000000000020
Jul 26 15:05:02 rx [11061395.787572] #PF: supervisor read access in kernel mode
Jul 26 15:05:02 rx [11061395.792971] #PF: error_code(0x0000) - not-present page
Jul 26 15:05:02 rx [11061395.798362] PGD 0 P4D 0
Jul 26 15:05:02 rx [11061395.801164] Oops: 0000 [#1] SMP NOPTI
Jul 26 15:05:02 rx [11061395.805091] CPU: 0 PID: 9180 Comm: msgr-worker-1 Tainted: G W 5.4.0-174-generic #193-Ubuntu
Jul 26 15:05:02 rx [11061395.814996] Hardware name: Supermicro SMC 2x26 os-gen8 64C NVME-Y 256G/H12SSW-NTR, BIOS 2.5.V1.2U.NVMe.UEFI 05/09/2023
Jul 26 15:05:02 rx [11061395.825952] RIP: 0010:tcp_rearm_rto+0xe4/0x160
Jul 26 15:05:02 rx [11061395.830656] Code: 87 ca 04 00 00 00 5b 41 5c 41 5d 5d c3 c3 49 8b bc 24 40 06 00 00 eb 8d 48 bb cf f7 53 e3 a5 9b c4 20 4c 89 ef e8 0c fe 0e 00 <48> 8b 78 20 48 c1 ef 03 48 89 f8 41 8b bc 24 80 04 00 00 48 f7 e3
Jul 26 15:05:02 rx [11061395.849665] RSP: 0018:ffffb75d40003e08 EFLAGS: 00010246
Jul 26 15:05:02 rx [11061395.855149] RAX: 0000000000000000 RBX: 20c49ba5e353f7cf RCX: 0000000000000000
Jul 26 15:05:02 rx [11061395.862542] RDX: 0000000062177c30 RSI: 000000000000231c RDI: ffff9874ad283a60
Jul 26 15:05:02 rx [11061395.869933] RBP: ffffb75d40003e20 R08: 0000000000000000 R09: ffff987605e20aa8
Jul 26 15:05:02 rx [11061395.877318] R10: ffffb75d40003f00 R11: ffffb75d4460f740 R12: ffff9874ad283900
Jul 26 15:05:02 rx [11061395.884710] R13: ffff9874ad283a60 R14: ffff9874ad283980 R15: ffff9874ad283d30
Jul 26 15:05:02 rx [11061395.892095] FS: 00007f1ef4a2e700(0000) GS:ffff987605e00000(0000) knlGS:0000000000000000
Jul 26 15:05:02 rx [11061395.900438] CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
Jul 26 15:05:02 rx [11061395.906435] CR2: 0000000000000020 CR3: 0000003e450ba003 CR4: 0000000000760ef0
Jul 26 15:05:02 rx [11061395.913822] PKRU: 55555554
Jul 26 15:05:02 rx [11061395.916786] Call Trace:
Jul 26 15:05:02 rx [11061395.919488]
Jul 26 15:05:02 rx [11061395.921765] ? show_regs.cold+0x1a/0x1f
Jul 26 15:05:02 rx [11061395.925859] ? __die+0x90/0xd9
Jul 26 15:05:02 rx [11061395.929169] ? no_context+0x196/0x380
Jul 26 15:05:02 rx [11061395.933088] ? ip6_protocol_deliver_rcu+0x4e0/0x4e0
Jul 26 15:05:02 rx [11061395.938216] ? ip6_sublist_rcv_finish+0x3d/0x50
Jul 26 15:05:02 rx [11061395.943000] ? __bad_area_nosemaphore+0x50/0x1a0
Jul 26 15:05:02 rx [11061395.947873] ? bad_area_nosemaphore+0x16/0x20
Jul 26 15:05:02 rx [11061395.952486] ? do_user_addr_fault+0x267/0x450
Jul 26 15:05:02 rx [11061395.957104] ? ipv6_list_rcv+0x112/0x140
Jul 26 15:05:02 rx [11061395.961279] ? __do_page_fault+0x58/0x90
Jul 26 15:05:02 rx [11061395.965458] ? do_page_fault+0x2c/0xe0
Jul 26 15:05:02 rx [11061395.969465] ? page_fault+0x34/0x40
Jul 26 15:05:02 rx [11061395.973217] ? tcp_rearm_rto+0xe4/0x160
Jul 26 15:05:02 rx [11061395.977313] ? tcp_rearm_rto+0xe4/0x160
Jul 26 15:05:02 rx [11061395.981408] tcp_send_loss_probe+0x10b/0x220
Jul 26 15:05:02 rx [11061395.985937] tcp_write_timer_handler+0x1b4/0x240
Jul 26 15:05:02 rx [11061395.990809] tcp_write_timer+0x9e/0xe0
Jul 26 15:05:02 rx [11061395.994814] ? tcp_write_timer_handler+0x240/0x240
Jul 26 15:05:02 rx [11061395.999866] call_timer_fn+0x32/0x130
Jul 26 15:05:02 rx [11061396.003782] __run_timers.part.0+0x180/0x280
Jul 26 15:05:02 rx [11061396.008309] ? recalibrate_cpu_khz+0x10/0x10
Jul 26 15:05:02 rx [11061396.012841] ? native_x2apic_icr_write+0x30/0x30
Jul 26 15:05:02 rx [11061396.017718] ? lapic_next_even
---truncated---",Linux,Linux,"e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410, e1a10ef7fa876f8510aaec36ea5c0cf34baba410"
346,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46765,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ice: protect XDP configuration with a mutex

The main threat to data consistency in ice_xdp() is a possible asynchronous
PF reset. It can be triggered by a user or by TX timeout handler.

XDP setup and PF reset code access the same resources in the following
sections:
* ice_vsi_close() in ice_prepare_for_reset() - already rtnl-locked
* ice_vsi_rebuild() for the PF VSI - not protected
* ice_vsi_open() - already rtnl-locked

With an unfortunate timing, such accesses can result in a crash such as the
one below:

[ +1.999878] ice 0000:b1:00.0: Registered XDP mem model MEM_TYPE_XSK_BUFF_POOL on Rx ring 14
[ +2.002992] ice 0000:b1:00.0: Registered XDP mem model MEM_TYPE_XSK_BUFF_POOL on Rx ring 18
[Mar15 18:17] ice 0000:b1:00.0 ens801f0np0: NETDEV WATCHDOG: CPU: 38: transmit queue 14 timed out 80692736 ms
[ +0.000093] ice 0000:b1:00.0 ens801f0np0: tx_timeout: VSI_num: 6, Q 14, NTC: 0x0, HW_HEAD: 0x0, NTU: 0x0, INT: 0x4000001
[ +0.000012] ice 0000:b1:00.0 ens801f0np0: tx_timeout recovery level 1, txqueue 14
[ +0.394718] ice 0000:b1:00.0: PTP reset successful
[ +0.006184] BUG: kernel NULL pointer dereference, address: 0000000000000098
[ +0.000045] #PF: supervisor read access in kernel mode
[ +0.000023] #PF: error_code(0x0000) - not-present page
[ +0.000023] PGD 0 P4D 0
[ +0.000018] Oops: 0000 [#1] PREEMPT SMP NOPTI
[ +0.000023] CPU: 38 PID: 7540 Comm: kworker/38:1 Not tainted 6.8.0-rc7 #1
[ +0.000031] Hardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0014.082620210524 08/26/2021
[ +0.000036] Workqueue: ice ice_service_task [ice]
[ +0.000183] RIP: 0010:ice_clean_tx_ring+0xa/0xd0 [ice]
[...]
[ +0.000013] Call Trace:
[ +0.000016] <TASK>
[ +0.000014] ? __die+0x1f/0x70
[ +0.000029] ? page_fault_oops+0x171/0x4f0
[ +0.000029] ? schedule+0x3b/0xd0
[ +0.000027] ? exc_page_fault+0x7b/0x180
[ +0.000022] ? asm_exc_page_fault+0x22/0x30
[ +0.000031] ? ice_clean_tx_ring+0xa/0xd0 [ice]
[ +0.000194] ice_free_tx_ring+0xe/0x60 [ice]
[ +0.000186] ice_destroy_xdp_rings+0x157/0x310 [ice]
[ +0.000151] ice_vsi_decfg+0x53/0xe0 [ice]
[ +0.000180] ice_vsi_rebuild+0x239/0x540 [ice]
[ +0.000186] ice_vsi_rebuild_by_type+0x76/0x180 [ice]
[ +0.000145] ice_rebuild+0x18c/0x840 [ice]
[ +0.000145] ? delay_tsc+0x4a/0xc0
[ +0.000022] ? delay_tsc+0x92/0xc0
[ +0.000020] ice_do_reset+0x140/0x180 [ice]
[ +0.000886] ice_service_task+0x404/0x1030 [ice]
[ +0.000824] process_one_work+0x171/0x340
[ +0.000685] worker_thread+0x277/0x3a0
[ +0.000675] ? preempt_count_add+0x6a/0xa0
[ +0.000677] ? _raw_spin_lock_irqsave+0x23/0x50
[ +0.000679] ? __pfx_worker_thread+0x10/0x10
[ +0.000653] kthread+0xf0/0x120
[ +0.000635] ? __pfx_kthread+0x10/0x10
[ +0.000616] ret_from_fork+0x2d/0x50
[ +0.000612] ? __pfx_kthread+0x10/0x10
[ +0.000604] ret_from_fork_asm+0x1b/0x30
[ +0.000604] </TASK>

The previous way of handling this through returning -EBUSY is not viable,
particularly when destroying AF_XDP socket, because the kernel proceeds
with removal anyway.

There is plenty of code between those calls and there is no need to create
a large critical section that covers all of them, same as there is no need
to protect ice_vsi_rebuild() with rtnl_lock().

Add xdp_state_lock mutex to protect ice_vsi_rebuild() and ice_xdp().

Leaving unprotected sections in between would result in two states that
have to be considered:
1. when the VSI is closed, but not yet rebuild
2. when VSI is already rebuild, but not yet open

The latter case is actually already handled through !netif_running() case,
we just need to adjust flag checking a little. The former one is not as
trivial, because between ice_vsi_close() and ice_vsi_rebuild(), a lot of
hardware interaction happens, this can make adding/deleting rings exit
with an error. Luckily, VSI rebuild is pending and can apply new
configuration for us in a managed fashion.

Therefore, add an additional VSI state flag ICE_VSI_REBUILD_PENDING to
indicate that ice_x
---truncated---",Linux,Linux,"2d4238f5569722197612656163d824098208519c, 2d4238f5569722197612656163d824098208519c, 2d4238f5569722197612656163d824098208519c"
345,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50024,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: Fix an unsafe loop on the list

The kernel may crash when deleting a genetlink family if there are still
listeners for that family:

Oops: Kernel access of bad area, sig: 11 [#1]
  ...
  NIP [c000000000c080bc] netlink_update_socket_mc+0x3c/0xc0
  LR [c000000000c0f764] __netlink_clear_multicast_users+0x74/0xc0
  Call Trace:
__netlink_clear_multicast_users+0x74/0xc0
genl_unregister_family+0xd4/0x2d0

Change the unsafe loop on the list to a safe one, because inside the
loop there is an element removal from this list.",Linux,Linux,"b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289, b8273570f802a7658827dcb077b0b517ba75a289"
344,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47658,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

crypto: stm32/cryp - call finalize with bh disabled

The finalize operation in interrupt mode produce a produces a spinlock
recursion warning. The reason is the fact that BH must be disabled
during this process.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
343,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47673,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: pause TCM when the firmware is stopped

Not doing so will make us send a host command to the transport while the
firmware is not alive, which will trigger a WARNING.

bad state = 0
WARNING: CPU: 2 PID: 17434 at drivers/net/wireless/intel/iwlwifi/iwl-trans.c:115 iwl_trans_send_cmd+0x1cb/0x1e0 [iwlwifi]
RIP: 0010:iwl_trans_send_cmd+0x1cb/0x1e0 [iwlwifi]
Call Trace:
 <TASK>
 iwl_mvm_send_cmd+0x40/0xc0 [iwlmvm]
 iwl_mvm_config_scan+0x198/0x260 [iwlmvm]
 iwl_mvm_recalc_tcm+0x730/0x11d0 [iwlmvm]
 iwl_mvm_tcm_work+0x1d/0x30 [iwlmvm]
 process_one_work+0x29e/0x640
 worker_thread+0x2df/0x690
 ? rescuer_thread+0x540/0x540
 kthread+0x192/0x1e0
 ? set_kthread_struct+0x90/0x90
 ret_from_fork+0x22/0x30",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
342,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44986,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: fix possible UAF in ip6_finish_output2()

If skb_expand_head() returns NULL, skb has been freed
and associated dst/idev could also have been freed.

We need to hold rcu_read_lock() to make sure the dst and
associated idev are alive.",Linux,Linux,"5796015fa968a3349027a27dcd04c71d95c53ba5, 5796015fa968a3349027a27dcd04c71d95c53ba5, 5796015fa968a3349027a27dcd04c71d95c53ba5, 5796015fa968a3349027a27dcd04c71d95c53ba5, 5796015fa968a3349027a27dcd04c71d95c53ba5"
361,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46850,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Avoid race between dcn35_set_drr() and dc_state_destruct()

dc_state_destruct() nulls the resource context of the DC state. The pipe
context passed to dcn35_set_drr() is a member of this resource context.

If dc_state_destruct() is called parallel to the IRQ processing (which
calls dcn35_set_drr() at some point), we can end up using already nulled
function callback fields of struct stream_resource.

The logic in dcn35_set_drr() already tries to avoid this, by checking tg
against NULL. But if the nulling happens exactly after the NULL check and
before the next access, then we get a race.

Avoid this by copying tg first to a local variable, and then use this
variable for all the operations. This should work, as long as nobody
frees the resource pool where the timing generators live.

(cherry picked from commit 0607a50c004798a96e62c089a4c34c220179dcb5)",Linux,Linux,"06ad7e16425619a4a77154c2e85bededb3e04a4f, 06ad7e16425619a4a77154c2e85bededb3e04a4f"
362,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44970,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: SHAMPO, Fix invalid WQ linked list unlink

When all the strides in a WQE have been consumed, the WQE is unlinked
from the WQ linked list (mlx5_wq_ll_pop()). For SHAMPO, it is possible
to receive CQEs with 0 consumed strides for the same WQE even after the
WQE is fully consumed and unlinked. This triggers an additional unlink
for the same wqe which corrupts the linked list.

Fix this scenario by accepting 0 sized consumed strides without
unlinking the WQE again.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
363,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42317,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm/huge_memory: avoid PMD-size page cache if needed

xarray can't support arbitrary page cache size.  the largest and supported
page cache size is defined as MAX_PAGECACHE_ORDER by commit 099d90642a71
(""mm/filemap: make MAX_PAGECACHE_ORDER acceptable to xarray"").  However,
it's possible to have 512MB page cache in the huge memory's collapsing
path on ARM64 system whose base page size is 64KB.  512MB page cache is
breaking the limitation and a warning is raised when the xarray entry is
split as shown in the following example.

[root@dhcp-10-26-1-207 ~]# cat /proc/1/smaps | grep KernelPageSize
KernelPageSize:       64 kB
[root@dhcp-10-26-1-207 ~]# cat /tmp/test.c
   :
int main(int argc, char **argv)
{
	const char *filename = TEST_XFS_FILENAME;
	int fd = 0;
	void *buf = (void *)-1, *p;
	int pgsize = getpagesize();
	int ret = 0;

	if (pgsize != 0x10000) {
		fprintf(stdout, ""System with 64KB base page size is required!\n"");
		return -EPERM;
	}

	system(""echo 0 > /sys/devices/virtual/bdi/253:0/read_ahead_kb"");
	system(""echo 1 > /proc/sys/vm/drop_caches"");

	/* Open the xfs file */
	fd = open(filename, O_RDONLY);
	assert(fd > 0);

	/* Create VMA */
	buf = mmap(NULL, TEST_MEM_SIZE, PROT_READ, MAP_SHARED, fd, 0);
	assert(buf != (void *)-1);
	fprintf(stdout, ""mapped buffer at 0x%p\n"", buf);

	/* Populate VMA */
	ret = madvise(buf, TEST_MEM_SIZE, MADV_NOHUGEPAGE);
	assert(ret == 0);
	ret = madvise(buf, TEST_MEM_SIZE, MADV_POPULATE_READ);
	assert(ret == 0);

	/* Collapse VMA */
	ret = madvise(buf, TEST_MEM_SIZE, MADV_HUGEPAGE);
	assert(ret == 0);
	ret = madvise(buf, TEST_MEM_SIZE, MADV_COLLAPSE);
	if (ret) {
		fprintf(stdout, ""Error %d to madvise(MADV_COLLAPSE)\n"", errno);
		goto out;
	}

	/* Split xarray entry. Write permission is needed */
	munmap(buf, TEST_MEM_SIZE);
	buf = (void *)-1;
	close(fd);
	fd = open(filename, O_RDWR);
	assert(fd > 0);
	fallocate(fd, FALLOC_FL_KEEP_SIZE | FALLOC_FL_PUNCH_HOLE,
 		  TEST_MEM_SIZE - pgsize, pgsize);
out:
	if (buf != (void *)-1)
		munmap(buf, TEST_MEM_SIZE);
	if (fd > 0)
		close(fd);

	return ret;
}

[root@dhcp-10-26-1-207 ~]# gcc /tmp/test.c -o /tmp/test
[root@dhcp-10-26-1-207 ~]# /tmp/test
 ------------[ cut here ]------------
 WARNING: CPU: 25 PID: 7560 at lib/xarray.c:1025 xas_split_alloc+0xf8/0x128
 Modules linked in: nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib    \
 nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct      \
 nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4      \
 ip_set rfkill nf_tables nfnetlink vfat fat virtio_balloon drm fuse   \
 xfs libcrc32c crct10dif_ce ghash_ce sha2_ce sha256_arm64 virtio_net  \
 sha1_ce net_failover virtio_blk virtio_console failover dimlib virtio_mmio
 CPU: 25 PID: 7560 Comm: test Kdump: loaded Not tainted 6.10.0-rc7-gavin+ #9
 Hardware name: QEMU KVM Virtual Machine, BIOS edk2-20240524-1.el9 05/24/2024
 pstate: 83400005 (Nzcv daif +PAN -UAO +TCO +DIT -SSBS BTYPE=--)
 pc : xas_split_alloc+0xf8/0x128
 lr : split_huge_page_to_list_to_order+0x1c4/0x780
 sp : ffff8000ac32f660
 x29: ffff8000ac32f660 x28: ffff0000e0969eb0 x27: ffff8000ac32f6c0
 x26: 0000000000000c40 x25: ffff0000e0969eb0 x24: 000000000000000d
 x23: ffff8000ac32f6c0 x22: ffffffdfc0700000 x21: 0000000000000000
 x20: 0000000000000000 x19: ffffffdfc0700000 x18: 0000000000000000
 x17: 0000000000000000 x16: ffffd5f3708ffc70 x15: 0000000000000000
 x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000
 x11: ffffffffffffffc0 x10: 0000000000000040 x9 : ffffd5f3708e692c
 x8 : 0000000000000003 x7 : 0000000000000000 x6 : ffff0000e0969eb8
 x5 : ffffd5f37289e378 x4 : 0000000000000000 x3 : 0000000000000c40
 x2 : 000000000000000d x1 : 000000000000000c x0 : 0000000000000000
 Call trace:
  xas_split_alloc+0xf8/0x128
  split_huge_page_to_list_to_order+0x1c4/0x780
  truncate_inode_partial_folio+0xdc/0x160
  truncate_inode_pages_range+0x1b4/0x4a8
  truncate_pagecache_range+0x84/0xa
---truncated---",Linux,Linux,"6b24ca4a1a8d4ee3221d6d44ddbb99f542e4bda3, 6b24ca4a1a8d4ee3221d6d44ddbb99f542e4bda3"
374,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49881,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: update orig_path in ext4_find_extent()

In ext4_find_extent(), if the path is not big enough, we free it and set
*orig_path to NULL. But after reallocating and successfully initializing
the path, we don't update *orig_path, in which case the caller gets a
valid path but a NULL ppath, and this may cause a NULL pointer dereference
or a path memory leak. For example:

ext4_split_extent
  path = *ppath = 2000
  ext4_find_extent
    if (depth > path[0].p_maxdepth)
      kfree(path = 2000);
      *orig_path = path = NULL;
      path = kcalloc() = 3000
  ext4_split_extent_at(*ppath = NULL)
    path = *ppath;
    ex = path[depth].p_ext;
    // NULL pointer dereference!

==================================================================
BUG: kernel NULL pointer dereference, address: 0000000000000010
CPU: 6 UID: 0 PID: 576 Comm: fsstress Not tainted 6.11.0-rc2-dirty #847
RIP: 0010:ext4_split_extent_at+0x6d/0x560
Call Trace:
 <TASK>
 ext4_split_extent.isra.0+0xcb/0x1b0
 ext4_ext_convert_to_initialized+0x168/0x6c0
 ext4_ext_handle_unwritten_extents+0x325/0x4d0
 ext4_ext_map_blocks+0x520/0xdb0
 ext4_map_blocks+0x2b0/0x690
 ext4_iomap_begin+0x20e/0x2c0
[...]
==================================================================

Therefore, *orig_path is updated when the extent lookup succeeds, so that
the caller can safely use path or *ppath.",Linux,Linux,"10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279"
382,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43834,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xdp: fix invalid wait context of page_pool_destroy()

If the driver uses a page pool, it creates a page pool with
page_pool_create().
The reference count of page pool is 1 as default.
A page pool will be destroyed only when a reference count reaches 0.
page_pool_destroy() is used to destroy page pool, it decreases a
reference count.
When a page pool is destroyed, ->disconnect() is called, which is
mem_allocator_disconnect().
This function internally acquires mutex_lock().

If the driver uses XDP, it registers a memory model with
xdp_rxq_info_reg_mem_model().
The xdp_rxq_info_reg_mem_model() internally increases a page pool
reference count if a memory model is a page pool.
Now the reference count is 2.

To destroy a page pool, the driver should call both page_pool_destroy()
and xdp_unreg_mem_model().
The xdp_unreg_mem_model() internally calls page_pool_destroy().
Only page_pool_destroy() decreases a reference count.

If a driver calls page_pool_destroy() then xdp_unreg_mem_model(), we
will face an invalid wait context warning.
Because xdp_unreg_mem_model() calls page_pool_destroy() with
rcu_read_lock().
The page_pool_destroy() internally acquires mutex_lock().

Splat looks like:
=============================
[ BUG: Invalid wait context ]
6.10.0-rc6+ #4 Tainted: G W
-----------------------------
ethtool/1806 is trying to lock:
ffffffff90387b90 (mem_id_lock){+.+.}-{4:4}, at: mem_allocator_disconnect+0x73/0x150
other info that might help us debug this:
context-{5:5}
3 locks held by ethtool/1806:
stack backtrace:
CPU: 0 PID: 1806 Comm: ethtool Tainted: G W 6.10.0-rc6+ #4 f916f41f172891c800f2fed
Hardware name: ASUS System Product Name/PRIME Z690-P D4, BIOS 0603 11/01/2021
Call Trace:
<TASK>
dump_stack_lvl+0x7e/0xc0
__lock_acquire+0x1681/0x4de0
? _printk+0x64/0xe0
? __pfx_mark_lock.part.0+0x10/0x10
? __pfx___lock_acquire+0x10/0x10
lock_acquire+0x1b3/0x580
? mem_allocator_disconnect+0x73/0x150
? __wake_up_klogd.part.0+0x16/0xc0
? __pfx_lock_acquire+0x10/0x10
? dump_stack_lvl+0x91/0xc0
__mutex_lock+0x15c/0x1690
? mem_allocator_disconnect+0x73/0x150
? __pfx_prb_read_valid+0x10/0x10
? mem_allocator_disconnect+0x73/0x150
? __pfx_llist_add_batch+0x10/0x10
? console_unlock+0x193/0x1b0
? lockdep_hardirqs_on+0xbe/0x140
? __pfx___mutex_lock+0x10/0x10
? tick_nohz_tick_stopped+0x16/0x90
? __irq_work_queue_local+0x1e5/0x330
? irq_work_queue+0x39/0x50
? __wake_up_klogd.part.0+0x79/0xc0
? mem_allocator_disconnect+0x73/0x150
mem_allocator_disconnect+0x73/0x150
? __pfx_mem_allocator_disconnect+0x10/0x10
? mark_held_locks+0xa5/0xf0
? rcu_is_watching+0x11/0xb0
page_pool_release+0x36e/0x6d0
page_pool_destroy+0xd7/0x440
xdp_unreg_mem_model+0x1a7/0x2a0
? __pfx_xdp_unreg_mem_model+0x10/0x10
? kfree+0x125/0x370
? bnxt_free_ring.isra.0+0x2eb/0x500
? bnxt_free_mem+0x5ac/0x2500
xdp_rxq_info_unreg+0x4a/0xd0
bnxt_free_mem+0x1356/0x2500
bnxt_close_nic+0xf0/0x3b0
? __pfx_bnxt_close_nic+0x10/0x10
? ethnl_parse_bit+0x2c6/0x6d0
? __pfx___nla_validate_parse+0x10/0x10
? __pfx_ethnl_parse_bit+0x10/0x10
bnxt_set_features+0x2a8/0x3e0
__netdev_update_features+0x4dc/0x1370
? ethnl_parse_bitset+0x4ff/0x750
? __pfx_ethnl_parse_bitset+0x10/0x10
? __pfx___netdev_update_features+0x10/0x10
? mark_held_locks+0xa5/0xf0
? _raw_spin_unlock_irqrestore+0x42/0x70
? __pm_runtime_resume+0x7d/0x110
ethnl_set_features+0x32d/0xa20

To fix this problem, it uses rhashtable_lookup_fast() instead of
rhashtable_lookup() with rcu_read_lock().
Using xa without rcu_read_lock() here is safe.
xa is freed by __xdp_mem_allocator_rcu_free() and this is called by
call_rcu() of mem_xa_remove().
The mem_xa_remove() is called by page_pool_destroy() if a reference
count reaches 0.
The xa is already protected by the reference count mechanism well in the
control plane.
So removing rcu_read_lock() for page_pool_destroy() is safe.",Linux,Linux,"c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3, c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3, c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3, c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3, c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3, c3f812cea0d7006469d1cf33a4a9f0a12bb4b3a3"
381,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49896,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check stream before comparing them

[WHAT & HOW]
amdgpu_dm can pass a null stream to dc_is_stream_unchanged. It is
necessary to check for null before dereferencing them.

This fixes 1 FORWARD_NULL issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
380,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42068,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Take return from set_memory_ro() into account with bpf_prog_lock_ro()

set_memory_ro() can fail, leaving memory unprotected.

Check its return and take it into account as an error.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
379,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46754,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Remove tst_run from lwt_seg6local_prog_ops.

The syzbot reported that the lwt_seg6 related BPF ops can be invoked
via bpf_test_run() without without entering input_action_end_bpf()
first.

Martin KaFai Lau said that self test for BPF_PROG_TYPE_LWT_SEG6LOCAL
probably didn't work since it was introduced in commit 04d4b274e2a
(""ipv6: sr: Add seg6local action End.BPF""). The reason is that the
per-CPU variable seg6_bpf_srh_states::srh is never assigned in the self
test case but each BPF function expects it.

Remove test_run for BPF_PROG_TYPE_LWT_SEG6LOCAL.",Linux,Linux,"004d4b274e2a1a895a0e5dc66158b90a7d463d44, 004d4b274e2a1a895a0e5dc66158b90a7d463d44"
824,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43858,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: Fix array-index-out-of-bounds in diFree",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
377,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47690,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: get rid of online repaire on corrupted directory

syzbot reports a f2fs bug as below:

kernel BUG at fs/f2fs/inode.c:896!
RIP: 0010:f2fs_evict_inode+0x1598/0x15c0 fs/f2fs/inode.c:896
Call Trace:
 evict+0x532/0x950 fs/inode.c:704
 dispose_list fs/inode.c:747 [inline]
 evict_inodes+0x5f9/0x690 fs/inode.c:797
 generic_shutdown_super+0x9d/0x2d0 fs/super.c:627
 kill_block_super+0x44/0x90 fs/super.c:1696
 kill_f2fs_super+0x344/0x690 fs/f2fs/super.c:4898
 deactivate_locked_super+0xc4/0x130 fs/super.c:473
 cleanup_mnt+0x41f/0x4b0 fs/namespace.c:1373
 task_work_run+0x24f/0x310 kernel/task_work.c:228
 ptrace_notify+0x2d2/0x380 kernel/signal.c:2402
 ptrace_report_syscall include/linux/ptrace.h:415 [inline]
 ptrace_report_syscall_exit include/linux/ptrace.h:477 [inline]
 syscall_exit_work+0xc6/0x190 kernel/entry/common.c:173
 syscall_exit_to_user_mode_prepare kernel/entry/common.c:200 [inline]
 __syscall_exit_to_user_mode_work kernel/entry/common.c:205 [inline]
 syscall_exit_to_user_mode+0x279/0x370 kernel/entry/common.c:218
 do_syscall_64+0x100/0x230 arch/x86/entry/common.c:89
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0010:f2fs_evict_inode+0x1598/0x15c0 fs/f2fs/inode.c:896

Online repaire on corrupted directory in f2fs_lookup() can generate
dirty data/meta while racing w/ readonly remount, it may leave dirty
inode after filesystem becomes readonly, however, checkpoint() will
skips flushing dirty inode in a state of readonly mode, result in
above panic.

Let's get rid of online repaire in f2fs_lookup(), and leave the work
to fsck.f2fs.",Linux,Linux,"510022a85839a8409d1e6a519bb86ce71a84f30a, 510022a85839a8409d1e6a519bb86ce71a84f30a, 510022a85839a8409d1e6a519bb86ce71a84f30a, 510022a85839a8409d1e6a519bb86ce71a84f30a, 510022a85839a8409d1e6a519bb86ce71a84f30a, 510022a85839a8409d1e6a519bb86ce71a84f30a"
376,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46745,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Input: uinput - reject requests with unreasonable number of slots


When exercising uinput interface syzkaller may try setting up device
with a really large number of slots, which causes memory allocation
failure in input_mt_init_slots(). While this allocation failure is
handled properly and request is rejected, it results in syzkaller
reports. Additionally, such request may put undue burden on the
system which will try to free a lot of memory for a bogus request.

Fix it by limiting allowed number of slots to 100. This can easily
be extended if we see devices that can track more than 100 contacts.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
375,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45015,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/msm/dpu: move dpu_encoder's connector assignment to atomic_enable()

For cases where the crtc's connectors_changed was set without enable/active
getting toggled , there is an atomic_enable() call followed by an
atomic_disable() but without an atomic_mode_set().

This results in a NULL ptr access for the dpu_encoder_get_drm_fmt() call in
the atomic_enable() as the dpu_encoder's connector was cleared in the
atomic_disable() but not re-assigned as there was no atomic_mode_set() call.

Fix the NULL ptr access by moving the assignment for atomic_enable() and also
use drm_atomic_get_new_connector_for_encoder() to get the connector from
the atomic_state.

Patchwork: https://patchwork.freedesktop.org/patch/606729/",Linux,Linux,"25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef, 25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef, 25fdd5933e4c0f5fe2ea5cd59994f8ac5fbe90ef"
373,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44939,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: fix null ptr deref in dtInsertEntry

[syzbot reported]
general protection fault, probably for non-canonical address 0xdffffc0000000001: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000008-0x000000000000000f]
CPU: 0 PID: 5061 Comm: syz-executor404 Not tainted 6.8.0-syzkaller-08951-gfe46a7dd189e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
RIP: 0010:dtInsertEntry+0xd0c/0x1780 fs/jfs/jfs_dtree.c:3713
...
[Analyze]
In dtInsertEntry(), when the pointer h has the same value as p, after writing
name in UniStrncpy_to_le(), p->header.flag will be cleared. This will cause the
previously true judgment ""p->header.flag & BT-LEAF"" to change to no after writing
the name operation, this leads to entering an incorrect branch and accessing the
uninitialized object ih when judging this condition for the second time.

[Fix]
After got the page, check freelist first, if freelist == 0 then exit dtInsert()
and return -EINVAL.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
364,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46722,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix mc_data out-of-bounds read warning

Clear warning that read mc_data[i-1] may out-of-bounds.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
372,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46698,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

video/aperture: optionally match the device in sysfb_disable()

In aperture_remove_conflicting_pci_devices(), we currently only
call sysfb_disable() on vga class devices.  This leads to the
following problem when the pimary device is not VGA compatible:

1. A PCI device with a non-VGA class is the boot display
2. That device is probed first and it is not a VGA device so
   sysfb_disable() is not called, but the device resources
   are freed by aperture_detach_platform_device()
3. Non-primary GPU has a VGA class and it ends up calling sysfb_disable()
4. NULL pointer dereference via sysfb_disable() since the resources
   have already been freed by aperture_detach_platform_device() when
   it was called by the other device.

Fix this by passing a device pointer to sysfb_disable() and checking
the device to determine if we should execute it or not.

v2: Fix build when CONFIG_SCREEN_INFO is not set
v3: Move device check into the mutex
    Drop primary variable in aperture_remove_conflicting_pci_devices()
    Drop __init on pci sysfb_pci_dev_is_enabled()",Linux,Linux,"5ae3716cfdcd286268133867f67d0803847acefc, 5ae3716cfdcd286268133867f67d0803847acefc"
371,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47663,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

staging: iio: frequency: ad9834: Validate frequency parameter value

In ad9834_write_frequency() clk_get_rate() can return 0. In such case
ad9834_calc_freqreg() call will lead to division by zero. Checking
'if (fout > (clk_freq / 2))' doesn't protect in case of 'fout' is 0.
ad9834_write_frequency() is called from ad9834_write(), where fout is
taken from text buffer, which can contain any value.

Modify parameters checking.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58, 12b9d5bf76bfa20d3207ef24fca9c8254a586a58"
370,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49871,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Input: adp5589-keys - fix NULL pointer dereference

We register a devm action to call adp5589_clear_config() and then pass
the i2c client as argument so that we can call i2c_get_clientdata() in
order to get our device object. However, i2c_set_clientdata() is only
being set at the end of the probe function which means that we'll get a
NULL pointer dereference in case the probe function fails early.",Linux,Linux,"30df385e35a48f773b85117fc490152c2395e45b, 30df385e35a48f773b85117fc490152c2395e45b, 30df385e35a48f773b85117fc490152c2395e45b, 30df385e35a48f773b85117fc490152c2395e45b, 30df385e35a48f773b85117fc490152c2395e45b, 30df385e35a48f773b85117fc490152c2395e45b"
369,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49936,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/xen-netback: prevent UAF in xenvif_flush_hash()

During the list_for_each_entry_rcu iteration call of xenvif_flush_hash,
kfree_rcu does not exist inside the rcu read critical section, so if
kfree_rcu is called when the rcu grace period ends during the iteration,
UAF occurs when accessing head->next after the entry becomes free.

Therefore, to solve this, you need to change it to list_for_each_entry_safe.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
368,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47713,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: use two-phase skb reclamation in ieee80211_do_stop()

Since '__dev_queue_xmit()' should be called with interrupts enabled,
the following backtrace:

ieee80211_do_stop()
 ...
 spin_lock_irqsave(&local->queue_stop_reason_lock, flags)
 ...
 ieee80211_free_txskb()
  ieee80211_report_used_skb()
   ieee80211_report_ack_skb()
    cfg80211_mgmt_tx_status_ext()
     nl80211_frame_tx_status()
      genlmsg_multicast_netns()
       genlmsg_multicast_netns_filtered()
        nlmsg_multicast_filtered()
	 netlink_broadcast_filtered()
	  do_one_broadcast()
	   netlink_broadcast_deliver()
	    __netlink_sendskb()
	     netlink_deliver_tap()
	      __netlink_deliver_tap_skb()
	       dev_queue_xmit()
	        __dev_queue_xmit() ; with IRQS disabled
 ...
 spin_unlock_irqrestore(&local->queue_stop_reason_lock, flags)

issues the warning (as reported by syzbot reproducer):

WARNING: CPU: 2 PID: 5128 at kernel/softirq.c:362 __local_bh_enable_ip+0xc3/0x120

Fix this by implementing a two-phase skb reclamation in
'ieee80211_do_stop()', where actual work is performed
outside of a section with interrupts disabled.",Linux,Linux,"5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412, 5061b0c2b9066de426fbc63f1278d2210e789412"
367,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42114,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: restrict NL80211_ATTR_TXQ_QUANTUM values

syzbot is able to trigger softlockups, setting NL80211_ATTR_TXQ_QUANTUM
to 2^31.

We had a similar issue in sch_fq, fixed with commit
d9e15a273306 (""pkt_sched: fq: do not accept silly TCA_FQ_QUANTUM"")

watchdog: BUG: soft lockup - CPU#1 stuck for 26s! [kworker/1:0:24]
Modules linked in:
irq event stamp: 131135
 hardirqs last  enabled at (131134): [<ffff80008ae8778c>] __exit_to_kernel_mode arch/arm64/kernel/entry-common.c:85 [inline]
 hardirqs last  enabled at (131134): [<ffff80008ae8778c>] exit_to_kernel_mode+0xdc/0x10c arch/arm64/kernel/entry-common.c:95
 hardirqs last disabled at (131135): [<ffff80008ae85378>] __el1_irq arch/arm64/kernel/entry-common.c:533 [inline]
 hardirqs last disabled at (131135): [<ffff80008ae85378>] el1_interrupt+0x24/0x68 arch/arm64/kernel/entry-common.c:551
 softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_hh_init net/core/neighbour.c:1538 [inline]
 softirqs last  enabled at (125892): [<ffff80008907e82c>] neigh_resolve_output+0x268/0x658 net/core/neighbour.c:1553
 softirqs last disabled at (125896): [<ffff80008904166c>] local_bh_disable+0x10/0x34 include/linux/bottom_half.h:19
CPU: 1 PID: 24 Comm: kworker/1:0 Not tainted 6.9.0-rc7-syzkaller-gfda5695d692c #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
Workqueue: mld mld_ifc_work
pstate: 80400005 (Nzcv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : __list_del include/linux/list.h:195 [inline]
 pc : __list_del_entry include/linux/list.h:218 [inline]
 pc : list_move_tail include/linux/list.h:310 [inline]
 pc : fq_tin_dequeue include/net/fq_impl.h:112 [inline]
 pc : ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854
 lr : __list_del_entry include/linux/list.h:218 [inline]
 lr : list_move_tail include/linux/list.h:310 [inline]
 lr : fq_tin_dequeue include/net/fq_impl.h:112 [inline]
 lr : ieee80211_tx_dequeue+0x67c/0x3b4c net/mac80211/tx.c:3854
sp : ffff800093d36700
x29: ffff800093d36a60 x28: ffff800093d36960 x27: dfff800000000000
x26: ffff0000d800ad50 x25: ffff0000d800abe0 x24: ffff0000d800abf0
x23: ffff0000e0032468 x22: ffff0000e00324d4 x21: ffff0000d800abf0
x20: ffff0000d800abf8 x19: ffff0000d800abf0 x18: ffff800093d363c0
x17: 000000000000d476 x16: ffff8000805519dc x15: ffff7000127a6cc8
x14: 1ffff000127a6cc8 x13: 0000000000000004 x12: ffffffffffffffff
x11: ffff7000127a6cc8 x10: 0000000000ff0100 x9 : 0000000000000000
x8 : 0000000000000000 x7 : 0000000000000000 x6 : 0000000000000000
x5 : ffff80009287aa08 x4 : 0000000000000008 x3 : ffff80008034c7fc
x2 : ffff0000e0032468 x1 : 00000000da0e46b8 x0 : ffff0000e0032470
Call trace:
  __list_del include/linux/list.h:195 [inline]
  __list_del_entry include/linux/list.h:218 [inline]
  list_move_tail include/linux/list.h:310 [inline]
  fq_tin_dequeue include/net/fq_impl.h:112 [inline]
  ieee80211_tx_dequeue+0x6b8/0x3b4c net/mac80211/tx.c:3854
  wake_tx_push_queue net/mac80211/util.c:294 [inline]
  ieee80211_handle_wake_tx_queue+0x118/0x274 net/mac80211/util.c:315
  drv_wake_tx_queue net/mac80211/driver-ops.h:1350 [inline]
  schedule_and_wake_txq net/mac80211/driver-ops.h:1357 [inline]
  ieee80211_queue_skb+0x18e8/0x2244 net/mac80211/tx.c:1664
  ieee80211_tx+0x260/0x400 net/mac80211/tx.c:1966
  ieee80211_xmit+0x278/0x354 net/mac80211/tx.c:2062
  __ieee80211_subif_start_xmit+0xab8/0x122c net/mac80211/tx.c:4338
  ieee80211_subif_start_xmit+0xe0/0x438 net/mac80211/tx.c:4532
  __netdev_start_xmit include/linux/netdevice.h:4903 [inline]
  netdev_start_xmit include/linux/netdevice.h:4917 [inline]
  xmit_one net/core/dev.c:3531 [inline]
  dev_hard_start_xmit+0x27c/0x938 net/core/dev.c:3547
  __dev_queue_xmit+0x1678/0x33fc net/core/dev.c:4341
  dev_queue_xmit include/linux/netdevice.h:3091 [inline]
  neigh_resolve_output+0x558/0x658 net/core/neighbour.c:1563
  neigh_output include/net/neighbour.h:542 [inline]
  ip6_fini
---truncated---",Linux,Linux,"52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec, 52539ca89f365d3db530535fbffa88a3cca4d2ec"
366,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50191,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: don't set SB_RDONLY after filesystem errors

When the filesystem is mounted with errors=remount-ro, we were setting
SB_RDONLY flag to stop all filesystem modifications. We knew this misses
proper locking (sb->s_umount) and does not go through proper filesystem
remount procedure but it has been the way this worked since early ext2
days and it was good enough for catastrophic situation damage
mitigation. Recently, syzbot has found a way (see link) to trigger
warnings in filesystem freezing because the code got confused by
SB_RDONLY changing under its hands. Since these days we set
EXT4_FLAGS_SHUTDOWN on the superblock which is enough to stop all
filesystem modifications, modifying SB_RDONLY shouldn't be needed. So
stop doing that.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
365,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47701,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: avoid OOB when system.data xattr changes underneath the filesystem

When looking up for an entry in an inlined directory, if e_value_offs is
changed underneath the filesystem by some change in the block device, it
will lead to an out-of-bounds access that KASAN detects as an UAF.

EXT4-fs (loop0): mounted filesystem 00000000-0000-0000-0000-000000000000 r/w without journal. Quota mode: none.
loop0: detected capacity change from 2048 to 2047
==================================================================
BUG: KASAN: use-after-free in ext4_search_dir+0xf2/0x1c0 fs/ext4/namei.c:1500
Read of size 1 at addr ffff88803e91130f by task syz-executor269/5103

CPU: 0 UID: 0 PID: 5103 Comm: syz-executor269 Not tainted 6.11.0-rc4-syzkaller #0
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:93 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x169/0x550 mm/kasan/report.c:488
 kasan_report+0x143/0x180 mm/kasan/report.c:601
 ext4_search_dir+0xf2/0x1c0 fs/ext4/namei.c:1500
 ext4_find_inline_entry+0x4be/0x5e0 fs/ext4/inline.c:1697
 __ext4_find_entry+0x2b4/0x1b30 fs/ext4/namei.c:1573
 ext4_lookup_entry fs/ext4/namei.c:1727 [inline]
 ext4_lookup+0x15f/0x750 fs/ext4/namei.c:1795
 lookup_one_qstr_excl+0x11f/0x260 fs/namei.c:1633
 filename_create+0x297/0x540 fs/namei.c:3980
 do_symlinkat+0xf9/0x3a0 fs/namei.c:4587
 __do_sys_symlinkat fs/namei.c:4610 [inline]
 __se_sys_symlinkat fs/namei.c:4607 [inline]
 __x64_sys_symlinkat+0x95/0xb0 fs/namei.c:4607
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f3e73ced469
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 21 18 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007fff4d40c258 EFLAGS: 00000246 ORIG_RAX: 000000000000010a
RAX: ffffffffffffffda RBX: 0032656c69662f2e RCX: 00007f3e73ced469
RDX: 0000000020000200 RSI: 00000000ffffff9c RDI: 00000000200001c0
RBP: 0000000000000000 R08: 00007fff4d40c290 R09: 00007fff4d40c290
R10: 0023706f6f6c2f76 R11: 0000000000000246 R12: 00007fff4d40c27c
R13: 0000000000000003 R14: 431bde82d7b634db R15: 00007fff4d40c2b0
 </TASK>

Calling ext4_xattr_ibody_find right after reading the inode with
ext4_get_inode_loc will lead to a check of the validity of the xattrs,
avoiding this problem.",Linux,Linux,"e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236, e8e948e7802a2ab05c146d3e72a39b93b5718236"
341,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46791,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

can: mcp251x: fix deadlock if an interrupt occurs during mcp251x_open

The mcp251x_hw_wake() function is called with the mpc_lock mutex held and
disables the interrupt handler so that no interrupts can be processed while
waking the device. If an interrupt has already occurred then waiting for
the interrupt handler to complete will deadlock because it will be trying
to acquire the same mutex.

CPU0                           CPU1
----                           ----
mcp251x_open()
 mutex_lock(&priv->mcp_lock)
  request_threaded_irq()
                               <interrupt>
                               mcp251x_can_ist()
                                mutex_lock(&priv->mcp_lock)
  mcp251x_hw_wake()
   disable_irq() <-- deadlock

Use disable_irq_nosync() instead because the interrupt handler does
everything while holding the mutex so it doesn't matter if it's still
running.",Linux,Linux,"8ce8c0abcba314e1fe954a1840f6568bf5aef2ef, 8ce8c0abcba314e1fe954a1840f6568bf5aef2ef, 8ce8c0abcba314e1fe954a1840f6568bf5aef2ef, 8ce8c0abcba314e1fe954a1840f6568bf5aef2ef, 8ce8c0abcba314e1fe954a1840f6568bf5aef2ef, 8ce8c0abcba314e1fe954a1840f6568bf5aef2ef"
340,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46813,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check link_index before accessing dc->links[]

[WHY & HOW]
dc->links[] has max size of MAX_LINKS and NULL is return when trying to
access with out-of-bound index.

This fixes 3 OVERRUN and 1 RESOURCE_LEAK issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
339,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: Fix infinite recursion in fib6_dump_done().

syzkaller reported infinite recursive calls of fib6_dump_done() during
netlink socket destruction.  [1]

From the log, syzkaller sent an AF_UNSPEC RTM_GETROUTE message, and then
the response was generated.  The following recvmmsg() resumed the dump
for IPv6, but the first call of inet6_dump_fib() failed at kzalloc() due
to the fault injection.  [0]

  12:01:34 executing program 3:
  r0 = socket$nl_route(0x10, 0x3, 0x0)
  sendmsg$nl_route(r0, ... snip ...)
  recvmmsg(r0, ... snip ...) (fail_nth: 8)

Here, fib6_dump_done() was set to nlk_sk(sk)->cb.done, and the next call
of inet6_dump_fib() set it to nlk_sk(sk)->cb.args[3].  syzkaller stopped
receiving the response halfway through, and finally netlink_sock_destruct()
called nlk_sk(sk)->cb.done().

fib6_dump_done() calls fib6_dump_end() and nlk_sk(sk)->cb.done() if it
is still not NULL.  fib6_dump_end() rewrites nlk_sk(sk)->cb.done() by
nlk_sk(sk)->cb.args[3], but it has the same function, not NULL, calling
itself recursively and hitting the stack guard page.

To avoid the issue, let's set the destructor after kzalloc().

[0]:
FAULT_INJECTION: forcing a failure.
name failslab, interval 1, probability 0, space 0, times 0
CPU: 1 PID: 432110 Comm: syz-executor.3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
Call Trace:
 <TASK>
 dump_stack_lvl (lib/dump_stack.c:117)
 should_fail_ex (lib/fault-inject.c:52 lib/fault-inject.c:153)
 should_failslab (mm/slub.c:3733)
 kmalloc_trace (mm/slub.c:3748 mm/slub.c:3827 mm/slub.c:3992)
 inet6_dump_fib (./include/linux/slab.h:628 ./include/linux/slab.h:749 net/ipv6/ip6_fib.c:662)
 rtnl_dump_all (net/core/rtnetlink.c:4029)
 netlink_dump (net/netlink/af_netlink.c:2269)
 netlink_recvmsg (net/netlink/af_netlink.c:1988)
 ____sys_recvmsg (net/socket.c:1046 net/socket.c:2801)
 ___sys_recvmsg (net/socket.c:2846)
 do_recvmmsg (net/socket.c:2943)
 __x64_sys_recvmmsg (net/socket.c:3041 net/socket.c:3034 net/socket.c:3034)

[1]:
BUG: TASK stack guard page was hit at 00000000f2fa9af1 (stack is 00000000b7912430..000000009a436beb)
stack guard page: 0000 [#1] PREEMPT SMP KASAN
CPU: 1 PID: 223719 Comm: kworker/1:3 Not tainted 6.8.0-12821-g537c2e91d354-dirty #11
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014
Workqueue: events netlink_sock_destruct_work
RIP: 0010:fib6_dump_done (net/ipv6/ip6_fib.c:570)
Code: 3c 24 e8 f3 e9 51 fd e9 28 fd ff ff 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 41 57 41 56 41 55 41 54 55 48 89 fd <53> 48 8d 5d 60 e8 b6 4d 07 fd 48 89 da 48 b8 00 00 00 00 00 fc ff
RSP: 0018:ffffc9000d980000 EFLAGS: 00010293
RAX: 0000000000000000 RBX: ffffffff84405990 RCX: ffffffff844059d3
RDX: ffff8881028e0000 RSI: ffffffff84405ac2 RDI: ffff88810c02f358
RBP: ffff88810c02f358 R08: 0000000000000007 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000224 R12: 0000000000000000
R13: ffff888007c82c78 R14: ffff888007c82c68 R15: ffff888007c82c68
FS:  0000000000000000(0000) GS:ffff88811b100000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ffffc9000d97fff8 CR3: 0000000102309002 CR4: 0000000000770ef0
PKRU: 55555554
Call Trace:
 <#DF>
 </#DF>
 <TASK>
 fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))
 fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))
 ...
 fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))
 fib6_dump_done (net/ipv6/ip6_fib.c:572 (discriminator 1))
 netlink_sock_destruct (net/netlink/af_netlink.c:401)
 __sk_destruct (net/core/sock.c:2177 (discriminator 2))
 sk_destruct (net/core/sock.c:2224)
 __sk_free (net/core/sock.c:2235)
 sk_free (net/core/sock.c:2246)
 process_one_work (kernel/workqueue.c:3259)
 worker_thread (kernel/workqueue.c:3329 kernel/workqueue.
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
307,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46710,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/vmwgfx: Prevent unmapping active read buffers

The kms paths keep a persistent map active to read and compare the cursor
buffer. These maps can race with each other in simple scenario where:
a) buffer ""a"" mapped for update
b) buffer ""a"" mapped for compare
c) do the compare
d) unmap ""a"" for compare
e) update the cursor
f) unmap ""a"" for update
At step ""e"" the buffer has been unmapped and the read contents is bogus.

Prevent unmapping of active read buffers by simply keeping a count of
how many paths have currently active maps and unmap only when the count
reaches 0.",Linux,Linux,"485d98d472d53f9617ffdfba5e677ac29ad4fe20, 485d98d472d53f9617ffdfba5e677ac29ad4fe20, 485d98d472d53f9617ffdfba5e677ac29ad4fe20, 485d98d472d53f9617ffdfba5e677ac29ad4fe20"
315,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49858,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

efistub/tpm: Use ACPI reclaim memory for event log to avoid corruption

The TPM event log table is a Linux specific construct, where the data
produced by the GetEventLog() boot service is cached in memory, and
passed on to the OS using an EFI configuration table.

The use of EFI_LOADER_DATA here results in the region being left
unreserved in the E820 memory map constructed by the EFI stub, and this
is the memory description that is passed on to the incoming kernel by
kexec, which is therefore unaware that the region should be reserved.

Even though the utility of the TPM2 event log after a kexec is
questionable, any corruption might send the parsing code off into the
weeds and crash the kernel. So let's use EFI_ACPI_RECLAIM_MEMORY
instead, which is always treated as reserved by the E820 conversion
logic.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
314,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46747,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

HID: cougar: fix slab-out-of-bounds Read in cougar_report_fixup

report_fixup for the Cougar 500k Gaming Keyboard was not verifying
that the report descriptor size was correct before accessing it",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
313,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35965,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: L2CAP: Fix not validating setsockopt user input

Check user input length before copying data.",Linux,Linux,"33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8, 33575df7be6748292f88453f29319af6d639c5c8"
312,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42262,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Fix potential memory leak in the performance extension

If fetching of userspace memory fails during the main loop, all drm sync
objs looked up until that point will be leaked because of the missing
drm_syncobj_put.

Fix it by exporting and using a common cleanup helper.

(cherry picked from commit 484de39fa5f5b7bd0c5f2e2c5265167250ef7501)",Linux,Linux,"bae7cb5d68001a8d4ceec5964dda74bb9aab7220, bae7cb5d68001a8d4ceec5964dda74bb9aab7220"
311,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41060,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/radeon: check bo_va->bo is non-NULL before using it

The call to radeon_vm_clear_freed might clear bo_va->bo, so
we have to check it before dereferencing it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
310,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46860,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mt76: mt7921: fix NULL pointer access in mt7921_ipv6_addr_change

When disabling wifi mt7921_ipv6_addr_change() is called as a notifier.
At this point mvif->phy is already NULL so we cannot use it here.",Linux,Linux,"7bc04215a66b60e198aecaee8418f6d79fa19faa, 7bc04215a66b60e198aecaee8418f6d79fa19faa, 7bc04215a66b60e198aecaee8418f6d79fa19faa"
309,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43845,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

udf: Fix bogus checksum computation in udf_rename()

Syzbot reports uninitialized memory access in udf_rename() when updating
checksum of '..' directory entry of a moved directory. This is indeed
true as we pass on-stack diriter.fi to the udf_update_tag() and because
that has only struct fileIdentDesc included in it and not the impUse or
name fields, the checksumming function is going to checksum random stack
contents beyond the end of the structure. This is actually harmless
because the following udf_fiiter_write_fi() will recompute the checksum
from on-disk buffers where everything is properly included. So all that
is needed is just removing the bogus calculation.",Linux,Linux,"626860c470ff88e5f7f22a282efd1bfe953a1b54, 9616d00140a1cdf0bfa557019b36923dc7796942, e9109a92d2a95889498bed3719cd2318892171a2, e9109a92d2a95889498bed3719cd2318892171a2, e9109a92d2a95889498bed3719cd2318892171a2"
308,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42285,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/iwcm: Fix a use-after-free related to destroying CM IDs

iw_conn_req_handler() associates a new struct rdma_id_private (conn_id) with
an existing struct iw_cm_id (cm_id) as follows:

        conn_id->cm_id.iw = cm_id;
        cm_id->context = conn_id;
        cm_id->cm_handler = cma_iw_handler;

rdma_destroy_id() frees both the cm_id and the struct rdma_id_private. Make
sure that cm_work_handler() does not trigger a use-after-free by only
freeing of the struct rdma_id_private after all pending work has finished.",Linux,Linux,"59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4, 59c68ac31e15ad09d2cb04734e3c8c544a95f8d4"
306,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46751,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: don't BUG_ON() when 0 reference count at btrfs_lookup_extent_info()

Instead of doing a BUG_ON() handle the error by returning -EUCLEAN,
aborting the transaction and logging an error message.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
317,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45002,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

rtla/osnoise: Prevent NULL dereference in error handling

If the ""tool->data"" allocation fails then there is no need to call
osnoise_free_top() and, in fact, doing so will lead to a NULL dereference.",Linux,Linux,"1eceb2fc2ca549a170d7ee7cd1fde2daeda646ac, 1eceb2fc2ca549a170d7ee7cd1fde2daeda646ac, 1eceb2fc2ca549a170d7ee7cd1fde2daeda646ac, 1eceb2fc2ca549a170d7ee7cd1fde2daeda646ac"
305,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45029,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i2c: tegra: Do not mark ACPI devices as irq safe

On ACPI machines, the tegra i2c module encounters an issue due to a
mutex being called inside a spinlock. This leads to the following bug:

	BUG: sleeping function called from invalid context at kernel/locking/mutex.c:585
	...

	Call trace:
	__might_sleep
	__mutex_lock_common
	mutex_lock_nested
	acpi_subsys_runtime_resume
	rpm_resume
	tegra_i2c_xfer

The problem arises because during __pm_runtime_resume(), the spinlock
&dev->power.lock is acquired before rpm_resume() is called. Later,
rpm_resume() invokes acpi_subsys_runtime_resume(), which relies on
mutexes, triggering the error.

To address this issue, devices on ACPI are now marked as not IRQ-safe,
considering the dependency of acpi_subsys_runtime_resume() on mutexes.",Linux,Linux,"bd2fdedbf2bac27f4a2ac16b84ab9b9e5f67006c, bd2fdedbf2bac27f4a2ac16b84ab9b9e5f67006c, bd2fdedbf2bac27f4a2ac16b84ab9b9e5f67006c, bd2fdedbf2bac27f4a2ac16b84ab9b9e5f67006c"
304,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,n/a,n/a,n/a,
303,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46707,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: Make ICC_*SGI*_EL1 undef in the absence of a vGICv3

On a system with a GICv3, if a guest hasn't been configured with
GICv3 and that the host is not capable of GICv2 emulation,
a write to any of the ICC_*SGI*_EL1 registers is trapped to EL2.

We therefore try to emulate the SGI access, only to hit a NULL
pointer as no private interrupt is allocated (no GIC, remember?).

The obvious fix is to give the guest what it deserves, in the
shape of a UNDEF exception.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
302,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44979,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe: Fix missing workqueue destroy in xe_gt_pagefault

On driver reload we never free up the memory for the pagefault and
access counter workqueues. Add those destroy calls here.

(cherry picked from commit 7586fc52b14e0b8edd0d1f8a434e0de2078b7b2b)",Linux,Linux,"dd08ebf6c3525a7ea2186e636df064ea47281987, dd08ebf6c3525a7ea2186e636df064ea47281987"
301,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38577,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

rcu-tasks: Fix show_rcu_tasks_trace_gp_kthread buffer overflow

There is a possibility of buffer overflow in
show_rcu_tasks_trace_gp_kthread() if counters, passed
to sprintf() are huge. Counter numbers, needed for this
are unrealistically high, but buffer overflow is still
possible.

Use snprintf() with buffer size instead of sprintf().

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"edf3775f0ad66879796f594983163f672c4bf1a2, edf3775f0ad66879796f594983163f672c4bf1a2, edf3775f0ad66879796f594983163f672c4bf1a2, edf3775f0ad66879796f594983163f672c4bf1a2, edf3775f0ad66879796f594983163f672c4bf1a2, edf3775f0ad66879796f594983163f672c4bf1a2, edf3775f0ad66879796f594983163f672c4bf1a2"
300,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42277,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

iommu: sprd: Avoid NULL deref in sprd_iommu_hw_en

In sprd_iommu_cleanup() before calling function sprd_iommu_hw_en()
dom->sdev is equal to NULL, which leads to null dereference.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"92c089a931fd3939cd32318cf4f54e69e8f51a19, 8745f3592ee4a7b49ede16ddd3f12a41ecaa23c9, 9afea57384d4ae7b2034593eac7fa76c7122762a, 9afea57384d4ae7b2034593eac7fa76c7122762a, 9afea57384d4ae7b2034593eac7fa76c7122762a"
299,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35951,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/panfrost: Fix the error path in panfrost_mmu_map_fault_addr()

Subject: [PATCH] drm/panfrost: Fix the error path in
 panfrost_mmu_map_fault_addr()

If some the pages or sgt allocation failed, we shouldn't release the
pages ref we got earlier, otherwise we will end up with unbalanced
get/put_pages() calls. We should instead leave everything in place
and let the BO release function deal with extra cleanup when the object
is destroyed, or let the fault handler try again next time it's called.",Linux,Linux,"187d2929206e6b098312c174ea873e4cedf5420d, 187d2929206e6b098312c174ea873e4cedf5420d, 187d2929206e6b098312c174ea873e4cedf5420d"
298,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46735,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ublk_drv: fix NULL pointer dereference in ublk_ctrl_start_recovery()

When two UBLK_CMD_START_USER_RECOVERY commands are submitted, the
first one sets 'ubq->ubq_daemon' to NULL, and the second one triggers
WARN in ublk_queue_reinit() and subsequently a NULL pointer dereference
issue.

Fix it by adding the check in ublk_ctrl_start_recovery() and return
immediately in case of zero 'ub->nr_queues_ready'.

  BUG: kernel NULL pointer dereference, address: 0000000000000028
  RIP: 0010:ublk_ctrl_start_recovery.constprop.0+0x82/0x180
  Call Trace:
   <TASK>
   ? __die+0x20/0x70
   ? page_fault_oops+0x75/0x170
   ? exc_page_fault+0x64/0x140
   ? asm_exc_page_fault+0x22/0x30
   ? ublk_ctrl_start_recovery.constprop.0+0x82/0x180
   ublk_ctrl_uring_cmd+0x4f7/0x6c0
   ? pick_next_task_idle+0x26/0x40
   io_uring_cmd+0x9a/0x1b0
   io_issue_sqe+0x193/0x3f0
   io_wq_submit_work+0x9b/0x390
   io_worker_handle_work+0x165/0x360
   io_wq_worker+0xcb/0x2f0
   ? finish_task_switch.isra.0+0x203/0x290
   ? finish_task_switch.isra.0+0x203/0x290
   ? __pfx_io_wq_worker+0x10/0x10
   ret_from_fork+0x2d/0x50
   ? __pfx_io_wq_worker+0x10/0x10
   ret_from_fork_asm+0x1a/0x30
   </TASK>",Linux,Linux,"c732a852b419fa057b53657e2daaf9433940391c, c732a852b419fa057b53657e2daaf9433940391c, c732a852b419fa057b53657e2daaf9433940391c, c732a852b419fa057b53657e2daaf9433940391c"
316,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43891,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tracing: Have format file honor EVENT_FILE_FL_FREED

When eventfs was introduced, special care had to be done to coordinate the
freeing of the file meta data with the files that are exposed to user
space. The file meta data would have a ref count that is set when the file
is created and would be decremented and freed after the last user that
opened the file closed it. When the file meta data was to be freed, it
would set a flag (EVENT_FILE_FL_FREED) to denote that the file is freed,
and any new references made (like new opens or reads) would fail as it is
marked freed. This allowed other meta data to be freed after this flag was
set (under the event_mutex).

All the files that were dynamically created in the events directory had a
pointer to the file meta data and would call event_release() when the last
reference to the user space file was closed. This would be the time that it
is safe to free the file meta data.

A shortcut was made for the ""format"" file. It's i_private would point to
the ""call"" entry directly and not point to the file's meta data. This is
because all format files are the same for the same ""call"", so it was
thought there was no reason to differentiate them.  The other files
maintain state (like the ""enable"", ""trigger"", etc). But this meant if the
file were to disappear, the ""format"" file would be unaware of it.

This caused a race that could be trigger via the user_events test (that
would create dynamic events and free them), and running a loop that would
read the user_events format files:

In one console run:

 # cd tools/testing/selftests/user_events
 # while true; do ./ftrace_test; done

And in another console run:

 # cd /sys/kernel/tracing/
 # while true; do cat events/user_events/__test_event/format; done 2>/dev/null

With KASAN memory checking, it would trigger a use-after-free bug report
(which was a real bug). This was because the format file was not checking
the file's meta data flag ""EVENT_FILE_FL_FREED"", so it would access the
event that the file meta data pointed to after the event was freed.

After inspection, there are other locations that were found to not check
the EVENT_FILE_FL_FREED flag when accessing the trace_event_file. Add a
new helper function: event_file_file() that will make sure that the
event_mutex is held, and will return NULL if the trace_event_file has the
EVENT_FILE_FL_FREED flag set. Have the first reference of the struct file
pointer use event_file_file() and check for NULL. Later uses can still use
the event_file_data() helper function if the event_mutex is still held and
was not released since the event_file_file() call.",Linux,Linux,"14aa4f3efc6e784847e8c8543a7ef34ec9bdbb01, b63db58e2fa5d6963db9c45df88e60060f0ff35f, b63db58e2fa5d6963db9c45df88e60060f0ff35f"
318,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42158,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/pkey: Use kfree_sensitive() to fix Coccinelle warnings

Replace memzero_explicit() and kfree() with kfree_sensitive() to fix
warnings reported by Coccinelle:

WARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1506)
WARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1643)
WARNING opportunity for kfree_sensitive/kvfree_sensitive (line 1770)",Linux,Linux,"e80d4af0a320972aac58e2004d0ba4e44ef4c5c7, e80d4af0a320972aac58e2004d0ba4e44ef4c5c7"
338,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46724,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix out-of-bounds read of df_v1_7_channel_number

Check the fb_channel_number range to avoid the array out-of-bounds
read error",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
329,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50038,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: xtables: avoid NFPROTO_UNSPEC where needed

syzbot managed to call xt_cluster match via ebtables:

 WARNING: CPU: 0 PID: 11 at net/netfilter/xt_cluster.c:72 xt_cluster_mt+0x196/0x780
 [..]
 ebt_do_table+0x174b/0x2a40

Module registers to NFPROTO_UNSPEC, but it assumes ipv4/ipv6 packet
processing.  As this is only useful to restrict locally terminating
TCP/UDP traffic, register this for ipv4 and ipv6 family only.

Pablo points out that this is a general issue, direct users of the
set/getsockopt interface can call into targets/matches that were only
intended for use with ip(6)tables.

Check all UNSPEC matches and targets for similar issues:

- matches and targets are fine except if they assume skb_network_header()
  is valid -- this is only true when called from inet layer: ip(6) stack
  pulls the ip/ipv6 header into linear data area.
- targets that return XT_CONTINUE or other xtables verdicts must be
  restricted too, they are incompatbile with the ebtables traverser, e.g.
  EBT_CONTINUE is a completely different value than XT_CONTINUE.

Most matches/targets are changed to register for NFPROTO_IPV4/IPV6, as
they are provided for use by ip(6)tables.

The MARK target is also used by arptables, so register for NFPROTO_ARP too.

While at it, bail out if connbytes fails to enable the corresponding
conntrack family.

This change passes the selftests in iptables.git.",Linux,Linux,"0269ea4937343536ec7e85649932bc8c9686ea78, 0269ea4937343536ec7e85649932bc8c9686ea78, 0269ea4937343536ec7e85649932bc8c9686ea78, 0269ea4937343536ec7e85649932bc8c9686ea78, 0269ea4937343536ec7e85649932bc8c9686ea78"
337,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2020-12351,n/a,n/a,escalation of privilege,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,Improper input validation in BlueZ may allow an unauthenticated user to potentially enable escalation of privilege via adjacent access.,n/a,BlueZ,See references
336,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49884,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix slab-use-after-free in ext4_split_extent_at()

We hit the following use-after-free:

==================================================================
BUG: KASAN: slab-use-after-free in ext4_split_extent_at+0xba8/0xcc0
Read of size 2 at addr ffff88810548ed08 by task kworker/u20:0/40
CPU: 0 PID: 40 Comm: kworker/u20:0 Not tainted 6.9.0-dirty #724
Call Trace:
 <TASK>
 kasan_report+0x93/0xc0
 ext4_split_extent_at+0xba8/0xcc0
 ext4_split_extent.isra.0+0x18f/0x500
 ext4_split_convert_extents+0x275/0x750
 ext4_ext_handle_unwritten_extents+0x73e/0x1580
 ext4_ext_map_blocks+0xe20/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]

Allocated by task 40:
 __kmalloc_noprof+0x1ac/0x480
 ext4_find_extent+0xf3b/0x1e70
 ext4_ext_map_blocks+0x188/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]

Freed by task 40:
 kfree+0xf1/0x2b0
 ext4_find_extent+0xa71/0x1e70
 ext4_ext_insert_extent+0xa22/0x3260
 ext4_split_extent_at+0x3ef/0xcc0
 ext4_split_extent.isra.0+0x18f/0x500
 ext4_split_convert_extents+0x275/0x750
 ext4_ext_handle_unwritten_extents+0x73e/0x1580
 ext4_ext_map_blocks+0xe20/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]
==================================================================

The flow of issue triggering is as follows:

ext4_split_extent_at
  path = *ppath
  ext4_ext_insert_extent(ppath)
    ext4_ext_create_new_leaf(ppath)
      ext4_find_extent(orig_path)
        path = *orig_path
        read_extent_tree_block
          // return -ENOMEM or -EIO
        ext4_free_ext_path(path)
          kfree(path)
        *orig_path = NULL
  a. If err is -ENOMEM:
  ext4_ext_dirty(path + path->p_depth)
  // path use-after-free !!!
  b. If err is -EIO and we have EXT_DEBUG defined:
  ext4_ext_show_leaf(path)
    eh = path[depth].p_hdr
    // path also use-after-free !!!

So when trying to zeroout or fix the extent length, call ext4_find_extent()
to update the path.

In addition we use *ppath directly as an ext4_ext_show_leaf() input to
avoid possible use-after-free when EXT_DEBUG is defined, and to avoid
unnecessary path updates.",Linux,Linux,"dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4, dfe5080939ea4686b3414b5d970a9b26733c57a4"
335,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42297,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to don't dirty inode for readonly filesystem

syzbot reports f2fs bug as below:

kernel BUG at fs/f2fs/inode.c:933!
RIP: 0010:f2fs_evict_inode+0x1576/0x1590 fs/f2fs/inode.c:933
Call Trace:
 evict+0x2a4/0x620 fs/inode.c:664
 dispose_list fs/inode.c:697 [inline]
 evict_inodes+0x5f8/0x690 fs/inode.c:747
 generic_shutdown_super+0x9d/0x2c0 fs/super.c:675
 kill_block_super+0x44/0x90 fs/super.c:1667
 kill_f2fs_super+0x303/0x3b0 fs/f2fs/super.c:4894
 deactivate_locked_super+0xc1/0x130 fs/super.c:484
 cleanup_mnt+0x426/0x4c0 fs/namespace.c:1256
 task_work_run+0x24a/0x300 kernel/task_work.c:180
 ptrace_notify+0x2cd/0x380 kernel/signal.c:2399
 ptrace_report_syscall include/linux/ptrace.h:411 [inline]
 ptrace_report_syscall_exit include/linux/ptrace.h:473 [inline]
 syscall_exit_work kernel/entry/common.c:251 [inline]
 syscall_exit_to_user_mode_prepare kernel/entry/common.c:278 [inline]
 __syscall_exit_to_user_mode_work kernel/entry/common.c:283 [inline]
 syscall_exit_to_user_mode+0x15c/0x280 kernel/entry/common.c:296
 do_syscall_64+0x50/0x110 arch/x86/entry/common.c:88
 entry_SYSCALL_64_after_hwframe+0x63/0x6b

The root cause is:
- do_sys_open
 - f2fs_lookup
  - __f2fs_find_entry
   - f2fs_i_depth_write
    - f2fs_mark_inode_dirty_sync
     - f2fs_dirty_inode
      - set_inode_flag(inode, FI_DIRTY_INODE)

- umount
 - kill_f2fs_super
  - kill_block_super
   - generic_shutdown_super
    - sync_filesystem
    : sb is readonly, skip sync_filesystem()
    - evict_inodes
     - iput
      - f2fs_evict_inode
       - f2fs_bug_on(sbi, is_inode_flag_set(inode, FI_DIRTY_INODE))
       : trigger kernel panic

When we try to repair i_current_depth in readonly filesystem, let's
skip dirty inode to avoid panic in later f2fs_evict_inode().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
334,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null check in resource_log_pipe_topology_update

[WHY]
When switching from ""Extend"" to ""Second Display Only"" we sometimes
call resource_get_otg_master_for_stream on a stream for the eDP,
which is disconnected. This leads to a null pointer dereference.

[HOW]
Added a null check in dc_resource.c/resource_log_pipe_topology_update.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
333,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46673,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: aacraid: Fix double-free on probe failure

aac_probe_one() calls hardware-specific init functions through the
aac_driver_ident::init pointer, all of which eventually call down to
aac_init_adapter().

If aac_init_adapter() fails after allocating memory for aac_dev::queues,
it frees the memory but does not clear that member.

After the hardware-specific init function returns an error,
aac_probe_one() goes down an error path that frees the memory pointed to
by aac_dev::queues, resulting.in a double-free.",Linux,Linux,"8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab, 8e0c5ebde82b08f6d996e11983890fc4cc085fab"
332,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46855,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nft_socket: fix sk refcount leaks

We must put 'sk' reference before returning.",Linux,Linux,"039b1f4f24ecc8493b6bb9d70b4b78750d1b35c2, 039b1f4f24ecc8493b6bb9d70b4b78750d1b35c2, 039b1f4f24ecc8493b6bb9d70b4b78750d1b35c2, 039b1f4f24ecc8493b6bb9d70b4b78750d1b35c2, 039b1f4f24ecc8493b6bb9d70b4b78750d1b35c2"
331,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46703,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Revert ""serial: 8250_omap: Set the console genpd always on if no console suspend""

This reverts commit 68e6939ea9ec3d6579eadeab16060339cdeaf940.

Kevin reported that this causes a crash during suspend on platforms that
dont use PM domains.",Linux,Linux,"68e6939ea9ec3d6579eadeab16060339cdeaf940, 68e6939ea9ec3d6579eadeab16060339cdeaf940"
330,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49878,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

resource: fix region_intersects() vs add_memory_driver_managed()

On a system with CXL memory, the resource tree (/proc/iomem) related to
CXL memory may look like something as follows.

490000000-50fffffff : CXL Window 0
  490000000-50fffffff : region0
    490000000-50fffffff : dax0.0
      490000000-50fffffff : System RAM (kmem)

Because drivers/dax/kmem.c calls add_memory_driver_managed() during
onlining CXL memory, which makes ""System RAM (kmem)"" a descendant of ""CXL
Window X"".  This confuses region_intersects(), which expects all ""System
RAM"" resources to be at the top level of iomem_resource.  This can lead to
bugs.

For example, when the following command line is executed to write some
memory in CXL memory range via /dev/mem,

 $ dd if=data of=/dev/mem bs=$((1 << 10)) seek=$((0x490000000 >> 10)) count=1
 dd: error writing '/dev/mem': Bad address
 1+0 records in
 0+0 records out
 0 bytes copied, 0.0283507 s, 0.0 kB/s

the command fails as expected.  However, the error code is wrong.  It
should be ""Operation not permitted"" instead of ""Bad address"".  More
seriously, the /dev/mem permission checking in devmem_is_allowed() passes
incorrectly.  Although the accessing is prevented later because ioremap()
isn't allowed to map system RAM, it is a potential security issue.  During
command executing, the following warning is reported in the kernel log for
calling ioremap() on system RAM.

 ioremap on RAM at 0x0000000490000000 - 0x0000000490000fff
 WARNING: CPU: 2 PID: 416 at arch/x86/mm/ioremap.c:216 __ioremap_caller.constprop.0+0x131/0x35d
 Call Trace:
  memremap+0xcb/0x184
  xlate_dev_mem_ptr+0x25/0x2f
  write_mem+0x94/0xfb
  vfs_write+0x128/0x26d
  ksys_write+0xac/0xfe
  do_syscall_64+0x9a/0xfd
  entry_SYSCALL_64_after_hwframe+0x4b/0x53

The details of command execution process are as follows.  In the above
resource tree, ""System RAM"" is a descendant of ""CXL Window 0"" instead of a
top level resource.  So, region_intersects() will report no System RAM
resources in the CXL memory region incorrectly, because it only checks the
top level resources.  Consequently, devmem_is_allowed() will return 1
(allow access via /dev/mem) for CXL memory region incorrectly. 
Fortunately, ioremap() doesn't allow to map System RAM and reject the
access.

So, region_intersects() needs to be fixed to work correctly with the
resource tree with ""System RAM"" not at top level as above.  To fix it, if
we found a unmatched resource in the top level, we will continue to search
matched resources in its descendant resources.  So, we will not miss any
matched resources in resource tree anymore.

In the new implementation, an example resource tree

|------------- ""CXL Window 0"" ------------|
|-- ""System RAM"" --|

will behave similar as the following fake resource tree for
region_intersects(, IORESOURCE_SYSTEM_RAM, ),

|-- ""System RAM"" --||-- ""CXL Window 0a"" --|

Where ""CXL Window 0a"" is part of the original ""CXL Window 0"" that
isn't covered by ""System RAM"".",Linux,Linux,"c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4, c221c0b0308fd01d9fb33a16f64d2fd95f8830a4"
328,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46679,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ethtool: check device is present when getting link settings

A sysfs reader can race with a device reset or removal, attempting to
read device state when the device is not actually present. eg:

     [exception RIP: qed_get_current_link+17]
  #8 [ffffb9e4f2907c48] qede_get_link_ksettings at ffffffffc07a994a [qede]
  #9 [ffffb9e4f2907cd8] __rh_call_get_link_ksettings at ffffffff992b01a3
 #10 [ffffb9e4f2907d38] __ethtool_get_link_ksettings at ffffffff992b04e4
 #11 [ffffb9e4f2907d90] duplex_show at ffffffff99260300
 #12 [ffffb9e4f2907e38] dev_attr_show at ffffffff9905a01c
 #13 [ffffb9e4f2907e50] sysfs_kf_seq_show at ffffffff98e0145b
 #14 [ffffb9e4f2907e68] seq_read at ffffffff98d902e3
 #15 [ffffb9e4f2907ec8] vfs_read at ffffffff98d657d1
 #16 [ffffb9e4f2907f00] ksys_read at ffffffff98d65c3f
 #17 [ffffb9e4f2907f38] do_syscall_64 at ffffffff98a052fb

 crash> struct net_device.state ffff9a9d21336000
    state = 5,

state 5 is __LINK_STATE_START (0b1) and __LINK_STATE_NOCARRIER (0b100).
The device is not present, note lack of __LINK_STATE_PRESENT (0b10).

This is the same sort of panic as observed in commit 4224cfd7fb65
(""net-sysfs: add check for netdevice being present to speed_show"").

There are many other callers of __ethtool_get_link_ksettings() which
don't have a device presence check.

Move this check into ethtool to protect all callers.",Linux,Linux,"d519e17e2d01a0ee9abe083019532061b4438065, d519e17e2d01a0ee9abe083019532061b4438065, d519e17e2d01a0ee9abe083019532061b4438065, d519e17e2d01a0ee9abe083019532061b4438065, d519e17e2d01a0ee9abe083019532061b4438065, d519e17e2d01a0ee9abe083019532061b4438065, d519e17e2d01a0ee9abe083019532061b4438065"
319,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50019,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

kthread: unpark only parked kthread

Calling into kthread unparking unconditionally is mostly harmless when
the kthread is already unparked. The wake up is then simply ignored
because the target is not in TASK_PARKED state.

However if the kthread is per CPU, the wake up is preceded by a call
to kthread_bind() which expects the task to be inactive and in
TASK_PARKED state, which obviously isn't the case if it is unparked.

As a result, calling kthread_stop() on an unparked per-cpu kthread
triggers such a warning:

	WARNING: CPU: 0 PID: 11 at kernel/kthread.c:525 __kthread_bind_mask kernel/kthread.c:525
	 <TASK>
	 kthread_stop+0x17a/0x630 kernel/kthread.c:707
	 destroy_workqueue+0x136/0xc40 kernel/workqueue.c:5810
	 wg_destruct+0x1e2/0x2e0 drivers/net/wireguard/device.c:257
	 netdev_run_todo+0xe1a/0x1000 net/core/dev.c:10693
	 default_device_exit_batch+0xa14/0xa90 net/core/dev.c:11769
	 ops_exit_list net/core/net_namespace.c:178 [inline]
	 cleanup_net+0x89d/0xcc0 net/core/net_namespace.c:640
	 process_one_work kernel/workqueue.c:3231 [inline]
	 process_scheduled_works+0xa2c/0x1830 kernel/workqueue.c:3312
	 worker_thread+0x86d/0xd70 kernel/workqueue.c:3393
	 kthread+0x2f0/0x390 kernel/kthread.c:389
	 ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
	 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
	 </TASK>

Fix this with skipping unecessary unparking while stopping a kthread.",Linux,Linux,"5c25b5ff89f004c30b04759dc34ace8585a4085f, 5c25b5ff89f004c30b04759dc34ace8585a4085f, 5c25b5ff89f004c30b04759dc34ace8585a4085f, 5c25b5ff89f004c30b04759dc34ace8585a4085f, 5c25b5ff89f004c30b04759dc34ace8585a4085f"
327,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46775,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Validate function returns

[WHAT & HOW]
Function return values must be checked before data can be used
in subsequent functions.

This fixes 4 CHECKED_RETURN issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
326,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46738,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

VMCI: Fix use-after-free when removing resource in vmci_resource_remove()

When removing a resource from vmci_resource_table in
vmci_resource_remove(), the search is performed using the resource
handle by comparing context and resource fields.

It is possible though to create two resources with different types
but same handle (same context and resource fields).

When trying to remove one of the resources, vmci_resource_remove()
may not remove the intended one, but the object will still be freed
as in the case of the datagram type in vmci_datagram_destroy_handle().
vmci_resource_table will still hold a pointer to this freed resource
leading to a use-after-free vulnerability.

BUG: KASAN: use-after-free in vmci_handle_is_equal include/linux/vmw_vmci_defs.h:142 [inline]
BUG: KASAN: use-after-free in vmci_resource_remove+0x3a1/0x410 drivers/misc/vmw_vmci/vmci_resource.c:147
Read of size 4 at addr ffff88801c16d800 by task syz-executor197/1592
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x82/0xa9 lib/dump_stack.c:106
 print_address_description.constprop.0+0x21/0x366 mm/kasan/report.c:239
 __kasan_report.cold+0x7f/0x132 mm/kasan/report.c:425
 kasan_report+0x38/0x51 mm/kasan/report.c:442
 vmci_handle_is_equal include/linux/vmw_vmci_defs.h:142 [inline]
 vmci_resource_remove+0x3a1/0x410 drivers/misc/vmw_vmci/vmci_resource.c:147
 vmci_qp_broker_detach+0x89a/0x11b9 drivers/misc/vmw_vmci/vmci_queue_pair.c:2182
 ctx_free_ctx+0x473/0xbe1 drivers/misc/vmw_vmci/vmci_context.c:444
 kref_put include/linux/kref.h:65 [inline]
 vmci_ctx_put drivers/misc/vmw_vmci/vmci_context.c:497 [inline]
 vmci_ctx_destroy+0x170/0x1d6 drivers/misc/vmw_vmci/vmci_context.c:195
 vmci_host_close+0x125/0x1ac drivers/misc/vmw_vmci/vmci_host.c:143
 __fput+0x261/0xa34 fs/file_table.c:282
 task_work_run+0xf0/0x194 kernel/task_work.c:164
 tracehook_notify_resume include/linux/tracehook.h:189 [inline]
 exit_to_user_mode_loop+0x184/0x189 kernel/entry/common.c:187
 exit_to_user_mode_prepare+0x11b/0x123 kernel/entry/common.c:220
 __syscall_exit_to_user_mode_work kernel/entry/common.c:302 [inline]
 syscall_exit_to_user_mode+0x18/0x42 kernel/entry/common.c:313
 do_syscall_64+0x41/0x85 arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x6e/0x0

This change ensures the type is also checked when removing
the resource from vmci_resource_table in vmci_resource_remove().",Linux,Linux,"bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6, bc63dedb7d46a7d690c6b6edf69136b88af06cc6"
325,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42288,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qla2xxx: Fix for possible memory corruption

Init Control Block is dereferenced incorrectly.  Correctly dereference ICB",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
324,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35966,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: RFCOMM: Fix not validating setsockopt user input

syzbot reported rfcomm_sock_setsockopt_old() is copying data without
checking user input length.

BUG: KASAN: slab-out-of-bounds in copy_from_sockptr_offset
include/linux/sockptr.h:49 [inline]
BUG: KASAN: slab-out-of-bounds in copy_from_sockptr
include/linux/sockptr.h:55 [inline]
BUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt_old
net/bluetooth/rfcomm/sock.c:632 [inline]
BUG: KASAN: slab-out-of-bounds in rfcomm_sock_setsockopt+0x893/0xa70
net/bluetooth/rfcomm/sock.c:673
Read of size 4 at addr ffff8880209a8bc3 by task syz-executor632/5064",Linux,Linux,"9f2c8a03fbb3048cf38b158f87aa0c3c09bca084, 9f2c8a03fbb3048cf38b158f87aa0c3c09bca084, 9f2c8a03fbb3048cf38b158f87aa0c3c09bca084, 9f2c8a03fbb3048cf38b158f87aa0c3c09bca084"
323,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46835,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix smatch static checker warning

adev->gfx.imu.funcs could be NULL",Linux,Linux,"3d879e81f0f9ed5d33b5eda0fe5226c884bb8073, 3d879e81f0f9ed5d33b5eda0fe5226c884bb8073, 3d879e81f0f9ed5d33b5eda0fe5226c884bb8073, 3d879e81f0f9ed5d33b5eda0fe5226c884bb8073"
322,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44961,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Forward soft recovery errors to userspace

As we discussed before[1], soft recovery should be
forwarded to userspace, or we can get into a really
bad state where apps will keep submitting hanging
command buffers cascading us to a hard reset.

1: https://lore.kernel.org/all/bf23d5ed-9a6b-43e7-84ee-8cbfd0d60f18@froggi.es/
(cherry picked from commit 434967aadbbbe3ad9103cc29e9a327de20fdba01)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
321,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49948,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: add more sanity checks to qdisc_pkt_len_init()

One path takes care of SKB_GSO_DODGY, assuming
skb->len is bigger than hdr_len.

virtio_net_hdr_to_skb() does not fully dissect TCP headers,
it only make sure it is at least 20 bytes.

It is possible for an user to provide a malicious 'GSO' packet,
total length of 80 bytes.

- 20 bytes of IPv4 header
- 60 bytes TCP header
- a small gso_size like 8

virtio_net_hdr_to_skb() would declare this packet as a normal
GSO packet, because it would see 40 bytes of payload,
bigger than gso_size.

We need to make detect this case to not underflow
qdisc_skb_cb(skb)->pkt_len.",Linux,Linux,"1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362, 1def9238d4aa2146924994aa4b7dc861f03b9362"
320,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-25744,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel before 6.6.7, an untrusted VMM can trigger int80 syscall handling at any given point. This is related to arch/x86/coco/tdx/tdx.c and arch/x86/mm/mem_encrypt_amd.c.",n/a,n/a,n/a
383,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49959,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jbd2: stop waiting for space when jbd2_cleanup_journal_tail() returns error

In __jbd2_log_wait_for_space(), we might call jbd2_cleanup_journal_tail()
to recover some journal space. But if an error occurs while executing
jbd2_cleanup_journal_tail() (e.g., an EIO), we don't stop waiting for free
space right away, we try other branches, and if j_committing_transaction
is NULL (i.e., the tid is 0), we will get the following complain:

============================================
JBD2: I/O error when updating journal superblock for sdd-8.
__jbd2_log_wait_for_space: needed 256 blocks and only had 217 space available
__jbd2_log_wait_for_space: no way to get more journal space in sdd-8
------------[ cut here ]------------
WARNING: CPU: 2 PID: 139804 at fs/jbd2/checkpoint.c:109 __jbd2_log_wait_for_space+0x251/0x2e0
Modules linked in:
CPU: 2 PID: 139804 Comm: kworker/u8:3 Not tainted 6.6.0+ #1
RIP: 0010:__jbd2_log_wait_for_space+0x251/0x2e0
Call Trace:
 <TASK>
 add_transaction_credits+0x5d1/0x5e0
 start_this_handle+0x1ef/0x6a0
 jbd2__journal_start+0x18b/0x340
 ext4_dirty_inode+0x5d/0xb0
 __mark_inode_dirty+0xe4/0x5d0
 generic_update_time+0x60/0x70
[...]
============================================

So only if jbd2_cleanup_journal_tail() returns 1, i.e., there is nothing to
clean up at the moment, continue to try to reclaim free space in other ways.

Note that this fix relies on commit 6f6a6fda2945 (""jbd2: fix ocfs2 corrupt
when updating journal superblock fails"") to make jbd2_cleanup_journal_tail
return the correct error code.",Linux,Linux,"8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550, 8c3f25d8950c3e9fe6c9849f88679b3f2a071550"
384,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49913,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null check for top_pipe_to_program in commit_planes_for_stream

This commit addresses a null pointer dereference issue in the
`commit_planes_for_stream` function at line 4140. The issue could occur
when `top_pipe_to_program` is null.

The fix adds a check to ensure `top_pipe_to_program` is not null before
accessing its stream_res. This prevents a null pointer dereference.

Reported by smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/core/dc.c:4140 commit_planes_for_stream() error: we previously assumed 'top_pipe_to_program' could be null (see line 3906)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
385,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47693,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

IB/core: Fix ib_cache_setup_one error flow cleanup

When ib_cache_update return an error, we exit ib_cache_setup_one
instantly with no proper cleanup, even though before this we had
already successfully done gid_table_setup_one, that results in
the kernel WARN below.

Do proper cleanup using gid_table_cleanup_one before returning
the err in order to fix the issue.

WARNING: CPU: 4 PID: 922 at drivers/infiniband/core/cache.c:806 gid_table_release_one+0x181/0x1a0
Modules linked in:
CPU: 4 UID: 0 PID: 922 Comm: c_repro Not tainted 6.11.0-rc1+ #3
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
RIP: 0010:gid_table_release_one+0x181/0x1a0
Code: 44 8b 38 75 0c e8 2f cb 34 ff 4d 8b b5 28 05 00 00 e8 23 cb 34 ff 44 89 f9 89 da 4c 89 f6 48 c7 c7 d0 58 14 83 e8 4f de 21 ff <0f> 0b 4c 8b 75 30 e9 54 ff ff ff 48 8    3 c4 10 5b 5d 41 5c 41 5d 41
RSP: 0018:ffffc90002b835b0 EFLAGS: 00010286
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff811c8527
RDX: 0000000000000000 RSI: ffffffff811c8534 RDI: 0000000000000001
RBP: ffff8881011b3d00 R08: ffff88810b3abe00 R09: 205d303839303631
R10: 666572207972746e R11: 72746e6520444947 R12: 0000000000000001
R13: ffff888106390000 R14: ffff8881011f2110 R15: 0000000000000001
FS:  00007fecc3b70800(0000) GS:ffff88813bd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000340 CR3: 000000010435a001 CR4: 00000000003706b0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 ? show_regs+0x94/0xa0
 ? __warn+0x9e/0x1c0
 ? gid_table_release_one+0x181/0x1a0
 ? report_bug+0x1f9/0x340
 ? gid_table_release_one+0x181/0x1a0
 ? handle_bug+0xa2/0x110
 ? exc_invalid_op+0x31/0xa0
 ? asm_exc_invalid_op+0x16/0x20
 ? __warn_printk+0xc7/0x180
 ? __warn_printk+0xd4/0x180
 ? gid_table_release_one+0x181/0x1a0
 ib_device_release+0x71/0xe0
 ? __pfx_ib_device_release+0x10/0x10
 device_release+0x44/0xd0
 kobject_put+0x135/0x3d0
 put_device+0x20/0x30
 rxe_net_add+0x7d/0xa0
 rxe_newlink+0xd7/0x190
 nldev_newlink+0x1b0/0x2a0
 ? __pfx_nldev_newlink+0x10/0x10
 rdma_nl_rcv_msg+0x1ad/0x2e0
 rdma_nl_rcv_skb.constprop.0+0x176/0x210
 netlink_unicast+0x2de/0x400
 netlink_sendmsg+0x306/0x660
 __sock_sendmsg+0x110/0x120
 ____sys_sendmsg+0x30e/0x390
 ___sys_sendmsg+0x9b/0xf0
 ? kstrtouint+0x6e/0xa0
 ? kstrtouint_from_user+0x7c/0xb0
 ? get_pid_task+0xb0/0xd0
 ? proc_fail_nth_write+0x5b/0x140
 ? __fget_light+0x9a/0x200
 ? preempt_count_add+0x47/0xa0
 __sys_sendmsg+0x61/0xd0
 do_syscall_64+0x50/0x110
 entry_SYSCALL_64_after_hwframe+0x76/0x7e",Linux,Linux,"1901b91f99821955eac2bd48fe25ee983385dc00, 1901b91f99821955eac2bd48fe25ee983385dc00, 1901b91f99821955eac2bd48fe25ee983385dc00, 1901b91f99821955eac2bd48fe25ee983385dc00, 1901b91f99821955eac2bd48fe25ee983385dc00, 1901b91f99821955eac2bd48fe25ee983385dc00"
440,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43871,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

devres: Fix memory leakage caused by driver API devm_free_percpu()

It will cause memory leakage when use driver API devm_free_percpu()
to free memory allocated by devm_alloc_percpu(), fixed by using
devres_release() instead of devres_destroy() within devm_free_percpu().",Linux,Linux,"ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06, ff86aae3b4112b85d2231c23bccbc49589df1c06"
448,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46715,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

driver: iio: add missing checks on iio_info's callback access

Some callbacks from iio_info structure are accessed without any check, so
if a driver doesn't implement them trying to access the corresponding
sysfs entries produce a kernel oops such as:

[ 2203.527791] Unable to handle kernel NULL pointer dereference at virtual address 00000000 when execute
[...]
[ 2203.783416] Call trace:
[ 2203.783429]  iio_read_channel_info_avail from dev_attr_show+0x18/0x48
[ 2203.789807]  dev_attr_show from sysfs_kf_seq_show+0x90/0x120
[ 2203.794181]  sysfs_kf_seq_show from seq_read_iter+0xd0/0x4e4
[ 2203.798555]  seq_read_iter from vfs_read+0x238/0x2a0
[ 2203.802236]  vfs_read from ksys_read+0xa4/0xd4
[ 2203.805385]  ksys_read from ret_fast_syscall+0x0/0x54
[ 2203.809135] Exception stack(0xe0badfa8 to 0xe0badff0)
[ 2203.812880] dfa0:                   00000003 b6f10f80 00000003 b6eab000 00020000 00000000
[ 2203.819746] dfc0: 00000003 b6f10f80 7ff00000 00000003 00000003 00000000 00020000 00000000
[ 2203.826619] dfe0: b6e1bc88 bed80958 b6e1bc94 b6e1bcb0
[ 2203.830363] Code: bad PC value
[ 2203.832695] ---[ end trace 0000000000000000 ]---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
447,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-40959,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xfrm6: check ip6_dst_idev() return value in xfrm6_get_saddr()

ip6_dst_idev() can return NULL, xfrm6_get_saddr() must act accordingly.

syzbot reported:

Oops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 1 PID: 12 Comm: kworker/u8:1 Not tainted 6.10.0-rc2-syzkaller-00383-gb8481381d4e2 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024
Workqueue: wg-kex-wg1 wg_packet_handshake_send_worker
 RIP: 0010:xfrm6_get_saddr+0x93/0x130 net/ipv6/xfrm6_policy.c:64
Code: df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 97 00 00 00 4c 8b ab d8 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 ea 48 c1 ea 03 <80> 3c 02 00 0f 85 86 00 00 00 4d 8b 6d 00 e8 ca 13 47 01 48 b8 00
RSP: 0018:ffffc90000117378 EFLAGS: 00010246
RAX: dffffc0000000000 RBX: ffff88807b079dc0 RCX: ffffffff89a0d6d7
RDX: 0000000000000000 RSI: ffffffff89a0d6e9 RDI: ffff88807b079e98
RBP: ffff88807ad73248 R08: 0000000000000007 R09: fffffffffffff000
R10: ffff88807b079dc0 R11: 0000000000000007 R12: ffffc90000117480
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
FS:  0000000000000000(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f4586d00440 CR3: 0000000079042000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
  xfrm_get_saddr net/xfrm/xfrm_policy.c:2452 [inline]
  xfrm_tmpl_resolve_one net/xfrm/xfrm_policy.c:2481 [inline]
  xfrm_tmpl_resolve+0xa26/0xf10 net/xfrm/xfrm_policy.c:2541
  xfrm_resolve_and_create_bundle+0x140/0x2570 net/xfrm/xfrm_policy.c:2835
  xfrm_bundle_lookup net/xfrm/xfrm_policy.c:3070 [inline]
  xfrm_lookup_with_ifid+0x4d1/0x1e60 net/xfrm/xfrm_policy.c:3201
  xfrm_lookup net/xfrm/xfrm_policy.c:3298 [inline]
  xfrm_lookup_route+0x3b/0x200 net/xfrm/xfrm_policy.c:3309
  ip6_dst_lookup_flow+0x15c/0x1d0 net/ipv6/ip6_output.c:1256
  send6+0x611/0xd20 drivers/net/wireguard/socket.c:139
  wg_socket_send_skb_to_peer+0xf9/0x220 drivers/net/wireguard/socket.c:178
  wg_socket_send_buffer_to_peer+0x12b/0x190 drivers/net/wireguard/socket.c:200
  wg_packet_send_handshake_initiation+0x227/0x360 drivers/net/wireguard/send.c:40
  wg_packet_handshake_send_worker+0x1c/0x30 drivers/net/wireguard/send.c:51
  process_one_work+0x9fb/0x1b60 kernel/workqueue.c:3231
  process_scheduled_works kernel/workqueue.c:3312 [inline]
  worker_thread+0x6c8/0xf70 kernel/workqueue.c:3393
  kthread+0x2c1/0x3a0 kernel/kthread.c:389
  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
446,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46843,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: ufs: core: Remove SCSI host only if added

If host tries to remove ufshcd driver from a UFS device it would cause a
kernel panic if ufshcd_async_scan fails during ufshcd_probe_hba before
adding a SCSI host with scsi_add_host and MCQ is enabled since SCSI host
has been defered after MCQ configuration introduced by commit 0cab4023ec7b
(""scsi: ufs: core: Defer adding host to SCSI if MCQ is supported"").

To guarantee that SCSI host is removed only if it has been added, set the
scsi_host_added flag to true after adding a SCSI host and check whether it
is set or not before removing it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
445,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45030,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

igb: cope with large MAX_SKB_FRAGS

Sabrina reports that the igb driver does not cope well with large
MAX_SKB_FRAG values: setting MAX_SKB_FRAG to 45 causes payload
corruption on TX.

An easy reproducer is to run ssh to connect to the machine.  With
MAX_SKB_FRAGS=17 it works, with MAX_SKB_FRAGS=45 it fails.  This has
been reported originally in
https://bugzilla.redhat.com/show_bug.cgi?id=2265320

The root cause of the issue is that the driver does not take into
account properly the (possibly large) shared info size when selecting
the ring layout, and will try to fit two packets inside the same 4K
page even when the 1st fraglist will trump over the 2nd head.

Address the issue by checking if 2K buffers are insufficient.",Linux,Linux,"3948b05950fdd64002a5f182c65ba5cf2d53cf71, 3948b05950fdd64002a5f182c65ba5cf2d53cf71, 3948b05950fdd64002a5f182c65ba5cf2d53cf71"
444,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43906,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/admgpu: fix dereferencing null pointer context

When user space sets an invalid ta type, the pointer context will be empty.
So it need to check the pointer context before using it",Linux,Linux,"896b7addf2dc24908ad87f8ebeff83b2a83b8e04, 896b7addf2dc24908ad87f8ebeff83b2a83b8e04, 896b7addf2dc24908ad87f8ebeff83b2a83b8e04"
443,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42305,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: check dot and dotdot of dx_root before making dir indexed

Syzbot reports a issue as follows:
============================================
BUG: unable to handle page fault for address: ffffed11022e24fe
PGD 23ffee067 P4D 23ffee067 PUD 0
Oops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI
CPU: 0 PID: 5079 Comm: syz-executor306 Not tainted 6.10.0-rc5-g55027e689933 #0
Call Trace:
 <TASK>
 make_indexed_dir+0xdaf/0x13c0 fs/ext4/namei.c:2341
 ext4_add_entry+0x222a/0x25d0 fs/ext4/namei.c:2451
 ext4_rename fs/ext4/namei.c:3936 [inline]
 ext4_rename2+0x26e5/0x4370 fs/ext4/namei.c:4214
[...]
============================================

The immediate cause of this problem is that there is only one valid dentry
for the block to be split during do_split, so split==0 results in out of
bounds accesses to the map triggering the issue.

    do_split
      unsigned split
      dx_make_map
       count = 1
      split = count/2 = 0;
      continued = hash2 == map[split - 1].hash;
       ---> map[4294967295]

The maximum length of a filename is 255 and the minimum block size is 1024,
so it is always guaranteed that the number of entries is greater than or
equal to 2 when do_split() is called.

But syzbot's crafted image has no dot and dotdot in dir, and the dentry
distribution in dirblock is as follows:

  bus     dentry1          hole           dentry2           free
|xx--|xx-------------|...............|xx-------------|...............|
0   12 (8+248)=256  268     256     524 (8+256)=264 788     236     1024

So when renaming dentry1 increases its name_len length by 1, neither hole
nor free is sufficient to hold the new dentry, and make_indexed_dir() is
called.

In make_indexed_dir() it is assumed that the first two entries of the
dirblock must be dot and dotdot, so bus and dentry1 are left in dx_root
because they are treated as dot and dotdot, and only dentry2 is moved
to the new leaf block. That's why count is equal to 1.

Therefore add the ext4_check_dx_root() helper function to add more sanity
checks to dot and dotdot before starting the conversion to avoid the above
issue.",Linux,Linux,"ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571, ac27a0ec112a089f1a5102bc8dffc79c8c815571"
442,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43880,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_acl_erp: Fix object nesting warning

ACLs in Spectrum-2 and newer ASICs can reside in the algorithmic TCAM
(A-TCAM) or in the ordinary circuit TCAM (C-TCAM). The former can
contain more ACLs (i.e., tc filters), but the number of masks in each
region (i.e., tc chain) is limited.

In order to mitigate the effects of the above limitation, the device
allows filters to share a single mask if their masks only differ in up
to 8 consecutive bits. For example, dst_ip/25 can be represented using
dst_ip/24 with a delta of 1 bit. The C-TCAM does not have a limit on the
number of masks being used (and therefore does not support mask
aggregation), but can contain a limited number of filters.

The driver uses the ""objagg"" library to perform the mask aggregation by
passing it objects that consist of the filter's mask and whether the
filter is to be inserted into the A-TCAM or the C-TCAM since filters in
different TCAMs cannot share a mask.

The set of created objects is dependent on the insertion order of the
filters and is not necessarily optimal. Therefore, the driver will
periodically ask the library to compute a more optimal set (""hints"") by
looking at all the existing objects.

When the library asks the driver whether two objects can be aggregated
the driver only compares the provided masks and ignores the A-TCAM /
C-TCAM indication. This is the right thing to do since the goal is to
move as many filters as possible to the A-TCAM. The driver also forbids
two identical masks from being aggregated since this can only happen if
one was intentionally put in the C-TCAM to avoid a conflict in the
A-TCAM.

The above can result in the following set of hints:

H1: {mask X, A-TCAM} -> H2: {mask Y, A-TCAM} // X is Y + delta
H3: {mask Y, C-TCAM} -> H4: {mask Z, A-TCAM} // Y is Z + delta

After getting the hints from the library the driver will start migrating
filters from one region to another while consulting the computed hints
and instructing the device to perform a lookup in both regions during
the transition.

Assuming a filter with mask X is being migrated into the A-TCAM in the
new region, the hints lookup will return H1. Since H2 is the parent of
H1, the library will try to find the object associated with it and
create it if necessary in which case another hints lookup (recursive)
will be performed. This hints lookup for {mask Y, A-TCAM} will either
return H2 or H3 since the driver passes the library an object comparison
function that ignores the A-TCAM / C-TCAM indication.

This can eventually lead to nested objects which are not supported by
the library [1].

Fix by removing the object comparison function from both the driver and
the library as the driver was the only user. That way the lookup will
only return exact matches.

I do not have a reliable reproducer that can reproduce the issue in a
timely manner, but before the fix the issue would reproduce in several
minutes and with the fix it does not reproduce in over an hour.

Note that the current usefulness of the hints is limited because they
include the C-TCAM indication and represent aggregation that cannot
actually happen. This will be addressed in net-next.

[1]
WARNING: CPU: 0 PID: 153 at lib/objagg.c:170 objagg_obj_parent_assign+0xb5/0xd0
Modules linked in:
CPU: 0 PID: 153 Comm: kworker/0:18 Not tainted 6.9.0-rc6-custom-g70fbc2c1c38b #42
Hardware name: Mellanox Technologies Ltd. MSN3700C/VMOD0008, BIOS 5.11 10/10/2018
Workqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work
RIP: 0010:objagg_obj_parent_assign+0xb5/0xd0
[...]
Call Trace:
 <TASK>
 __objagg_obj_get+0x2bb/0x580
 objagg_obj_get+0xe/0x80
 mlxsw_sp_acl_erp_mask_get+0xb5/0xf0
 mlxsw_sp_acl_atcam_entry_add+0xe8/0x3c0
 mlxsw_sp_acl_tcam_entry_create+0x5e/0xa0
 mlxsw_sp_acl_tcam_vchunk_migrate_one+0x16b/0x270
 mlxsw_sp_acl_tcam_vregion_rehash_work+0xbe/0x510
 process_one_work+0x151/0x370",Linux,Linux,"9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130"
441,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50186,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: explicitly clear the sk pointer, when pf->create fails

We have recently noticed the exact same KASAN splat as in commit
6cd4a78d962b (""net: do not leave a dangling sk pointer, when socket
creation fails""). The problem is that commit did not fully address the
problem, as some pf->create implementations do not use sk_common_release
in their error paths.

For example, we can use the same reproducer as in the above commit, but
changing ping to arping. arping uses AF_PACKET socket and if packet_create
fails, it will just sk_free the allocated sk object.

While we could chase all the pf->create implementations and make sure they
NULL the freed sk object on error from the socket, we can't guarantee
future protocols will not make the same mistake.

So it is easier to just explicitly NULL the sk pointer upon return from
pf->create in __sock_create. We do know that pf->create always releases the
allocated sk object on error, so if the pointer is not NULL, it is
definitely dangling.",Linux,Linux,"78e4aa528a7b1204219d808310524344f627d069, 893eeba94c40d513cd0fe6539330ebdaea208c0e, 454c454ed645fed051216b79622f7cb69c1638f5, 6cd4a78d962bebbaf8beb7d2ead3f34120e3f7b2, 6cd4a78d962bebbaf8beb7d2ead3f34120e3f7b2"
439,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46766,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ice: move netif_queue_set_napi to rtnl-protected sections

Currently, netif_queue_set_napi() is called from ice_vsi_rebuild() that is
not rtnl-locked when called from the reset. This creates the need to take
the rtnl_lock just for a single function and complicates the
synchronization with .ndo_bpf. At the same time, there no actual need to
fill napi-to-queue information at this exact point.

Fill napi-to-queue information when opening the VSI and clear it when the
VSI is being closed. Those routines are already rtnl-locked.

Also, rewrite napi-to-queue assignment in a way that prevents inclusion of
XDP queues, as this leads to out-of-bounds writes, such as one below.

[  +0.000004] BUG: KASAN: slab-out-of-bounds in netif_queue_set_napi+0x1c2/0x1e0
[  +0.000012] Write of size 8 at addr ffff889881727c80 by task bash/7047
[  +0.000006] CPU: 24 PID: 7047 Comm: bash Not tainted 6.10.0-rc2+ #2
[  +0.000004] Hardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0014.082620210524 08/26/2021
[  +0.000003] Call Trace:
[  +0.000003]  <TASK>
[  +0.000002]  dump_stack_lvl+0x60/0x80
[  +0.000007]  print_report+0xce/0x630
[  +0.000007]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
[  +0.000007]  ? __virt_addr_valid+0x1c9/0x2c0
[  +0.000005]  ? netif_queue_set_napi+0x1c2/0x1e0
[  +0.000003]  kasan_report+0xe9/0x120
[  +0.000004]  ? netif_queue_set_napi+0x1c2/0x1e0
[  +0.000004]  netif_queue_set_napi+0x1c2/0x1e0
[  +0.000005]  ice_vsi_close+0x161/0x670 [ice]
[  +0.000114]  ice_dis_vsi+0x22f/0x270 [ice]
[  +0.000095]  ice_pf_dis_all_vsi.constprop.0+0xae/0x1c0 [ice]
[  +0.000086]  ice_prepare_for_reset+0x299/0x750 [ice]
[  +0.000087]  pci_dev_save_and_disable+0x82/0xd0
[  +0.000006]  pci_reset_function+0x12d/0x230
[  +0.000004]  reset_store+0xa0/0x100
[  +0.000006]  ? __pfx_reset_store+0x10/0x10
[  +0.000002]  ? __pfx_mutex_lock+0x10/0x10
[  +0.000004]  ? __check_object_size+0x4c1/0x640
[  +0.000007]  kernfs_fop_write_iter+0x30b/0x4a0
[  +0.000006]  vfs_write+0x5d6/0xdf0
[  +0.000005]  ? fd_install+0x180/0x350
[  +0.000005]  ? __pfx_vfs_write+0x10/0xA10
[  +0.000004]  ? do_fcntl+0x52c/0xcd0
[  +0.000004]  ? kasan_save_track+0x13/0x60
[  +0.000003]  ? kasan_save_free_info+0x37/0x60
[  +0.000006]  ksys_write+0xfa/0x1d0
[  +0.000003]  ? __pfx_ksys_write+0x10/0x10
[  +0.000002]  ? __x64_sys_fcntl+0x121/0x180
[  +0.000004]  ? _raw_spin_lock+0x87/0xe0
[  +0.000005]  do_syscall_64+0x80/0x170
[  +0.000007]  ? _raw_spin_lock+0x87/0xe0
[  +0.000004]  ? __pfx__raw_spin_lock+0x10/0x10
[  +0.000003]  ? file_close_fd_locked+0x167/0x230
[  +0.000005]  ? syscall_exit_to_user_mode+0x7d/0x220
[  +0.000005]  ? do_syscall_64+0x8c/0x170
[  +0.000004]  ? do_syscall_64+0x8c/0x170
[  +0.000003]  ? do_syscall_64+0x8c/0x170
[  +0.000003]  ? fput+0x1a/0x2c0
[  +0.000004]  ? filp_close+0x19/0x30
[  +0.000004]  ? do_dup2+0x25a/0x4c0
[  +0.000004]  ? __x64_sys_dup2+0x6e/0x2e0
[  +0.000002]  ? syscall_exit_to_user_mode+0x7d/0x220
[  +0.000004]  ? do_syscall_64+0x8c/0x170
[  +0.000003]  ? __count_memcg_events+0x113/0x380
[  +0.000005]  ? handle_mm_fault+0x136/0x820
[  +0.000005]  ? do_user_addr_fault+0x444/0xa80
[  +0.000004]  ? clear_bhb_loop+0x25/0x80
[  +0.000004]  ? clear_bhb_loop+0x25/0x80
[  +0.000002]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[  +0.000005] RIP: 0033:0x7f2033593154",Linux,Linux,"080b0c8d6d261b400f24bb1075fbab8c6daaf69e, 080b0c8d6d261b400f24bb1075fbab8c6daaf69e"
450,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46802,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: added NULL check at start of dc_validate_stream

[Why]
prevent invalid memory access

[How]
check if dc and stream are NULL",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
438,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46847,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm: vmalloc: ensure vmap_block is initialised before adding to queue

Commit 8c61291fd850 (""mm: fix incorrect vbq reference in
purge_fragmented_block"") extended the 'vmap_block' structure to contain a
'cpu' field which is set at allocation time to the id of the initialising
CPU.

When a new 'vmap_block' is being instantiated by new_vmap_block(), the
partially initialised structure is added to the local 'vmap_block_queue'
xarray before the 'cpu' field has been initialised.  If another CPU is
concurrently walking the xarray (e.g.  via vm_unmap_aliases()), then it
may perform an out-of-bounds access to the remote queue thanks to an
uninitialised index.

This has been observed as UBSAN errors in Android:

 | Internal error: UBSAN: array index out of bounds: 00000000f2005512 [#1] PREEMPT SMP
 |
 | Call trace:
 |  purge_fragmented_block+0x204/0x21c
 |  _vm_unmap_aliases+0x170/0x378
 |  vm_unmap_aliases+0x1c/0x28
 |  change_memory_common+0x1dc/0x26c
 |  set_memory_ro+0x18/0x24
 |  module_enable_ro+0x98/0x238
 |  do_init_module+0x1b0/0x310

Move the initialisation of 'vb->cpu' in new_vmap_block() ahead of the
addition to the xarray.",Linux,Linux,"88e0ad40d08a73a74c597e69f4cd2d1fba3838b5, 8c61291fd8500e3b35c7ec0c781b273d8cc96cde, 8c61291fd8500e3b35c7ec0c781b273d8cc96cde"
437,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50002,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

static_call: Handle module init failure correctly in static_call_del_module()

Module insertion invokes static_call_add_module() to initialize the static
calls in a module. static_call_add_module() invokes __static_call_init(),
which allocates a struct static_call_mod to either encapsulate the built-in
static call sites of the associated key into it so further modules can be
added or to append the module to the module chain.

If that allocation fails the function returns with an error code and the
module core invokes static_call_del_module() to clean up eventually added
static_call_mod entries.

This works correctly, when all keys used by the module were converted over
to a module chain before the failure. If not then static_call_del_module()
causes a #GP as it blindly assumes that key::mods points to a valid struct
static_call_mod.

The problem is that key::mods is not a individual struct member of struct
static_call_key, it's part of a union to save space:

        union {
                /* bit 0: 0 = mods, 1 = sites */
                unsigned long type;
                struct static_call_mod *mods;
                struct static_call_site *sites;
	};

key::sites is a pointer to the list of built-in usage sites of the static
call. The type of the pointer is differentiated by bit 0. A mods pointer
has the bit clear, the sites pointer has the bit set.

As static_call_del_module() blidly assumes that the pointer is a valid
static_call_mod type, it fails to check for this failure case and
dereferences the pointer to the list of built-in call sites, which is
obviously bogus.

Cure it by checking whether the key has a sites or a mods pointer.

If it's a sites pointer then the key is not to be touched. As the sites are
walked in the same order as in __static_call_init() the site walk can be
terminated because all subsequent sites have not been touched by the init
code due to the error exit.

If it was converted before the allocation fail, then the inner loop which
searches for a module match will find nothing.

A fail in the second allocation in __static_call_init() is harmless and
does not require special treatment. The first allocation succeeded and
converted the key to a module chain. That first entry has mod::mod == NULL
and mod::next == NULL, so the inner loop of static_call_del_module() will
neither find a module match nor a module chain. The next site in the walk
was either already converted, but can't match the module, or it will exit
the outer loop because it has a static_call_site pointer and not a
static_call_mod pointer.",Linux,Linux,"9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08"
436,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45018,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: flowtable: initialise extack before use

Fix missing initialisation of extack in flow offload.",Linux,Linux,"c29f74e0df7a02b8303bcdce93a7c0132d62577a, c29f74e0df7a02b8303bcdce93a7c0132d62577a, c29f74e0df7a02b8303bcdce93a7c0132d62577a, c29f74e0df7a02b8303bcdce93a7c0132d62577a, c29f74e0df7a02b8303bcdce93a7c0132d62577a, c29f74e0df7a02b8303bcdce93a7c0132d62577a"
435,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44956,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe/preempt_fence: enlarge the fence critical section

It is really easy to introduce subtle deadlocks in
preempt_fence_work_func() since we operate on single global ordered-wq
for signalling our preempt fences behind the scenes, so even though we
signal a particular fence, everything in the callback should be in the
fence critical section, since blocking in the callback will prevent
other published fences from signalling. If we enlarge the fence critical
section to cover the entire callback, then lockdep should be able to
understand this better, and complain if we grab a sensitive lock like
vm->lock, which is also held when waiting on preempt fences.",Linux,Linux,"dd08ebf6c3525a7ea2186e636df064ea47281987, dd08ebf6c3525a7ea2186e636df064ea47281987"
434,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42276,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nvme-pci: add missing condition check for existence of mapped data

nvme_map_data() is called when request has physical segments, hence
the nvme_unmap_data() should have same condition to avoid dereference.",Linux,Linux,"4aedb705437f6f98b45f45c394e6803ca67abd33, 4aedb705437f6f98b45f45c394e6803ca67abd33, 4aedb705437f6f98b45f45c394e6803ca67abd33, 4aedb705437f6f98b45f45c394e6803ca67abd33, 4aedb705437f6f98b45f45c394e6803ca67abd33, 4aedb705437f6f98b45f45c394e6803ca67abd33, 4aedb705437f6f98b45f45c394e6803ca67abd33"
433,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49984,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Prevent out of bounds access in performance query extensions

Check that the number of perfmons userspace is passing in the copy and
reset extensions is not greater than the internal kernel storage where
the ids will be copied into.",Linux,Linux,"bae7cb5d68001a8d4ceec5964dda74bb9aab7220, bae7cb5d68001a8d4ceec5964dda74bb9aab7220, bae7cb5d68001a8d4ceec5964dda74bb9aab7220"
432,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49997,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: ethernet: lantiq_etop: fix memory disclosure

When applying padding, the buffer is not zeroed, which results in memory
disclosure. The mentioned data is observed on the wire. This patch uses
skb_put_padto() to pad Ethernet frames properly. The mentioned function
zeroes the expanded buffer.

In case the packet cannot be padded it is silently dropped. Statistics
are also not incremented. This driver does not support statistics in the
old 32-bit format or the new 64-bit format. These will be added in the
future. In its current form, the patch should be easily backported to
stable versions.

Ethernet MACs on Amazon-SE and Danube cannot do padding of the packets
in hardware, so software padding must be applied.",Linux,Linux,"504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe, 504d4721ee8e432af4b5f196a08af38bc4dac5fe"
431,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43846,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

lib: objagg: Fix general protection fault

The library supports aggregation of objects into other objects only if
the parent object does not have a parent itself. That is, nesting is not
supported.

Aggregation happens in two cases: Without and with hints, where hints
are a pre-computed recommendation on how to aggregate the provided
objects.

Nesting is not possible in the first case due to a check that prevents
it, but in the second case there is no check because the assumption is
that nesting cannot happen when creating objects based on hints. The
violation of this assumption leads to various warnings and eventually to
a general protection fault [1].

Before fixing the root cause, error out when nesting happens and warn.

[1]
general protection fault, probably for non-canonical address 0xdead000000000d90: 0000 [#1] PREEMPT SMP PTI
CPU: 1 PID: 1083 Comm: kworker/1:9 Tainted: G        W          6.9.0-rc6-custom-gd9b4f1cca7fb #7
Hardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019
Workqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work
RIP: 0010:mlxsw_sp_acl_erp_bf_insert+0x25/0x80
[...]
Call Trace:
 <TASK>
 mlxsw_sp_acl_atcam_entry_add+0x256/0x3c0
 mlxsw_sp_acl_tcam_entry_create+0x5e/0xa0
 mlxsw_sp_acl_tcam_vchunk_migrate_one+0x16b/0x270
 mlxsw_sp_acl_tcam_vregion_rehash_work+0xbe/0x510
 process_one_work+0x151/0x370
 worker_thread+0x2cb/0x3e0
 kthread+0xd0/0x100
 ret_from_fork+0x34/0x50
 ret_from_fork_asm+0x1a/0x30
 </TASK>",Linux,Linux,"9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130, 9069a3817d82b01b3a55da382c774e3575946130"
449,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46689,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

soc: qcom: cmd-db: Map shared memory as WC, not WB

Linux does not write into cmd-db region. This region of memory is write
protected by XPU. XPU may sometime falsely detect clean cache eviction
as ""write"" into the write protected region leading to secure interrupt
which causes an endless loop somewhere in Trust Zone.

The only reason it is working right now is because Qualcomm Hypervisor
maps the same region as Non-Cacheable memory in Stage 2 translation
tables. The issue manifests if we want to use another hypervisor (like
Xen or KVM), which does not know anything about those specific mappings.

Changing the mapping of cmd-db memory from MEMREMAP_WB to MEMREMAP_WT/WC
removes dependency on correct mappings in Stage 2 tables. This patch
fixes the issue by updating the mapping to MEMREMAP_WC.

I tested this on SA8155P with Xen.",Linux,Linux,"312416d9171a1460b7ed8d182b5b540c910ce80d, 312416d9171a1460b7ed8d182b5b540c910ce80d, 312416d9171a1460b7ed8d182b5b540c910ce80d, 312416d9171a1460b7ed8d182b5b540c910ce80d, 312416d9171a1460b7ed8d182b5b540c910ce80d, 312416d9171a1460b7ed8d182b5b540c910ce80d, 312416d9171a1460b7ed8d182b5b540c910ce80d"
451,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42309,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/gma500: fix null pointer dereference in psb_intel_lvds_get_modes

In psb_intel_lvds_get_modes(), the return value of drm_mode_duplicate() is
assigned to mode, which will lead to a possible NULL pointer dereference
on failure of drm_mode_duplicate(). Add a check to avoid npd.",Linux,Linux,"89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c, 89c78134cc54dff016c83367912eb055637fa50c"
429,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46827,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: fix firmware crash due to invalid peer nss

Currently, if the access point receives an association
request containing an Extended HE Capabilities Information
Element with an invalid MCS-NSS, it triggers a firmware
crash.

This issue arises when EHT-PHY capabilities shows support
for a bandwidth and MCS-NSS set for that particular
bandwidth is filled by zeros and due to this, driver obtains
peer_nss as 0 and sending this value to firmware causes
crash.

Address this issue by implementing a validation step for
the peer_nss value before passing it to the firmware. If
the value is greater than zero, proceed with forwarding
it to the firmware. However, if the value is invalid,
reject the association request to prevent potential
firmware crashes.

Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.0.1-00029-QCAHKSWPL_SILICONZ-1",Linux,Linux,"d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2"
462,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43877,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: pci: ivtv: Add check for DMA map result

In case DMA fails, 'dma->SG_length' is 0. This value is later used to
access 'dma->SGarray[dma->SG_length - 1]', which will cause out of
bounds access.

Add check to return early on invalid value. Adjust warnings accordingly.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"1932dc2f4cf6ac23e48e5fcc24d21adbe35691d1, 1932dc2f4cf6ac23e48e5fcc24d21adbe35691d1, 1932dc2f4cf6ac23e48e5fcc24d21adbe35691d1, 1932dc2f4cf6ac23e48e5fcc24d21adbe35691d1"
470,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: Fix shift-out-of-bounds in dbDiscardAG

When searching for the next smaller log2 block, BLKSTOL2() returned 0,
causing shift exponent -1 to be negative.

This patch fixes the issue by exiting the loop directly when negative
shift is found.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
469,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41081,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ila: block BH in ila_output()

As explained in commit 1378817486d6 (""tipc: block BH
before using dst_cache""), net/core/dst_cache.c
helpers need to be called with BH disabled.

ila_output() is called from lwtunnel_output()
possibly from process context, and under rcu_read_lock().

We might be interrupted by a softirq, re-enter ila_output()
and corrupt dst_cache data structures.

Fix the race by using local_bh_disable().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
468,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46807,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/amdgpu: Check tbo resource pointer

Validate tbo resource pointer, skip if NULL",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
467,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43899,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix null pointer deref in dcn20_resource.c

Fixes a hang thats triggered when MPV is run on a DCN401 dGPU:

mpv --hwdec=vaapi --vo=gpu --hwdec-codecs=all

and then enabling fullscreen playback (double click on the video)

The following calltrace will be seen:

[  181.843989] BUG: kernel NULL pointer dereference, address: 0000000000000000
[  181.843997] #PF: supervisor instruction fetch in kernel mode
[  181.844003] #PF: error_code(0x0010) - not-present page
[  181.844009] PGD 0 P4D 0
[  181.844020] Oops: 0010 [#1] PREEMPT SMP NOPTI
[  181.844028] CPU: 6 PID: 1892 Comm: gnome-shell Tainted: G        W  OE      6.5.0-41-generic #41~22.04.2-Ubuntu
[  181.844038] Hardware name: System manufacturer System Product Name/CROSSHAIR VI HERO, BIOS 6302 10/23/2018
[  181.844044] RIP: 0010:0x0
[  181.844079] Code: Unable to access opcode bytes at 0xffffffffffffffd6.
[  181.844084] RSP: 0018:ffffb593c2b8f7b0 EFLAGS: 00010246
[  181.844093] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000004
[  181.844099] RDX: ffffb593c2b8f804 RSI: ffffb593c2b8f7e0 RDI: ffff9e3c8e758400
[  181.844105] RBP: ffffb593c2b8f7b8 R08: ffffb593c2b8f9c8 R09: ffffb593c2b8f96c
[  181.844110] R10: 0000000000000000 R11: 0000000000000000 R12: ffffb593c2b8f9c8
[  181.844115] R13: 0000000000000001 R14: ffff9e3c88000000 R15: 0000000000000005
[  181.844121] FS:  00007c6e323bb5c0(0000) GS:ffff9e3f85f80000(0000) knlGS:0000000000000000
[  181.844128] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  181.844134] CR2: ffffffffffffffd6 CR3: 0000000140fbe000 CR4: 00000000003506e0
[  181.844141] Call Trace:
[  181.844146]  <TASK>
[  181.844153]  ? show_regs+0x6d/0x80
[  181.844167]  ? __die+0x24/0x80
[  181.844179]  ? page_fault_oops+0x99/0x1b0
[  181.844192]  ? do_user_addr_fault+0x31d/0x6b0
[  181.844204]  ? exc_page_fault+0x83/0x1b0
[  181.844216]  ? asm_exc_page_fault+0x27/0x30
[  181.844237]  dcn20_get_dcc_compression_cap+0x23/0x30 [amdgpu]
[  181.845115]  amdgpu_dm_plane_validate_dcc.constprop.0+0xe5/0x180 [amdgpu]
[  181.845985]  amdgpu_dm_plane_fill_plane_buffer_attributes+0x300/0x580 [amdgpu]
[  181.846848]  fill_dc_plane_info_and_addr+0x258/0x350 [amdgpu]
[  181.847734]  fill_dc_plane_attributes+0x162/0x350 [amdgpu]
[  181.848748]  dm_update_plane_state.constprop.0+0x4e3/0x6b0 [amdgpu]
[  181.849791]  ? dm_update_plane_state.constprop.0+0x4e3/0x6b0 [amdgpu]
[  181.850840]  amdgpu_dm_atomic_check+0xdfe/0x1760 [amdgpu]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
466,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42263,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Fix potential memory leak in the timestamp extension

If fetching of userspace memory fails during the main loop, all drm sync
objs looked up until that point will be leaked because of the missing
drm_syncobj_put.

Fix it by exporting and using a common cleanup helper.

(cherry picked from commit 753ce4fea62182c77e1691ab4f9022008f25b62e)",Linux,Linux,"9ba0ff3e083f6a4a0b6698f06bfff74805fefa5f, 9ba0ff3e083f6a4a0b6698f06bfff74805fefa5f"
465,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46714,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Skip wbscl_set_scaler_filter if filter is null

Callers can pass null in filter (i.e. from returned from the function
wbscl_get_filter_coeffs_16p) and a null check is added to ensure that is
not the case.

This fixes 4 NULL_RETURNS issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
464,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44966,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

binfmt_flat: Fix corruption when not offsetting data start

Commit 04d82a6d0881 (""binfmt_flat: allow not offsetting data start"")
introduced a RISC-V specific variant of the FLAT format which does
not allocate any space for the (obsolete) array of shared library
pointers. However, it did not disable the code which initializes the
array, resulting in the corruption of sizeof(long) bytes before the DATA
segment, generally the end of the TEXT segment.

Introduce MAX_SHARED_LIBS_UPDATE which depends on the state of
CONFIG_BINFMT_FLAT_NO_DATA_START_OFFSET to guard the initialization of
the shared library pointer region so that it will only be initialized
if space is reserved for it.",Linux,Linux,"04d82a6d0881ef1ab1e9f66f10805177ee2fb1e8, 04d82a6d0881ef1ab1e9f66f10805177ee2fb1e8, 04d82a6d0881ef1ab1e9f66f10805177ee2fb1e8, 04d82a6d0881ef1ab1e9f66f10805177ee2fb1e8, 04d82a6d0881ef1ab1e9f66f10805177ee2fb1e8"
463,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50040,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

igb: Do not bring the device up after non-fatal error

Commit 004d25060c78 (""igb: Fix igb_down hung on surprise removal"")
changed igb_io_error_detected() to ignore non-fatal pcie errors in order
to avoid hung task that can happen when igb_down() is called multiple
times. This caused an issue when processing transient non-fatal errors.
igb_io_resume(), which is called after igb_io_error_detected(), assumes
that device is brought down by igb_io_error_detected() if the interface
is up. This resulted in panic with stacktrace below.

[ T3256] igb 0000:09:00.0 haeth0: igb: haeth0 NIC Link is Down
[  T292] pcieport 0000:00:1c.5: AER: Uncorrected (Non-Fatal) error received: 0000:09:00.0
[  T292] igb 0000:09:00.0: PCIe Bus Error: severity=Uncorrected (Non-Fatal), type=Transaction Layer, (Requester ID)
[  T292] igb 0000:09:00.0:   device [8086:1537] error status/mask=00004000/00000000
[  T292] igb 0000:09:00.0:    [14] CmpltTO [  200.105524,009][  T292] igb 0000:09:00.0: AER:   TLP Header: 00000000 00000000 00000000 00000000
[  T292] pcieport 0000:00:1c.5: AER: broadcast error_detected message
[  T292] igb 0000:09:00.0: Non-correctable non-fatal error reported.
[  T292] pcieport 0000:00:1c.5: AER: broadcast mmio_enabled message
[  T292] pcieport 0000:00:1c.5: AER: broadcast resume message
[  T292] ------------[ cut here ]------------
[  T292] kernel BUG at net/core/dev.c:6539!
[  T292] invalid opcode: 0000 [#1] PREEMPT SMP
[  T292] RIP: 0010:napi_enable+0x37/0x40
[  T292] Call Trace:
[  T292]  <TASK>
[  T292]  ? die+0x33/0x90
[  T292]  ? do_trap+0xdc/0x110
[  T292]  ? napi_enable+0x37/0x40
[  T292]  ? do_error_trap+0x70/0xb0
[  T292]  ? napi_enable+0x37/0x40
[  T292]  ? napi_enable+0x37/0x40
[  T292]  ? exc_invalid_op+0x4e/0x70
[  T292]  ? napi_enable+0x37/0x40
[  T292]  ? asm_exc_invalid_op+0x16/0x20
[  T292]  ? napi_enable+0x37/0x40
[  T292]  igb_up+0x41/0x150
[  T292]  igb_io_resume+0x25/0x70
[  T292]  report_resume+0x54/0x70
[  T292]  ? report_frozen_detected+0x20/0x20
[  T292]  pci_walk_bus+0x6c/0x90
[  T292]  ? aer_print_port_info+0xa0/0xa0
[  T292]  pcie_do_recovery+0x22f/0x380
[  T292]  aer_process_err_devices+0x110/0x160
[  T292]  aer_isr+0x1c1/0x1e0
[  T292]  ? disable_irq_nosync+0x10/0x10
[  T292]  irq_thread_fn+0x1a/0x60
[  T292]  irq_thread+0xe3/0x1a0
[  T292]  ? irq_set_affinity_notifier+0x120/0x120
[  T292]  ? irq_affinity_notify+0x100/0x100
[  T292]  kthread+0xe2/0x110
[  T292]  ? kthread_complete_and_exit+0x20/0x20
[  T292]  ret_from_fork+0x2d/0x50
[  T292]  ? kthread_complete_and_exit+0x20/0x20
[  T292]  ret_from_fork_asm+0x11/0x20
[  T292]  </TASK>

To fix this issue igb_io_resume() checks if the interface is running and
the device is not down this means igb_io_error_detected() did not bring
the device down and there is no need to bring it up.",Linux,Linux,"124e39a734cb90658b8f0dc110847bbfc6e33792, c9f56f3c7bc908caa772112d3ae71cdd5d18c257, 994c2ceb70ea99264ccc6f09e6703ca267dad63c, fa92c463eba75dcedbd8d689ffdcb83293aaa0c3, 39695e87d86f0e7d897fba1d2559f825aa20caeb, 004d25060c78fc31f66da0fa439c544dda1ac9d5, 004d25060c78fc31f66da0fa439c544dda1ac9d5, 004d25060c78fc31f66da0fa439c544dda1ac9d5"
461,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36952,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Move NPIV's transport unregistration to after resource clean up

There are cases after NPIV deletion where the fabric switch still believes
the NPIV is logged into the fabric.  This occurs when a vport is
unregistered before the Remove All DA_ID CT and LOGO ELS are sent to the
fabric.

Currently fc_remove_host(), which calls dev_loss_tmo for all D_IDs including
the fabric D_ID, removes the last ndlp reference and frees the ndlp rport
object.  This sometimes causes the race condition where the final DA_ID and
LOGO are skipped from being sent to the fabric switch.

Fix by moving the fc_remove_host() and scsi_remove_host() calls after DA_ID
and LOGO are sent.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
452,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26669,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: flower: Fix chain template offload

When a qdisc is deleted from a net device the stack instructs the
underlying driver to remove its flow offload callback from the
associated filter block using the 'FLOW_BLOCK_UNBIND' command. The stack
then continues to replay the removal of the filters in the block for
this driver by iterating over the chains in the block and invoking the
'reoffload' operation of the classifier being used. In turn, the
classifier in its 'reoffload' operation prepares and emits a
'FLOW_CLS_DESTROY' command for each filter.

However, the stack does not do the same for chain templates and the
underlying driver never receives a 'FLOW_CLS_TMPLT_DESTROY' command when
a qdisc is deleted. This results in a memory leak [1] which can be
reproduced using [2].

Fix by introducing a 'tmplt_reoffload' operation and have the stack
invoke it with the appropriate arguments as part of the replay.
Implement the operation in the sole classifier that supports chain
templates (flower) by emitting the 'FLOW_CLS_TMPLT_{CREATE,DESTROY}'
command based on whether a flow offload callback is being bound to a
filter block or being unbound from one.

As far as I can tell, the issue happens since cited commit which
reordered tcf_block_offload_unbind() before tcf_block_flush_all_chains()
in __tcf_block_put(). The order cannot be reversed as the filter block
is expected to be freed after flushing all the chains.

[1]
unreferenced object 0xffff888107e28800 (size 2048):
  comm ""tc"", pid 1079, jiffies 4294958525 (age 3074.287s)
  hex dump (first 32 bytes):
    b1 a6 7c 11 81 88 ff ff e0 5b b3 10 81 88 ff ff  ..|......[......
    01 00 00 00 00 00 00 00 e0 aa b0 84 ff ff ff ff  ................
  backtrace:
    [<ffffffff81c06a68>] __kmem_cache_alloc_node+0x1e8/0x320
    [<ffffffff81ab374e>] __kmalloc+0x4e/0x90
    [<ffffffff832aec6d>] mlxsw_sp_acl_ruleset_get+0x34d/0x7a0
    [<ffffffff832bc195>] mlxsw_sp_flower_tmplt_create+0x145/0x180
    [<ffffffff832b2e1a>] mlxsw_sp_flow_block_cb+0x1ea/0x280
    [<ffffffff83a10613>] tc_setup_cb_call+0x183/0x340
    [<ffffffff83a9f85a>] fl_tmplt_create+0x3da/0x4c0
    [<ffffffff83a22435>] tc_ctl_chain+0xa15/0x1170
    [<ffffffff838a863c>] rtnetlink_rcv_msg+0x3cc/0xed0
    [<ffffffff83ac87f0>] netlink_rcv_skb+0x170/0x440
    [<ffffffff83ac6270>] netlink_unicast+0x540/0x820
    [<ffffffff83ac6e28>] netlink_sendmsg+0x8d8/0xda0
    [<ffffffff83793def>] ____sys_sendmsg+0x30f/0xa80
    [<ffffffff8379d29a>] ___sys_sendmsg+0x13a/0x1e0
    [<ffffffff8379d50c>] __sys_sendmsg+0x11c/0x1f0
    [<ffffffff843b9ce0>] do_syscall_64+0x40/0xe0
unreferenced object 0xffff88816d2c0400 (size 1024):
  comm ""tc"", pid 1079, jiffies 4294958525 (age 3074.287s)
  hex dump (first 32 bytes):
    40 00 00 00 00 00 00 00 57 f6 38 be 00 00 00 00  @.......W.8.....
    10 04 2c 6d 81 88 ff ff 10 04 2c 6d 81 88 ff ff  ..,m......,m....
  backtrace:
    [<ffffffff81c06a68>] __kmem_cache_alloc_node+0x1e8/0x320
    [<ffffffff81ab36c1>] __kmalloc_node+0x51/0x90
    [<ffffffff81a8ed96>] kvmalloc_node+0xa6/0x1f0
    [<ffffffff82827d03>] bucket_table_alloc.isra.0+0x83/0x460
    [<ffffffff82828d2b>] rhashtable_init+0x43b/0x7c0
    [<ffffffff832aed48>] mlxsw_sp_acl_ruleset_get+0x428/0x7a0
    [<ffffffff832bc195>] mlxsw_sp_flower_tmplt_create+0x145/0x180
    [<ffffffff832b2e1a>] mlxsw_sp_flow_block_cb+0x1ea/0x280
    [<ffffffff83a10613>] tc_setup_cb_call+0x183/0x340
    [<ffffffff83a9f85a>] fl_tmplt_create+0x3da/0x4c0
    [<ffffffff83a22435>] tc_ctl_chain+0xa15/0x1170
    [<ffffffff838a863c>] rtnetlink_rcv_msg+0x3cc/0xed0
    [<ffffffff83ac87f0>] netlink_rcv_skb+0x170/0x440
    [<ffffffff83ac6270>] netlink_unicast+0x540/0x820
    [<ffffffff83ac6e28>] netlink_sendmsg+0x8d8/0xda0
    [<ffffffff83793def>] ____sys_sendmsg+0x30f/0xa80

[2]
 # tc qdisc add dev swp1 clsact
 # tc chain add dev swp1 ingress proto ip chain 1 flower dst_ip 0.0.0.0/32
 # tc qdisc del dev
---truncated---",Linux,Linux,"bbf73830cd48cff1599811d4f69c7cfd49c7b869, bbf73830cd48cff1599811d4f69c7cfd49c7b869, bbf73830cd48cff1599811d4f69c7cfd49c7b869"
460,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46776,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Run DC_LOG_DC after checking link->link_enc

[WHAT]
The DC_LOG_DC should be run after link->link_enc is checked, not before.

This fixes 1 REVERSE_INULL issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
459,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43824,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: endpoint: pci-epf-test: Make use of cached 'epc_features' in pci_epf_test_core_init()

Instead of getting the epc_features from pci_epc_get_features() API, use
the cached pci_epf_test::epc_features value to avoid the NULL check. Since
the NULL check is already performed in pci_epf_test_bind(), having one more
check in pci_epf_test_core_init() is redundant and it is not possible to
hit the NULL pointer dereference.

Also with commit a01e7214bef9 (""PCI: endpoint: Remove ""core_init_notifier""
flag""), 'epc_features' got dereferenced without the NULL check, leading to
the following false positive Smatch warning:

  drivers/pci/endpoint/functions/pci-epf-test.c:784 pci_epf_test_core_init() error: we previously assumed 'epc_features' could be null (see line 747)

Thus, remove the redundant NULL check and also use the epc_features::
{msix_capable/msi_capable} flags directly to avoid local variables.

[kwilczynski: commit log]",Linux,Linux,"5e50ee27d4a52a817ab152128c48690ec7c5cdf1, 5e50ee27d4a52a817ab152128c48690ec7c5cdf1"
458,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46741,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

misc: fastrpc: Fix double free of 'buf' in error path

smatch warning:
drivers/misc/fastrpc.c:1926 fastrpc_req_mmap() error: double free of 'buf'

In fastrpc_req_mmap() error path, the fastrpc buffer is freed in
fastrpc_req_munmap_impl() if unmap is successful.

But in the end, there is an unconditional call to fastrpc_buf_free().
So the above case triggers the double free of fastrpc buf.",Linux,Linux,"72fa6f7820c4cf96c5f7aabc4e54bdf52d1e2ac2, 72fa6f7820c4cf96c5f7aabc4e54bdf52d1e2ac2, 72fa6f7820c4cf96c5f7aabc4e54bdf52d1e2ac2"
457,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46777,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

udf: Avoid excessive partition lengths

Avoid mounting filesystems where the partition would overflow the
32-bits used for block number. Also refuse to mount filesystems where
the partition length is so large we cannot safely index bits in a
block bitmap.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
456,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42320,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/dasd: fix error checks in dasd_copy_pair_store()

dasd_add_busid() can return an error via ERR_PTR() if an allocation
fails. However, two callsites in dasd_copy_pair_store() do not check
the result, potentially resulting in a NULL pointer dereference. Fix
this by checking the result with IS_ERR() and returning the error up
the stack.",Linux,Linux,"a91ff09d39f9b6545254839ac91f1ff7bd21d39e, a91ff09d39f9b6545254839ac91f1ff7bd21d39e, a91ff09d39f9b6545254839ac91f1ff7bd21d39e, a91ff09d39f9b6545254839ac91f1ff7bd21d39e"
455,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46781,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix missing cleanup on rollforward recovery error

In an error injection test of a routine for mount-time recovery, KASAN
found a use-after-free bug.

It turned out that if data recovery was performed using partial logs
created by dsync writes, but an error occurred before starting the log
writer to create a recovered checkpoint, the inodes whose data had been
recovered were left in the ns_dirty_files list of the nilfs object and
were not freed.

Fix this issue by cleaning up inodes that have read the recovery data if
the recovery routine fails midway before the log writer starts.",Linux,Linux,"0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b, 0f3e1c7f23f8a6f8224fa1d275381f6d9279ad4b"
454,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41078,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: qgroup: fix quota root leak after quota disable failure

If during the quota disable we fail when cleaning the quota tree or when
deleting the root from the root tree, we jump to the 'out' label without
ever dropping the reference on the quota root, resulting in a leak of the
root since fs_info->quota_root is no longer pointing to the root (we have
set it to NULL just before those steps).

Fix this by always doing a btrfs_put_root() call under the 'out' label.
This is a problem that exists since qgroups were first added in 2012 by
commit bed92eae26cc (""Btrfs: qgroup implementation and prototypes""), but
back then we missed a kfree on the quota root and free_extent_buffer()
calls on its root and commit root nodes, since back then roots were not
yet reference counted.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
453,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46871,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Correct the defined value for AMDGPU_DMUB_NOTIFICATION_MAX

[Why & How]
It actually exposes '6' types in enum dmub_notification_type. Not 5. Using smaller
number to create array dmub_callback & dmub_thread_offload has potential to access
item out of array bound. Fix it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
430,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42240,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/bhi: Avoid warning in #DB handler due to BHI mitigation

When BHI mitigation is enabled, if SYSENTER is invoked with the TF flag set
then entry_SYSENTER_compat() uses CLEAR_BRANCH_HISTORY and calls the
clear_bhb_loop() before the TF flag is cleared. This causes the #DB handler
(exc_debug_kernel()) to issue a warning because single-step is used outside the
entry_SYSENTER_compat() function.

To address this issue, entry_SYSENTER_compat() should use CLEAR_BRANCH_HISTORY
after making sure the TF flag is cleared.

The problem can be reproduced with the following sequence:

  $ cat sysenter_step.c
  int main()
  { asm(""pushf; pop %ax; bts $8,%ax; push %ax; popf; sysenter""); }

  $ gcc -o sysenter_step sysenter_step.c

  $ ./sysenter_step
  Segmentation fault (core dumped)

The program is expected to crash, and the #DB handler will issue a warning.

Kernel log:

  WARNING: CPU: 27 PID: 7000 at arch/x86/kernel/traps.c:1009 exc_debug_kernel+0xd2/0x160
  ...
  RIP: 0010:exc_debug_kernel+0xd2/0x160
  ...
  Call Trace:
  <#DB>
   ? show_regs+0x68/0x80
   ? __warn+0x8c/0x140
   ? exc_debug_kernel+0xd2/0x160
   ? report_bug+0x175/0x1a0
   ? handle_bug+0x44/0x90
   ? exc_invalid_op+0x1c/0x70
   ? asm_exc_invalid_op+0x1f/0x30
   ? exc_debug_kernel+0xd2/0x160
   exc_debug+0x43/0x50
   asm_exc_debug+0x1e/0x40
  RIP: 0010:clear_bhb_loop+0x0/0xb0
  ...
  </#DB>
  <TASK>
   ? entry_SYSENTER_compat_after_hwframe+0x6e/0x8d
  </TASK>

  [ bp: Massage commit message. ]",Linux,Linux,"bd53ec80f21839cfd4d852a6088279d602d67e5b, 07dbb10f153f483e8249acebdffedf922e2ec2e1, eb36b0dce2138581bc6b5e39d0273cb4c96ded81, 7390db8aea0d64e9deb28b8e1ce716f5020c7ee5, 7390db8aea0d64e9deb28b8e1ce716f5020c7ee5"
428,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43900,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: xc2028: avoid use-after-free in load_firmware_cb()

syzkaller reported use-after-free in load_firmware_cb() [1].
The reason is because the module allocated a struct tuner in tuner_probe(),
and then the module initialization failed, the struct tuner was released.
A worker which created during module initialization accesses this struct
tuner later, it caused use-after-free.

The process is as follows:

task-6504           worker_thread
tuner_probe                             <= alloc dvb_frontend [2]
...
request_firmware_nowait                 <= create a worker
...
tuner_remove                            <= free dvb_frontend
...
                    request_firmware_work_func  <= the firmware is ready
                    load_firmware_cb    <= but now the dvb_frontend has been freed

To fix the issue, check the dvd_frontend in load_firmware_cb(), if it is
null, report a warning and just return.

[1]:
    ==================================================================
     BUG: KASAN: use-after-free in load_firmware_cb+0x1310/0x17a0
     Read of size 8 at addr ffff8000d7ca2308 by task kworker/2:3/6504

     Call trace:
      load_firmware_cb+0x1310/0x17a0
      request_firmware_work_func+0x128/0x220
      process_one_work+0x770/0x1824
      worker_thread+0x488/0xea0
      kthread+0x300/0x430
      ret_from_fork+0x10/0x20

     Allocated by task 6504:
      kzalloc
      tuner_probe+0xb0/0x1430
      i2c_device_probe+0x92c/0xaf0
      really_probe+0x678/0xcd0
      driver_probe_device+0x280/0x370
      __device_attach_driver+0x220/0x330
      bus_for_each_drv+0x134/0x1c0
      __device_attach+0x1f4/0x410
      device_initial_probe+0x20/0x30
      bus_probe_device+0x184/0x200
      device_add+0x924/0x12c0
      device_register+0x24/0x30
      i2c_new_device+0x4e0/0xc44
      v4l2_i2c_new_subdev_board+0xbc/0x290
      v4l2_i2c_new_subdev+0xc8/0x104
      em28xx_v4l2_init+0x1dd0/0x3770

     Freed by task 6504:
      kfree+0x238/0x4e4
      tuner_remove+0x144/0x1c0
      i2c_device_remove+0xc8/0x290
      __device_release_driver+0x314/0x5fc
      device_release_driver+0x30/0x44
      bus_remove_device+0x244/0x490
      device_del+0x350/0x900
      device_unregister+0x28/0xd0
      i2c_unregister_device+0x174/0x1d0
      v4l2_device_unregister+0x224/0x380
      em28xx_v4l2_init+0x1d90/0x3770

     The buggy address belongs to the object at ffff8000d7ca2000
      which belongs to the cache kmalloc-2k of size 2048
     The buggy address is located 776 bytes inside of
      2048-byte region [ffff8000d7ca2000, ffff8000d7ca2800)
     The buggy address belongs to the page:
     page:ffff7fe00035f280 count:1 mapcount:0 mapping:ffff8000c001f000 index:0x0
     flags: 0x7ff800000000100(slab)
     raw: 07ff800000000100 ffff7fe00049d880 0000000300000003 ffff8000c001f000
     raw: 0000000000000000 0000000080100010 00000001ffffffff 0000000000000000
     page dumped because: kasan: bad access detected

     Memory state around the buggy address:
      ffff8000d7ca2200: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      ffff8000d7ca2280: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     >ffff8000d7ca2300: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                           ^
      ffff8000d7ca2380: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
      ffff8000d7ca2400: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ==================================================================

[2]
    Actually, it is allocated for struct tuner, and dvb_frontend is inside.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
386,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46721,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

apparmor: fix possible NULL pointer dereference

profile->parent->dents[AAFS_PROF_DIR] could be NULL only if its parent is made
from __create_missing_ancestors(..) and 'ent->old' is NULL in
aa_replace_profiles(..).
In that case, it must return an error code and the code, -ENOENT represents
its state that the path of its parent is not existed yet.

BUG: kernel NULL pointer dereference, address: 0000000000000030
PGD 0 P4D 0
PREEMPT SMP PTI
CPU: 4 PID: 3362 Comm: apparmor_parser Not tainted 6.8.0-24-generic #24
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1 04/01/2014
RIP: 0010:aafs_create.constprop.0+0x7f/0x130
Code: 4c 63 e0 48 83 c4 18 4c 89 e0 5b 41 5c 41 5d 41 5e 41 5f 5d 31 d2 31 c9 31 f6 31 ff 45 31 c0 45 31 c9 45 31 d2 c3 cc cc cc cc <4d> 8b 55 30 4d 8d ba a0 00 00 00 4c 89 55 c0 4c 89 ff e8 7a 6a ae
RSP: 0018:ffffc9000b2c7c98 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 00000000000041ed RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffc9000b2c7cd8 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: ffffffff82baac10
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
FS:  00007be9f22cf740(0000) GS:ffff88817bc00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000030 CR3: 0000000134b08000 CR4: 00000000000006f0
Call Trace:
 <TASK>
 ? show_regs+0x6d/0x80
 ? __die+0x24/0x80
 ? page_fault_oops+0x99/0x1b0
 ? kernelmode_fixup_or_oops+0xb2/0x140
 ? __bad_area_nosemaphore+0x1a5/0x2c0
 ? find_vma+0x34/0x60
 ? bad_area_nosemaphore+0x16/0x30
 ? do_user_addr_fault+0x2a2/0x6b0
 ? exc_page_fault+0x83/0x1b0
 ? asm_exc_page_fault+0x27/0x30
 ? aafs_create.constprop.0+0x7f/0x130
 ? aafs_create.constprop.0+0x51/0x130
 __aafs_profile_mkdir+0x3d6/0x480
 aa_replace_profiles+0x83f/0x1270
 policy_update+0xe3/0x180
 profile_load+0xbc/0x150
 ? rw_verify_area+0x47/0x140
 vfs_write+0x100/0x480
 ? __x64_sys_openat+0x55/0xa0
 ? syscall_exit_to_user_mode+0x86/0x260
 ksys_write+0x73/0x100
 __x64_sys_write+0x19/0x30
 x64_sys_call+0x7e/0x25c0
 do_syscall_64+0x7f/0x180
 entry_SYSCALL_64_after_hwframe+0x78/0x80
RIP: 0033:0x7be9f211c574
Code: c7 00 16 00 00 00 b8 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 80 3d d5 ea 0e 00 00 74 13 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 54 c3 0f 1f 00 55 48 89 e5 48 83 ec 20 48 89
RSP: 002b:00007ffd26f2b8c8 EFLAGS: 00000202 ORIG_RAX: 0000000000000001
RAX: ffffffffffffffda RBX: 00005d504415e200 RCX: 00007be9f211c574
RDX: 0000000000001fc1 RSI: 00005d504418bc80 RDI: 0000000000000004
RBP: 0000000000001fc1 R08: 0000000000001fc1 R09: 0000000080000000
R10: 0000000000000000 R11: 0000000000000202 R12: 00005d504418bc80
R13: 0000000000000004 R14: 00007ffd26f2b9b0 R15: 00007ffd26f2ba30
 </TASK>
Modules linked in: snd_seq_dummy snd_hrtimer qrtr snd_hda_codec_generic snd_hda_intel snd_intel_dspcfg snd_intel_sdw_acpi snd_hda_codec snd_hda_core snd_hwdep snd_pcm snd_seq_midi snd_seq_midi_event snd_rawmidi snd_seq snd_seq_device i2c_i801 snd_timer i2c_smbus qxl snd soundcore drm_ttm_helper lpc_ich ttm joydev input_leds serio_raw mac_hid binfmt_misc msr parport_pc ppdev lp parport efi_pstore nfnetlink dmi_sysfs qemu_fw_cfg ip_tables x_tables autofs4 hid_generic usbhid hid ahci libahci psmouse virtio_rng xhci_pci xhci_pci_renesas
CR2: 0000000000000030
---[ end trace 0000000000000000 ]---
RIP: 0010:aafs_create.constprop.0+0x7f/0x130
Code: 4c 63 e0 48 83 c4 18 4c 89 e0 5b 41 5c 41 5d 41 5e 41 5f 5d 31 d2 31 c9 31 f6 31 ff 45 31 c0 45 31 c9 45 31 d2 c3 cc cc cc cc <4d> 8b 55 30 4d 8d ba a0 00 00 00 4c 89 55 c0 4c 89 ff e8 7a 6a ae
RSP: 0018:ffffc9000b2c7c98 EFLAGS: 00010246
RAX: 0000000000000000 RBX: 00000000000041ed RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffc9000b2c7cd8 R08: 0000000000000000 R09: 0000000000000000
R10: 0000
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
396,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46762,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xen: privcmd: Fix possible access to a freed kirqfd instance

Nothing prevents simultaneous ioctl calls to privcmd_irqfd_assign() and
privcmd_irqfd_deassign(). If that happens, it is possible that a kirqfd
created and added to the irqfds_list by privcmd_irqfd_assign() may get
removed by another thread executing privcmd_irqfd_deassign(), while the
former is still using it after dropping the locks.

This can lead to a situation where an already freed kirqfd instance may
be accessed and cause kernel oops.

Use SRCU locking to prevent the same, as is done for the KVM
implementation for irqfds.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
404,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47679,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vfs: fix race between evice_inodes() and find_inode()&iput()

Hi, all

Recently I noticed a bug[1] in btrfs, after digged it into
and I believe it'a race in vfs.

Let's assume there's a inode (ie ino 261) with i_count 1 is
called by iput(), and there's a concurrent thread calling
generic_shutdown_super().

cpu0:                              cpu1:
iput() // i_count is 1
  ->spin_lock(inode)
  ->dec i_count to 0
  ->iput_final()                    generic_shutdown_super()
    ->__inode_add_lru()               ->evict_inodes()
      // cause some reason[2]           ->if (atomic_read(inode->i_count)) continue;
      // return before                  // inode 261 passed the above check
      // list_lru_add_obj()             // and then schedule out
   ->spin_unlock()
// note here: the inode 261
// was still at sb list and hash list,
// and I_FREEING|I_WILL_FREE was not been set

btrfs_iget()
  // after some function calls
  ->find_inode()
    // found the above inode 261
    ->spin_lock(inode)
   // check I_FREEING|I_WILL_FREE
   // and passed
      ->__iget()
    ->spin_unlock(inode)                // schedule back
                                        ->spin_lock(inode)
                                        // check (I_NEW|I_FREEING|I_WILL_FREE) flags,
                                        // passed and set I_FREEING
iput()                                  ->spin_unlock(inode)
  ->spin_lock(inode)			  ->evict()
  // dec i_count to 0
  ->iput_final()
    ->spin_unlock()
    ->evict()

Now, we have two threads simultaneously evicting
the same inode, which may trigger the BUG(inode->i_state & I_CLEAR)
statement both within clear_inode() and iput().

To fix the bug, recheck the inode->i_count after holding i_lock.
Because in the most scenarios, the first check is valid, and
the overhead of spin_lock() can be reduced.

If there is any misunderstanding, please let me know, thanks.

[1]: https://lore.kernel.org/linux-btrfs/000000000000eabe1d0619c48986@google.com/
[2]: The reason might be 1. SB_ACTIVE was removed or 2. mapping_shrinkable()
return false when I reproduced the bug.",Linux,Linux,"63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb, 63997e98a3be68d7cec806d22bf9b02b2e1daabb"
403,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45000,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fs/netfs/fscache_cookie: add missing ""n_accesses"" check

This fixes a NULL pointer dereference bug due to a data race which
looks like this:

  BUG: kernel NULL pointer dereference, address: 0000000000000008
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 0 P4D 0
  Oops: 0000 [#1] SMP PTI
  CPU: 33 PID: 16573 Comm: kworker/u97:799 Not tainted 6.8.7-cm4all1-hp+ #43
  Hardware name: HP ProLiant DL380 Gen9/ProLiant DL380 Gen9, BIOS P89 10/17/2018
  Workqueue: events_unbound netfs_rreq_write_to_cache_work
  RIP: 0010:cachefiles_prepare_write+0x30/0xa0
  Code: 57 41 56 45 89 ce 41 55 49 89 cd 41 54 49 89 d4 55 53 48 89 fb 48 83 ec 08 48 8b 47 08 48 83 7f 10 00 48 89 34 24 48 8b 68 20 <48> 8b 45 08 4c 8b 38 74 45 49 8b 7f 50 e8 4e a9 b0 ff 48 8b 73 10
  RSP: 0018:ffffb4e78113bde0 EFLAGS: 00010286
  RAX: ffff976126be6d10 RBX: ffff97615cdb8438 RCX: 0000000000020000
  RDX: ffff97605e6c4c68 RSI: ffff97605e6c4c60 RDI: ffff97615cdb8438
  RBP: 0000000000000000 R08: 0000000000278333 R09: 0000000000000001
  R10: ffff97605e6c4600 R11: 0000000000000001 R12: ffff97605e6c4c68
  R13: 0000000000020000 R14: 0000000000000001 R15: ffff976064fe2c00
  FS:  0000000000000000(0000) GS:ffff9776dfd40000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 0000000000000008 CR3: 000000005942c002 CR4: 00000000001706f0
  Call Trace:
   <TASK>
   ? __die+0x1f/0x70
   ? page_fault_oops+0x15d/0x440
   ? search_module_extables+0xe/0x40
   ? fixup_exception+0x22/0x2f0
   ? exc_page_fault+0x5f/0x100
   ? asm_exc_page_fault+0x22/0x30
   ? cachefiles_prepare_write+0x30/0xa0
   netfs_rreq_write_to_cache_work+0x135/0x2e0
   process_one_work+0x137/0x2c0
   worker_thread+0x2e9/0x400
   ? __pfx_worker_thread+0x10/0x10
   kthread+0xcc/0x100
   ? __pfx_kthread+0x10/0x10
   ret_from_fork+0x30/0x50
   ? __pfx_kthread+0x10/0x10
   ret_from_fork_asm+0x1b/0x30
   </TASK>
  Modules linked in:
  CR2: 0000000000000008
  ---[ end trace 0000000000000000 ]---

This happened because fscache_cookie_state_machine() was slow and was
still running while another process invoked fscache_unuse_cookie();
this led to a fscache_cookie_lru_do_one() call, setting the
FSCACHE_COOKIE_DO_LRU_DISCARD flag, which was picked up by
fscache_cookie_state_machine(), withdrawing the cookie via
cachefiles_withdraw_cookie(), clearing cookie->cache_priv.

At the same time, yet another process invoked
cachefiles_prepare_write(), which found a NULL pointer in this code
line:

  struct cachefiles_object *object = cachefiles_cres_object(cres);

The next line crashes, obviously:

  struct cachefiles_cache *cache = object->volume->cache;

During cachefiles_prepare_write(), the ""n_accesses"" counter is
non-zero (via fscache_begin_operation()).  The cookie must not be
withdrawn until it drops to zero.

The counter is checked by fscache_cookie_state_machine() before
switching to FSCACHE_COOKIE_STATE_RELINQUISHING and
FSCACHE_COOKIE_STATE_WITHDRAWING (in ""case
FSCACHE_COOKIE_STATE_FAILED""), but not for
FSCACHE_COOKIE_STATE_LRU_DISCARDING (""case
FSCACHE_COOKIE_STATE_ACTIVE"").

This patch adds the missing check.  With a non-zero access counter,
the function returns and the next fscache_end_cookie_access() call
will queue another fscache_cookie_state_machine() call to handle the
still-pending FSCACHE_COOKIE_DO_LRU_DISCARD.",Linux,Linux,"12bb21a29c19aae50cfad4e2bb5c943108f34a7d, 12bb21a29c19aae50cfad4e2bb5c943108f34a7d, 12bb21a29c19aae50cfad4e2bb5c943108f34a7d, 12bb21a29c19aae50cfad4e2bb5c943108f34a7d"
402,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46685,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

pinctrl: single: fix potential NULL dereference in pcs_get_function()

pinmux_generic_get_function() can return NULL and the pointer 'function'
was dereferenced without checking against NULL. Add checking of pointer
'function' in pcs_get_function().

Found by code review.",Linux,Linux,"571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98, 571aec4df5b72a80f80d1e524da8fbd7ff525c98"
401,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49900,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: Fix uninit-value access of new_ea in ea_buffer

syzbot reports that lzo1x_1_do_compress is using uninit-value:

=====================================================
BUG: KMSAN: uninit-value in lzo1x_1_do_compress+0x19f9/0x2510 lib/lzo/lzo1x_compress.c:178

...

Uninit was stored to memory at:
 ea_put fs/jfs/xattr.c:639 [inline]

...

Local variable ea_buf created at:
 __jfs_setxattr+0x5d/0x1ae0 fs/jfs/xattr.c:662
 __jfs_xattr_set+0xe6/0x1f0 fs/jfs/xattr.c:934

=====================================================

The reason is ea_buf->new_ea is not initialized properly.

Fix this by using memset to empty its content at the beginning
in ea_get().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
400,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26661,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add NULL test for 'timing generator' in 'dcn21_set_pipe()'

In ""u32 otg_inst = pipe_ctx->stream_res.tg->inst;""
pipe_ctx->stream_res.tg could be NULL, it is relying on the caller to
ensure the tg is not NULL.",Linux,Linux,"474ac4a875ca6fea3fc5183d3ad22ef7523dca53, 474ac4a875ca6fea3fc5183d3ad22ef7523dca53, 474ac4a875ca6fea3fc5183d3ad22ef7523dca53"
399,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46816,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Stop amdgpu_dm initialize when link nums greater than max_links

[Why]
Coverity report OVERRUN warning. There are
only max_links elements within dc->links. link
count could up to AMDGPU_DM_MAX_DISPLAY_INDEX 31.

[How]
Make sure link count less than max_links.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
398,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46692,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

firmware: qcom: scm: Mark get_wq_ctx() as atomic call

Currently get_wq_ctx() is wrongly configured as a standard call. When two
SMC calls are in sleep and one SMC wakes up, it calls get_wq_ctx() to
resume the corresponding sleeping thread. But if get_wq_ctx() is
interrupted, goes to sleep and another SMC call is waiting to be allocated
a waitq context, it leads to a deadlock.

To avoid this get_wq_ctx() must be an atomic call and can't be a standard
SMC call. Hence mark get_wq_ctx() as a fast call.",Linux,Linux,"6bf32599223634294cdc6efb359ffaab1d68073c, 6bf32599223634294cdc6efb359ffaab1d68073c, 6bf32599223634294cdc6efb359ffaab1d68073c"
397,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49977,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: stmmac: Fix zero-division error when disabling tc cbs

The commit b8c43360f6e4 (""net: stmmac: No need to calculate speed divider
when offload is disabled"") allows the ""port_transmit_rate_kbps"" to be
set to a value of 0, which is then passed to the ""div_s64"" function when
tc-cbs is disabled. This leads to a zero-division error.

When tc-cbs is disabled, the idleslope, sendslope, and credit values the
credit values are not required to be configured. Therefore, adding a return
statement after setting the txQ mode to DCB when tc-cbs is disabled would
prevent a zero-division error.",Linux,Linux,"b4bca4722fda928810d024350493990de39f1e40, 2145583e5995598f50d66f8710c86bb1e910ac46, 521d42a1c24d638241220d4b9fa7e7a0ed02b88e, a71b686418ee6bcb6d6365f7f6d838d9874d9c64, b8c43360f6e424131fa81d3ba8792ad8ff25a09e, b8c43360f6e424131fa81d3ba8792ad8ff25a09e, b8c43360f6e424131fa81d3ba8792ad8ff25a09e"
395,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-39463,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

9p: add missing locking around taking dentry fid list

Fix a use-after-free on dentry's d_fsdata fid list when a thread
looks up a fid through dentry while another thread unlinks it:

UAF thread:
refcount_t: addition on 0; use-after-free.
 p9_fid_get linux/./include/net/9p/client.h:262
 v9fs_fid_find+0x236/0x280 linux/fs/9p/fid.c:129
 v9fs_fid_lookup_with_uid linux/fs/9p/fid.c:181
 v9fs_fid_lookup+0xbf/0xc20 linux/fs/9p/fid.c:314
 v9fs_vfs_getattr_dotl+0xf9/0x360 linux/fs/9p/vfs_inode_dotl.c:400
 vfs_statx+0xdd/0x4d0 linux/fs/stat.c:248

Freed by:
 p9_fid_destroy (inlined)
 p9_client_clunk+0xb0/0xe0 linux/net/9p/client.c:1456
 p9_fid_put linux/./include/net/9p/client.h:278
 v9fs_dentry_release+0xb5/0x140 linux/fs/9p/vfs_dentry.c:55
 v9fs_remove+0x38f/0x620 linux/fs/9p/vfs_inode.c:518
 vfs_unlink+0x29a/0x810 linux/fs/namei.c:4335

The problem is that d_fsdata was not accessed under d_lock, because
d_release() normally is only called once the dentry is otherwise no
longer accessible but since we also call it explicitly in v9fs_remove
that lock is required:
move the hlist out of the dentry under lock then unref its fids once
they are no longer accessible.",Linux,Linux,"154372e67d4053e56591245eb413686621941333, 154372e67d4053e56591245eb413686621941333, 154372e67d4053e56591245eb413686621941333, 154372e67d4053e56591245eb413686621941333, 154372e67d4053e56591245eb413686621941333"
406,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36484,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: relax socket state check at accept time.

Christoph reported the following splat:

WARNING: CPU: 1 PID: 772 at net/ipv4/af_inet.c:761 __inet_accept+0x1f4/0x4a0
Modules linked in:
CPU: 1 PID: 772 Comm: syz-executor510 Not tainted 6.9.0-rc7-g7da7119fe22b #56
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
RIP: 0010:__inet_accept+0x1f4/0x4a0 net/ipv4/af_inet.c:759
Code: 04 38 84 c0 0f 85 87 00 00 00 41 c7 04 24 03 00 00 00 48 83 c4 10 5b 41 5c 41 5d 41 5e 41 5f 5d c3 cc cc cc cc e8 ec b7 da fd <0f> 0b e9 7f fe ff ff e8 e0 b7 da fd 0f 0b e9 fe fe ff ff 89 d9 80
RSP: 0018:ffffc90000c2fc58 EFLAGS: 00010293
RAX: ffffffff836bdd14 RBX: 0000000000000000 RCX: ffff888104668000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: dffffc0000000000 R08: ffffffff836bdb89 R09: fffff52000185f64
R10: dffffc0000000000 R11: fffff52000185f64 R12: dffffc0000000000
R13: 1ffff92000185f98 R14: ffff88810754d880 R15: ffff8881007b7800
FS:  000000001c772880(0000) GS:ffff88811b280000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007fb9fcf2e178 CR3: 00000001045d2002 CR4: 0000000000770ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <TASK>
 inet_accept+0x138/0x1d0 net/ipv4/af_inet.c:786
 do_accept+0x435/0x620 net/socket.c:1929
 __sys_accept4_file net/socket.c:1969 [inline]
 __sys_accept4+0x9b/0x110 net/socket.c:1999
 __do_sys_accept net/socket.c:2016 [inline]
 __se_sys_accept net/socket.c:2013 [inline]
 __x64_sys_accept+0x7d/0x90 net/socket.c:2013
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0x58/0x100 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x76/0x7e
RIP: 0033:0x4315f9
Code: fd ff 48 81 c4 80 00 00 00 e9 f1 fe ff ff 0f 1f 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 0f 83 ab b4 fd ff c3 66 2e 0f 1f 84 00 00 00 00
RSP: 002b:00007ffdb26d9c78 EFLAGS: 00000246 ORIG_RAX: 000000000000002b
RAX: ffffffffffffffda RBX: 0000000000400300 RCX: 00000000004315f9
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000004
RBP: 00000000006e1018 R08: 0000000000400300 R09: 0000000000400300
R10: 0000000000400300 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000040cdf0 R14: 000000000040ce80 R15: 0000000000000055
 </TASK>

The reproducer invokes shutdown() before entering the listener status.
After commit 94062790aedb (""tcp: defer shutdown(SEND_SHUTDOWN) for
TCP_SYN_RECV sockets""), the above causes the child to reach the accept
syscall in FIN_WAIT1 status.

Eric noted we can relax the existing assertion in __inet_accept()",Linux,Linux,"34e41a031fd7523bf1cd00a2adca2370aebea270, ed5e279b69e007ce6c0fe82a5a534c1b19783214, 413c33b9f3bc36fdf719690a78824db9f88a9485, 2552c9d9440f8e7a2ed0660911ff00f25b90a0a4, 3fe4ef0568a48369b1891395d13ac593b1ba41b1, f47d0d32fa94e815fdd78b8b88684873e67939f4, 94062790aedb505bdda209b10bea47b294d6394f, 94062790aedb505bdda209b10bea47b294d6394f"
394,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44991,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: prevent concurrent execution of tcp_sk_exit_batch

Its possible that two threads call tcp_sk_exit_batch() concurrently,
once from the cleanup_net workqueue, once from a task that failed to clone
a new netns.  In the latter case, error unwinding calls the exit handlers
in reverse order for the 'failed' netns.

tcp_sk_exit_batch() calls tcp_twsk_purge().
Problem is that since commit b099ce2602d8 (""net: Batch inet_twsk_purge""),
this function picks up twsk in any dying netns, not just the one passed
in via exit_batch list.

This means that the error unwind of setup_net() can ""steal"" and destroy
timewait sockets belonging to the exiting netns.

This allows the netns exit worker to proceed to call

WARN_ON_ONCE(!refcount_dec_and_test(&net->ipv4.tcp_death_row.tw_refcount));

without the expected 1 -> 0 transition, which then splats.

At same time, error unwind path that is also running inet_twsk_purge()
will splat as well:

WARNING: .. at lib/refcount.c:31 refcount_warn_saturate+0x1ed/0x210
...
 refcount_dec include/linux/refcount.h:351 [inline]
 inet_twsk_kill+0x758/0x9c0 net/ipv4/inet_timewait_sock.c:70
 inet_twsk_deschedule_put net/ipv4/inet_timewait_sock.c:221
 inet_twsk_purge+0x725/0x890 net/ipv4/inet_timewait_sock.c:304
 tcp_sk_exit_batch+0x1c/0x170 net/ipv4/tcp_ipv4.c:3522
 ops_exit_list+0x128/0x180 net/core/net_namespace.c:178
 setup_net+0x714/0xb40 net/core/net_namespace.c:375
 copy_net_ns+0x2f0/0x670 net/core/net_namespace.c:508
 create_new_namespaces+0x3ea/0xb10 kernel/nsproxy.c:110

... because refcount_dec() of tw_refcount unexpectedly dropped to 0.

This doesn't seem like an actual bug (no tw sockets got lost and I don't
see a use-after-free) but as erroneous trigger of debug check.

Add a mutex to force strict ordering: the task that calls tcp_twsk_purge()
blocks other task from doing final _dec_and_test before mutex-owner has
removed all tw sockets of dying netns.",Linux,Linux,"e9bd0cca09d13ac2f08d25e195203e42d4ad1ce8, e9bd0cca09d13ac2f08d25e195203e42d4ad1ce8, e9bd0cca09d13ac2f08d25e195203e42d4ad1ce8, e9bd0cca09d13ac2f08d25e195203e42d4ad1ce8"
393,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43864,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix CT entry update leaks of modify header context

The cited commit allocates a new modify header to replace the old
one when updating CT entry. But if failed to allocate a new one, eg.
exceed the max number firmware can support, modify header will be
an error pointer that will trigger a panic when deallocating it. And
the old modify header point is copied to old attr. When the old
attr is freed, the old modify header is lost.

Fix it by restoring the old attr to attr when failed to allocate a
new modify header context. So when the CT entry is freed, the right
modify header context will be freed. And the panic of accessing
error pointer is also fixed.",Linux,Linux,"94ceffb48eac7692677d8093dcde6965b70c4b35, 94ceffb48eac7692677d8093dcde6965b70c4b35, 94ceffb48eac7692677d8093dcde6965b70c4b35"
392,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49995,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: guard against string buffer overrun

Smatch reports that copying media_name and if_name to name_parts may
overwrite the destination.

 .../bearer.c:166 bearer_name_validate() error: strcpy() 'media_name' too large for 'name_parts->media_name' (32 vs 16)
 .../bearer.c:167 bearer_name_validate() error: strcpy() 'if_name' too large for 'name_parts->if_name' (1010102 vs 16)

This does seem to be the case so guard against this possibility by using
strscpy() and failing if truncation occurs.

Introduced by commit b97bf3fd8f6a (""[TIPC] Initial merge"")

Compile tested only.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
391,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46822,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

arm64: acpi: Harden get_cpu_for_acpi_id() against missing CPU entry

In a review discussion of the changes to support vCPU hotplug where
a check was added on the GICC being enabled if was online, it was
noted that there is need to map back to the cpu and use that to index
into a cpumask. As such, a valid ID is needed.

If an MPIDR check fails in acpi_map_gic_cpu_interface() it is possible
for the entry in cpu_madt_gicc[cpu] == NULL.  This function would
then cause a NULL pointer dereference.   Whilst a path to trigger
this has not been established, harden this caller against the
possibility.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
390,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46812,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Skip inactive planes within ModeSupportAndSystemConfiguration

[Why]
Coverity reports Memory - illegal accesses.

[How]
Skip inactive planes.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
389,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42153,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i2c: pnx: Fix potential deadlock warning from del_timer_sync() call in isr

When del_timer_sync() is called in an interrupt context it throws a warning
because of potential deadlock. The timer is used only to exit from
wait_for_completion() after a timeout so replacing the call with
wait_for_completion_timeout() allows to remove the problematic timer and
its related functions altogether.",Linux,Linux,"41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb, 41561f28e76a47dc6de0a954da85d0b5c42874eb"
388,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42268,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix missing lock on sync reset reload

On sync reset reload work, when remote host updates devlink on reload
actions performed on that host, it misses taking devlink lock before
calling devlink_remote_reload_actions_performed() which results in
triggering lock assert like the following:

WARNING: CPU: 4 PID: 1164 at net/devlink/core.c:261 devl_assert_locked+0x3e/0x50
…
 CPU: 4 PID: 1164 Comm: kworker/u96:6 Tainted: G S      W          6.10.0-rc2+ #116
 Hardware name: Supermicro SYS-2028TP-DECTR/X10DRT-PT, BIOS 2.0 12/18/2015
 Workqueue: mlx5_fw_reset_events mlx5_sync_reset_reload_work [mlx5_core]
 RIP: 0010:devl_assert_locked+0x3e/0x50
…
 Call Trace:
  <TASK>
  ? __warn+0xa4/0x210
  ? devl_assert_locked+0x3e/0x50
  ? report_bug+0x160/0x280
  ? handle_bug+0x3f/0x80
  ? exc_invalid_op+0x17/0x40
  ? asm_exc_invalid_op+0x1a/0x20
  ? devl_assert_locked+0x3e/0x50
  devlink_notify+0x88/0x2b0
  ? mlx5_attach_device+0x20c/0x230 [mlx5_core]
  ? __pfx_devlink_notify+0x10/0x10
  ? process_one_work+0x4b6/0xbb0
  process_one_work+0x4b6/0xbb0
[…]",Linux,Linux,"84a433a40d0ebf3bbf36b8bfa58c6f45dc782344, 84a433a40d0ebf3bbf36b8bfa58c6f45dc782344, 84a433a40d0ebf3bbf36b8bfa58c6f45dc782344, 84a433a40d0ebf3bbf36b8bfa58c6f45dc782344"
387,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50045,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: br_netfilter: fix panic with metadata_dst skb

Fix a kernel panic in the br_netfilter module when sending untagged
traffic via a VxLAN device.
This happens during the check for fragmentation in br_nf_dev_queue_xmit.

It is dependent on:
1) the br_netfilter module being loaded;
2) net.bridge.bridge-nf-call-iptables set to 1;
3) a bridge with a VxLAN (single-vxlan-device) netdevice as a bridge port;
4) untagged frames with size higher than the VxLAN MTU forwarded/flooded

When forwarding the untagged packet to the VxLAN bridge port, before
the netfilter hooks are called, br_handle_egress_vlan_tunnel is called and
changes the skb_dst to the tunnel dst. The tunnel_dst is a metadata type
of dst, i.e., skb_valid_dst(skb) is false, and metadata->dst.dev is NULL.

Then in the br_netfilter hooks, in br_nf_dev_queue_xmit, there's a check
for frames that needs to be fragmented: frames with higher MTU than the
VxLAN device end up calling br_nf_ip_fragment, which in turns call
ip_skb_dst_mtu.

The ip_dst_mtu tries to use the skb_dst(skb) as if it was a valid dst
with valid dst->dev, thus the crash.

This case was never supported in the first place, so drop the packet
instead.

PING 10.0.0.2 (10.0.0.2) from 0.0.0.0 h1-eth0: 2000(2028) bytes of data.
[  176.291791] Unable to handle kernel NULL pointer dereference at
virtual address 0000000000000110
[  176.292101] Mem abort info:
[  176.292184]   ESR = 0x0000000096000004
[  176.292322]   EC = 0x25: DABT (current EL), IL = 32 bits
[  176.292530]   SET = 0, FnV = 0
[  176.292709]   EA = 0, S1PTW = 0
[  176.292862]   FSC = 0x04: level 0 translation fault
[  176.293013] Data abort info:
[  176.293104]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
[  176.293488]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
[  176.293787]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[  176.293995] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000043ef5000
[  176.294166] [0000000000000110] pgd=0000000000000000,
p4d=0000000000000000
[  176.294827] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
[  176.295252] Modules linked in: vxlan ip6_udp_tunnel udp_tunnel veth
br_netfilter bridge stp llc ipv6 crct10dif_ce
[  176.295923] CPU: 0 PID: 188 Comm: ping Not tainted
6.8.0-rc3-g5b3fbd61b9d1 #2
[  176.296314] Hardware name: linux,dummy-virt (DT)
[  176.296535] pstate: 80000005 (Nzcv daif -PAN -UAO -TCO -DIT -SSBS
BTYPE=--)
[  176.296808] pc : br_nf_dev_queue_xmit+0x390/0x4ec [br_netfilter]
[  176.297382] lr : br_nf_dev_queue_xmit+0x2ac/0x4ec [br_netfilter]
[  176.297636] sp : ffff800080003630
[  176.297743] x29: ffff800080003630 x28: 0000000000000008 x27:
ffff6828c49ad9f8
[  176.298093] x26: ffff6828c49ad000 x25: 0000000000000000 x24:
00000000000003e8
[  176.298430] x23: 0000000000000000 x22: ffff6828c4960b40 x21:
ffff6828c3b16d28
[  176.298652] x20: ffff6828c3167048 x19: ffff6828c3b16d00 x18:
0000000000000014
[  176.298926] x17: ffffb0476322f000 x16: ffffb7e164023730 x15:
0000000095744632
[  176.299296] x14: ffff6828c3f1c880 x13: 0000000000000002 x12:
ffffb7e137926a70
[  176.299574] x11: 0000000000000001 x10: ffff6828c3f1c898 x9 :
0000000000000000
[  176.300049] x8 : ffff6828c49bf070 x7 : 0008460f18d5f20e x6 :
f20e0100bebafeca
[  176.300302] x5 : ffff6828c7f918fe x4 : ffff6828c49bf070 x3 :
0000000000000000
[  176.300586] x2 : 0000000000000000 x1 : ffff6828c3c7ad00 x0 :
ffff6828c7f918f0
[  176.300889] Call trace:
[  176.301123]  br_nf_dev_queue_xmit+0x390/0x4ec [br_netfilter]
[  176.301411]  br_nf_post_routing+0x2a8/0x3e4 [br_netfilter]
[  176.301703]  nf_hook_slow+0x48/0x124
[  176.302060]  br_forward_finish+0xc8/0xe8 [bridge]
[  176.302371]  br_nf_hook_thresh+0x124/0x134 [br_netfilter]
[  176.302605]  br_nf_forward_finish+0x118/0x22c [br_netfilter]
[  176.302824]  br_nf_forward_ip.part.0+0x264/0x290 [br_netfilter]
[  176.303136]  br_nf_forward+0x2b8/0x4e0 [br_netfilter]
[  176.303359]  nf_hook_slow+0x48/0x124
[  176.303
---truncated---",Linux,Linux,"11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd, 11538d039ac6efcf4f1a6c536e1b87cd3668a9fd"
405,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36004,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: Do not use WQ_MEM_RECLAIM flag for workqueue

Issue reported by customer during SRIOV testing, call trace:
When both i40e and the i40iw driver are loaded, a warning
in check_flush_dependency is being triggered. This seems
to be because of the i40e driver workqueue is allocated with
the WQ_MEM_RECLAIM flag, and the i40iw one is not.

Similar error was encountered on ice too and it was fixed by
removing the flag. Do the same for i40e too.

[Feb 9 09:08] ------------[ cut here ]------------
[  +0.000004] workqueue: WQ_MEM_RECLAIM i40e:i40e_service_task [i40e] is
flushing !WQ_MEM_RECLAIM infiniband:0x0
[  +0.000060] WARNING: CPU: 0 PID: 937 at kernel/workqueue.c:2966
check_flush_dependency+0x10b/0x120
[  +0.000007] Modules linked in: snd_seq_dummy snd_hrtimer snd_seq
snd_timer snd_seq_device snd soundcore nls_utf8 cifs cifs_arc4
nls_ucs2_utils rdma_cm iw_cm ib_cm cifs_md4 dns_resolver netfs qrtr
rfkill sunrpc vfat fat intel_rapl_msr intel_rapl_common irdma
intel_uncore_frequency intel_uncore_frequency_common ice ipmi_ssif
isst_if_common skx_edac nfit libnvdimm x86_pkg_temp_thermal
intel_powerclamp gnss coretemp ib_uverbs rapl intel_cstate ib_core
iTCO_wdt iTCO_vendor_support acpi_ipmi mei_me ipmi_si intel_uncore
ioatdma i2c_i801 joydev pcspkr mei ipmi_devintf lpc_ich
intel_pch_thermal i2c_smbus ipmi_msghandler acpi_power_meter acpi_pad
xfs libcrc32c ast sd_mod drm_shmem_helper t10_pi drm_kms_helper sg ixgbe
drm i40e ahci crct10dif_pclmul libahci crc32_pclmul igb crc32c_intel
libata ghash_clmulni_intel i2c_algo_bit mdio dca wmi dm_mirror
dm_region_hash dm_log dm_mod fuse
[  +0.000050] CPU: 0 PID: 937 Comm: kworker/0:3 Kdump: loaded Not
tainted 6.8.0-rc2-Feb-net_dev-Qiueue-00279-gbd43c5687e05 #1
[  +0.000003] Hardware name: Intel Corporation S2600BPB/S2600BPB, BIOS
SE5C620.86B.02.01.0013.121520200651 12/15/2020
[  +0.000001] Workqueue: i40e i40e_service_task [i40e]
[  +0.000024] RIP: 0010:check_flush_dependency+0x10b/0x120
[  +0.000003] Code: ff 49 8b 54 24 18 48 8d 8b b0 00 00 00 49 89 e8 48
81 c6 b0 00 00 00 48 c7 c7 b0 97 fa 9f c6 05 8a cc 1f 02 01 e8 35 b3 fd
ff <0f> 0b e9 10 ff ff ff 80 3d 78 cc 1f 02 00 75 94 e9 46 ff ff ff 90
[  +0.000002] RSP: 0018:ffffbd294976bcf8 EFLAGS: 00010282
[  +0.000002] RAX: 0000000000000000 RBX: ffff94d4c483c000 RCX:
0000000000000027
[  +0.000001] RDX: ffff94d47f620bc8 RSI: 0000000000000001 RDI:
ffff94d47f620bc0
[  +0.000001] RBP: 0000000000000000 R08: 0000000000000000 R09:
00000000ffff7fff
[  +0.000001] R10: ffffbd294976bb98 R11: ffffffffa0be65e8 R12:
ffff94c5451ea180
[  +0.000001] R13: ffff94c5ab5e8000 R14: ffff94c5c20b6e05 R15:
ffff94c5f1330ab0
[  +0.000001] FS:  0000000000000000(0000) GS:ffff94d47f600000(0000)
knlGS:0000000000000000
[  +0.000002] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  +0.000001] CR2: 00007f9e6f1fca70 CR3: 0000000038e20004 CR4:
00000000007706f0
[  +0.000000] DR0: 0000000000000000 DR1: 0000000000000000 DR2:
0000000000000000
[  +0.000001] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7:
0000000000000400
[  +0.000001] PKRU: 55555554
[  +0.000001] Call Trace:
[  +0.000001]  <TASK>
[  +0.000002]  ? __warn+0x80/0x130
[  +0.000003]  ? check_flush_dependency+0x10b/0x120
[  +0.000002]  ? report_bug+0x195/0x1a0
[  +0.000005]  ? handle_bug+0x3c/0x70
[  +0.000003]  ? exc_invalid_op+0x14/0x70
[  +0.000002]  ? asm_exc_invalid_op+0x16/0x20
[  +0.000006]  ? check_flush_dependency+0x10b/0x120
[  +0.000002]  ? check_flush_dependency+0x10b/0x120
[  +0.000002]  __flush_workqueue+0x126/0x3f0
[  +0.000015]  ib_cache_cleanup_one+0x1c/0xe0 [ib_core]
[  +0.000056]  __ib_unregister_device+0x6a/0xb0 [ib_core]
[  +0.000023]  ib_unregister_device_and_put+0x34/0x50 [ib_core]
[  +0.000020]  i40iw_close+0x4b/0x90 [irdma]
[  +0.000022]  i40e_notify_client_of_netdev_close+0x54/0xc0 [i40e]
[  +0.000035]  i40e_service_task+0x126/0x190 [i40e]
[  +0.000024]  process_one_work+0x174/0x340
[  +0.000003]  worker_th
---truncated---",Linux,Linux,"4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a, 4d5957cbdecdbb77d24c1465caadd801c07afa4a"
407,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43828,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix infinite loop when replaying fast_commit

When doing fast_commit replay an infinite loop may occur due to an
uninitialized extent_status struct.  ext4_ext_determine_insert_hole() does
not detect the replay and calls ext4_es_find_extent_range(), which will
return immediately without initializing the 'es' variable.

Because 'es' contains garbage, an integer overflow may happen causing an
infinite loop in this function, easily reproducible using fstest generic/039.

This commit fixes this issue by unconditionally initializing the structure
in function ext4_es_find_extent_range().

Thanks to Zhang Yi, for figuring out the real problem!",Linux,Linux,"8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2"
427,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46846,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

spi: rockchip: Resolve unbalanced runtime PM / system PM handling

Commit e882575efc77 (""spi: rockchip: Suspend and resume the bus during
NOIRQ_SYSTEM_SLEEP_PM ops"") stopped respecting runtime PM status and
simply disabled clocks unconditionally when suspending the system. This
causes problems when the device is already runtime suspended when we go
to sleep -- in which case we double-disable clocks and produce a
WARNing.

Switch back to pm_runtime_force_{suspend,resume}(), because that still
seems like the right thing to do, and the aforementioned commit makes no
explanation why it stopped using it.

Also, refactor some of the resume() error handling, because it's not
actually a good idea to re-disable clocks on failure.",Linux,Linux,"e882575efc771f130a24322377dc1033551da11d, e882575efc771f130a24322377dc1033551da11d, e882575efc771f130a24322377dc1033551da11d, e882575efc771f130a24322377dc1033551da11d"
418,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46836,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: aspeed_udc: validate endpoint index for ast udc

We should verify the bound of the array to assure that host
may not manipulate the index to point past endpoint array.

Found by static analysis.",Linux,Linux,"055276c1320564b0192b3af323b8cc67f9b665e1, 055276c1320564b0192b3af323b8cc67f9b665e1, 055276c1320564b0192b3af323b8cc67f9b665e1, 055276c1320564b0192b3af323b8cc67f9b665e1"
426,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46783,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tcp_bpf: fix return value of tcp_bpf_sendmsg()

When we cork messages in psock->cork, the last message triggers the
flushing will result in sending a sk_msg larger than the current
message size. In this case, in tcp_bpf_send_verdict(), 'copied' becomes
negative at least in the following case:

468         case __SK_DROP:
469         default:
470                 sk_msg_free_partial(sk, msg, tosend);
471                 sk_msg_apply_bytes(psock, tosend);
472                 *copied -= (tosend + delta); // <==== HERE
473                 return -EACCES;

Therefore, it could lead to the following BUG with a proper value of
'copied' (thanks to syzbot). We should not use negative 'copied' as a
return value here.

  ------------[ cut here ]------------
  kernel BUG at net/socket.c:733!
  Internal error: Oops - BUG: 00000000f2000800 [#1] PREEMPT SMP
  Modules linked in:
  CPU: 0 UID: 0 PID: 3265 Comm: syz-executor510 Not tainted 6.11.0-rc3-syzkaller-00060-gd07b43284ab3 #0
  Hardware name: linux,dummy-virt (DT)
  pstate: 61400009 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)
  pc : sock_sendmsg_nosec net/socket.c:733 [inline]
  pc : sock_sendmsg_nosec net/socket.c:728 [inline]
  pc : __sock_sendmsg+0x5c/0x60 net/socket.c:745
  lr : sock_sendmsg_nosec net/socket.c:730 [inline]
  lr : __sock_sendmsg+0x54/0x60 net/socket.c:745
  sp : ffff800088ea3b30
  x29: ffff800088ea3b30 x28: fbf00000062bc900 x27: 0000000000000000
  x26: ffff800088ea3bc0 x25: ffff800088ea3bc0 x24: 0000000000000000
  x23: f9f00000048dc000 x22: 0000000000000000 x21: ffff800088ea3d90
  x20: f9f00000048dc000 x19: ffff800088ea3d90 x18: 0000000000000001
  x17: 0000000000000000 x16: 0000000000000000 x15: 000000002002ffaf
  x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000
  x11: 0000000000000000 x10: ffff8000815849c0 x9 : ffff8000815b49c0
  x8 : 0000000000000000 x7 : 000000000000003f x6 : 0000000000000000
  x5 : 00000000000007e0 x4 : fff07ffffd239000 x3 : fbf00000062bc900
  x2 : 0000000000000000 x1 : 0000000000000000 x0 : 00000000fffffdef
  Call trace:
   sock_sendmsg_nosec net/socket.c:733 [inline]
   __sock_sendmsg+0x5c/0x60 net/socket.c:745
   ____sys_sendmsg+0x274/0x2ac net/socket.c:2597
   ___sys_sendmsg+0xac/0x100 net/socket.c:2651
   __sys_sendmsg+0x84/0xe0 net/socket.c:2680
   __do_sys_sendmsg net/socket.c:2689 [inline]
   __se_sys_sendmsg net/socket.c:2687 [inline]
   __arm64_sys_sendmsg+0x24/0x30 net/socket.c:2687
   __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
   invoke_syscall+0x48/0x110 arch/arm64/kernel/syscall.c:49
   el0_svc_common.constprop.0+0x40/0xe0 arch/arm64/kernel/syscall.c:132
   do_el0_svc+0x1c/0x28 arch/arm64/kernel/syscall.c:151
   el0_svc+0x34/0xec arch/arm64/kernel/entry-common.c:712
   el0t_64_sync_handler+0x100/0x12c arch/arm64/kernel/entry-common.c:730
   el0t_64_sync+0x19c/0x1a0 arch/arm64/kernel/entry.S:598
  Code: f9404463 d63f0060 3108441f 54fffe81 (d4210000)
  ---[ end trace 0000000000000000 ]---",Linux,Linux,"4f738adba30a7cfc006f605707e7aee847ffefa0, 4f738adba30a7cfc006f605707e7aee847ffefa0, 4f738adba30a7cfc006f605707e7aee847ffefa0, 4f738adba30a7cfc006f605707e7aee847ffefa0, 4f738adba30a7cfc006f605707e7aee847ffefa0, 4f738adba30a7cfc006f605707e7aee847ffefa0, 4f738adba30a7cfc006f605707e7aee847ffefa0"
425,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46675,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: dwc3: core: Prevent USB core invalid event buffer address access

This commit addresses an issue where the USB core could access an
invalid event buffer address during runtime suspend, potentially causing
SMMU faults and other memory issues in Exynos platforms. The problem
arises from the following sequence.
        1. In dwc3_gadget_suspend, there is a chance of a timeout when
        moving the USB core to the halt state after clearing the
        run/stop bit by software.
        2. In dwc3_core_exit, the event buffer is cleared regardless of
        the USB core's status, which may lead to an SMMU faults and
        other memory issues. if the USB core tries to access the event
        buffer address.

To prevent this hardware quirk on Exynos platforms, this commit ensures
that the event buffer address is not cleared by software  when the USB
core is active during runtime suspend by checking its status before
clearing the buffer address.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
424,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52507,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfc: nci: assert requested protocol is valid

The protocol is used in a bit mask to determine if the protocol is
supported. Assert the provided protocol is less than the maximum
defined so it doesn't potentially perform a shift-out-of-bounds and
provide a clearer error for undefined protocols vs unsupported ones.",Linux,Linux,"6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8, 6a2968aaf50c7a22fced77a5e24aa636281efca8"
423,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50181,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

clk: imx: Remove CLK_SET_PARENT_GATE for DRAM mux for i.MX7D

For i.MX7D DRAM related mux clock, the clock source change should ONLY
be done done in low level asm code without accessing DRAM, and then
calling clk API to sync the HW clock status with clk tree, it should never
touch real clock source switch via clk API, so CLK_SET_PARENT_GATE flag
should NOT be added, otherwise, DRAM's clock parent will be disabled when
DRAM is active, and system will hang.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
422,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-53057,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: stop qdisc_tree_reduce_backlog on TC_H_ROOT

In qdisc_tree_reduce_backlog, Qdiscs with major handle ffff: are assumed
to be either root or ingress. This assumption is bogus since it's valid
to create egress qdiscs with major handle ffff:
Budimir Markovic found that for qdiscs like DRR that maintain an active
class list, it will cause a UAF with a dangling class pointer.

In 066a3b5b2346, the concern was to avoid iterating over the ingress
qdisc since its parent is itself. The proper fix is to stop when parent
TC_H_ROOT is reached because the only way to retrieve ingress is when a
hierarchy which does not contain a ffff: major handle call into
qdisc_lookup with TC_H_MAJ(TC_H_ROOT).

In the scenario where major ffff: is an egress qdisc in any of the tree
levels, the updates will also propagate to TC_H_ROOT, which then the
iteration must stop.


 net/sched/sch_api.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)",Linux,Linux,"066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939, 066a3b5b2346febf9a655b444567b7138e3bb939"
421,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42281,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix a segment issue when downgrading gso_size

Linearize the skb when downgrading gso_size because it may trigger a
BUG_ON() later when the skb is segmented as described in [1,2].",Linux,Linux,"2be7e212d5419a400d051c84ca9fdd083e5aacac, 2be7e212d5419a400d051c84ca9fdd083e5aacac, 2be7e212d5419a400d051c84ca9fdd083e5aacac, 2be7e212d5419a400d051c84ca9fdd083e5aacac, 2be7e212d5419a400d051c84ca9fdd083e5aacac, 2be7e212d5419a400d051c84ca9fdd083e5aacac, 2be7e212d5419a400d051c84ca9fdd083e5aacac"
420,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36946,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

phonet: fix rtm_phonet_notify() skb allocation

fill_route() stores three components in the skb:

- struct rtmsg
- RTA_DST (u8)
- RTA_OIF (u32)

Therefore, rtm_phonet_notify() should use

NLMSG_ALIGN(sizeof(struct rtmsg)) +
nla_total_size(1) +
nla_total_size(4)",Linux,Linux,"f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca, f062f41d06575744b9eaf725eef8a5d3b5f5b7ca"
419,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43847,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: fix invalid memory access while processing fragmented packets

The monitor ring and the reo reinject ring share the same ring mask index.
When the driver receives an interrupt for the reo reinject ring, the
monitor ring is also processed, leading to invalid memory access. Since
monitor support is not yet enabled in ath12k, the ring mask for the monitor
ring should be removed.

Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.1.1-00209-QCAHKSWPL_SILICONZ-1",Linux,Linux,"d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2"
417,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43873,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vhost/vsock: always initialize seqpacket_allow

There are two issues around seqpacket_allow:
1. seqpacket_allow is not initialized when socket is
   created. Thus if features are never set, it will be
   read uninitialized.
2. if VIRTIO_VSOCK_F_SEQPACKET is set and then cleared,
   then seqpacket_allow will not be cleared appropriately
   (existing apps I know about don't usually do this but
    it's legal and there's no way to be sure no one relies
    on this).

To fix:
	- initialize seqpacket_allow after allocation
	- set it unconditionally in set_features",Linux,Linux,"ced7b713711fdd8f99d8d04dc53451441d194c60, ced7b713711fdd8f99d8d04dc53451441d194c60, ced7b713711fdd8f99d8d04dc53451441d194c60, ced7b713711fdd8f99d8d04dc53451441d194c60, ced7b713711fdd8f99d8d04dc53451441d194c60"
408,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26921,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

inet: inet_defrag: prevent sk release while still in use

ip_local_out() and other functions can pass skb->sk as function argument.

If the skb is a fragment and reassembly happens before such function call
returns, the sk must not be released.

This affects skb fragments reassembled via netfilter or similar
modules, e.g. openvswitch or ct_act.c, when run as part of tx pipeline.

Eric Dumazet made an initial analysis of this bug.  Quoting Eric:
  Calling ip_defrag() in output path is also implying skb_orphan(),
  which is buggy because output path relies on sk not disappearing.

  A relevant old patch about the issue was :
  8282f27449bf (""inet: frag: Always orphan skbs inside ip_defrag()"")

  [..]

  net/ipv4/ip_output.c depends on skb->sk being set, and probably to an
  inet socket, not an arbitrary one.

  If we orphan the packet in ipvlan, then downstream things like FQ
  packet scheduler will not work properly.

  We need to change ip_defrag() to only use skb_orphan() when really
  needed, ie whenever frag_list is going to be used.

Eric suggested to stash sk in fragment queue and made an initial patch.
However there is a problem with this:

If skb is refragmented again right after, ip_do_fragment() will copy
head->sk to the new fragments, and sets up destructor to sock_wfree.
IOW, we have no choice but to fix up sk_wmem accouting to reflect the
fully reassembled skb, else wmem will underflow.

This change moves the orphan down into the core, to last possible moment.
As ip_defrag_offset is aliased with sk_buff->sk member, we must move the
offset into the FRAG_CB, else skb->sk gets clobbered.

This allows to delay the orphaning long enough to learn if the skb has
to be queued or if the skb is completing the reasm queue.

In the former case, things work as before, skb is orphaned.  This is
safe because skb gets queued/stolen and won't continue past reasm engine.

In the latter case, we will steal the skb->sk reference, reattach it to
the head skb, and fix up wmem accouting when inet_frag inflates truesize.",Linux,Linux,"7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab, 7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab, 7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab, 7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab, 7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab, 7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab, 7026b1ddb6b8d4e6ee33dc2bd06c0ca8746fa7ab"
416,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49981,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: venus: fix use after free bug in venus_remove due to race condition

in venus_probe, core->work is bound with venus_sys_error_handler, which is
used to handle error. The code use core->sys_err_done to make sync work.
The core->work is started in venus_event_notify.

If we call venus_remove, there might be an unfished work. The possible
sequence is as follows:

CPU0                  CPU1

                     |venus_sys_error_handler
venus_remove         |
hfi_destroy	 		 |
venus_hfi_destroy	 |
kfree(hdev);	     |
                     |hfi_reinit
					 |venus_hfi_queues_reinit
                     |//use hdev

Fix it by canceling the work in venus_remove.",Linux,Linux,"af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115, af2c3834c8ca7cc65d15592ac671933df8848115"
415,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49952,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: prevent nf_skb_duplicated corruption

syzbot found that nf_dup_ipv4() or nf_dup_ipv6() could write
per-cpu variable nf_skb_duplicated in an unsafe way [1].

Disabling preemption as hinted by the splat is not enough,
we have to disable soft interrupts as well.

[1]
BUG: using __this_cpu_write() in preemptible [00000000] code: syz.4.282/6316
 caller is nf_dup_ipv4+0x651/0x8f0 net/ipv4/netfilter/nf_dup_ipv4.c:87
CPU: 0 UID: 0 PID: 6316 Comm: syz.4.282 Not tainted 6.11.0-rc7-syzkaller-00104-g7052622fccb1 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:93 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
  check_preemption_disabled+0x10e/0x120 lib/smp_processor_id.c:49
  nf_dup_ipv4+0x651/0x8f0 net/ipv4/netfilter/nf_dup_ipv4.c:87
  nft_dup_ipv4_eval+0x1db/0x300 net/ipv4/netfilter/nft_dup_ipv4.c:30
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x4ad/0x1da0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_ipv4+0x202/0x320 net/netfilter/nft_chain_filter.c:23
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xc3/0x220 net/netfilter/core.c:626
  nf_hook+0x2c4/0x450 include/linux/netfilter.h:269
  NF_HOOK_COND include/linux/netfilter.h:302 [inline]
  ip_output+0x185/0x230 net/ipv4/ip_output.c:433
  ip_local_out net/ipv4/ip_output.c:129 [inline]
  ip_send_skb+0x74/0x100 net/ipv4/ip_output.c:1495
  udp_send_skb+0xacf/0x1650 net/ipv4/udp.c:981
  udp_sendmsg+0x1c21/0x2a60 net/ipv4/udp.c:1269
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x1a6/0x270 net/socket.c:745
  ____sys_sendmsg+0x525/0x7d0 net/socket.c:2597
  ___sys_sendmsg net/socket.c:2651 [inline]
  __sys_sendmmsg+0x3b2/0x740 net/socket.c:2737
  __do_sys_sendmmsg net/socket.c:2766 [inline]
  __se_sys_sendmmsg net/socket.c:2763 [inline]
  __x64_sys_sendmmsg+0xa0/0xb0 net/socket.c:2763
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f4ce4f7def9
Code: ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 a8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f4ce5d4a038 EFLAGS: 00000246 ORIG_RAX: 0000000000000133
RAX: ffffffffffffffda RBX: 00007f4ce5135f80 RCX: 00007f4ce4f7def9
RDX: 0000000000000001 RSI: 0000000020005d40 RDI: 0000000000000006
RBP: 00007f4ce4ff0b76 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 0000000000000000 R14: 00007f4ce5135f80 R15: 00007ffd4cbc6d68
 </TASK>",Linux,Linux,"d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738, d877f07112f1e5a247c6b585c971a93895c9f738"
414,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47735,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/hns: Fix spin_unlock_irqrestore() called with IRQs enabled

Fix missuse of spin_lock_irq()/spin_unlock_irq() when
spin_lock_irqsave()/spin_lock_irqrestore() was hold.

This was discovered through the lock debugging, and the corresponding
log is as follows:

raw_local_irq_restore() called with IRQs enabled
WARNING: CPU: 96 PID: 2074 at kernel/locking/irqflag-debug.c:10 warn_bogus_irq_restore+0x30/0x40
...
Call trace:
 warn_bogus_irq_restore+0x30/0x40
 _raw_spin_unlock_irqrestore+0x84/0xc8
 add_qp_to_list+0x11c/0x148 [hns_roce_hw_v2]
 hns_roce_create_qp_common.constprop.0+0x240/0x780 [hns_roce_hw_v2]
 hns_roce_create_qp+0x98/0x160 [hns_roce_hw_v2]
 create_qp+0x138/0x258
 ib_create_qp_kernel+0x50/0xe8
 create_mad_qp+0xa8/0x128
 ib_mad_port_open+0x218/0x448
 ib_mad_init_device+0x70/0x1f8
 add_client_context+0xfc/0x220
 enable_device_and_get+0xd0/0x140
 ib_register_device.part.0+0xf4/0x1c8
 ib_register_device+0x34/0x50
 hns_roce_register_device+0x174/0x3d0 [hns_roce_hw_v2]
 hns_roce_init+0xfc/0x2c0 [hns_roce_hw_v2]
 __hns_roce_hw_v2_init_instance+0x7c/0x1d0 [hns_roce_hw_v2]
 hns_roce_hw_v2_init_instance+0x9c/0x180 [hns_roce_hw_v2]",Linux,Linux,"9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b, 9a4435375cd151e07c0c38fa601b00115986091b"
413,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46828,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sched: sch_cake: fix bulk flow accounting logic for host fairness

In sch_cake, we keep track of the count of active bulk flows per host,
when running in dst/src host fairness mode, which is used as the
round-robin weight when iterating through flows. The count of active
bulk flows is updated whenever a flow changes state.

This has a peculiar interaction with the hash collision handling: when a
hash collision occurs (after the set-associative hashing), the state of
the hash bucket is simply updated to match the new packet that collided,
and if host fairness is enabled, that also means assigning new per-host
state to the flow. For this reason, the bulk flow counters of the
host(s) assigned to the flow are decremented, before new state is
assigned (and the counters, which may not belong to the same host
anymore, are incremented again).

Back when this code was introduced, the host fairness mode was always
enabled, so the decrement was unconditional. When the configuration
flags were introduced the *increment* was made conditional, but
the *decrement* was not. Which of course can lead to a spurious
decrement (and associated wrap-around to U16_MAX).

AFAICT, when host fairness is disabled, the decrement and wrap-around
happens as soon as a hash collision occurs (which is not that common in
itself, due to the set-associative hashing). However, in most cases this
is harmless, as the value is only used when host fairness mode is
enabled. So in order to trigger an array overflow, sch_cake has to first
be configured with host fairness disabled, and while running in this
mode, a hash collision has to occur to cause the overflow. Then, the
qdisc has to be reconfigured to enable host fairness, which leads to the
array out-of-bounds because the wrapped-around value is retained and
used as an array index. It seems that syzbot managed to trigger this,
which is quite impressive in its own right.

This patch fixes the issue by introducing the same conditional check on
decrement as is used on increment.

The original bug predates the upstreaming of cake, but the commit listed
in the Fixes tag touched that code, meaning that this patch won't apply
before that.",Linux,Linux,"712639929912c5eefb09facccb48d55b3f72c9f8, 712639929912c5eefb09facccb48d55b3f72c9f8, 712639929912c5eefb09facccb48d55b3f72c9f8, 712639929912c5eefb09facccb48d55b3f72c9f8, 712639929912c5eefb09facccb48d55b3f72c9f8, 712639929912c5eefb09facccb48d55b3f72c9f8, 712639929912c5eefb09facccb48d55b3f72c9f8"
412,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46723,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix ucode out-of-bounds read warning

Clear warning that read ucode[] may out-of-bounds.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
411,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44998,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

atm: idt77252: prevent use after free in dequeue_rx()

We can't dereference ""skb"" after calling vcc->push() because the skb
is released.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
410,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42306,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

udf: Avoid using corrupted block bitmap buffer

When the filesystem block bitmap is corrupted, we detect the corruption
while loading the bitmap and fail the allocation with error. However the
next allocation from the same bitmap will notice the bitmap buffer is
already loaded and tries to allocate from the bitmap with mixed results
(depending on the exact nature of the bitmap corruption). Fix the
problem by using BH_verified bit to indicate whether the bitmap is valid
or not.",Linux,Linux,"7648ea9896b31aff38830d81188f5b7a1773e4a8, 4ac54312f623c6d2ca30c36c1ef530c11f5aff64, 099bf90d7fc4622da9fd4727f6d318a0f12d10be, 6ac8f2c8362afd2baa8e7b9c946597589e587d22, 1e0d4adf17e7ef03281d7b16555e7c1508c8ed2d, 1e0d4adf17e7ef03281d7b16555e7c1508c8ed2d, 1e0d4adf17e7ef03281d7b16555e7c1508c8ed2d"
409,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43889,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

padata: Fix possible divide-by-0 panic in padata_mt_helper()

We are hit with a not easily reproducible divide-by-0 panic in padata.c at
bootup time.

  [   10.017908] Oops: divide error: 0000 1 PREEMPT SMP NOPTI
  [   10.017908] CPU: 26 PID: 2627 Comm: kworker/u1666:1 Not tainted 6.10.0-15.el10.x86_64 #1
  [   10.017908] Hardware name: Lenovo ThinkSystem SR950 [7X12CTO1WW]/[7X12CTO1WW], BIOS [PSE140J-2.30] 07/20/2021
  [   10.017908] Workqueue: events_unbound padata_mt_helper
  [   10.017908] RIP: 0010:padata_mt_helper+0x39/0xb0
    :
  [   10.017963] Call Trace:
  [   10.017968]  <TASK>
  [   10.018004]  ? padata_mt_helper+0x39/0xb0
  [   10.018084]  process_one_work+0x174/0x330
  [   10.018093]  worker_thread+0x266/0x3a0
  [   10.018111]  kthread+0xcf/0x100
  [   10.018124]  ret_from_fork+0x31/0x50
  [   10.018138]  ret_from_fork_asm+0x1a/0x30
  [   10.018147]  </TASK>

Looking at the padata_mt_helper() function, the only way a divide-by-0
panic can happen is when ps->chunk_size is 0.  The way that chunk_size is
initialized in padata_do_multithreaded(), chunk_size can be 0 when the
min_chunk in the passed-in padata_mt_job structure is 0.

Fix this divide-by-0 panic by making sure that chunk_size will be at least
1 no matter what the input parameters are.",Linux,Linux,"004ed42638f4428e70ead59d170f3d17ff761a0f, 004ed42638f4428e70ead59d170f3d17ff761a0f, 004ed42638f4428e70ead59d170f3d17ff761a0f, 004ed42638f4428e70ead59d170f3d17ff761a0f, 004ed42638f4428e70ead59d170f3d17ff761a0f, 004ed42638f4428e70ead59d170f3d17ff761a0f"
297,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-40973,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: mtk-vcodec: potential null pointer deference in SCP

The return value of devm_kzalloc() needs to be checked to avoid
NULL pointer deference. This is similar to CVE-2022-3113.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
295,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46798,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: dapm: Fix UAF for snd_soc_pcm_runtime object

When using kernel with the following extra config,

  - CONFIG_KASAN=y
  - CONFIG_KASAN_GENERIC=y
  - CONFIG_KASAN_INLINE=y
  - CONFIG_KASAN_VMALLOC=y
  - CONFIG_FRAME_WARN=4096

kernel detects that snd_pcm_suspend_all() access a freed
'snd_soc_pcm_runtime' object when the system is suspended, which
leads to a use-after-free bug:

[   52.047746] BUG: KASAN: use-after-free in snd_pcm_suspend_all+0x1a8/0x270
[   52.047765] Read of size 1 at addr ffff0000b9434d50 by task systemd-sleep/2330

[   52.047785] Call trace:
[   52.047787]  dump_backtrace+0x0/0x3c0
[   52.047794]  show_stack+0x34/0x50
[   52.047797]  dump_stack_lvl+0x68/0x8c
[   52.047802]  print_address_description.constprop.0+0x74/0x2c0
[   52.047809]  kasan_report+0x210/0x230
[   52.047815]  __asan_report_load1_noabort+0x3c/0x50
[   52.047820]  snd_pcm_suspend_all+0x1a8/0x270
[   52.047824]  snd_soc_suspend+0x19c/0x4e0

The snd_pcm_sync_stop() has a NULL check on 'substream->runtime' before
making any access. So we need to always set 'substream->runtime' to NULL
everytime we kfree() it.",Linux,Linux,"a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0, a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0, a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0, a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0, a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0, a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0, a72706ed8208ac3f72d1c3ebbc6509e368b0dcb0"
472,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44934,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mcast: wait for previous gc cycles when removing port

syzbot hit a use-after-free[1] which is caused because the bridge doesn't
make sure that all previous garbage has been collected when removing a
port. What happens is:
      CPU 1                   CPU 2
 start gc cycle           remove port
                         acquire gc lock first
 wait for lock
                         call br_multicasg_gc() directly
 acquire lock now but    free port
 the port can be freed
 while grp timers still
 running

Make sure all previous gc cycles have finished by using flush_work before
freeing the port.

[1]
  BUG: KASAN: slab-use-after-free in br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861
  Read of size 8 at addr ffff888071d6d000 by task syz.5.1232/9699

  CPU: 1 PID: 9699 Comm: syz.5.1232 Not tainted 6.10.0-rc5-syzkaller-00021-g24ca36a562d6 #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/07/2024
  Call Trace:
   <IRQ>
   __dump_stack lib/dump_stack.c:88 [inline]
   dump_stack_lvl+0x116/0x1f0 lib/dump_stack.c:114
   print_address_description mm/kasan/report.c:377 [inline]
   print_report+0xc3/0x620 mm/kasan/report.c:488
   kasan_report+0xd9/0x110 mm/kasan/report.c:601
   br_multicast_port_group_expired+0x4c0/0x550 net/bridge/br_multicast.c:861
   call_timer_fn+0x1a3/0x610 kernel/time/timer.c:1792
   expire_timers kernel/time/timer.c:1843 [inline]
   __run_timers+0x74b/0xaf0 kernel/time/timer.c:2417
   __run_timer_base kernel/time/timer.c:2428 [inline]
   __run_timer_base kernel/time/timer.c:2421 [inline]
   run_timer_base+0x111/0x190 kernel/time/timer.c:2437",Linux,Linux,"e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18, e12cec65b5546f19217e26aafb8add6e2fadca18"
294,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42284,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: Return non-zero value from tipc_udp_addr2str() on error

tipc_udp_addr2str() should return non-zero value if the UDP media
address is invalid. Otherwise, a buffer overflow access can occur in
tipc_media_addr_printf(). Fix this by returning 1 on an invalid UDP
media address.",Linux,Linux,"d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836, d0f91938bede204a343473792529e0db7d599836"
183,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52809,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: libfc: Fix potential NULL pointer dereference in fc_lport_ptp_setup()

fc_lport_ptp_setup() did not check the return value of fc_rport_create()
which can return NULL and would cause a NULL pointer dereference. Address
this issue by checking return value of fc_rport_create() and log error
message on fc_rport_create() failed.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
182,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-47764,n/a,n/a,CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for path and domain, which could be abused to alter other fields of the cookie. Upgrade to 0.7.0, which updates the validation for name, path, and domain.",jshttp,cookie,< 0.7.0
181,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-35809,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

PCI/PM: Drain runtime-idle callbacks before driver removal

A race condition between the .runtime_idle() callback and the .remove()
callback in the rtsx_pcr PCI driver leads to a kernel crash due to an
unhandled page fault [1].

The problem is that rtsx_pci_runtime_idle() is not expected to be running
after pm_runtime_get_sync() has been called, but the latter doesn't really
guarantee that.  It only guarantees that the suspend and resume callbacks
will not be running when it returns.

However, if a .runtime_idle() callback is already running when
pm_runtime_get_sync() is called, the latter will notice that the runtime PM
status of the device is RPM_ACTIVE and it will return right away without
waiting for the former to complete.  In fact, it cannot wait for
.runtime_idle() to complete because it may be called from that callback (it
arguably does not make much sense to do that, but it is not strictly
prohibited).

Thus in general, whoever is providing a .runtime_idle() callback needs
to protect it from running in parallel with whatever code runs after
pm_runtime_get_sync().  [Note that .runtime_idle() will not start after
pm_runtime_get_sync() has returned, but it may continue running then if it
has started earlier.]

One way to address that race condition is to call pm_runtime_barrier()
after pm_runtime_get_sync() (not before it, because a nonzero value of the
runtime PM usage counter is necessary to prevent runtime PM callbacks from
being invoked) to wait for the .runtime_idle() callback to complete should
it be running at that point.  A suitable place for doing that is in
pci_device_remove() which calls pm_runtime_get_sync() before removing the
driver, so it may as well call pm_runtime_barrier() subsequently, which
will prevent the race in question from occurring, not just in the rtsx_pcr
driver, but in any PCI drivers providing .runtime_idle() callbacks.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
180,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52469,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

drivers/amd/pm: fix a use-after-free in kv_parse_power_table

When ps allocated by kzalloc equals to NULL, kv_parse_power_table
frees adev->pm.dpm.ps that allocated before. However, after the control
flow goes through the following call chains:

kv_parse_power_table
  |-> kv_dpm_init
        |-> kv_dpm_sw_init
	      |-> kv_dpm_fini

The adev->pm.dpm.ps is used in the for loop of kv_dpm_fini after its
first free in kv_parse_power_table and causes a use-after-free bug.",Linux,Linux,"a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104, a2e73f56fa6282481927ec43aa9362c03c2e2104"
179,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-21538,7.5,Élevée,Regular Expression Denial of Service (ReDoS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.,n/a,cross-spawn,0
178,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-35944,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

VMCI: Fix memcpy() run-time warning in dg_dispatch_as_host()

Syzkaller hit 'WARNING in dg_dispatch_as_host' bug.

memcpy: detected field-spanning write (size 56) of single field ""&dg_info->msg""
at drivers/misc/vmw_vmci/vmci_datagram.c:237 (size 24)

WARNING: CPU: 0 PID: 1555 at drivers/misc/vmw_vmci/vmci_datagram.c:237
dg_dispatch_as_host+0x88e/0xa60 drivers/misc/vmw_vmci/vmci_datagram.c:237

Some code commentry, based on my understanding:

544 #define VMCI_DG_SIZE(_dg) (VMCI_DG_HEADERSIZE + (size_t)(_dg)->payload_size)
/// This is 24 + payload_size

memcpy(&dg_info->msg, dg, dg_size);
	Destination = dg_info->msg ---> this is a 24 byte
					structure(struct vmci_datagram)
	Source = dg --> this is a 24 byte structure (struct vmci_datagram)
	Size = dg_size = 24 + payload_size

{payload_size = 56-24 =32} -- Syzkaller managed to set payload_size to 32.

 35 struct delayed_datagram_info {
 36         struct datagram_entry *entry;
 37         struct work_struct work;
 38         bool in_dg_host_queue;
 39         /* msg and msg_payload must be together. */
 40         struct vmci_datagram msg;
 41         u8 msg_payload[];
 42 };

So those extra bytes of payload are copied into msg_payload[], a run time
warning is seen while fuzzing with Syzkaller.

One possible way to fix the warning is to split the memcpy() into
two parts -- one -- direct assignment of msg and second taking care of payload.

Gustavo quoted:
""Under FORTIFY_SOURCE we should not copy data across multiple members
in a structure.""",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
177,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42131,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mm: avoid overflows in dirty throttling logic

The dirty throttling logic is interspersed with assumptions that dirty
limits in PAGE_SIZE units fit into 32-bit (so that various multiplications
fit into 64-bits).  If limits end up being larger, we will hit overflows,
possible divisions by 0 etc.  Fix these problems by never allowing so
large dirty limits as they have dubious practical value anyway.  For
dirty_bytes / dirty_background_bytes interfaces we can just refuse to set
so large limits.  For dirty_ratio / dirty_background_ratio it isn't so
simple as the dirty limit is computed from the amount of available memory
which can change due to memory hotplug etc.  So when converting dirty
limits from ratios to numbers of pages, we just don't allow the result to
exceed UINT_MAX.

This is root-only triggerable problem which occurs when the operator
sets dirty limits to >16 TB.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
176,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52683,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ACPI: LPIT: Avoid u32 multiplication overflow

In lpit_update_residency() there is a possibility of overflow
in multiplication, if tsc_khz is large enough (> UINT_MAX/1000).

Change multiplication to mul_u32_u32().

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db, eeb2d80d502af28e5660ff4bbe00f90ceb82c2db"
175,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-14863,n/a,n/a,CWE-79,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"There is a vulnerability in all angular versions before 1.5.0-beta.0, where after escaping the context of the web application, the web application delivers data to its users along with other trusted dynamic content, without validating it.",Red Hat,angular:,all angular versions before 1.5.0-beta.0
174,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26929,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,n/a,n/a,n/a,
173,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-36005,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: honor table dormant flag from netdev release event path

Check for table dormant flag otherwise netdev release event path tries
to unregister an already unregistered hook.

[524854.857999] ------------[ cut here ]------------
[524854.858010] WARNING: CPU: 0 PID: 3386599 at net/netfilter/core.c:501 __nf_unregister_net_hook+0x21a/0x260
[...]
[524854.858848] CPU: 0 PID: 3386599 Comm: kworker/u32:2 Not tainted 6.9.0-rc3+ #365
[524854.858869] Workqueue: netns cleanup_net
[524854.858886] RIP: 0010:__nf_unregister_net_hook+0x21a/0x260
[524854.858903] Code: 24 e8 aa 73 83 ff 48 63 43 1c 83 f8 01 0f 85 3d ff ff ff e8 98 d1 f0 ff 48 8b 3c 24 e8 8f 73 83 ff 48 63 43 1c e9 26 ff ff ff <0f> 0b 48 83 c4 18 48 c7 c7 00 68 e9 82 5b 5d 41 5c 41 5d 41 5e 41
[524854.858914] RSP: 0018:ffff8881e36d79e0 EFLAGS: 00010246
[524854.858926] RAX: 0000000000000000 RBX: ffff8881339ae790 RCX: ffffffff81ba524a
[524854.858936] RDX: dffffc0000000000 RSI: 0000000000000008 RDI: ffff8881c8a16438
[524854.858945] RBP: ffff8881c8a16438 R08: 0000000000000001 R09: ffffed103c6daf34
[524854.858954] R10: ffff8881e36d79a7 R11: 0000000000000000 R12: 0000000000000005
[524854.858962] R13: ffff8881c8a16000 R14: 0000000000000000 R15: ffff8881351b5a00
[524854.858971] FS:  0000000000000000(0000) GS:ffff888390800000(0000) knlGS:0000000000000000
[524854.858982] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[524854.858991] CR2: 00007fc9be0f16f4 CR3: 00000001437cc004 CR4: 00000000001706f0
[524854.859000] Call Trace:
[524854.859006]  <TASK>
[524854.859013]  ? __warn+0x9f/0x1a0
[524854.859027]  ? __nf_unregister_net_hook+0x21a/0x260
[524854.859044]  ? report_bug+0x1b1/0x1e0
[524854.859060]  ? handle_bug+0x3c/0x70
[524854.859071]  ? exc_invalid_op+0x17/0x40
[524854.859083]  ? asm_exc_invalid_op+0x1a/0x20
[524854.859100]  ? __nf_unregister_net_hook+0x6a/0x260
[524854.859116]  ? __nf_unregister_net_hook+0x21a/0x260
[524854.859135]  nf_tables_netdev_event+0x337/0x390 [nf_tables]
[524854.859304]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]
[524854.859461]  ? packet_notifier+0xb3/0x360
[524854.859476]  ? _raw_spin_unlock_irqrestore+0x11/0x40
[524854.859489]  ? dcbnl_netdevice_event+0x35/0x140
[524854.859507]  ? __pfx_nf_tables_netdev_event+0x10/0x10 [nf_tables]
[524854.859661]  notifier_call_chain+0x7d/0x140
[524854.859677]  unregister_netdevice_many_notify+0x5e1/0xae0",Linux,Linux,"d54725cd11a57c30f650260cfb0a92c268bdc3e0, d54725cd11a57c30f650260cfb0a92c268bdc3e0, d54725cd11a57c30f650260cfb0a92c268bdc3e0, d54725cd11a57c30f650260cfb0a92c268bdc3e0, d54725cd11a57c30f650260cfb0a92c268bdc3e0, d54725cd11a57c30f650260cfb0a92c268bdc3e0"
172,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-39502,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ionic: fix use after netif_napi_del()

When queues are started, netif_napi_add() and napi_enable() are called.
If there are 4 queues and only 3 queues are used for the current
configuration, only 3 queues' napi should be registered and enabled.
The ionic_qcq_enable() checks whether the .poll pointer is not NULL for
enabling only the using queue' napi. Unused queues' napi will not be
registered by netif_napi_add(), so the .poll pointer indicates NULL.
But it couldn't distinguish whether the napi was unregistered or not
because netif_napi_del() doesn't reset the .poll pointer to NULL.
So, ionic_qcq_enable() calls napi_enable() for the queue, which was
unregistered by netif_napi_del().

Reproducer:
   ethtool -L <interface name> rx 1 tx 1 combined 0
   ethtool -L <interface name> rx 0 tx 0 combined 1
   ethtool -L <interface name> rx 0 tx 0 combined 4

Splat looks like:
kernel BUG at net/core/dev.c:6666!
Oops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
CPU: 3 PID: 1057 Comm: kworker/3:3 Not tainted 6.10.0-rc2+ #16
Workqueue: events ionic_lif_deferred_work [ionic]
RIP: 0010:napi_enable+0x3b/0x40
Code: 48 89 c2 48 83 e2 f6 80 b9 61 09 00 00 00 74 0d 48 83 bf 60 01 00 00 00 74 03 80 ce 01 f0 4f
RSP: 0018:ffffb6ed83227d48 EFLAGS: 00010246
RAX: 0000000000000000 RBX: ffff97560cda0828 RCX: 0000000000000029
RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff97560cda0a28
RBP: ffffb6ed83227d50 R08: 0000000000000400 R09: 0000000000000001
R10: 0000000000000001 R11: 0000000000000001 R12: 0000000000000000
R13: ffff97560ce3c1a0 R14: 0000000000000000 R15: ffff975613ba0a20
FS:  0000000000000000(0000) GS:ffff975d5f780000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f8f734ee200 CR3: 0000000103e50000 CR4: 00000000007506f0
PKRU: 55555554
Call Trace:
 <TASK>
 ? die+0x33/0x90
 ? do_trap+0xd9/0x100
 ? napi_enable+0x3b/0x40
 ? do_error_trap+0x83/0xb0
 ? napi_enable+0x3b/0x40
 ? napi_enable+0x3b/0x40
 ? exc_invalid_op+0x4e/0x70
 ? napi_enable+0x3b/0x40
 ? asm_exc_invalid_op+0x16/0x20
 ? napi_enable+0x3b/0x40
 ionic_qcq_enable+0xb7/0x180 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]
 ionic_start_queues+0xc4/0x290 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]
 ionic_link_status_check+0x11c/0x170 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]
 ionic_lif_deferred_work+0x129/0x280 [ionic 59bdfc8a035436e1c4224ff7d10789e3f14643f8]
 process_one_work+0x145/0x360
 worker_thread+0x2bb/0x3d0
 ? __pfx_worker_thread+0x10/0x10
 kthread+0xcc/0x100
 ? __pfx_kthread+0x10/0x10
 ret_from_fork+0x2d/0x50
 ? __pfx_kthread+0x10/0x10
 ret_from_fork_asm+0x1a/0x30",Linux,Linux,"0f3154e6bcb354968cc04f7cd86ce466f7b9a814, 0f3154e6bcb354968cc04f7cd86ce466f7b9a814, 0f3154e6bcb354968cc04f7cd86ce466f7b9a814, 0f3154e6bcb354968cc04f7cd86ce466f7b9a814, 0f3154e6bcb354968cc04f7cd86ce466f7b9a814, 0f3154e6bcb354968cc04f7cd86ce466f7b9a814, 0f3154e6bcb354968cc04f7cd86ce466f7b9a814"
171,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2022-21680,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",markedjs,marked,< 4.0.10
170,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2014-0193,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"WebSocket08FrameDecoder in Netty 3.6.x before 3.6.9, 3.7.x before 3.7.1, 3.8.x before 3.8.2, 3.9.x before 3.9.1, and 4.0.x before 4.0.19 allows remote attackers to cause a denial of service (memory consumption) via a TextWebSocketFrame followed by a long stream of ContinuationWebSocketFrames.",n/a,n/a,n/a
169,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52486,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

drm: Don't unref the same fb many times by mistake due to deadlock handling

If we get a deadlock after the fb lookup in drm_mode_page_flip_ioctl()
we proceed to unref the fb and then retry the whole thing from the top.
But we forget to reset the fb pointer back to NULL, and so if we then
get another error during the retry, before the fb lookup, we proceed
the unref the same fb again without having gotten another reference.
The end result is that the fb will (eventually) end up being freed
while it's still in use.

Reset fb to NULL once we've unreffed it to avoid doing it again
until we've done another fb lookup.

This turned out to be pretty easy to hit on a DG2 when doing async
flips (and CONFIG_DEBUG_WW_MUTEX_SLOWPATH=y). The first symptom I
saw that drm_closefb() simply got stuck in a busy loop while walking
the framebuffer list. Fortunately I was able to convince it to oops
instead, and from there it was easier to track down the culprit.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
168,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2022-3786,n/a,n/a,Buffer overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.

",OpenSSL,OpenSSL,3.0.0
167,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-26117,5.3,Moyenne,Regular Expression Denial of Service (ReDoS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Versions of the package angular from 1.0.0 are vulnerable to Regular Expression Denial of Service (ReDoS) via the $resource service due to the usage of an insecure regular expression. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",n/a,angular,1.0.0
166,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42124,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qedf: Make qedf_execute_tmf() non-preemptible

Stop calling smp_processor_id() from preemptible code in
qedf_execute_tmf90.  This results in BUG_ON() when running an RT kernel.

[ 659.343280] BUG: using smp_processor_id() in preemptible [00000000] code: sg_reset/3646
[ 659.343282] caller is qedf_execute_tmf+0x8b/0x360 [qedf]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
165,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-4067,5.3,Moyenne,CWE-1333: Inefficient Regular Expression Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"The NPM package `micromatch` prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persists. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching. This issue was fixed in version 4.0.8.",micromatch,micromatch,"0, 4.0.8"
184,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52451,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/pseries/memhp: Fix access beyond end of drmem array

dlpar_memory_remove_by_index() may access beyond the bounds of the
drmem lmb array when the LMB lookup fails to match an entry with the
given DRC index. When the search fails, the cursor is left pointing to
&drmem_info->lmbs[drmem_info->n_lmbs], which is one element past the
last valid entry in the array. The debug message at the end of the
function then dereferences this pointer:

        pr_debug(""Failed to hot-remove memory at %llx\n"",
                 lmb->base_addr);

This was found by inspection and confirmed with KASAN:

  pseries-hotplug-mem: Attempting to hot-remove LMB, drc index 1234
  ==================================================================
  BUG: KASAN: slab-out-of-bounds in dlpar_memory+0x298/0x1658
  Read of size 8 at addr c000000364e97fd0 by task bash/949

  dump_stack_lvl+0xa4/0xfc (unreliable)
  print_report+0x214/0x63c
  kasan_report+0x140/0x2e0
  __asan_load8+0xa8/0xe0
  dlpar_memory+0x298/0x1658
  handle_dlpar_errorlog+0x130/0x1d0
  dlpar_store+0x18c/0x3e0
  kobj_attr_store+0x68/0xa0
  sysfs_kf_write+0xc4/0x110
  kernfs_fop_write_iter+0x26c/0x390
  vfs_write+0x2d4/0x4e0
  ksys_write+0xac/0x1a0
  system_call_exception+0x268/0x530
  system_call_vectored_common+0x15c/0x2ec

  Allocated by task 1:
   kasan_save_stack+0x48/0x80
   kasan_set_track+0x34/0x50
   kasan_save_alloc_info+0x34/0x50
   __kasan_kmalloc+0xd0/0x120
   __kmalloc+0x8c/0x320
   kmalloc_array.constprop.0+0x48/0x5c
   drmem_init+0x2a0/0x41c
   do_one_initcall+0xe0/0x5c0
   kernel_init_freeable+0x4ec/0x5a0
   kernel_init+0x30/0x1e0
   ret_from_kernel_user_thread+0x14/0x1c

  The buggy address belongs to the object at c000000364e80000
   which belongs to the cache kmalloc-128k of size 131072
  The buggy address is located 0 bytes to the right of
   allocated 98256-byte region [c000000364e80000, c000000364e97fd0)

  ==================================================================
  pseries-hotplug-mem: Failed to hot-remove memory at 0

Log failed lookups with a separate message and dereference the
cursor only when it points to a valid entry.",Linux,Linux,"51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7, 51925fb3c5c901aa06cdc853268a6e19e19bcdc7"
185,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-39472,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

xfs: fix log recovery buffer allocation for the legacy h_size fixup

Commit a70f9fe52daa (""xfs: detect and handle invalid iclog size set by
mkfs"") added a fixup for incorrect h_size values used for the initial
umount record in old xfsprogs versions.  Later commit 0c771b99d6c9
(""xfs: clean up calculation of LR header blocks"") cleaned up the log
reover buffer calculation, but stoped using the fixed up h_size value
to size the log recovery buffer, which can lead to an out of bounds
access when the incorrect h_size does not come from the old mkfs
tool, but a fuzzer.

Fix this by open coding xlog_logrec_hblks and taking the fixed h_size
into account for this calculation.",Linux,Linux,"0c771b99d6c9a0552fea5cc43669b726dad8f659, 0c771b99d6c9a0552fea5cc43669b726dad8f659, 0c771b99d6c9a0552fea5cc43669b726dad8f659, 0c771b99d6c9a0552fea5cc43669b726dad8f659"
186,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-34455,7.5,Élevée,CWE-770: Allocation of Resources Without Limits or Throttling,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.

The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn’t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.

In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn’t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.

Version 1.1.10.1 contains a patch for this issue.",xerial,snappy-java,< 1.1.10.1
197,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-26118,5.3,Moyenne,Regular Expression Denial of Service (ReDoS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Versions of the package angular from 1.4.9 are vulnerable to Regular Expression Denial of Service (ReDoS) via the <input type=""url""> element due to the usage of an insecure regular expression in the input[url] functionality. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",n/a,angular,1.4.9
205,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40901,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: mpt3sas: Avoid test/set_bit() operating in non-allocated memory

There is a potential out-of-bounds access when using test_bit() on a single
word. The test_bit() and set_bit() functions operate on long values, and
when testing or setting a single word, they can exceed the word
boundary. KASAN detects this issue and produces a dump:

	 BUG: KASAN: slab-out-of-bounds in _scsih_add_device.constprop.0 (./arch/x86/include/asm/bitops.h:60 ./include/asm-generic/bitops/instrumented-atomic.h:29 drivers/scsi/mpt3sas/mpt3sas_scsih.c:7331) mpt3sas

	 Write of size 8 at addr ffff8881d26e3c60 by task kworker/u1536:2/2965

For full log, please look at [1].

Make the allocation at least the size of sizeof(unsigned long) so that
set_bit() and test_bit() have sufficient room for read/write operations
without overwriting unallocated memory.

[1] Link: https://lore.kernel.org/all/ZkNcALr3W3KGYYJG@gmail.com/",Linux,Linux,"c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a, c696f7b83edeac804e898952058089143f49ca0a"
204,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26960,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mm: swap: fix race between free_swap_and_cache() and swapoff()

There was previously a theoretical window where swapoff() could run and
teardown a swap_info_struct while a call to free_swap_and_cache() was
running in another thread.  This could cause, amongst other bad
possibilities, swap_page_trans_huge_swapped() (called by
free_swap_and_cache()) to access the freed memory for swap_map.

This is a theoretical problem and I haven't been able to provoke it from a
test case.  But there has been agreement based on code review that this is
possible (see link below).

Fix it by using get_swap_device()/put_swap_device(), which will stall
swapoff().  There was an extra check in _swap_info_get() to confirm that
the swap entry was not free.  This isn't present in get_swap_device()
because it doesn't make sense in general due to the race between getting
the reference and swapoff.  So I've added an equivalent check directly in
free_swap_and_cache().

Details of how to provoke one possible issue (thanks to David Hildenbrand
for deriving this):

--8<-----

__swap_entry_free() might be the last user and result in
""count == SWAP_HAS_CACHE"".

swapoff->try_to_unuse() will stop as soon as soon as si->inuse_pages==0.

So the question is: could someone reclaim the folio and turn
si->inuse_pages==0, before we completed swap_page_trans_huge_swapped().

Imagine the following: 2 MiB folio in the swapcache. Only 2 subpages are
still references by swap entries.

Process 1 still references subpage 0 via swap entry.
Process 2 still references subpage 1 via swap entry.

Process 1 quits. Calls free_swap_and_cache().
-> count == SWAP_HAS_CACHE
[then, preempted in the hypervisor etc.]

Process 2 quits. Calls free_swap_and_cache().
-> count == SWAP_HAS_CACHE

Process 2 goes ahead, passes swap_page_trans_huge_swapped(), and calls
__try_to_reclaim_swap().

__try_to_reclaim_swap()->folio_free_swap()->delete_from_swap_cache()->
put_swap_folio()->free_swap_slot()->swapcache_free_entries()->
swap_entry_free()->swap_range_free()->
...
WRITE_ONCE(si->inuse_pages, si->inuse_pages - nr_entries);

What stops swapoff to succeed after process 2 reclaimed the swap cache
but before process1 finished its call to swap_page_trans_huge_swapped()?

--8<-----",Linux,Linux,"7c00bafee87c7bac7ed9eced7c161f8e5332cb4e, 7c00bafee87c7bac7ed9eced7c161f8e5332cb4e, 7c00bafee87c7bac7ed9eced7c161f8e5332cb4e, 7c00bafee87c7bac7ed9eced7c161f8e5332cb4e, 7c00bafee87c7bac7ed9eced7c161f8e5332cb4e, 7c00bafee87c7bac7ed9eced7c161f8e5332cb4e, 7c00bafee87c7bac7ed9eced7c161f8e5332cb4e"
203,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42090,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

pinctrl: fix deadlock in create_pinctrl() when handling -EPROBE_DEFER

In create_pinctrl(), pinctrl_maps_mutex is acquired before calling
add_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl()
calls pinctrl_free(). However, pinctrl_free() attempts to acquire
pinctrl_maps_mutex, which is already held by create_pinctrl(), leading to
a potential deadlock.

This patch resolves the issue by releasing pinctrl_maps_mutex before
calling pinctrl_free(), preventing the deadlock.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.",Linux,Linux,"42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7"
202,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52730,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mmc: sdio: fix possible resource leaks in some error paths

If sdio_add_func() or sdio_init_func() fails, sdio_remove_func() can
not release the resources, because the sdio function is not presented
in these two cases, it won't call of_node_put() or put_device().

To fix these leaks, make sdio_func_present() only control whether
device_del() needs to be called or not, then always call of_node_put()
and put_device().

In error case in sdio_init_func(), the reference of 'card->dev' is
not get, to avoid redundant put in sdio_free_func_cis(), move the
get_device() to sdio_alloc_func() and put_device() to sdio_release_func(),
it can keep the get/put function be balanced.

Without this patch, while doing fault inject test, it can get the
following leak reports, after this fix, the leak is gone.

unreferenced object 0xffff888112514000 (size 2048):
  comm ""kworker/3:2"", pid 65, jiffies 4294741614 (age 124.774s)
  hex dump (first 32 bytes):
    00 e0 6f 12 81 88 ff ff 60 58 8d 06 81 88 ff ff  ..o.....`X......
    10 40 51 12 81 88 ff ff 10 40 51 12 81 88 ff ff  .@Q......@Q.....
  backtrace:
    [<000000009e5931da>] kmalloc_trace+0x21/0x110
    [<000000002f839ccb>] mmc_alloc_card+0x38/0xb0 [mmc_core]
    [<0000000004adcbf6>] mmc_sdio_init_card+0xde/0x170 [mmc_core]
    [<000000007538fea0>] mmc_attach_sdio+0xcb/0x1b0 [mmc_core]
    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]

unreferenced object 0xffff888112511000 (size 2048):
  comm ""kworker/3:2"", pid 65, jiffies 4294741623 (age 124.766s)
  hex dump (first 32 bytes):
    00 40 51 12 81 88 ff ff e0 58 8d 06 81 88 ff ff  .@Q......X......
    10 10 51 12 81 88 ff ff 10 10 51 12 81 88 ff ff  ..Q.......Q.....
  backtrace:
    [<000000009e5931da>] kmalloc_trace+0x21/0x110
    [<00000000fcbe706c>] sdio_alloc_func+0x35/0x100 [mmc_core]
    [<00000000c68f4b50>] mmc_attach_sdio.cold.18+0xb1/0x395 [mmc_core]
    [<00000000d4fdeba7>] mmc_rescan+0x54a/0x640 [mmc_core]",Linux,Linux,"3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5, 3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5, 3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5, 3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5, 3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5, 3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5, 3d10a1ba0d37c8f5fd5afcdda00613fbb8a90bf5"
201,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-39501,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

drivers: core: synchronize really_probe() and dev_uevent()

Synchronize the dev->driver usage in really_probe() and dev_uevent().
These can run in different threads, what can result in the following
race condition for dev->driver uninitialization:

Thread #1:
==========

really_probe() {
...
probe_failed:
...
device_unbind_cleanup(dev) {
    ...
    dev->driver = NULL;   // <= Failed probe sets dev->driver to NULL
    ...
    }
...
}

Thread #2:
==========

dev_uevent() {
...
if (dev->driver)
      // If dev->driver is NULLed from really_probe() from here on,
      // after above check, the system crashes
      add_uevent_var(env, ""DRIVER=%s"", dev->driver->name);
...
}

really_probe() holds the lock, already. So nothing needs to be done
there. dev_uevent() is called with lock held, often, too. But not
always. What implies that we can't add any locking in dev_uevent()
itself. So fix this race by adding the lock to the non-protected
path. This is the path where above race is observed:

 dev_uevent+0x235/0x380
 uevent_show+0x10c/0x1f0  <= Add lock here
 dev_attr_show+0x3a/0xa0
 sysfs_kf_seq_show+0x17c/0x250
 kernfs_seq_show+0x7c/0x90
 seq_read_iter+0x2d7/0x940
 kernfs_fop_read_iter+0xc6/0x310
 vfs_read+0x5bc/0x6b0
 ksys_read+0xeb/0x1b0
 __x64_sys_read+0x42/0x50
 x64_sys_call+0x27ad/0x2d30
 do_syscall_64+0xcd/0x1d0
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Similar cases are reported by syzkaller in

https://syzkaller.appspot.com/bug?extid=ffa8143439596313a85a

But these are regarding the *initialization* of dev->driver

dev->driver = drv;

As this switches dev->driver to non-NULL these reports can be considered
to be false-positives (which should be ""fixed"" by this commit, as well,
though).

The same issue was reported and tried to be fixed back in 2015 in

https://lore.kernel.org/lkml/1421259054-2574-1-git-send-email-a.sangwan@samsung.com/

already.",Linux,Linux,"239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4, 239378f16aa1ab5c502e42a06359d2de4f88ebb4"
200,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-43830,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

leds: trigger: Unregister sysfs attributes before calling deactivate()

Triggers which have trigger specific sysfs attributes typically store
related data in trigger-data allocated by the activate() callback and
freed by the deactivate() callback.

Calling device_remove_groups() after calling deactivate() leaves a window
where the sysfs attributes show/store functions could be called after
deactivation and then operate on the just freed trigger-data.

Move the device_remove_groups() call to before deactivate() to close
this race window.

This also makes the deactivation path properly do things in reverse order
of the activation path which calls the activate() callback before calling
device_add_groups().",Linux,Linux,"a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49"
199,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-34156,n/a,n/a,CWE-674: Uncontrolled Recursion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.,Go standard library,encoding/gob,"0, 1.23.0-0"
198,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42238,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

firmware: cs_dsp: Return error if block header overflows file

Return an error from cs_dsp_power_up() if a block header is longer
than the amount of data left in the file.

The previous code in cs_dsp_load() and cs_dsp_load_coeff() would loop
while there was enough data left in the file for a valid region. This
protected against overrunning the end of the file data, but it didn't
abort the file processing with an error.",Linux,Linux,"f6bc909e7673c30abcbdb329e7d0aa2e83c103d7, f6bc909e7673c30abcbdb329e7d0aa2e83c103d7, f6bc909e7673c30abcbdb329e7d0aa2e83c103d7, f6bc909e7673c30abcbdb329e7d0aa2e83c103d7"
196,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40995,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: act_api: fix possible infinite loop in tcf_idr_check_alloc()

syzbot found hanging tasks waiting on rtnl_lock [1]

A reproducer is available in the syzbot bug.

When a request to add multiple actions with the same index is sent, the
second request will block forever on the first request. This holds
rtnl_lock, and causes tasks to hang.

Return -EAGAIN to prevent infinite looping, while keeping documented
behavior.

[1]

INFO: task kworker/1:0:5088 blocked for more than 143 seconds.
Not tainted 6.9.0-rc4-syzkaller-00173-g3cdb45594619 #0
""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message.
task:kworker/1:0 state:D stack:23744 pid:5088 tgid:5088 ppid:2 flags:0x00004000
Workqueue: events_power_efficient reg_check_chans_work
Call Trace:
<TASK>
context_switch kernel/sched/core.c:5409 [inline]
__schedule+0xf15/0x5d00 kernel/sched/core.c:6746
__schedule_loop kernel/sched/core.c:6823 [inline]
schedule+0xe7/0x350 kernel/sched/core.c:6838
schedule_preempt_disabled+0x13/0x30 kernel/sched/core.c:6895
__mutex_lock_common kernel/locking/mutex.c:684 [inline]
__mutex_lock+0x5b8/0x9c0 kernel/locking/mutex.c:752
wiphy_lock include/net/cfg80211.h:5953 [inline]
reg_leave_invalid_chans net/wireless/reg.c:2466 [inline]
reg_check_chans_work+0x10a/0x10e0 net/wireless/reg.c:2481",Linux,Linux,"0190c1d452a91c38a3462abdd81752be1b9006a8, 0190c1d452a91c38a3462abdd81752be1b9006a8, 0190c1d452a91c38a3462abdd81752be1b9006a8, 0190c1d452a91c38a3462abdd81752be1b9006a8, 0190c1d452a91c38a3462abdd81752be1b9006a8, 0190c1d452a91c38a3462abdd81752be1b9006a8, 0190c1d452a91c38a3462abdd81752be1b9006a8"
187,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-45296,7.5,Élevée,CWE-1333: Inefficient Regular Expression Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). For users of 0.1, upgrade to 0.1.10. All other users should upgrade to 8.0.0.",pillarjs,path-to-regexp,"< 0.1.10, >= 0.2.0, < 8.0.0"
195,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2020-7676,n/a,n/a,Cross-site Scripting,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"angular.js prior to 1.8.0 allows cross site scripting. The regex-based input HTML replacement may turn sanitized code into unsanitized one. Wrapping ""<option>"" elements in ""<select>"" ones changes parsing behavior, leading to possibly unsanitizing code.",n/a,angular.js,All versions prior to 1.8.0
194,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-43797,6.5,n/a,CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to ""sanitize"" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.",netty,netty,<= 4.1.7.0.Final
193,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52470,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

drm/radeon: check the alloc_workqueue return value in radeon_crtc_init()

check the alloc_workqueue return value in radeon_crtc_init()
to avoid null-ptr-deref.",Linux,Linux,"fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337, fa7f517cb26eb1a1a1f0baffcced39f6c3ec3337"
192,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2022-46751,n/a,n/a,CWE-611 Improper Restriction of XML External Entity Reference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Improper Restriction of XML External Entity Reference, XML Injection (aka Blind XPath Injection) vulnerability in Apache Software Foundation Apache Ivy.This issue affects any version of Apache Ivy prior to 2.5.2.

When Apache Ivy prior to 2.5.2 parses XML files - either its own configuration, Ivy files or Apache Maven POMs - it will allow downloading external document type definitions and expand any entity references contained therein when used.

This can be used to exfiltrate data, access resources only the machine running Ivy has access to or disturb the execution of Ivy in different ways.

Starting with Ivy 2.5.2 DTD processing is disabled by default except when parsing Maven POMs where the default is to allow DTD processing but only to include a DTD snippet shipping with Ivy that is needed to deal with existing Maven POMs that are not valid XML files but are nevertheless accepted by Maven. Access can be be made more lenient via newly introduced system properties where needed.

Users of Ivy prior to version 2.5.2 can use Java system properties to restrict processing of external DTDs, see the section about ""JAXP Properties for External Access restrictions"" inside Oracle's ""Java API for XML Processing (JAXP) Security Guide"".

",Apache Software Foundation,Apache Ivy,1.0.0
191,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40998,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix uninitialized ratelimit_state->lock access in __ext4_fill_super()

In the following concurrency we will access the uninitialized rs->lock:

ext4_fill_super
  ext4_register_sysfs
   // sysfs registered msg_ratelimit_interval_ms
                             // Other processes modify rs->interval to
                             // non-zero via msg_ratelimit_interval_ms
  ext4_orphan_cleanup
    ext4_msg(sb, KERN_INFO, ""Errors on filesystem, ""
      __ext4_msg
        ___ratelimit(&(EXT4_SB(sb)->s_msg_ratelimit_state)
          if (!rs->interval)  // do nothing if interval is 0
            return 1;
          raw_spin_trylock_irqsave(&rs->lock, flags)
            raw_spin_trylock(lock)
              _raw_spin_trylock
                __raw_spin_trylock
                  spin_acquire(&lock->dep_map, 0, 1, _RET_IP_)
                    lock_acquire
                      __lock_acquire
                        register_lock_class
                          assign_lock_key
                            dump_stack();
  ratelimit_state_init(&sbi->s_msg_ratelimit_state, 5 * HZ, 10);
    raw_spin_lock_init(&rs->lock);
    // init rs->lock here

and get the following dump_stack:

=========================================================
INFO: trying to register non-static key.
The code is fine but needs lockdep annotation, or maybe
you didn't initialize this object before use?
turning off the locking correctness validator.
CPU: 12 PID: 753 Comm: mount Tainted: G E 6.7.0-rc6-next-20231222 #504
[...]
Call Trace:
 dump_stack_lvl+0xc5/0x170
 dump_stack+0x18/0x30
 register_lock_class+0x740/0x7c0
 __lock_acquire+0x69/0x13a0
 lock_acquire+0x120/0x450
 _raw_spin_trylock+0x98/0xd0
 ___ratelimit+0xf6/0x220
 __ext4_msg+0x7f/0x160 [ext4]
 ext4_orphan_cleanup+0x665/0x740 [ext4]
 __ext4_fill_super+0x21ea/0x2b10 [ext4]
 ext4_fill_super+0x14d/0x360 [ext4]
[...]
=========================================================

Normally interval is 0 until s_msg_ratelimit_state is initialized, so
___ratelimit() does nothing. But registering sysfs precedes initializing
rs->lock, so it is possible to change rs->interval to a non-zero value
via the msg_ratelimit_interval_ms interface of sysfs while rs->lock is
uninitialized, and then a call to ext4_msg triggers the problem by
accessing an uninitialized rs->lock. Therefore register sysfs after all
initializations are complete to avoid such problems.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
190,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-7254,n/a,n/a,CWE-20 Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Any project that parses untrusted Protocol Buffers data containing an arbitrary number of nested groups / series of SGROUP tags can corrupted by exceeding the stack limit i.e. StackOverflow. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker.",Google,Protocol Buffers,0
189,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26733,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

arp: Prevent overflow in arp_req_get().

syzkaller reported an overflown write in arp_req_get(). [0]

When ioctl(SIOCGARP) is issued, arp_req_get() looks up an neighbour
entry and copies neigh->ha to struct arpreq.arp_ha.sa_data.

The arp_ha here is struct sockaddr, not struct sockaddr_storage, so
the sa_data buffer is just 14 bytes.

In the splat below, 2 bytes are overflown to the next int field,
arp_flags.  We initialise the field just after the memcpy(), so it's
not a problem.

However, when dev->addr_len is greater than 22 (e.g. MAX_ADDR_LEN),
arp_netmask is overwritten, which could be set as htonl(0xFFFFFFFFUL)
in arp_ioctl() before calling arp_req_get().

To avoid the overflow, let's limit the max length of memcpy().

Note that commit b5f0de6df6dc (""net: dev: Convert sa_data to flexible
array in struct sockaddr"") just silenced syzkaller.

[0]:
memcpy: detected field-spanning write (size 16) of single field ""r->arp_ha.sa_data"" at net/ipv4/arp.c:1128 (size 14)
WARNING: CPU: 0 PID: 144638 at net/ipv4/arp.c:1128 arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128
Modules linked in:
CPU: 0 PID: 144638 Comm: syz-executor.4 Not tainted 6.1.74 #31
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-5 04/01/2014
RIP: 0010:arp_req_get+0x411/0x4a0 net/ipv4/arp.c:1128
Code: fd ff ff e8 41 42 de fb b9 0e 00 00 00 4c 89 fe 48 c7 c2 20 6d ab 87 48 c7 c7 80 6d ab 87 c6 05 25 af 72 04 01 e8 5f 8d ad fb <0f> 0b e9 6c fd ff ff e8 13 42 de fb be 03 00 00 00 4c 89 e7 e8 a6
RSP: 0018:ffffc900050b7998 EFLAGS: 00010286
RAX: 0000000000000000 RBX: ffff88803a815000 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffffffff8641a44a RDI: 0000000000000001
RBP: ffffc900050b7a98 R08: 0000000000000001 R09: 0000000000000000
R10: 0000000000000000 R11: 203a7970636d656d R12: ffff888039c54000
R13: 1ffff92000a16f37 R14: ffff88803a815084 R15: 0000000000000010
FS:  00007f172bf306c0(0000) GS:ffff88805aa00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f172b3569f0 CR3: 0000000057f12005 CR4: 0000000000770ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <TASK>
 arp_ioctl+0x33f/0x4b0 net/ipv4/arp.c:1261
 inet_ioctl+0x314/0x3a0 net/ipv4/af_inet.c:981
 sock_do_ioctl+0xdf/0x260 net/socket.c:1204
 sock_ioctl+0x3ef/0x650 net/socket.c:1321
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:870 [inline]
 __se_sys_ioctl fs/ioctl.c:856 [inline]
 __x64_sys_ioctl+0x18e/0x220 fs/ioctl.c:856
 do_syscall_x64 arch/x86/entry/common.c:51 [inline]
 do_syscall_64+0x37/0x90 arch/x86/entry/common.c:81
 entry_SYSCALL_64_after_hwframe+0x64/0xce
RIP: 0033:0x7f172b262b8d
Code: 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f172bf300b8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 00007f172b3abf80 RCX: 00007f172b262b8d
RDX: 0000000020000000 RSI: 0000000000008954 RDI: 0000000000000003
RBP: 00007f172b2d3493 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 000000000000000b R14: 00007f172b3abf80 R15: 00007f172bf10000
 </TASK>",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
188,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-21295,5.9,Moyenne,CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel's pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.",netty,io.netty:netty-codec-http2,< 4.1.60.Final
164,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40974,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/pseries: Enforce hcall result buffer validity and size

plpar_hcall(), plpar_hcall9(), and related functions expect callers to
provide valid result buffers of certain minimum size. Currently this
is communicated only through comments in the code and the compiler has
no idea.

For example, if I write a bug like this:

  long retbuf[PLPAR_HCALL_BUFSIZE]; // should be PLPAR_HCALL9_BUFSIZE
  plpar_hcall9(H_ALLOCATE_VAS_WINDOW, retbuf, ...);

This compiles with no diagnostics emitted, but likely results in stack
corruption at runtime when plpar_hcall9() stores results past the end
of the array. (To be clear this is a contrived example and I have not
found a real instance yet.)

To make this class of error less likely, we can use explicitly-sized
array parameters instead of pointers in the declarations for the hcall
APIs. When compiled with -Warray-bounds[1], the code above now
provokes a diagnostic like this:

error: array argument is too small;
is of size 32, callee requires at least 72 [-Werror,-Warray-bounds]
   60 |                 plpar_hcall9(H_ALLOCATE_VAS_WINDOW, retbuf,
      |                 ^                                   ~~~~~~

[1] Enabled for LLVM builds but not GCC for now. See commit
    0da6e5fd6c37 (""gcc: disable '-Warray-bounds' for gcc-13 too"") and
    related changes.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
163,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-34158,n/a,n/a,CWE-674: Uncontrolled Recursion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Calling Parse on a ""// +build"" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",Go standard library,go/build/constraint,"0, 1.23.0-0"
162,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-32040,6.5,n/a,CWE-121 Stack-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"It may be possible to have an extremely long aggregation pipeline in conjunction with a specific stage/operator and cause a stack overflow due to the size of the stack frames used by that stage. If an attacker could cause such an aggregation to occur, they could maliciously crash MongoDB in a DoS attack. This vulnerability affects MongoDB Server v4.4 versions prior to and including 4.4.28, MongoDB Server v5.0 versions prior to 5.0.4 and MongoDB Server v4.2 versions prior to 4.2.16.

Workaround: >= v4.2.16 users and all v4.4 users can add the --setParameter internalPipelineLengthLimit=50 instead of the default 1000 to mongod at startup to prevent a crash.",MongoDB Inc.,MongoDB Server,"5.0, 4.4, 4.2"
130,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2022-25869,4.2,Moyenne,Cross-site Scripting (XSS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"All versions of package angular are vulnerable to Cross-site Scripting (XSS) due to insecure page caching in the Internet Explorer browser, which allows interpolation of <textarea> elements.",n/a,angular,0
138,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2020-7238,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Netty 4.1.43.Final allows HTTP Request Smuggling because it mishandles Transfer-Encoding whitespace (such as a [space]Transfer-Encoding:chunked line) and a later Content-Length header. This issue exists because of an incomplete fix for CVE-2019-16869.,n/a,n/a,n/a
137,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-47831,5.9,Moyenne,CWE-674: Uncontrolled Recursion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Next.js is a React Framework for the Web. Cersions on the 10.x, 11.x, 12.x, 13.x, and 14.x branches before version 14.2.7 contain a vulnerability in the image optimization feature which allows for a potential Denial of Service (DoS) condition which could lead to excessive CPU consumption. Neither the `next.config.js` file that is configured with `images.unoptimized` set to `true` or `images.loader` set to a non-default value nor the Next.js application that is hosted on Vercel are affected. This issue was fully patched in Next.js `14.2.7`. As a workaround, ensure that the `next.config.js` file has either `images.unoptimized`, `images.loader` or `images.loaderFile` assigned.",vercel,next.js,">= 10.0.0, < 14.2.7"
136,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26638,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

nbd: always initialize struct msghdr completely

syzbot complains that msg->msg_get_inq value can be uninitialized [1]

struct msghdr got many new fields recently, we should always make
sure their values is zero by default.

[1]
 BUG: KMSAN: uninit-value in tcp_recvmsg+0x686/0xac0 net/ipv4/tcp.c:2571
  tcp_recvmsg+0x686/0xac0 net/ipv4/tcp.c:2571
  inet_recvmsg+0x131/0x580 net/ipv4/af_inet.c:879
  sock_recvmsg_nosec net/socket.c:1044 [inline]
  sock_recvmsg+0x12b/0x1e0 net/socket.c:1066
  __sock_xmit+0x236/0x5c0 drivers/block/nbd.c:538
  nbd_read_reply drivers/block/nbd.c:732 [inline]
  recv_work+0x262/0x3100 drivers/block/nbd.c:863
  process_one_work kernel/workqueue.c:2627 [inline]
  process_scheduled_works+0x104e/0x1e70 kernel/workqueue.c:2700
  worker_thread+0xf45/0x1490 kernel/workqueue.c:2781
  kthread+0x3ed/0x540 kernel/kthread.c:388
  ret_from_fork+0x66/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:242

Local variable msg created at:
  __sock_xmit+0x4c/0x5c0 drivers/block/nbd.c:513
  nbd_read_reply drivers/block/nbd.c:732 [inline]
  recv_work+0x262/0x3100 drivers/block/nbd.c:863

CPU: 1 PID: 7465 Comm: kworker/u5:1 Not tainted 6.7.0-rc7-syzkaller-00041-gf016f7547aee #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 11/17/2023
Workqueue: nbd5-recv recv_work",Linux,Linux,"f94fd25cb0aaf77fd7453f31c5d394a1a68ecf60, f94fd25cb0aaf77fd7453f31c5d394a1a68ecf60, f94fd25cb0aaf77fd7453f31c5d394a1a68ecf60, f94fd25cb0aaf77fd7453f31c5d394a1a68ecf60"
135,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26586,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_acl_tcam: Fix stack corruption

When tc filters are first added to a net device, the corresponding local
port gets bound to an ACL group in the device. The group contains a list
of ACLs. In turn, each ACL points to a different TCAM region where the
filters are stored. During forwarding, the ACLs are sequentially
evaluated until a match is found.

One reason to place filters in different regions is when they are added
with decreasing priorities and in an alternating order so that two
consecutive filters can never fit in the same region because of their
key usage.

In Spectrum-2 and newer ASICs the firmware started to report that the
maximum number of ACLs in a group is more than 16, but the layout of the
register that configures ACL groups (PAGT) was not updated to account
for that. It is therefore possible to hit stack corruption [1] in the
rare case where more than 16 ACLs in a group are required.

Fix by limiting the maximum ACL group size to the minimum between what
the firmware reports and the maximum ACLs that fit in the PAGT register.

Add a test case to make sure the machine does not crash when this
condition is hit.

[1]
Kernel panic - not syncing: stack-protector: Kernel stack is corrupted in: mlxsw_sp_acl_tcam_group_update+0x116/0x120
[...]
 dump_stack_lvl+0x36/0x50
 panic+0x305/0x330
 __stack_chk_fail+0x15/0x20
 mlxsw_sp_acl_tcam_group_update+0x116/0x120
 mlxsw_sp_acl_tcam_group_region_attach+0x69/0x110
 mlxsw_sp_acl_tcam_vchunk_get+0x492/0xa20
 mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0
 mlxsw_sp_acl_rule_add+0x47/0x240
 mlxsw_sp_flower_replace+0x1a9/0x1d0
 tc_setup_cb_add+0xdc/0x1c0
 fl_hw_replace_filter+0x146/0x1f0
 fl_change+0xc17/0x1360
 tc_new_tfilter+0x472/0xb90
 rtnetlink_rcv_msg+0x313/0x3b0
 netlink_rcv_skb+0x58/0x100
 netlink_unicast+0x244/0x390
 netlink_sendmsg+0x1e4/0x440
 ____sys_sendmsg+0x164/0x260
 ___sys_sendmsg+0x9a/0xe0
 __sys_sendmsg+0x7a/0xc0
 do_syscall_64+0x40/0xe0
 entry_SYSCALL_64_after_hwframe+0x63/0x6b",Linux,Linux,"c3ab435466d5109b2c7525a3b90107d4d9e918fc, c3ab435466d5109b2c7525a3b90107d4d9e918fc, c3ab435466d5109b2c7525a3b90107d4d9e918fc, c3ab435466d5109b2c7525a3b90107d4d9e918fc, c3ab435466d5109b2c7525a3b90107d4d9e918fc, c3ab435466d5109b2c7525a3b90107d4d9e918fc"
134,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-55565,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,nanoid (aka Nano ID) before 5.0.9 mishandles non-integer values. 3.3.8 is also a fixed version.,n/a,n/a,n/a
133,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26595,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_acl_tcam: Fix NULL pointer dereference in error path

When calling mlxsw_sp_acl_tcam_region_destroy() from an error path after
failing to attach the region to an ACL group, we hit a NULL pointer
dereference upon 'region->group->tcam' [1].

Fix by retrieving the 'tcam' pointer using mlxsw_sp_acl_to_tcam().

[1]
BUG: kernel NULL pointer dereference, address: 0000000000000000
[...]
RIP: 0010:mlxsw_sp_acl_tcam_region_destroy+0xa0/0xd0
[...]
Call Trace:
 mlxsw_sp_acl_tcam_vchunk_get+0x88b/0xa20
 mlxsw_sp_acl_tcam_ventry_add+0x25/0xe0
 mlxsw_sp_acl_rule_add+0x47/0x240
 mlxsw_sp_flower_replace+0x1a9/0x1d0
 tc_setup_cb_add+0xdc/0x1c0
 fl_hw_replace_filter+0x146/0x1f0
 fl_change+0xc17/0x1360
 tc_new_tfilter+0x472/0xb90
 rtnetlink_rcv_msg+0x313/0x3b0
 netlink_rcv_skb+0x58/0x100
 netlink_unicast+0x244/0x390
 netlink_sendmsg+0x1e4/0x440
 ____sys_sendmsg+0x164/0x260
 ___sys_sendmsg+0x9a/0xe0
 __sys_sendmsg+0x7a/0xc0
 do_syscall_64+0x40/0xe0
 entry_SYSCALL_64_after_hwframe+0x63/0x6b",Linux,Linux,"22a677661f5624539d394f681276171f92d714df, 22a677661f5624539d394f681276171f92d714df, 22a677661f5624539d394f681276171f92d714df, 22a677661f5624539d394f681276171f92d714df"
132,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-26116,5.3,Moyenne,Regular Expression Denial of Service (ReDoS),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Versions of the package angular from 1.2.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the angular.copy() utility function due to the usage of an insecure regular expression. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",n/a,angular,1.2.21
131,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-9355,n/a,n/a,Use of Uninitialized Variable,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,A vulnerability was found in Golang FIPS OpenSSL. This flaw allows a malicious user to randomly cause an uninitialized buffer length variable with a zeroed buffer to be returned in FIPS mode. It may also be possible to force a false positive match between non-equal hashes when comparing a trusted computed hmac sum to an untrusted input sum if an attacker can send a zeroed buffer in place of a pre-computed sum.  It is also possible to force a derived key to be all zeros instead of an unpredictable value.  This may have follow-on implications for the Go TLS stack.,n/a,n/a,
129,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26614,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: make sure init the accept_queue's spinlocks once

When I run syz's reproduction C program locally, it causes the following
issue:
pvqspinlock: lock 0xffff9d181cd5c660 has corrupted value 0x0!
WARNING: CPU: 19 PID: 21160 at __pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)
Hardware name: Red Hat KVM, BIOS 0.5.1 01/01/2011
RIP: 0010:__pv_queued_spin_unlock_slowpath (kernel/locking/qspinlock_paravirt.h:508)
Code: 73 56 3a ff 90 c3 cc cc cc cc 8b 05 bb 1f 48 01 85 c0 74 05 c3 cc cc cc cc 8b 17 48 89 fe 48 c7 c7
30 20 ce 8f e8 ad 56 42 ff <0f> 0b c3 cc cc cc cc 0f 0b 0f 1f 40 00 90 90 90 90 90 90 90 90 90
RSP: 0018:ffffa8d200604cb8 EFLAGS: 00010282
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff9d1ef60e0908
RDX: 00000000ffffffd8 RSI: 0000000000000027 RDI: ffff9d1ef60e0900
RBP: ffff9d181cd5c280 R08: 0000000000000000 R09: 00000000ffff7fff
R10: ffffa8d200604b68 R11: ffffffff907dcdc8 R12: 0000000000000000
R13: ffff9d181cd5c660 R14: ffff9d1813a3f330 R15: 0000000000001000
FS:  00007fa110184640(0000) GS:ffff9d1ef60c0000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000020000000 CR3: 000000011f65e000 CR4: 00000000000006f0
Call Trace:
<IRQ>
  _raw_spin_unlock (kernel/locking/spinlock.c:186)
  inet_csk_reqsk_queue_add (net/ipv4/inet_connection_sock.c:1321)
  inet_csk_complete_hashdance (net/ipv4/inet_connection_sock.c:1358)
  tcp_check_req (net/ipv4/tcp_minisocks.c:868)
  tcp_v4_rcv (net/ipv4/tcp_ipv4.c:2260)
  ip_protocol_deliver_rcu (net/ipv4/ip_input.c:205)
  ip_local_deliver_finish (net/ipv4/ip_input.c:234)
  __netif_receive_skb_one_core (net/core/dev.c:5529)
  process_backlog (./include/linux/rcupdate.h:779)
  __napi_poll (net/core/dev.c:6533)
  net_rx_action (net/core/dev.c:6604)
  __do_softirq (./arch/x86/include/asm/jump_label.h:27)
  do_softirq (kernel/softirq.c:454 kernel/softirq.c:441)
</IRQ>
<TASK>
  __local_bh_enable_ip (kernel/softirq.c:381)
  __dev_queue_xmit (net/core/dev.c:4374)
  ip_finish_output2 (./include/net/neighbour.h:540 net/ipv4/ip_output.c:235)
  __ip_queue_xmit (net/ipv4/ip_output.c:535)
  __tcp_transmit_skb (net/ipv4/tcp_output.c:1462)
  tcp_rcv_synsent_state_process (net/ipv4/tcp_input.c:6469)
  tcp_rcv_state_process (net/ipv4/tcp_input.c:6657)
  tcp_v4_do_rcv (net/ipv4/tcp_ipv4.c:1929)
  __release_sock (./include/net/sock.h:1121 net/core/sock.c:2968)
  release_sock (net/core/sock.c:3536)
  inet_wait_for_connect (net/ipv4/af_inet.c:609)
  __inet_stream_connect (net/ipv4/af_inet.c:702)
  inet_stream_connect (net/ipv4/af_inet.c:748)
  __sys_connect (./include/linux/file.h:45 net/socket.c:2064)
  __x64_sys_connect (net/socket.c:2073 net/socket.c:2070 net/socket.c:2070)
  do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:82)
  entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:129)
  RIP: 0033:0x7fa10ff05a3d
  Code: 5b 41 5c c3 66 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89
  c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d ab a3 0e 00 f7 d8 64 89 01 48
  RSP: 002b:00007fa110183de8 EFLAGS: 00000202 ORIG_RAX: 000000000000002a
  RAX: ffffffffffffffda RBX: 0000000020000054 RCX: 00007fa10ff05a3d
  RDX: 000000000000001c RSI: 0000000020000040 RDI: 0000000000000003
  RBP: 00007fa110183e20 R08: 0000000000000000 R09: 0000000000000000
  R10: 0000000000000000 R11: 0000000000000202 R12: 00007fa110184640
  R13: 0000000000000000 R14: 00007fa10fe8b060 R15: 00007fff73e23b20
</TASK>

The issue triggering process is analyzed as follows:
Thread A                                       Thread B
tcp_v4_rcv	//receive ack TCP packet       inet_shutdown
  tcp_check_req                                  tcp_disconnect //disconnect sock
  ...                                              tcp_set_state(sk, TCP_CLOSE)
    inet_csk_complete_hashdance                ...
      inet_csk_reqsk_queue_add         
---truncated---",Linux,Linux,"168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef, 168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef, 168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef, 168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef, 168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef, 168a8f58059a22feb9e9a2dcc1b8053dbbbc12ef"
140,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-43799,5,Moyenne,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.,pillarjs,send,< 0.19.0
128,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-22020,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"A security flaw in Node.js  allows a bypass of network import restrictions.
By embedding non-network imports in data URLs, an attacker can execute arbitrary code, compromising system security.
Verified on various platforms, the vulnerability is mitigated by forbidding data URLs in network imports.
Exploiting this flaw can violate network import security, posing a risk to developers and servers.",Node.js,Node.js,"21.6.1, 20.11.0, 18.19.0"
127,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42246,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

net, sunrpc: Remap EPERM in case of connection failure in xs_tcp_setup_socket

When using a BPF program on kernel_connect(), the call can return -EPERM. This
causes xs_tcp_setup_socket() to loop forever, filling up the syslog and causing
the kernel to potentially freeze up.

Neil suggested:

  This will propagate -EPERM up into other layers which might not be ready
  to handle it. It might be safer to map EPERM to an error we would be more
  likely to expect from the network system - such as ECONNREFUSED or ENETDOWN.

ECONNREFUSED as error seems reasonable. For programs setting a different error
can be out of reach (see handling in 4fbac77d2d09) in particular on kernels
which do not have f10d05966196 (""bpf: Make BPF_PROG_RUN_ARRAY return -err
instead of allow boolean""), thus given that it is better to simply remap for
consistent behavior. UDP does handle EPERM in xs_udp_send_request().",Linux,Linux,"4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427"
126,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-43642,7.5,Élevée,CWE-770: Allocation of Resources Without Limits or Throttling,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"snappy-java is a Java port of the snappy, a fast C++ compresser/decompresser developed by Google. The SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. All versions of snappy-java including the latest released version 1.1.10.3 are vulnerable to this issue. A fix has been introduced in commit `9f8c3cf74` which will be included in the 1.1.10.4 release. Users are advised to upgrade. Users unable to upgrade should only accept compressed data from trusted sources.",xerial,snappy-java,< 1.1.10.4
125,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2015-2156,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Netty before 3.9.8.Final, 3.10.x before 3.10.3.Final, 4.0.x before 4.0.28.Final, and 4.1.x before 4.1.0.Beta5 and Play Framework 2.x before 2.3.9 might allow remote attackers to bypass the httpOnly flag on cookies and obtain sensitive information by leveraging improper validation of cookie name and value characters.",n/a,n/a,n/a
124,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-36889,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: ensure snd_nxt is properly initialized on connect

Christoph reported a splat hinting at a corrupted snd_una:

  WARNING: CPU: 1 PID: 38 at net/mptcp/protocol.c:1005 __mptcp_clean_una+0x4b3/0x620 net/mptcp/protocol.c:1005
  Modules linked in:
  CPU: 1 PID: 38 Comm: kworker/1:1 Not tainted 6.9.0-rc1-gbbeac67456c9 #59
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.11.0-2.el7 04/01/2014
  Workqueue: events mptcp_worker
  RIP: 0010:__mptcp_clean_una+0x4b3/0x620 net/mptcp/protocol.c:1005
  Code: be 06 01 00 00 bf 06 01 00 00 e8 a8 12 e7 fe e9 00 fe ff ff e8
  	8e 1a e7 fe 0f b7 ab 3e 02 00 00 e9 d3 fd ff ff e8 7d 1a e7 fe
  	<0f> 0b 4c 8b bb e0 05 00 00 e9 74 fc ff ff e8 6a 1a e7 fe 0f 0b e9
  RSP: 0018:ffffc9000013fd48 EFLAGS: 00010293
  RAX: 0000000000000000 RBX: ffff8881029bd280 RCX: ffffffff82382fe4
  RDX: ffff8881003cbd00 RSI: ffffffff823833c3 RDI: 0000000000000001
  RBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000
  R10: 0000000000000000 R11: fefefefefefefeff R12: ffff888138ba8000
  R13: 0000000000000106 R14: ffff8881029bd908 R15: ffff888126560000
  FS:  0000000000000000(0000) GS:ffff88813bd00000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 00007f604a5dae38 CR3: 0000000101dac002 CR4: 0000000000170ef0
  Call Trace:
   <TASK>
   __mptcp_clean_una_wakeup net/mptcp/protocol.c:1055 [inline]
   mptcp_clean_una_wakeup net/mptcp/protocol.c:1062 [inline]
   __mptcp_retrans+0x7f/0x7e0 net/mptcp/protocol.c:2615
   mptcp_worker+0x434/0x740 net/mptcp/protocol.c:2767
   process_one_work+0x1e0/0x560 kernel/workqueue.c:3254
   process_scheduled_works kernel/workqueue.c:3335 [inline]
   worker_thread+0x3c7/0x640 kernel/workqueue.c:3416
   kthread+0x121/0x170 kernel/kthread.c:388
   ret_from_fork+0x44/0x50 arch/x86/kernel/process.c:147
   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:243
   </TASK>

When fallback to TCP happens early on a client socket, snd_nxt
is not yet initialized and any incoming ack will copy such value
into snd_una. If the mptcp worker (dumbly) tries mptcp-level
re-injection after such ack, that would unconditionally trigger a send
buffer cleanup using 'bad' snd_una values.

We could easily disable re-injection for fallback sockets, but such
dumb behavior already helped catching a few subtle issues and a very
low to zero impact in practice.

Instead address the issue always initializing snd_nxt (and write_seq,
for consistency) at connect time.",Linux,Linux,"8fd738049ac3d67a937d36577763b47180aae1ad, 8fd738049ac3d67a937d36577763b47180aae1ad, 8fd738049ac3d67a937d36577763b47180aae1ad, 8fd738049ac3d67a937d36577763b47180aae1ad, 8fd738049ac3d67a937d36577763b47180aae1ad, 8fd738049ac3d67a937d36577763b47180aae1ad"
123,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52471,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ice: Fix some null pointer dereference issues in ice_ptp.c

devm_kasprintf() returns a pointer to dynamically allocated memory
which can be NULL upon failure.",Linux,Linux,"d938a8cca88a5f02f523f95fe3d2d1214f4b4a8d, d938a8cca88a5f02f523f95fe3d2d1214f4b4a8d"
122,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-24790,n/a,n/a,CWE-180: Incorrect Behavior Order: Validate Before Canonicalize,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",Go standard library,net/netip,"0, 1.22.0-0"
121,Vulnérabilité dans Asterisk ,Avis,2025-01-10,CVE-2024-53566,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0020/,An issue in the action_listcategories() function of Sangoma Asterisk v22/22.0.0/22.0.0-rc1/22.0.0-rc2/22.0.0-pre1 allows attackers to execute a path traversal.,n/a,n/a,n/a
139,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-46939,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

tracing: Restructure trace_clock_global() to never block

It was reported that a fix to the ring buffer recursion detection would
cause a hung machine when performing suspend / resume testing. The
following backtrace was extracted from debugging that case:

Call Trace:
 trace_clock_global+0x91/0xa0
 __rb_reserve_next+0x237/0x460
 ring_buffer_lock_reserve+0x12a/0x3f0
 trace_buffer_lock_reserve+0x10/0x50
 __trace_graph_return+0x1f/0x80
 trace_graph_return+0xb7/0xf0
 ? trace_clock_global+0x91/0xa0
 ftrace_return_to_handler+0x8b/0xf0
 ? pv_hash+0xa0/0xa0
 return_to_handler+0x15/0x30
 ? ftrace_graph_caller+0xa0/0xa0
 ? trace_clock_global+0x91/0xa0
 ? __rb_reserve_next+0x237/0x460
 ? ring_buffer_lock_reserve+0x12a/0x3f0
 ? trace_event_buffer_lock_reserve+0x3c/0x120
 ? trace_event_buffer_reserve+0x6b/0xc0
 ? trace_event_raw_event_device_pm_callback_start+0x125/0x2d0
 ? dpm_run_callback+0x3b/0xc0
 ? pm_ops_is_empty+0x50/0x50
 ? platform_get_irq_byname_optional+0x90/0x90
 ? trace_device_pm_callback_start+0x82/0xd0
 ? dpm_run_callback+0x49/0xc0

With the following RIP:

RIP: 0010:native_queued_spin_lock_slowpath+0x69/0x200

Since the fix to the recursion detection would allow a single recursion to
happen while tracing, this lead to the trace_clock_global() taking a spin
lock and then trying to take it again:

ring_buffer_lock_reserve() {
  trace_clock_global() {
    arch_spin_lock() {
      queued_spin_lock_slowpath() {
        /* lock taken */
        (something else gets traced by function graph tracer)
          ring_buffer_lock_reserve() {
            trace_clock_global() {
              arch_spin_lock() {
                queued_spin_lock_slowpath() {
                /* DEAD LOCK! */

Tracing should *never* block, as it can lead to strange lockups like the
above.

Restructure the trace_clock_global() code to instead of simply taking a
lock to update the recorded ""prev_time"" simply use it, as two events
happening on two different CPUs that calls this at the same time, really
doesn't matter which one goes first. Use a trylock to grab the lock for
updating the prev_time, and if it fails, simply try again the next time.
If it failed to be taken, that means something else is already updating
it.


Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=212761",Linux,Linux,"14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d, 14131f2f98ac350ee9e73faed916d2238a8b6a0d"
141,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-49766,n/a,n/a,CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Werkzeug is a Web Server Gateway Interface web application library. On Python < 3.11 on Windows, os.path.isabs() does not catch UNC paths like //server/share. Werkzeug's safe_join() relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python >= 3.11, or not using Windows, are not vulnerable. Werkzeug version 3.0.6 contains a patch.",pallets,werkzeug,< 3.0.6
161,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-43796,5,Moyenne,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Express.js minimalist web framework for node. In express < 4.20.0, passing untrusted user input - even after sanitizing it - to response.redirect() may execute untrusted code. This issue is patched in express 4.20.0.",expressjs,express,"< 4.20.0, >= 5.0.0-alpha.1, < 5.0.0"
152,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26645,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

tracing: Ensure visibility when inserting an element into tracing_map

Running the following two commands in parallel on a multi-processor
AArch64 machine can sporadically produce an unexpected warning about
duplicate histogram entries:

 $ while true; do
     echo hist:key=id.syscall:val=hitcount > \
       /sys/kernel/debug/tracing/events/raw_syscalls/sys_enter/trigger
     cat /sys/kernel/debug/tracing/events/raw_syscalls/sys_enter/hist
     sleep 0.001
   done
 $ stress-ng --sysbadaddr $(nproc)

The warning looks as follows:

[ 2911.172474] ------------[ cut here ]------------
[ 2911.173111] Duplicates detected: 1
[ 2911.173574] WARNING: CPU: 2 PID: 12247 at kernel/trace/tracing_map.c:983 tracing_map_sort_entries+0x3e0/0x408
[ 2911.174702] Modules linked in: iscsi_ibft(E) iscsi_boot_sysfs(E) rfkill(E) af_packet(E) nls_iso8859_1(E) nls_cp437(E) vfat(E) fat(E) ena(E) tiny_power_button(E) qemu_fw_cfg(E) button(E) fuse(E) efi_pstore(E) ip_tables(E) x_tables(E) xfs(E) libcrc32c(E) aes_ce_blk(E) aes_ce_cipher(E) crct10dif_ce(E) polyval_ce(E) polyval_generic(E) ghash_ce(E) gf128mul(E) sm4_ce_gcm(E) sm4_ce_ccm(E) sm4_ce(E) sm4_ce_cipher(E) sm4(E) sm3_ce(E) sm3(E) sha3_ce(E) sha512_ce(E) sha512_arm64(E) sha2_ce(E) sha256_arm64(E) nvme(E) sha1_ce(E) nvme_core(E) nvme_auth(E) t10_pi(E) sg(E) scsi_mod(E) scsi_common(E) efivarfs(E)
[ 2911.174738] Unloaded tainted modules: cppc_cpufreq(E):1
[ 2911.180985] CPU: 2 PID: 12247 Comm: cat Kdump: loaded Tainted: G            E      6.7.0-default #2 1b58bbb22c97e4399dc09f92d309344f69c44a01
[ 2911.182398] Hardware name: Amazon EC2 c7g.8xlarge/, BIOS 1.0 11/1/2018
[ 2911.183208] pstate: 61400005 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)
[ 2911.184038] pc : tracing_map_sort_entries+0x3e0/0x408
[ 2911.184667] lr : tracing_map_sort_entries+0x3e0/0x408
[ 2911.185310] sp : ffff8000a1513900
[ 2911.185750] x29: ffff8000a1513900 x28: ffff0003f272fe80 x27: 0000000000000001
[ 2911.186600] x26: ffff0003f272fe80 x25: 0000000000000030 x24: 0000000000000008
[ 2911.187458] x23: ffff0003c5788000 x22: ffff0003c16710c8 x21: ffff80008017f180
[ 2911.188310] x20: ffff80008017f000 x19: ffff80008017f180 x18: ffffffffffffffff
[ 2911.189160] x17: 0000000000000000 x16: 0000000000000000 x15: ffff8000a15134b8
[ 2911.190015] x14: 0000000000000000 x13: 205d373432323154 x12: 5b5d313131333731
[ 2911.190844] x11: 00000000fffeffff x10: 00000000fffeffff x9 : ffffd1b78274a13c
[ 2911.191716] x8 : 000000000017ffe8 x7 : c0000000fffeffff x6 : 000000000057ffa8
[ 2911.192554] x5 : ffff0012f6c24ec0 x4 : 0000000000000000 x3 : ffff2e5b72b5d000
[ 2911.193404] x2 : 0000000000000000 x1 : 0000000000000000 x0 : ffff0003ff254480
[ 2911.194259] Call trace:
[ 2911.194626]  tracing_map_sort_entries+0x3e0/0x408
[ 2911.195220]  hist_show+0x124/0x800
[ 2911.195692]  seq_read_iter+0x1d4/0x4e8
[ 2911.196193]  seq_read+0xe8/0x138
[ 2911.196638]  vfs_read+0xc8/0x300
[ 2911.197078]  ksys_read+0x70/0x108
[ 2911.197534]  __arm64_sys_read+0x24/0x38
[ 2911.198046]  invoke_syscall+0x78/0x108
[ 2911.198553]  el0_svc_common.constprop.0+0xd0/0xf8
[ 2911.199157]  do_el0_svc+0x28/0x40
[ 2911.199613]  el0_svc+0x40/0x178
[ 2911.200048]  el0t_64_sync_handler+0x13c/0x158
[ 2911.200621]  el0t_64_sync+0x1a8/0x1b0
[ 2911.201115] ---[ end trace 0000000000000000 ]---

The problem appears to be caused by CPU reordering of writes issued from
__tracing_map_insert().

The check for the presence of an element with a given key in this
function is:

 val = READ_ONCE(entry->val);
 if (val && keys_match(key, val->key, map->key_size)) ...

The write of a new entry is:

 elt = get_free_elt(map);
 memcpy(elt->key, key, map->key_size);
 entry->val = elt;

The ""memcpy(elt->key, key, map->key_size);"" and ""entry->val = elt;""
stores may become visible in the reversed order on another CPU. This
second CPU might then incorrectly determine that a new key doesn't match
an already present val->key and subse
---truncated---",Linux,Linux,"c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef, c193707dde77ace92a649cd59a17e105e2fbeaef"
160,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-10202,n/a,n/a,CWE-502,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"A series of deserialization vulnerabilities have been discovered in Codehaus 1.9.x implemented in EAP 7. This CVE fixes CVE-2017-17485, CVE-2017-7525, CVE-2017-15095, CVE-2018-5968, CVE-2018-7489, CVE-2018-1000873, CVE-2019-12086 reported for FasterXML jackson-databind by implementing a whitelist approach that will mitigate these vulnerabilities and future ones alike.",RedHat,codehaus,Codehaus 1.9.x
159,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-45590,7.5,Élevée,CWE-405: Asymmetric Resource Consumption (Amplification),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"body-parser is Node.js body parsing middleware. body-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service. This issue is patched in 1.20.3.",expressjs,body-parser,< 1.20.3
158,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-5072,7.5,Élevée,CWE-770 Allocation of Resources Without Limits or Throttling,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Denial of Service  in JSON-Java versions up to and including 20230618.  A bug in the parser means that an input string of modest size can lead to indefinite amounts of memory being used.,https://github.com/stleary/JSON-java,n/a,0
157,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-34453,5.9,Moyenne,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.

The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`.

The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.

Version 1.1.10.1 contains a patch for this vulnerability.",xerial,snappy-java,< 1.1.10.1
156,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40959,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

xfrm6: check ip6_dst_idev() return value in xfrm6_get_saddr()

ip6_dst_idev() can return NULL, xfrm6_get_saddr() must act accordingly.

syzbot reported:

Oops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 1 PID: 12 Comm: kworker/u8:1 Not tainted 6.10.0-rc2-syzkaller-00383-gb8481381d4e2 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024
Workqueue: wg-kex-wg1 wg_packet_handshake_send_worker
 RIP: 0010:xfrm6_get_saddr+0x93/0x130 net/ipv6/xfrm6_policy.c:64
Code: df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 97 00 00 00 4c 8b ab d8 00 00 00 48 b8 00 00 00 00 00 fc ff df 4c 89 ea 48 c1 ea 03 <80> 3c 02 00 0f 85 86 00 00 00 4d 8b 6d 00 e8 ca 13 47 01 48 b8 00
RSP: 0018:ffffc90000117378 EFLAGS: 00010246
RAX: dffffc0000000000 RBX: ffff88807b079dc0 RCX: ffffffff89a0d6d7
RDX: 0000000000000000 RSI: ffffffff89a0d6e9 RDI: ffff88807b079e98
RBP: ffff88807ad73248 R08: 0000000000000007 R09: fffffffffffff000
R10: ffff88807b079dc0 R11: 0000000000000007 R12: ffffc90000117480
R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
FS:  0000000000000000(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f4586d00440 CR3: 0000000079042000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
  xfrm_get_saddr net/xfrm/xfrm_policy.c:2452 [inline]
  xfrm_tmpl_resolve_one net/xfrm/xfrm_policy.c:2481 [inline]
  xfrm_tmpl_resolve+0xa26/0xf10 net/xfrm/xfrm_policy.c:2541
  xfrm_resolve_and_create_bundle+0x140/0x2570 net/xfrm/xfrm_policy.c:2835
  xfrm_bundle_lookup net/xfrm/xfrm_policy.c:3070 [inline]
  xfrm_lookup_with_ifid+0x4d1/0x1e60 net/xfrm/xfrm_policy.c:3201
  xfrm_lookup net/xfrm/xfrm_policy.c:3298 [inline]
  xfrm_lookup_route+0x3b/0x200 net/xfrm/xfrm_policy.c:3309
  ip6_dst_lookup_flow+0x15c/0x1d0 net/ipv6/ip6_output.c:1256
  send6+0x611/0xd20 drivers/net/wireguard/socket.c:139
  wg_socket_send_skb_to_peer+0xf9/0x220 drivers/net/wireguard/socket.c:178
  wg_socket_send_buffer_to_peer+0x12b/0x190 drivers/net/wireguard/socket.c:200
  wg_packet_send_handshake_initiation+0x227/0x360 drivers/net/wireguard/send.c:40
  wg_packet_handshake_send_worker+0x1c/0x30 drivers/net/wireguard/send.c:51
  process_one_work+0x9fb/0x1b60 kernel/workqueue.c:3231
  process_scheduled_works kernel/workqueue.c:3312 [inline]
  worker_thread+0x6c8/0xf70 kernel/workqueue.c:3393
  kthread+0x2c1/0x3a0 kernel/kthread.c:389
  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
155,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-29025,5.3,Moyenne,CWE-770: Allocation of Resources Without Limits or Throttling,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.",netty,netty,< 4.1.108.Final
154,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40972,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: do not create EA inode under buffer lock

ext4_xattr_set_entry() creates new EA inodes while holding buffer lock
on the external xattr block. This is problematic as it nests all the
allocation locking (which acquires locks on other buffers) under the
buffer lock. This can even deadlock when the filesystem is corrupted and
e.g. quota file is setup to contain xattr block as data block. Move the
allocation of EA inode out of ext4_xattr_set_entry() into the callers.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
153,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42240,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

x86/bhi: Avoid warning in #DB handler due to BHI mitigation

When BHI mitigation is enabled, if SYSENTER is invoked with the TF flag set
then entry_SYSENTER_compat() uses CLEAR_BRANCH_HISTORY and calls the
clear_bhb_loop() before the TF flag is cleared. This causes the #DB handler
(exc_debug_kernel()) to issue a warning because single-step is used outside the
entry_SYSENTER_compat() function.

To address this issue, entry_SYSENTER_compat() should use CLEAR_BRANCH_HISTORY
after making sure the TF flag is cleared.

The problem can be reproduced with the following sequence:

  $ cat sysenter_step.c
  int main()
  { asm(""pushf; pop %ax; bts $8,%ax; push %ax; popf; sysenter""); }

  $ gcc -o sysenter_step sysenter_step.c

  $ ./sysenter_step
  Segmentation fault (core dumped)

The program is expected to crash, and the #DB handler will issue a warning.

Kernel log:

  WARNING: CPU: 27 PID: 7000 at arch/x86/kernel/traps.c:1009 exc_debug_kernel+0xd2/0x160
  ...
  RIP: 0010:exc_debug_kernel+0xd2/0x160
  ...
  Call Trace:
  <#DB>
   ? show_regs+0x68/0x80
   ? __warn+0x8c/0x140
   ? exc_debug_kernel+0xd2/0x160
   ? report_bug+0x175/0x1a0
   ? handle_bug+0x44/0x90
   ? exc_invalid_op+0x1c/0x70
   ? asm_exc_invalid_op+0x1f/0x30
   ? exc_debug_kernel+0xd2/0x160
   exc_debug+0x43/0x50
   asm_exc_debug+0x1e/0x40
  RIP: 0010:clear_bhb_loop+0x0/0xb0
  ...
  </#DB>
  <TASK>
   ? entry_SYSENTER_compat_after_hwframe+0x6e/0x8d
  </TASK>

  [ bp: Massage commit message. ]",Linux,Linux,"bd53ec80f21839cfd4d852a6088279d602d67e5b, 07dbb10f153f483e8249acebdffedf922e2ec2e1, eb36b0dce2138581bc6b5e39d0273cb4c96ded81, 7390db8aea0d64e9deb28b8e1ce716f5020c7ee5, 7390db8aea0d64e9deb28b8e1ce716f5020c7ee5"
151,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-34454,5.9,Moyenne,CWE-190: Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error.

The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function.

Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.

Since the maxCompressedLength function treats the length as an unsigned integer, it doesn’t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.

The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won’t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.

Version 1.1.10.1 contains a patch for this issue.",xerial,snappy-java,< 1.1.10.1
142,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-36886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

tipc: fix UAF in error path

Sam Page (sam4k) working with Trend Micro Zero Day Initiative reported
a UAF in the tipc_buf_append() error path:

BUG: KASAN: slab-use-after-free in kfree_skb_list_reason+0x47e/0x4c0
linux/net/core/skbuff.c:1183
Read of size 8 at addr ffff88804d2a7c80 by task poc/8034

CPU: 1 PID: 8034 Comm: poc Not tainted 6.8.2 #1
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
1.16.0-debian-1.16.0-5 04/01/2014
Call Trace:
 <IRQ>
 __dump_stack linux/lib/dump_stack.c:88
 dump_stack_lvl+0xd9/0x1b0 linux/lib/dump_stack.c:106
 print_address_description linux/mm/kasan/report.c:377
 print_report+0xc4/0x620 linux/mm/kasan/report.c:488
 kasan_report+0xda/0x110 linux/mm/kasan/report.c:601
 kfree_skb_list_reason+0x47e/0x4c0 linux/net/core/skbuff.c:1183
 skb_release_data+0x5af/0x880 linux/net/core/skbuff.c:1026
 skb_release_all linux/net/core/skbuff.c:1094
 __kfree_skb linux/net/core/skbuff.c:1108
 kfree_skb_reason+0x12d/0x210 linux/net/core/skbuff.c:1144
 kfree_skb linux/./include/linux/skbuff.h:1244
 tipc_buf_append+0x425/0xb50 linux/net/tipc/msg.c:186
 tipc_link_input+0x224/0x7c0 linux/net/tipc/link.c:1324
 tipc_link_rcv+0x76e/0x2d70 linux/net/tipc/link.c:1824
 tipc_rcv+0x45f/0x10f0 linux/net/tipc/node.c:2159
 tipc_udp_recv+0x73b/0x8f0 linux/net/tipc/udp_media.c:390
 udp_queue_rcv_one_skb+0xad2/0x1850 linux/net/ipv4/udp.c:2108
 udp_queue_rcv_skb+0x131/0xb00 linux/net/ipv4/udp.c:2186
 udp_unicast_rcv_skb+0x165/0x3b0 linux/net/ipv4/udp.c:2346
 __udp4_lib_rcv+0x2594/0x3400 linux/net/ipv4/udp.c:2422
 ip_protocol_deliver_rcu+0x30c/0x4e0 linux/net/ipv4/ip_input.c:205
 ip_local_deliver_finish+0x2e4/0x520 linux/net/ipv4/ip_input.c:233
 NF_HOOK linux/./include/linux/netfilter.h:314
 NF_HOOK linux/./include/linux/netfilter.h:308
 ip_local_deliver+0x18e/0x1f0 linux/net/ipv4/ip_input.c:254
 dst_input linux/./include/net/dst.h:461
 ip_rcv_finish linux/net/ipv4/ip_input.c:449
 NF_HOOK linux/./include/linux/netfilter.h:314
 NF_HOOK linux/./include/linux/netfilter.h:308
 ip_rcv+0x2c5/0x5d0 linux/net/ipv4/ip_input.c:569
 __netif_receive_skb_one_core+0x199/0x1e0 linux/net/core/dev.c:5534
 __netif_receive_skb+0x1f/0x1c0 linux/net/core/dev.c:5648
 process_backlog+0x101/0x6b0 linux/net/core/dev.c:5976
 __napi_poll.constprop.0+0xba/0x550 linux/net/core/dev.c:6576
 napi_poll linux/net/core/dev.c:6645
 net_rx_action+0x95a/0xe90 linux/net/core/dev.c:6781
 __do_softirq+0x21f/0x8e7 linux/kernel/softirq.c:553
 do_softirq linux/kernel/softirq.c:454
 do_softirq+0xb2/0xf0 linux/kernel/softirq.c:441
 </IRQ>
 <TASK>
 __local_bh_enable_ip+0x100/0x120 linux/kernel/softirq.c:381
 local_bh_enable linux/./include/linux/bottom_half.h:33
 rcu_read_unlock_bh linux/./include/linux/rcupdate.h:851
 __dev_queue_xmit+0x871/0x3ee0 linux/net/core/dev.c:4378
 dev_queue_xmit linux/./include/linux/netdevice.h:3169
 neigh_hh_output linux/./include/net/neighbour.h:526
 neigh_output linux/./include/net/neighbour.h:540
 ip_finish_output2+0x169f/0x2550 linux/net/ipv4/ip_output.c:235
 __ip_finish_output linux/net/ipv4/ip_output.c:313
 __ip_finish_output+0x49e/0x950 linux/net/ipv4/ip_output.c:295
 ip_finish_output+0x31/0x310 linux/net/ipv4/ip_output.c:323
 NF_HOOK_COND linux/./include/linux/netfilter.h:303
 ip_output+0x13b/0x2a0 linux/net/ipv4/ip_output.c:433
 dst_output linux/./include/net/dst.h:451
 ip_local_out linux/net/ipv4/ip_output.c:129
 ip_send_skb+0x3e5/0x560 linux/net/ipv4/ip_output.c:1492
 udp_send_skb+0x73f/0x1530 linux/net/ipv4/udp.c:963
 udp_sendmsg+0x1a36/0x2b40 linux/net/ipv4/udp.c:1250
 inet_sendmsg+0x105/0x140 linux/net/ipv4/af_inet.c:850
 sock_sendmsg_nosec linux/net/socket.c:730
 __sock_sendmsg linux/net/socket.c:745
 __sys_sendto+0x42c/0x4e0 linux/net/socket.c:2191
 __do_sys_sendto linux/net/socket.c:2203
 __se_sys_sendto linux/net/socket.c:2199
 __x64_sys_sendto+0xe0/0x1c0 linux/net/socket.c:2199
 do_syscall_x64 linux/arch/x86/entry/common.c:52
 do_syscall_
---truncated---",Linux,Linux,"1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89, 1149557d64c97dc9adf3103347a1c0e8c06d3b89"
150,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-20444,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an ""invalid fold.""",n/a,n/a,n/a
149,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-44270,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"An issue was discovered in PostCSS before 8.4.31. The vulnerability affects linters using PostCSS to parse external untrusted CSS. An attacker can prepare CSS in such a way that it will contains parts parsed by PostCSS as a CSS comment. After processing by PostCSS, it will be included in the PostCSS output in CSS nodes (rules, properties) despite being included in a comment.",n/a,n/a,n/a
148,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40997,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

cpufreq: amd-pstate: fix memory leak on CPU EPP exit

The cpudata memory from kzalloc() in amd_pstate_epp_cpu_init() is
not freed in the analogous exit function, so fix that.

[ rjw: Subject and changelog edits ]",Linux,Linux,"ec437d71db77a181227bf6d0ac9d4a80e58ecf0f, ec437d71db77a181227bf6d0ac9d4a80e58ecf0f, ec437d71db77a181227bf6d0ac9d4a80e58ecf0f"
147,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40960,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ipv6: prevent possible NULL dereference in rt6_probe()

syzbot caught a NULL dereference in rt6_probe() [1]

Bail out if  __in6_dev_get() returns NULL.

[1]
Oops: general protection fault, probably for non-canonical address 0xdffffc00000000cb: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000658-0x000000000000065f]
CPU: 1 PID: 22444 Comm: syz-executor.0 Not tainted 6.10.0-rc2-syzkaller-00383-gb8481381d4e2 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 04/02/2024
 RIP: 0010:rt6_probe net/ipv6/route.c:656 [inline]
 RIP: 0010:find_match+0x8c4/0xf50 net/ipv6/route.c:758
Code: 14 fd f7 48 8b 85 38 ff ff ff 48 c7 45 b0 00 00 00 00 48 8d b8 5c 06 00 00 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03 <0f> b6 14 02 48 89 f8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 19
RSP: 0018:ffffc900034af070 EFLAGS: 00010203
RAX: dffffc0000000000 RBX: 0000000000000000 RCX: ffffc90004521000
RDX: 00000000000000cb RSI: ffffffff8990d0cd RDI: 000000000000065c
RBP: ffffc900034af150 R08: 0000000000000005 R09: 0000000000000000
R10: 0000000000000001 R11: 0000000000000002 R12: 000000000000000a
R13: 1ffff92000695e18 R14: ffff8880244a1d20 R15: 0000000000000000
FS:  00007f4844a5a6c0(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000001b31b27000 CR3: 000000002d42c000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
  rt6_nh_find_match+0xfa/0x1a0 net/ipv6/route.c:784
  nexthop_for_each_fib6_nh+0x26d/0x4a0 net/ipv4/nexthop.c:1496
  __find_rr_leaf+0x6e7/0xe00 net/ipv6/route.c:825
  find_rr_leaf net/ipv6/route.c:853 [inline]
  rt6_select net/ipv6/route.c:897 [inline]
  fib6_table_lookup+0x57e/0xa30 net/ipv6/route.c:2195
  ip6_pol_route+0x1cd/0x1150 net/ipv6/route.c:2231
  pol_lookup_func include/net/ip6_fib.h:616 [inline]
  fib6_rule_lookup+0x386/0x720 net/ipv6/fib6_rules.c:121
  ip6_route_output_flags_noref net/ipv6/route.c:2639 [inline]
  ip6_route_output_flags+0x1d0/0x640 net/ipv6/route.c:2651
  ip6_dst_lookup_tail.constprop.0+0x961/0x1760 net/ipv6/ip6_output.c:1147
  ip6_dst_lookup_flow+0x99/0x1d0 net/ipv6/ip6_output.c:1250
  rawv6_sendmsg+0xdab/0x4340 net/ipv6/raw.c:898
  inet_sendmsg+0x119/0x140 net/ipv4/af_inet.c:853
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg net/socket.c:745 [inline]
  sock_write_iter+0x4b8/0x5c0 net/socket.c:1160
  new_sync_write fs/read_write.c:497 [inline]
  vfs_write+0x6b6/0x1140 fs/read_write.c:590
  ksys_write+0x1f8/0x260 fs/read_write.c:643
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x250 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f",Linux,Linux,"52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5, 52e1635631b342803aecaf81a362c1464e3da2e5"
146,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26665,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

tunnels: fix out of bounds access when building IPv6 PMTU error

If the ICMPv6 error is built from a non-linear skb we get the following
splat,

  BUG: KASAN: slab-out-of-bounds in do_csum+0x220/0x240
  Read of size 4 at addr ffff88811d402c80 by task netperf/820
  CPU: 0 PID: 820 Comm: netperf Not tainted 6.8.0-rc1+ #543
  ...
   kasan_report+0xd8/0x110
   do_csum+0x220/0x240
   csum_partial+0xc/0x20
   skb_tunnel_check_pmtu+0xeb9/0x3280
   vxlan_xmit_one+0x14c2/0x4080
   vxlan_xmit+0xf61/0x5c00
   dev_hard_start_xmit+0xfb/0x510
   __dev_queue_xmit+0x7cd/0x32a0
   br_dev_queue_push_xmit+0x39d/0x6a0

Use skb_checksum instead of csum_partial who cannot deal with non-linear
SKBs.",Linux,Linux,"4cb47a8644cc9eb8ec81190a50e79e6530d0297f, 4cb47a8644cc9eb8ec81190a50e79e6530d0297f, 4cb47a8644cc9eb8ec81190a50e79e6530d0297f, 4cb47a8644cc9eb8ec81190a50e79e6530d0297f, 4cb47a8644cc9eb8ec81190a50e79e6530d0297f, 4cb47a8644cc9eb8ec81190a50e79e6530d0297f"
145,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-36883,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

net: fix out-of-bounds access in ops_init

net_alloc_generic is called by net_alloc, which is called without any
locking. It reads max_gen_ptrs, which is changed under pernet_ops_rwsem. It
is read twice, first to allocate an array, then to set s.len, which is
later used to limit the bounds of the array access.

It is possible that the array is allocated and another thread is
registering a new pernet ops, increments max_gen_ptrs, which is then used
to set s.len with a larger than allocated length for the variable array.

Fix it by reading max_gen_ptrs only once in net_alloc_generic. If
max_gen_ptrs is later incremented, it will be caught in net_assign_generic.",Linux,Linux,"073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672"
144,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26802,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

stmmac: Clear variable when destroying workqueue

Currently when suspending driver and stopping workqueue it is checked whether
workqueue is not NULL and if so, it is destroyed.
Function destroy_workqueue() does drain queue and does clear variable, but
it does not set workqueue variable to NULL. This can cause kernel/module
panic if code attempts to clear workqueue that was not initialized.

This scenario is possible when resuming suspended driver in stmmac_resume(),
because there is no handling for failed stmmac_hw_setup(),
which can fail and return if DMA engine has failed to initialize,
and workqueue is initialized after DMA engine.
Should DMA engine fail to initialize, resume will proceed normally,
but interface won't work and TX queue will eventually timeout,
causing 'Reset adapter' error.
This then does destroy workqueue during reset process.
And since workqueue is initialized after DMA engine and can be skipped,
it will cause kernel/module panic.

To secure against this possible crash, set workqueue variable to NULL when
destroying workqueue.

Log/backtrace from crash goes as follows:
[88.031977]------------[ cut here ]------------
[88.031985]NETDEV WATCHDOG: eth0 (sxgmac): transmit queue 1 timed out
[88.032017]WARNING: CPU: 0 PID: 0 at net/sched/sch_generic.c:477 dev_watchdog+0x390/0x398
           <Skipping backtrace for watchdog timeout>
[88.032251]---[ end trace e70de432e4d5c2c0 ]---
[88.032282]sxgmac 16d88000.ethernet eth0: Reset adapter.
[88.036359]------------[ cut here ]------------
[88.036519]Call trace:
[88.036523] flush_workqueue+0x3e4/0x430
[88.036528] drain_workqueue+0xc4/0x160
[88.036533] destroy_workqueue+0x40/0x270
[88.036537] stmmac_fpe_stop_wq+0x4c/0x70
[88.036541] stmmac_release+0x278/0x280
[88.036546] __dev_close_many+0xcc/0x158
[88.036551] dev_close_many+0xbc/0x190
[88.036555] dev_close.part.0+0x70/0xc0
[88.036560] dev_close+0x24/0x30
[88.036564] stmmac_service_task+0x110/0x140
[88.036569] process_one_work+0x1d8/0x4a0
[88.036573] worker_thread+0x54/0x408
[88.036578] kthread+0x164/0x170
[88.036583] ret_from_fork+0x10/0x20
[88.036588]---[ end trace e70de432e4d5c2c1 ]---
[88.036597]Unable to handle kernel NULL pointer dereference at virtual address 0000000000000004",Linux,Linux,"5a5586112b929546e16029261a987c9197bfdfa2, 5a5586112b929546e16029261a987c9197bfdfa2, 5a5586112b929546e16029261a987c9197bfdfa2, 5a5586112b929546e16029261a987c9197bfdfa2, 5a5586112b929546e16029261a987c9197bfdfa2"
143,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-32036,5.4,Moyenne,CWE-770: Allocation of Resources Without Limits or Throttling,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,An authenticated user without any specific authorizations may be able to repeatedly invoke the features command where at a high volume may lead to resource depletion or generate high lock contention. This may result in denial of service and in rare cases could result in id field collisions. This issue affects MongoDB Server v5.0 versions prior to and including 5.0.3; MongoDB Server v4.4 versions prior to and including 4.4.9; MongoDB Server v4.2 versions prior to and including 4.2.16 and MongoDB Server v4.0 versions prior to and including 4.0.28,MongoDB Inc.,MongoDB Server,"5.0, 4.4, 4.2, 4.0"
206,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-47321,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

watchdog: Fix possible use-after-free by calling del_timer_sync()

This driver's remove path calls del_timer(). However, that function
does not wait until the timer handler finishes. This means that the
timer handler may still be running after the driver's remove function
has finished, which would result in a use-after-free.

Fix by calling del_timer_sync(), which makes sure the timer handler
has finished, and unable to re-schedule itself.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
207,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26640,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

tcp: add sanity checks to rx zerocopy

TCP rx zerocopy intent is to map pages initially allocated
from NIC drivers, not pages owned by a fs.

This patch adds to can_map_frag() these additional checks:

- Page must not be a compound one.
- page->mapping must be NULL.

This fixes the panic reported by ZhangPeng.

syzbot was able to loopback packets built with sendfile(),
mapping pages owned by an ext4 file to TCP rx zerocopy.

r3 = socket$inet_tcp(0x2, 0x1, 0x0)
mmap(&(0x7f0000ff9000/0x4000)=nil, 0x4000, 0x0, 0x12, r3, 0x0)
r4 = socket$inet_tcp(0x2, 0x1, 0x0)
bind$inet(r4, &(0x7f0000000000)={0x2, 0x4e24, @multicast1}, 0x10)
connect$inet(r4, &(0x7f00000006c0)={0x2, 0x4e24, @empty}, 0x10)
r5 = openat$dir(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00',
    0x181e42, 0x0)
fallocate(r5, 0x0, 0x0, 0x85b8)
sendfile(r4, r5, 0x0, 0x8ba0)
getsockopt$inet_tcp_TCP_ZEROCOPY_RECEIVE(r4, 0x6, 0x23,
    &(0x7f00000001c0)={&(0x7f0000ffb000/0x3000)=nil, 0x3000, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0}, &(0x7f0000000440)=0x40)
r6 = openat$dir(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00',
    0x181e42, 0x0)",Linux,Linux,"93ab6cc69162775201587cc9da00d5016dc890e2, 93ab6cc69162775201587cc9da00d5016dc890e2, 93ab6cc69162775201587cc9da00d5016dc890e2, 93ab6cc69162775201587cc9da00d5016dc890e2, 93ab6cc69162775201587cc9da00d5016dc890e2, 93ab6cc69162775201587cc9da00d5016dc890e2"
208,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40954,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

net: do not leave a dangling sk pointer, when socket creation fails

It is possible to trigger a use-after-free by:
  * attaching an fentry probe to __sock_release() and the probe calling the
    bpf_get_socket_cookie() helper
  * running traceroute -I 1.1.1.1 on a freshly booted VM

A KASAN enabled kernel will log something like below (decoded and stripped):
==================================================================
BUG: KASAN: slab-use-after-free in __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
Read of size 8 at addr ffff888007110dd8 by task traceroute/299

CPU: 2 PID: 299 Comm: traceroute Tainted: G            E      6.10.0-rc2+ #2
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
Call Trace:
 <TASK>
dump_stack_lvl (lib/dump_stack.c:117 (discriminator 1))
print_report (mm/kasan/report.c:378 mm/kasan/report.c:488)
? __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
kasan_report (mm/kasan/report.c:603)
? __sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
kasan_check_range (mm/kasan/generic.c:183 mm/kasan/generic.c:189)
__sock_gen_cookie (./arch/x86/include/asm/atomic64_64.h:15 ./include/linux/atomic/atomic-arch-fallback.h:2583 ./include/linux/atomic/atomic-instrumented.h:1611 net/core/sock_diag.c:29)
bpf_get_socket_ptr_cookie (./arch/x86/include/asm/preempt.h:94 ./include/linux/sock_diag.h:42 net/core/filter.c:5094 net/core/filter.c:5092)
bpf_prog_875642cf11f1d139___sock_release+0x6e/0x8e
bpf_trampoline_6442506592+0x47/0xaf
__sock_release (net/socket.c:652)
__sock_create (net/socket.c:1601)
...
Allocated by task 299 on cpu 2 at 78.328492s:
kasan_save_stack (mm/kasan/common.c:48)
kasan_save_track (mm/kasan/common.c:68)
__kasan_slab_alloc (mm/kasan/common.c:312 mm/kasan/common.c:338)
kmem_cache_alloc_noprof (mm/slub.c:3941 mm/slub.c:4000 mm/slub.c:4007)
sk_prot_alloc (net/core/sock.c:2075)
sk_alloc (net/core/sock.c:2134)
inet_create (net/ipv4/af_inet.c:327 net/ipv4/af_inet.c:252)
__sock_create (net/socket.c:1572)
__sys_socket (net/socket.c:1660 net/socket.c:1644 net/socket.c:1706)
__x64_sys_socket (net/socket.c:1718)
do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Freed by task 299 on cpu 2 at 78.328502s:
kasan_save_stack (mm/kasan/common.c:48)
kasan_save_track (mm/kasan/common.c:68)
kasan_save_free_info (mm/kasan/generic.c:582)
poison_slab_object (mm/kasan/common.c:242)
__kasan_slab_free (mm/kasan/common.c:256)
kmem_cache_free (mm/slub.c:4437 mm/slub.c:4511)
__sk_destruct (net/core/sock.c:2117 net/core/sock.c:2208)
inet_create (net/ipv4/af_inet.c:397 net/ipv4/af_inet.c:252)
__sock_create (net/socket.c:1572)
__sys_socket (net/socket.c:1660 net/socket.c:1644 net/socket.c:1706)
__x64_sys_socket (net/socket.c:1718)
do_syscall_64 (arch/x86/entry/common.c:52 arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Fix this by clearing the struct socket reference in sk_common_release() to cover
all protocol families create functions, which may already attached the
reference to the sk object with sock_init_data().",Linux,Linux,"c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd, c5dbb89fc2ac013afe67b9e4fcb3743c02b567cd"
263,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46844,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

um: line: always fill *error_out in setup_one_line()

The pointer isn't initialized by callers, but I have
encountered cases where it's still printed; initialize
it in all possible cases in setup_one_line().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
271,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43869,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

perf: Fix event leak upon exec and file release

The perf pending task work is never waited upon the matching event
release. In the case of a child event, released via free_event()
directly, this can potentially result in a leaked event, such as in the
following scenario that doesn't even require a weak IRQ work
implementation to trigger:

schedule()
   prepare_task_switch()
=======> <NMI>
      perf_event_overflow()
         event->pending_sigtrap = ...
         irq_work_queue(&event->pending_irq)
<======= </NMI>
      perf_event_task_sched_out()
          event_sched_out()
              event->pending_sigtrap = 0;
              atomic_long_inc_not_zero(&event->refcount)
              task_work_add(&event->pending_task)
   finish_lock_switch()
=======> <IRQ>
   perf_pending_irq()
      //do nothing, rely on pending task work
<======= </IRQ>

begin_new_exec()
   perf_event_exit_task()
      perf_event_exit_event()
         // If is child event
         free_event()
            WARN(atomic_long_cmpxchg(&event->refcount, 1, 0) != 1)
            // event is leaked

Similar scenarios can also happen with perf_event_remove_on_exec() or
simply against concurrent perf_event_release().

Fix this with synchonizing against the possibly remaining pending task
work while freeing the event, just like is done with remaining pending
IRQ work. This means that the pending task callback neither need nor
should hold a reference to the event, preventing it from ever beeing
freed.",Linux,Linux,"8bffa95ac19ff27c8261904f89d36c7fcf215d59, 517e6a301f34613bff24a8e35b5455884f2d83d8, 517e6a301f34613bff24a8e35b5455884f2d83d8, 517e6a301f34613bff24a8e35b5455884f2d83d8, 517e6a301f34613bff24a8e35b5455884f2d83d8"
270,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2022-48666,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: core: Fix a use-after-free

There are two .exit_cmd_priv implementations. Both implementations use
resources associated with the SCSI host. Make sure that these resources are
still available when .exit_cmd_priv is called by waiting inside
scsi_remove_host() until the tag set has been freed.

This commit fixes the following use-after-free:

==================================================================
BUG: KASAN: use-after-free in srp_exit_cmd_priv+0x27/0xd0 [ib_srp]
Read of size 8 at addr ffff888100337000 by task multipathd/16727
Call Trace:
 <TASK>
 dump_stack_lvl+0x34/0x44
 print_report.cold+0x5e/0x5db
 kasan_report+0xab/0x120
 srp_exit_cmd_priv+0x27/0xd0 [ib_srp]
 scsi_mq_exit_request+0x4d/0x70
 blk_mq_free_rqs+0x143/0x410
 __blk_mq_free_map_and_rqs+0x6e/0x100
 blk_mq_free_tag_set+0x2b/0x160
 scsi_host_dev_release+0xf3/0x1a0
 device_release+0x54/0xe0
 kobject_put+0xa5/0x120
 device_release+0x54/0xe0
 kobject_put+0xa5/0x120
 scsi_device_dev_release_usercontext+0x4c1/0x4e0
 execute_in_process_context+0x23/0x90
 device_release+0x54/0xe0
 kobject_put+0xa5/0x120
 scsi_disk_release+0x3f/0x50
 device_release+0x54/0xe0
 kobject_put+0xa5/0x120
 disk_release+0x17f/0x1b0
 device_release+0x54/0xe0
 kobject_put+0xa5/0x120
 dm_put_table_device+0xa3/0x160 [dm_mod]
 dm_put_device+0xd0/0x140 [dm_mod]
 free_priority_group+0xd8/0x110 [dm_multipath]
 free_multipath+0x94/0xe0 [dm_multipath]
 dm_table_destroy+0xa2/0x1e0 [dm_mod]
 __dm_destroy+0x196/0x350 [dm_mod]
 dev_remove+0x10c/0x160 [dm_mod]
 ctl_ioctl+0x2c2/0x590 [dm_mod]
 dm_ctl_ioctl+0x5/0x10 [dm_mod]
 __x64_sys_ioctl+0xb4/0xf0
 dm_ctl_ioctl+0x5/0x10 [dm_mod]
 __x64_sys_ioctl+0xb4/0xf0
 do_syscall_64+0x3b/0x90
 entry_SYSCALL_64_after_hwframe+0x46/0xb0",Linux,Linux,"65ca846a53149a1a72cd8d02e7b2e73dd545b834, 65ca846a53149a1a72cd8d02e7b2e73dd545b834, 65ca846a53149a1a72cd8d02e7b2e73dd545b834, 65ca846a53149a1a72cd8d02e7b2e73dd545b834"
269,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46831,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: microchip: vcap: Fix use-after-free error in kunit test

This is a clear use-after-free error. We remove it, and rely on checking
the return code of vcap_del_rule.",Linux,Linux,"c956b9b318d9036701c471dd458f9ed31defc629, c956b9b318d9036701c471dd458f9ed31defc629, c956b9b318d9036701c471dd458f9ed31defc629"
268,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46815,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check num_valid_sets before accessing reader_wm_sets[]

[WHY & HOW]
num_valid_sets needs to be checked to avoid a negative index when
accessing reader_wm_sets[num_valid_sets - 1].

This fixes an OVERRUN issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
267,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43843,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

riscv, bpf: Fix out-of-bounds issue when preparing trampoline image

We get the size of the trampoline image during the dry run phase and
allocate memory based on that size. The allocated image will then be
populated with instructions during the real patch phase. But after
commit 26ef208c209a (""bpf: Use arch_bpf_trampoline_size""), the `im`
argument is inconsistent in the dry run and real patch phase. This may
cause emit_imm in RV64 to generate a different number of instructions
when generating the 'im' address, potentially causing out-of-bounds
issues. Let's emit the maximum number of instructions for the ""im""
address during dry run to fix this problem.",Linux,Linux,"26ef208c209a0e6eed8942a5d191b39dccfa6e38, 26ef208c209a0e6eed8942a5d191b39dccfa6e38"
266,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47697,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drivers: media: dvb-frontends/rtl2830: fix an out-of-bounds write error

Ensure index in rtl2830_pid_filter does not exceed 31 to prevent
out-of-bounds access.

dev->filters is a 32-bit value, so set_bit and clear_bit functions should
only operate on indices from 0 to 31. If index is 32, it will attempt to
access a non-existent 33rd bit, leading to out-of-bounds access.
Change the boundary check from index > 32 to index >= 32 to resolve this
issue.",Linux,Linux,"df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6, df70ddad81b47c57bcccffc805fbd75f2f1b2dc6"
265,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46849,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: meson: axg-card: fix 'use-after-free'

Buffer 'card->dai_link' is reallocated in 'meson_card_reallocate_links()',
so move 'pad' pointer initialization after this function when memory is
already reallocated.

Kasan bug report:

==================================================================
BUG: KASAN: slab-use-after-free in axg_card_add_link+0x76c/0x9bc
Read of size 8 at addr ffff000000e8b260 by task modprobe/356

CPU: 0 PID: 356 Comm: modprobe Tainted: G O 6.9.12-sdkernel #1
Call trace:
 dump_backtrace+0x94/0xec
 show_stack+0x18/0x24
 dump_stack_lvl+0x78/0x90
 print_report+0xfc/0x5c0
 kasan_report+0xb8/0xfc
 __asan_load8+0x9c/0xb8
 axg_card_add_link+0x76c/0x9bc [snd_soc_meson_axg_sound_card]
 meson_card_probe+0x344/0x3b8 [snd_soc_meson_card_utils]
 platform_probe+0x8c/0xf4
 really_probe+0x110/0x39c
 __driver_probe_device+0xb8/0x18c
 driver_probe_device+0x108/0x1d8
 __driver_attach+0xd0/0x25c
 bus_for_each_dev+0xe0/0x154
 driver_attach+0x34/0x44
 bus_add_driver+0x134/0x294
 driver_register+0xa8/0x1e8
 __platform_driver_register+0x44/0x54
 axg_card_pdrv_init+0x20/0x1000 [snd_soc_meson_axg_sound_card]
 do_one_initcall+0xdc/0x25c
 do_init_module+0x10c/0x334
 load_module+0x24c4/0x26cc
 init_module_from_file+0xd4/0x128
 __arm64_sys_finit_module+0x1f4/0x41c
 invoke_syscall+0x60/0x188
 el0_svc_common.constprop.0+0x78/0x13c
 do_el0_svc+0x30/0x40
 el0_svc+0x38/0x78
 el0t_64_sync_handler+0x100/0x12c
 el0t_64_sync+0x190/0x194",Linux,Linux,"7864a79f37b55769b817d5e6c5ae0ca4bfdba93b, 7864a79f37b55769b817d5e6c5ae0ca4bfdba93b, 7864a79f37b55769b817d5e6c5ae0ca4bfdba93b, 7864a79f37b55769b817d5e6c5ae0ca4bfdba93b, 7864a79f37b55769b817d5e6c5ae0ca4bfdba93b, 7864a79f37b55769b817d5e6c5ae0ca4bfdba93b, 7864a79f37b55769b817d5e6c5ae0ca4bfdba93b"
264,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43914,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

md/raid5: avoid BUG_ON() while continue reshape after reassembling

Currently, mdadm support --revert-reshape to abort the reshape while
reassembling, as the test 07revert-grow. However, following BUG_ON()
can be triggerred by the test:

kernel BUG at drivers/md/raid5.c:6278!
invalid opcode: 0000 [#1] PREEMPT SMP PTI
irq event stamp: 158985
CPU: 6 PID: 891 Comm: md0_reshape Not tainted 6.9.0-03335-g7592a0b0049a #94
RIP: 0010:reshape_request+0x3f1/0xe60
Call Trace:
 <TASK>
 raid5_sync_request+0x43d/0x550
 md_do_sync+0xb7a/0x2110
 md_thread+0x294/0x2b0
 kthread+0x147/0x1c0
 ret_from_fork+0x59/0x70
 ret_from_fork_asm+0x1a/0x30
 </TASK>

Root cause is that --revert-reshape update the raid_disks from 5 to 4,
while reshape position is still set, and after reassembling the array,
reshape position will be read from super block, then during reshape the
checking of 'writepos' that is caculated by old reshape position will
fail.

Fix this panic the easy way first, by converting the BUG_ON() to
WARN_ON(), and stop the reshape if checkings fail.

Noted that mdadm must fix --revert-shape as well, and probably md/raid
should enhance metadata validation as well, however this means
reassemble will fail and there must be user tools to fix the wrong
metadata.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
262,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46713,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

perf/aux: Fix AUX buffer serialization

Ole reported that event->mmap_mutex is strictly insufficient to
serialize the AUX buffer, add a per RB mutex to fully serialize it.

Note that in the lock order comment the perf_event::mmap_mutex order
was already wrong, that is, it nesting under mmap_lock is not new with
this patch.",Linux,Linux,"45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff, 45bfb2e50471abbbfd83d40d28c986078b0d24ff"
273,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42246,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net, sunrpc: Remap EPERM in case of connection failure in xs_tcp_setup_socket

When using a BPF program on kernel_connect(), the call can return -EPERM. This
causes xs_tcp_setup_socket() to loop forever, filling up the syslog and causing
the kernel to potentially freeze up.

Neil suggested:

  This will propagate -EPERM up into other layers which might not be ready
  to handle it. It might be safer to map EPERM to an error we would be more
  likely to expect from the network system - such as ECONNREFUSED or ENETDOWN.

ECONNREFUSED as error seems reasonable. For programs setting a different error
can be out of reach (see handling in 4fbac77d2d09) in particular on kernels
which do not have f10d05966196 (""bpf: Make BPF_PROG_RUN_ARRAY return -err
instead of allow boolean""), thus given that it is better to simply remap for
consistent behavior. UDP does handle EPERM in xs_udp_send_request().",Linux,Linux,"4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427, 4fbac77d2d092b475dda9eea66da674369665427"
261,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46779,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/imagination: Free pvr_vm_gpuva after unlink

This caused a measurable memory leak. Although the individual
allocations are small, the leaks occurs in a high-usage codepath
(remapping or unmapping device memory) so they add up quickly.",Linux,Linux,"ff5f643de0bf27874c4033cd57a0bd034b5c7d11, ff5f643de0bf27874c4033cd57a0bd034b5c7d11"
260,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42316,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm/mglru: fix div-by-zero in vmpressure_calc_level()

evict_folios() uses a second pass to reclaim folios that have gone through
page writeback and become clean before it finishes the first pass, since
folio_rotate_reclaimable() cannot handle those folios due to the
isolation.

The second pass tries to avoid potential double counting by deducting
scan_control->nr_scanned.  However, this can result in underflow of
nr_scanned, under a condition where shrink_folio_list() does not increment
nr_scanned, i.e., when folio_trylock() fails.

The underflow can cause the divisor, i.e., scale=scanned+reclaimed in
vmpressure_calc_level(), to become zero, resulting in the following crash:

  [exception RIP: vmpressure_work_fn+101]
  process_one_work at ffffffffa3313f2b

Since scan_control->nr_scanned has no established semantics, the potential
double counting has minimal risks.  Therefore, fix the problem by not
deducting scan_control->nr_scanned in evict_folios().",Linux,Linux,"359a5e1416caaf9ce28396a65ed3e386cc5de663, 359a5e1416caaf9ce28396a65ed3e386cc5de663, 359a5e1416caaf9ce28396a65ed3e386cc5de663, 359a5e1416caaf9ce28396a65ed3e386cc5de663"
259,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46821,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/pm: Fix negative array index read

Avoid using the negative values
for clk_idex as an index into an array pptable->DpmDescriptor.

V2: fix clk_index return check (Tim Huang)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
258,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46770,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ice: Add netif_device_attach/detach into PF reset flow

Ethtool callbacks can be executed while reset is in progress and try to
access deleted resources, e.g. getting coalesce settings can result in a
NULL pointer dereference seen below.

Reproduction steps:
Once the driver is fully initialized, trigger reset:
	# echo 1 > /sys/class/net/<interface>/device/reset
when reset is in progress try to get coalesce settings using ethtool:
	# ethtool -c <interface>

BUG: kernel NULL pointer dereference, address: 0000000000000020
PGD 0 P4D 0
Oops: Oops: 0000 [#1] PREEMPT SMP PTI
CPU: 11 PID: 19713 Comm: ethtool Tainted: G S                 6.10.0-rc7+ #7
RIP: 0010:ice_get_q_coalesce+0x2e/0xa0 [ice]
RSP: 0018:ffffbab1e9bcf6a8 EFLAGS: 00010206
RAX: 000000000000000c RBX: ffff94512305b028 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffff9451c3f2e588 RDI: ffff9451c3f2e588
RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000
R10: ffff9451c3f2e580 R11: 000000000000001f R12: ffff945121fa9000
R13: ffffbab1e9bcf760 R14: 0000000000000013 R15: ffffffff9e65dd40
FS:  00007faee5fbe740(0000) GS:ffff94546fd80000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000020 CR3: 0000000106c2e005 CR4: 00000000001706f0
Call Trace:
<TASK>
ice_get_coalesce+0x17/0x30 [ice]
coalesce_prepare_data+0x61/0x80
ethnl_default_doit+0xde/0x340
genl_family_rcv_msg_doit+0xf2/0x150
genl_rcv_msg+0x1b3/0x2c0
netlink_rcv_skb+0x5b/0x110
genl_rcv+0x28/0x40
netlink_unicast+0x19c/0x290
netlink_sendmsg+0x222/0x490
__sys_sendto+0x1df/0x1f0
__x64_sys_sendto+0x24/0x30
do_syscall_64+0x82/0x160
entry_SYSCALL_64_after_hwframe+0x76/0x7e
RIP: 0033:0x7faee60d8e27

Calling netif_device_detach() before reset makes the net core not call
the driver when ethtool command is issued, the attempt to execute an
ethtool command during reset will result in the following message:

    netlink error: No such device

instead of NULL pointer dereference. Once reset is done and
ice_rebuild() is executing, the netif_device_attach() is called to allow
for ethtool operations to occur again in a safe manner.",Linux,Linux,"fcea6f3da546b93050f3534aadea7bd96c1d7349, fcea6f3da546b93050f3534aadea7bd96c1d7349, fcea6f3da546b93050f3534aadea7bd96c1d7349, fcea6f3da546b93050f3534aadea7bd96c1d7349"
257,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49907,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check null pointers before using dc->clk_mgr

[WHY & HOW]
dc->clk_mgr is null checked previously in the same function, indicating
it might be null.

Passing ""dc"" to ""dc->hwss.apply_idle_power_optimizations"", which
dereferences null ""dc->clk_mgr"". (The function pointer resolves to
""dcn35_apply_idle_power_optimizations"".)

This fixes 1 FORWARD_NULL issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
256,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41022,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix signedness bug in sdma_v4_0_process_trap_irq()

The ""instance"" variable needs to be signed for the error handling to work.",Linux,Linux,"5594971e02764aa1c8210ffb838cb4e7897716e8, 8112fa72b7f139052843ff484130d6f97e9f052f, ea906e9ac61e3152bef63597f2d9f4a812fc346a, 011552f29f20842c9a7a21bffe1f6a2d6457ba46, 5b0a3dc3e87821acb80e841b464d335aff242691, 0964c84b93db7fbf74f357c1e20957850e092db3, 8b2faf1a4f3b6c748c0da36cda865a226534d520, 8b2faf1a4f3b6c748c0da36cda865a226534d520"
255,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49863,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vhost/scsi: null-ptr-dereference in vhost_scsi_get_req()

Since commit 3f8ca2e115e5 (""vhost/scsi: Extract common handling code
from control queue handler"") a null pointer dereference bug can be
triggered when guest sends an SCSI AN request.

In vhost_scsi_ctl_handle_vq(), `vc.target` is assigned with
`&v_req.tmf.lun[1]` within a switch-case block and is then passed to
vhost_scsi_get_req() which extracts `vc->req` and `tpg`. However, for
a `VIRTIO_SCSI_T_AN_*` request, tpg is not required, so `vc.target` is
set to NULL in this branch. Later, in vhost_scsi_get_req(),
`vc->target` is dereferenced without being checked, leading to a null
pointer dereference bug. This bug can be triggered from guest.

When this bug occurs, the vhost_worker process is killed while holding
`vq->mutex` and the corresponding tpg will remain occupied
indefinitely.

Below is the KASAN report:
Oops: general protection fault, probably for non-canonical address
0xdffffc0000000000: 0000 [#1] PREEMPT SMP KASAN NOPTI
KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
CPU: 1 PID: 840 Comm: poc Not tainted 6.10.0+ #1
Hardware name: QEMU Ubuntu 24.04 PC (i440FX + PIIX, 1996), BIOS
1.16.3-debian-1.16.3-2 04/01/2014
RIP: 0010:vhost_scsi_get_req+0x165/0x3a0
Code: 00 fc ff df 48 89 fa 48 c1 ea 03 80 3c 02 00 0f 85 2b 02 00 00
48 b8 00 00 00 00 00 fc ff df 4d 8b 65 30 4c 89 e2 48 c1 ea 03 <0f> b6
04 02 4c 89 e2 83 e2 07 38 d0 7f 08 84 c0 0f 85 be 01 00 00
RSP: 0018:ffff888017affb50 EFLAGS: 00010246
RAX: dffffc0000000000 RBX: ffff88801b000000 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: ffff888017affcb8
RBP: ffff888017affb80 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000
R13: ffff888017affc88 R14: ffff888017affd1c R15: ffff888017993000
FS:  000055556e076500(0000) GS:ffff88806b100000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000200027c0 CR3: 0000000010ed0004 CR4: 0000000000370ef0
Call Trace:
 <TASK>
 ? show_regs+0x86/0xa0
 ? die_addr+0x4b/0xd0
 ? exc_general_protection+0x163/0x260
 ? asm_exc_general_protection+0x27/0x30
 ? vhost_scsi_get_req+0x165/0x3a0
 vhost_scsi_ctl_handle_vq+0x2a4/0xca0
 ? __pfx_vhost_scsi_ctl_handle_vq+0x10/0x10
 ? __switch_to+0x721/0xeb0
 ? __schedule+0xda5/0x5710
 ? __kasan_check_write+0x14/0x30
 ? _raw_spin_lock+0x82/0xf0
 vhost_scsi_ctl_handle_kick+0x52/0x90
 vhost_run_work_list+0x134/0x1b0
 vhost_task_fn+0x121/0x350
...
 </TASK>
---[ end trace 0000000000000000 ]---

Let's add a check in vhost_scsi_get_req.

[whitespace fixes]",Linux,Linux,"3f8ca2e115e55af4c15d97dda635e948d2e380be, 3f8ca2e115e55af4c15d97dda635e948d2e380be, 3f8ca2e115e55af4c15d97dda635e948d2e380be, 3f8ca2e115e55af4c15d97dda635e948d2e380be, 3f8ca2e115e55af4c15d97dda635e948d2e380be, 3f8ca2e115e55af4c15d97dda635e948d2e380be, 3f8ca2e115e55af4c15d97dda635e948d2e380be"
254,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46826,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ELF: fix kernel.randomize_va_space double read

ELF loader uses ""randomize_va_space"" twice. It is sysctl and can change
at any moment, so 2 loads could see 2 different values in theory with
unpredictable consequences.

Issue exactly one load for consistent value across one exec.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
272,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42314,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix extent map use-after-free when adding pages to compressed bio

At add_ra_bio_pages() we are accessing the extent map to calculate
'add_size' after we dropped our reference on the extent map, resulting
in a use-after-free. Fix this by computing 'add_size' before dropping our
extent map reference.",Linux,Linux,"6a4049102055250256623ab1875fabd89004bff8, 6a4049102055250256623ab1875fabd89004bff8, 6a4049102055250256623ab1875fabd89004bff8, 6a4049102055250256623ab1875fabd89004bff8"
274,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41016,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: strict bound check before memcmp in ocfs2_xattr_find_entry()

xattr in ocfs2 maybe 'non-indexed', which saved with additional space
requested.  It's better to check if the memory is out of bound before
memcmp, although this possibility mainly comes from crafted poisonous
images.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
252,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45020,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix a kernel verifier crash in stacksafe()

Daniel Hodges reported a kernel verifier crash when playing with sched-ext.
Further investigation shows that the crash is due to invalid memory access
in stacksafe(). More specifically, it is the following code:

    if (exact != NOT_EXACT &&
        old->stack[spi].slot_type[i % BPF_REG_SIZE] !=
        cur->stack[spi].slot_type[i % BPF_REG_SIZE])
            return false;

The 'i' iterates old->allocated_stack.
If cur->allocated_stack < old->allocated_stack the out-of-bound
access will happen.

To fix the issue add 'i >= cur->allocated_stack' check such that if
the condition is true, stacksafe() should fail. Otherwise,
cur->stack[spi].slot_type[i % BPF_REG_SIZE] memory access is legal.",Linux,Linux,"ab470fefce2837e66b771c60858118d50bb5bb10, 2793a8b015f7f1caadb9bce9c63dc659f7522676, 2793a8b015f7f1caadb9bce9c63dc659f7522676"
285,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42299,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: Update log->page_{mask,bits} if log->page_size changed

If an NTFS file system is mounted to another system with different
PAGE_SIZE from the original system, log->page_size will change in
log_replay(), but log->page_{mask,bits} don't change correspondingly.
This will cause a panic because ""u32 bytes = log->page_size - page_off""
will get a negative value in the later read_log_page().",Linux,Linux,"b46acd6a6a627d876898e1c84d3f84902264b445, b46acd6a6a627d876898e1c84d3f84902264b445, b46acd6a6a627d876898e1c84d3f84902264b445, b46acd6a6a627d876898e1c84d3f84902264b445, b46acd6a6a627d876898e1c84d3f84902264b445"
293,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52621,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Check rcu_read_lock_trace_held() before calling bpf map helpers

These three bpf_map_{lookup,update,delete}_elem() helpers are also
available for sleepable bpf program, so add the corresponding lock
assertion for sleepable bpf program, otherwise the following warning
will be reported when a sleepable bpf program manipulates bpf map under
interpreter mode (aka bpf_jit_enable=0):

  WARNING: CPU: 3 PID: 4985 at kernel/bpf/helpers.c:40 ......
  CPU: 3 PID: 4985 Comm: test_progs Not tainted 6.6.0+ #2
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996) ......
  RIP: 0010:bpf_map_lookup_elem+0x54/0x60
  ......
  Call Trace:
   <TASK>
   ? __warn+0xa5/0x240
   ? bpf_map_lookup_elem+0x54/0x60
   ? report_bug+0x1ba/0x1f0
   ? handle_bug+0x40/0x80
   ? exc_invalid_op+0x18/0x50
   ? asm_exc_invalid_op+0x1b/0x20
   ? __pfx_bpf_map_lookup_elem+0x10/0x10
   ? rcu_lockdep_current_cpu_online+0x65/0xb0
   ? rcu_is_watching+0x23/0x50
   ? bpf_map_lookup_elem+0x54/0x60
   ? __pfx_bpf_map_lookup_elem+0x10/0x10
   ___bpf_prog_run+0x513/0x3b70
   __bpf_prog_run32+0x9d/0xd0
   ? __bpf_prog_enter_sleepable_recur+0xad/0x120
   ? __bpf_prog_enter_sleepable_recur+0x3e/0x120
   bpf_trampoline_6442580665+0x4d/0x1000
   __x64_sys_getpgid+0x5/0x30
   ? do_syscall_64+0x36/0xb0
   entry_SYSCALL_64_after_hwframe+0x6e/0x76
   </TASK>",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
292,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52532,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: mana: Fix TX CQE error handling

For an unknown TX CQE error type (probably from a newer hardware),
still free the SKB, update the queue tail, etc., otherwise the
accounting will be wrong.

Also, TX errors can be triggered by injecting corrupted packets, so
replace the WARN_ONCE to ratelimited error logging.",Linux,Linux,"ca9c54d2d6a5ab2430c4eda364c77125d62e5e0f, ca9c54d2d6a5ab2430c4eda364c77125d62e5e0f, ca9c54d2d6a5ab2430c4eda364c77125d62e5e0f"
291,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50011,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: Intel: soc-acpi-intel-rpl-match: add missing empty item

There is no links_num in struct snd_soc_acpi_mach {}, and we test
!link->num_adr as a condition to end the loop in hda_sdw_machine_select().
So an empty item in struct snd_soc_acpi_link_adr array is required.",Linux,Linux,"65ab45b90656e9b7ed51bce27ab7d83618167e76, 65ab45b90656e9b7ed51bce27ab7d83618167e76"
290,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46740,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

binder: fix UAF caused by offsets overwrite

Binder objects are processed and copied individually into the target
buffer during transactions. Any raw data in-between these objects is
copied as well. However, this raw data copy lacks an out-of-bounds
check. If the raw data exceeds the data section size then the copy
overwrites the offsets section. This eventually triggers an error that
attempts to unwind the processed objects. However, at this point the
offsets used to index these objects are now corrupted.

Unwinding with corrupted offsets can result in decrements of arbitrary
nodes and lead to their premature release. Other users of such nodes are
left with a dangling pointer triggering a use-after-free. This issue is
made evident by the following KASAN report (trimmed):

  ==================================================================
  BUG: KASAN: slab-use-after-free in _raw_spin_lock+0xe4/0x19c
  Write of size 4 at addr ffff47fc91598f04 by task binder-util/743

  CPU: 9 UID: 0 PID: 743 Comm: binder-util Not tainted 6.11.0-rc4 #1
  Hardware name: linux,dummy-virt (DT)
  Call trace:
   _raw_spin_lock+0xe4/0x19c
   binder_free_buf+0x128/0x434
   binder_thread_write+0x8a4/0x3260
   binder_ioctl+0x18f0/0x258c
  [...]

  Allocated by task 743:
   __kmalloc_cache_noprof+0x110/0x270
   binder_new_node+0x50/0x700
   binder_transaction+0x413c/0x6da8
   binder_thread_write+0x978/0x3260
   binder_ioctl+0x18f0/0x258c
  [...]

  Freed by task 745:
   kfree+0xbc/0x208
   binder_thread_read+0x1c5c/0x37d4
   binder_ioctl+0x16d8/0x258c
  [...]
  ==================================================================

To avoid this issue, let's check that the raw data copy is within the
boundaries of the data section.",Linux,Linux,"c056a6ba35e00ae943e377eb09abd77a6915b31a, 23e9d815fad84c1bee3742a8de4bd39510435362, 7a9ad4aceb0226b391c9d3b8e4ac2e7d438b6bde, 6d98eb95b450a75adb4516a1d33652dc78d2b20c, 6d98eb95b450a75adb4516a1d33652dc78d2b20c, 6d98eb95b450a75adb4516a1d33652dc78d2b20c, 6d98eb95b450a75adb4516a1d33652dc78d2b20c"
289,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41070,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: PPC: Book3S HV: Prevent UAF in kvm_spapr_tce_attach_iommu_group()

Al reported a possible use-after-free (UAF) in kvm_spapr_tce_attach_iommu_group().

It looks up `stt` from tablefd, but then continues to use it after doing
fdput() on the returned fd. After the fdput() the tablefd is free to be
closed by another thread. The close calls kvm_spapr_tce_release() and
then release_spapr_tce_table() (via call_rcu()) which frees `stt`.

Although there are calls to rcu_read_lock() in
kvm_spapr_tce_attach_iommu_group() they are not sufficient to prevent
the UAF, because `stt` is used outside the locked regions.

With an artifcial delay after the fdput() and a userspace program which
triggers the race, KASAN detects the UAF:

  BUG: KASAN: slab-use-after-free in kvm_spapr_tce_attach_iommu_group+0x298/0x720 [kvm]
  Read of size 4 at addr c000200027552c30 by task kvm-vfio/2505
  CPU: 54 PID: 2505 Comm: kvm-vfio Not tainted 6.10.0-rc3-next-20240612-dirty #1
  Hardware name: 8335-GTH POWER9 0x4e1202 opal:skiboot-v6.5.3-35-g1851b2a06 PowerNV
  Call Trace:
    dump_stack_lvl+0xb4/0x108 (unreliable)
    print_report+0x2b4/0x6ec
    kasan_report+0x118/0x2b0
    __asan_load4+0xb8/0xd0
    kvm_spapr_tce_attach_iommu_group+0x298/0x720 [kvm]
    kvm_vfio_set_attr+0x524/0xac0 [kvm]
    kvm_device_ioctl+0x144/0x240 [kvm]
    sys_ioctl+0x62c/0x1810
    system_call_exception+0x190/0x440
    system_call_vectored_common+0x15c/0x2ec
  ...
  Freed by task 0:
   ...
   kfree+0xec/0x3e0
   release_spapr_tce_table+0xd4/0x11c [kvm]
   rcu_core+0x568/0x16a0
   handle_softirqs+0x23c/0x920
   do_softirq_own_stack+0x6c/0x90
   do_softirq_own_stack+0x58/0x90
   __irq_exit_rcu+0x218/0x2d0
   irq_exit+0x30/0x80
   arch_local_irq_restore+0x128/0x230
   arch_local_irq_enable+0x1c/0x30
   cpuidle_enter_state+0x134/0x5cc
   cpuidle_enter+0x6c/0xb0
   call_cpuidle+0x7c/0x100
   do_idle+0x394/0x410
   cpu_startup_entry+0x60/0x70
   start_secondary+0x3fc/0x410
   start_secondary_prolog+0x10/0x14

Fix it by delaying the fdput() until `stt` is no longer in use, which
is effectively the entire function. To keep the patch minimal add a call
to fdput() at each of the existing return paths. Future work can convert
the function to goto or __cleanup style cleanup.

With the fix in place the test case no longer triggers the UAF.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
288,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42283,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: nexthop: Initialize all fields in dumped nexthops

struct nexthop_grp contains two reserved fields that are not initialized by
nla_put_nh_group(), and carry garbage. This can be observed e.g. with
strace (edited for clarity):

    # ip nexthop add id 1 dev lo
    # ip nexthop add id 101 group 1
    # strace -e recvmsg ip nexthop get id 101
    ...
    recvmsg(... [{nla_len=12, nla_type=NHA_GROUP},
                 [{id=1, weight=0, resvd1=0x69, resvd2=0x67}]] ...) = 52

The fields are reserved and therefore not currently used. But as they are, they
leak kernel memory, and the fact they are not just zero complicates repurposing
of the fields for new ends. Initialize the full structure.",Linux,Linux,"430a049190de3c9e219f43084de9f1122da04570, 430a049190de3c9e219f43084de9f1122da04570, 430a049190de3c9e219f43084de9f1122da04570, 430a049190de3c9e219f43084de9f1122da04570, 430a049190de3c9e219f43084de9f1122da04570, 430a049190de3c9e219f43084de9f1122da04570, 430a049190de3c9e219f43084de9f1122da04570"
287,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52904,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ALSA: usb-audio: Fix possible NULL pointer dereference in snd_usb_pcm_has_fixed_rate()

The subs function argument may be NULL, so do not use it before the NULL check.",Linux,Linux,"bfd36b1d1869859af7ba94dc95ec05e74f40d0b7, e1e0a181aea375edfae2f9a59070f95d904980d1, 291e9da91403e0e628d7692b5ed505100e7b7706"
286,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46676,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfc: pn533: Add poll mod list filling check

In case of im_protocols value is 1 and tm_protocols value is 0 this
combination successfully passes the check
'if (!im_protocols && !tm_protocols)' in the nfc_start_poll().
But then after pn533_poll_create_mod_list() call in pn533_start_poll()
poll mod list will remain empty and dev->poll_mod_count will remain 0
which lead to division by zero.

Normally no im protocol has value 1 in the mask, so this combination is
not expected by driver. But these protocol values actually come from
userspace via Netlink interface (NFC_CMD_START_POLL operation). So a
broken or malicious program may pass a message containing a ""bad""
combination of protocol parameter values so that dev->poll_mod_count
is not incremented inside pn533_poll_create_mod_list(), thus leading
to division by zero.
Call trace looks like:
nfc_genl_start_poll()
  nfc_start_poll()
    ->start_poll()
    pn533_start_poll()

Add poll mod list filling check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"dfccd0f580445d176acea174175b3e6518cc91f7, dfccd0f580445d176acea174175b3e6518cc91f7, dfccd0f580445d176acea174175b3e6518cc91f7, dfccd0f580445d176acea174175b3e6518cc91f7, dfccd0f580445d176acea174175b3e6518cc91f7, dfccd0f580445d176acea174175b3e6518cc91f7, dfccd0f580445d176acea174175b3e6518cc91f7"
284,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47076,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/rxe: Return CQE error if invalid lkey was supplied

RXE is missing update of WQE status in LOCAL_WRITE failures.  This caused
the following kernel panic if someone sent an atomic operation with an
explicitly wrong lkey.

[leonro@vm ~]$ mkt test
test_atomic_invalid_lkey (tests.test_atomic.AtomicTest) ...
 WARNING: CPU: 5 PID: 263 at drivers/infiniband/sw/rxe/rxe_comp.c:740 rxe_completer+0x1a6d/0x2e30 [rdma_rxe]
 Modules linked in: crc32_generic rdma_rxe ip6_udp_tunnel udp_tunnel rdma_ucm rdma_cm ib_umad ib_ipoib iw_cm ib_cm mlx5_ib ib_uverbs ib_core mlx5_core ptp pps_core
 CPU: 5 PID: 263 Comm: python3 Not tainted 5.13.0-rc1+ #2936
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014
 RIP: 0010:rxe_completer+0x1a6d/0x2e30 [rdma_rxe]
 Code: 03 0f 8e 65 0e 00 00 3b 93 10 06 00 00 0f 84 82 0a 00 00 4c 89 ff 4c 89 44 24 38 e8 2d 74 a9 e1 4c 8b 44 24 38 e9 1c f5 ff ff <0f> 0b e9 0c e8 ff ff b8 05 00 00 00 41 bf 05 00 00 00 e9 ab e7 ff
 RSP: 0018:ffff8880158af090 EFLAGS: 00010246
 RAX: 0000000000000000 RBX: ffff888016a78000 RCX: ffffffffa0cf1652
 RDX: 1ffff9200004b442 RSI: 0000000000000004 RDI: ffffc9000025a210
 RBP: dffffc0000000000 R08: 00000000ffffffea R09: ffff88801617740b
 R10: ffffed1002c2ee81 R11: 0000000000000007 R12: ffff88800f3b63e8
 R13: ffff888016a78008 R14: ffffc9000025a180 R15: 000000000000000c
 FS:  00007f88b622a740(0000) GS:ffff88806d540000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00007f88b5a1fa10 CR3: 000000000d848004 CR4: 0000000000370ea0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
 Call Trace:
  rxe_do_task+0x130/0x230 [rdma_rxe]
  rxe_rcv+0xb11/0x1df0 [rdma_rxe]
  rxe_loopback+0x157/0x1e0 [rdma_rxe]
  rxe_responder+0x5532/0x7620 [rdma_rxe]
  rxe_do_task+0x130/0x230 [rdma_rxe]
  rxe_rcv+0x9c8/0x1df0 [rdma_rxe]
  rxe_loopback+0x157/0x1e0 [rdma_rxe]
  rxe_requester+0x1efd/0x58c0 [rdma_rxe]
  rxe_do_task+0x130/0x230 [rdma_rxe]
  rxe_post_send+0x998/0x1860 [rdma_rxe]
  ib_uverbs_post_send+0xd5f/0x1220 [ib_uverbs]
  ib_uverbs_write+0x847/0xc80 [ib_uverbs]
  vfs_write+0x1c5/0x840
  ksys_write+0x176/0x1d0
  do_syscall_64+0x3f/0x80
  entry_SYSCALL_64_after_hwframe+0x44/0xae",Linux,Linux,"8700e3e7c4857d28ebaa824509934556da0b3e76, 8700e3e7c4857d28ebaa824509934556da0b3e76"
275,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42280,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mISDN: Fix a use after free in hfcmulti_tx()

Don't dereference *sp after calling dev_kfree_skb(*sp).",Linux,Linux,"af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4, af69fb3a8ffa37e986db00ed93099dc44babeef4"
283,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42292,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

kobject_uevent: Fix OOB access within zap_modalias_env()

zap_modalias_env() wrongly calculates size of memory block to move, so
will cause OOB memory access issue if variable MODALIAS is not the last
one within its @env parameter, fixed by correcting size to memmove.",Linux,Linux,"9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008, 9b3fa47d4a76b1d606a396455f9bbeee083ef008"
282,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42310,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/gma500: fix null pointer dereference in cdv_intel_lvds_get_modes

In cdv_intel_lvds_get_modes(), the return value of drm_mode_duplicate()
is assigned to mode, which will lead to a NULL pointer dereference on
failure of drm_mode_duplicate(). Add a check to avoid npd.",Linux,Linux,"6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe, 6a227d5fd6c4abe6a9226a40f6981825e9da5fbe"
281,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49969,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix index out of bounds in DCN30 color transformation

This commit addresses a potential index out of bounds issue in the
`cm3_helper_translate_curve_to_hw_format` function in the DCN30 color
management module. The issue could occur when the index 'i' exceeds the
number of transfer function points (TRANSFER_FUNC_POINTS).

The fix adds a check to ensure 'i' is within bounds before accessing the
transfer function points. If 'i' is out of bounds, the function returns
false to indicate an error.

drivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:180 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:181 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:182 cm3_helper_translate_curve_to_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
280,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49903,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: Fix uaf in dbFreeBits

[syzbot reported]
==================================================================
BUG: KASAN: slab-use-after-free in __mutex_lock_common kernel/locking/mutex.c:587 [inline]
BUG: KASAN: slab-use-after-free in __mutex_lock+0xfe/0xd70 kernel/locking/mutex.c:752
Read of size 8 at addr ffff8880229254b0 by task syz-executor357/5216

CPU: 0 UID: 0 PID: 5216 Comm: syz-executor357 Not tainted 6.11.0-rc3-syzkaller-00156-gd7a5aa4b3c00 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/27/2024
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:93 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:119
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x169/0x550 mm/kasan/report.c:488
 kasan_report+0x143/0x180 mm/kasan/report.c:601
 __mutex_lock_common kernel/locking/mutex.c:587 [inline]
 __mutex_lock+0xfe/0xd70 kernel/locking/mutex.c:752
 dbFreeBits+0x7ea/0xd90 fs/jfs/jfs_dmap.c:2390
 dbFreeDmap fs/jfs/jfs_dmap.c:2089 [inline]
 dbFree+0x35b/0x680 fs/jfs/jfs_dmap.c:409
 dbDiscardAG+0x8a9/0xa20 fs/jfs/jfs_dmap.c:1650
 jfs_ioc_trim+0x433/0x670 fs/jfs/jfs_discard.c:100
 jfs_ioctl+0x2d0/0x3e0 fs/jfs/ioctl.c:131
 vfs_ioctl fs/ioctl.c:51 [inline]
 __do_sys_ioctl fs/ioctl.c:907 [inline]
 __se_sys_ioctl+0xfc/0x170 fs/ioctl.c:893
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83

Freed by task 5218:
 kasan_save_stack mm/kasan/common.c:47 [inline]
 kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
 kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579
 poison_slab_object+0xe0/0x150 mm/kasan/common.c:240
 __kasan_slab_free+0x37/0x60 mm/kasan/common.c:256
 kasan_slab_free include/linux/kasan.h:184 [inline]
 slab_free_hook mm/slub.c:2252 [inline]
 slab_free mm/slub.c:4473 [inline]
 kfree+0x149/0x360 mm/slub.c:4594
 dbUnmount+0x11d/0x190 fs/jfs/jfs_dmap.c:278
 jfs_mount_rw+0x4ac/0x6a0 fs/jfs/jfs_mount.c:247
 jfs_remount+0x3d1/0x6b0 fs/jfs/super.c:454
 reconfigure_super+0x445/0x880 fs/super.c:1083
 vfs_cmd_reconfigure fs/fsopen.c:263 [inline]
 vfs_fsconfig_locked fs/fsopen.c:292 [inline]
 __do_sys_fsconfig fs/fsopen.c:473 [inline]
 __se_sys_fsconfig+0xb6e/0xf80 fs/fsopen.c:345
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

[Analysis]
There are two paths (dbUnmount and jfs_ioc_trim) that generate race
condition when accessing bmap, which leads to the occurrence of uaf.

Use the lock s_umount to synchronize them, in order to avoid uaf caused
by race condition.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
279,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46705,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe: reset mmio mappings with devm

Set our various mmio mappings to NULL. This should make it easier to
catch something rogue trying to mess with mmio after device removal. For
example, we might unmap everything and then start hitting some mmio
address which has already been unmamped by us and then remapped by
something else, causing all kinds of carnage.",Linux,Linux,"dd08ebf6c3525a7ea2186e636df064ea47281987, dd08ebf6c3525a7ea2186e636df064ea47281987"
278,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43819,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

kvm: s390: Reject memory region operations for ucontrol VMs

This change rejects the KVM_SET_USER_MEMORY_REGION and
KVM_SET_USER_MEMORY_REGION2 ioctls when called on a ucontrol VM.
This is necessary since ucontrol VMs have kvm->arch.gmap set to 0 and
would thus result in a null pointer dereference further in.
Memory management needs to be performed in userspace and using the
ioctls KVM_S390_UCAS_MAP and KVM_S390_UCAS_UNMAP.

Also improve s390 specific documentation for KVM_SET_USER_MEMORY_REGION
and KVM_SET_USER_MEMORY_REGION2.

[frankja@linux.ibm.com: commit message spelling fix, subject prefix fix]",Linux,Linux,"27e0393f15fc8bc855c6a888387ff5ffd2181089, 27e0393f15fc8bc855c6a888387ff5ffd2181089"
277,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49890,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/pm: ensure the fw_info is not null before using it

This resolves the dereference null return value warning
reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
276,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43876,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: rcar: Demote WARN() to dev_warn_ratelimited() in rcar_pcie_wakeup()

Avoid large backtrace, it is sufficient to warn the user that there has
been a link problem. Either the link has failed and the system is in need
of maintenance, or the link continues to work and user has been informed.
The message from the warning can be looked up in the sources.

This makes an actual link issue less verbose.

First of all, this controller has a limitation in that the controller
driver has to assist the hardware with transition to L1 link state by
writing L1IATN to PMCTRL register, the L1 and L0 link state switching
is not fully automatic on this controller.

In case of an ASMedia ASM1062 PCIe SATA controller which does not support
ASPM, on entry to suspend or during platform pm_test, the SATA controller
enters D3hot state and the link enters L1 state. If the SATA controller
wakes up before rcar_pcie_wakeup() was called and returns to D0, the link
returns to L0 before the controller driver even started its transition to
L1 link state. At this point, the SATA controller did send an PM_ENTER_L1
DLLP to the PCIe controller and the PCIe controller received it, and the
PCIe controller did set PMSR PMEL1RX bit.

Once rcar_pcie_wakeup() is called, if the link is already back in L0 state
and PMEL1RX bit is set, the controller driver has no way to determine if
it should perform the link transition to L1 state, or treat the link as if
it is in L0 state. Currently the driver attempts to perform the transition
to L1 link state unconditionally, which in this specific case fails with a
PMSR L1FAEG poll timeout, however the link still works as it is already
back in L0 state.

Reduce this warning verbosity. In case the link is really broken, the
rcar_pcie_config_access() would fail, otherwise it will succeed and any
system with this controller and ASM1062 can suspend without generating
a backtrace.",Linux,Linux,"84b576146294c2be702cfcd174eaa74167e276f9, 84b576146294c2be702cfcd174eaa74167e276f9, 84b576146294c2be702cfcd174eaa74167e276f9, 84b576146294c2be702cfcd174eaa74167e276f9"
253,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47748,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vhost_vdpa: assign irq bypass producer token correctly

We used to call irq_bypass_unregister_producer() in
vhost_vdpa_setup_vq_irq() which is problematic as we don't know if the
token pointer is still valid or not.

Actually, we use the eventfd_ctx as the token so the life cycle of the
token should be bound to the VHOST_SET_VRING_CALL instead of
vhost_vdpa_setup_vq_irq() which could be called by set_status().

Fixing this by setting up irq bypass producer's token when handling
VHOST_SET_VRING_CALL and un-registering the producer before calling
vhost_vring_ioctl() to prevent a possible use after free as eventfd
could have been released in vhost_vring_ioctl(). And such registering
and unregistering will only be done if DRIVER_OK is set.",Linux,Linux,"2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60, 2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60, 2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60, 2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60, 2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60, 2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60, 2cf1ba9a4d15cb78b96ea97f727b93382c3f9a60"
251,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46755,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mwifiex: Do not return unused priv in mwifiex_get_priv_by_id()

mwifiex_get_priv_by_id() returns the priv pointer corresponding to
the bss_num and bss_type, but without checking if the priv is actually
currently in use.
Unused priv pointers do not have a wiphy attached to them which can
lead to NULL pointer dereferences further down the callstack.  Fix
this by returning only used priv pointers which have priv->bss_mode
set to something else than NL80211_IFTYPE_UNSPECIFIED.

Said NULL pointer dereference happened when an Accesspoint was started
with wpa_supplicant -i mlan0 with this config:

network={
        ssid=""somessid""
        mode=2
        frequency=2412
        key_mgmt=WPA-PSK WPA-PSK-SHA256
        proto=RSN
        group=CCMP
        pairwise=CCMP
        psk=""12345678""
}

When waiting for the AP to be established, interrupting wpa_supplicant
with <ctrl-c> and starting it again this happens:

| Unable to handle kernel NULL pointer dereference at virtual address 0000000000000140
| Mem abort info:
|   ESR = 0x0000000096000004
|   EC = 0x25: DABT (current EL), IL = 32 bits
|   SET = 0, FnV = 0
|   EA = 0, S1PTW = 0
|   FSC = 0x04: level 0 translation fault
| Data abort info:
|   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
|   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
|   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
| user pgtable: 4k pages, 48-bit VAs, pgdp=0000000046d96000
| [0000000000000140] pgd=0000000000000000, p4d=0000000000000000
| Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
| Modules linked in: caam_jr caamhash_desc spidev caamalg_desc crypto_engine authenc libdes mwifiex_sdio
+mwifiex crct10dif_ce cdc_acm onboard_usb_hub fsl_imx8_ddr_perf imx8m_ddrc rtc_ds1307 lm75 rtc_snvs
+imx_sdma caam imx8mm_thermal spi_imx error imx_cpufreq_dt fuse ip_tables x_tables ipv6
| CPU: 0 PID: 8 Comm: kworker/0:1 Not tainted 6.9.0-00007-g937242013fce-dirty #18
| Hardware name: somemachine (DT)
| Workqueue: events sdio_irq_work
| pstate: 00000005 (nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
| pc : mwifiex_get_cfp+0xd8/0x15c [mwifiex]
| lr : mwifiex_get_cfp+0x34/0x15c [mwifiex]
| sp : ffff8000818b3a70
| x29: ffff8000818b3a70 x28: ffff000006bfd8a5 x27: 0000000000000004
| x26: 000000000000002c x25: 0000000000001511 x24: 0000000002e86bc9
| x23: ffff000006bfd996 x22: 0000000000000004 x21: ffff000007bec000
| x20: 000000000000002c x19: 0000000000000000 x18: 0000000000000000
| x17: 000000040044ffff x16: 00500072b5503510 x15: ccc283740681e517
| x14: 0201000101006d15 x13: 0000000002e8ff43 x12: 002c01000000ffb1
| x11: 0100000000000000 x10: 02e8ff43002c0100 x9 : 0000ffb100100157
| x8 : ffff000003d20000 x7 : 00000000000002f1 x6 : 00000000ffffe124
| x5 : 0000000000000001 x4 : 0000000000000003 x3 : 0000000000000000
| x2 : 0000000000000000 x1 : 0001000000011001 x0 : 0000000000000000
| Call trace:
|  mwifiex_get_cfp+0xd8/0x15c [mwifiex]
|  mwifiex_parse_single_response_buf+0x1d0/0x504 [mwifiex]
|  mwifiex_handle_event_ext_scan_report+0x19c/0x2f8 [mwifiex]
|  mwifiex_process_sta_event+0x298/0xf0c [mwifiex]
|  mwifiex_process_event+0x110/0x238 [mwifiex]
|  mwifiex_main_process+0x428/0xa44 [mwifiex]
|  mwifiex_sdio_interrupt+0x64/0x12c [mwifiex_sdio]
|  process_sdio_pending_irqs+0x64/0x1b8
|  sdio_irq_work+0x4c/0x7c
|  process_one_work+0x148/0x2a0
|  worker_thread+0x2fc/0x40c
|  kthread+0x110/0x114
|  ret_from_fork+0x10/0x20
| Code: a94153f3 a8c37bfd d50323bf d65f03c0 (f940a000)
| ---[ end trace 0000000000000000 ]---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
209,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-49767,n/a,n/a,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Werkzeug is a Web Server Gateway Interface web application library. Applications using `werkzeug.formparser.MultiPartParser` corresponding to a version of Werkzeug prior to 3.0.6 to parse `multipart/form-data` requests (e.g. all flask applications) are vulnerable to a relatively simple but effective resource exhaustion (denial of service) attack. A specifically crafted form submission request can cause the parser to allocate and block 3 to 8 times the upload size in main memory. There is no upper limit; a single upload at 1 Gbit/s can exhaust 32 GB of RAM in less than 60 seconds. Werkzeug version 3.0.6 fixes this issue.,pallets,werkzeug,< 3.0.6
219,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-39338,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,axios 1.7.2 allows SSRF via unexpected behavior where requests for path relative URLs get processed as protocol relative URLs.,n/a,n/a,n/a
227,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-41044,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ppp: reject claimed-as-LCP but actually malformed packets

Since 'ppp_async_encode()' assumes valid LCP packets (with code
from 1 to 7 inclusive), add 'ppp_check_packet()' to ensure that
LCP packet has an actual body beyond PPP_LCP header bytes, and
reject claimed-as-LCP but actually malformed data otherwise.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
226,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2022-3602,n/a,n/a,Buffer overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version as soon as possible. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects. Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6).",OpenSSL,OpenSSL,"Fixed in OpenSSL 3.0.7 (Affected 3.0.0,3.0.1,3.0.2,3.0.3,3.0.4,3.0.5,3.0.6)"
225,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-10768,n/a,n/a,Prototype Pollution,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,In AngularJS before 1.7.9 the function `merge()` could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.,n/a,AngularJS,All versions prior to version 1.7.9
224,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2021-21290,6.2,n/a,CWE-378: Creation of Temporary File With Insecure Permissions,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method ""File.createTempFile"" on unix-like systems creates a random file, but, by default will create this file with the permissions ""-rw-r--r--"". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's ""AbstractDiskHttpData"" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own ""java.io.tmpdir"" when you start the JVM or use ""DefaultHttpDataFactory.setBaseDir(...)"" to set the directory to something that is only readable by the current user.",netty,netty,< 4.1.59.Final
223,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40978,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qedi: Fix crash while reading debugfs attribute

The qedi_dbg_do_not_recover_cmd_read() function invokes sprintf() directly
on a __user pointer, which results into the crash.

To fix this issue, use a small local stack buffer for sprintf() and then
call simple_read_from_buffer(), which in turns make the copy_to_user()
call.

BUG: unable to handle page fault for address: 00007f4801111000
PGD 8000000864df6067 P4D 8000000864df6067 PUD 864df7067 PMD 846028067 PTE 0
Oops: 0002 [#1] PREEMPT SMP PTI
Hardware name: HPE ProLiant DL380 Gen10/ProLiant DL380 Gen10, BIOS U30 06/15/2023
RIP: 0010:memcpy_orig+0xcd/0x130
RSP: 0018:ffffb7a18c3ffc40 EFLAGS: 00010202
RAX: 00007f4801111000 RBX: 00007f4801111000 RCX: 000000000000000f
RDX: 000000000000000f RSI: ffffffffc0bfd7a0 RDI: 00007f4801111000
RBP: ffffffffc0bfd7a0 R08: 725f746f6e5f6f64 R09: 3d7265766f636572
R10: ffffb7a18c3ffd08 R11: 0000000000000000 R12: 00007f4881110fff
R13: 000000007fffffff R14: ffffb7a18c3ffca0 R15: ffffffffc0bfd7af
FS:  00007f480118a740(0000) GS:ffff98e38af00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f4801111000 CR3: 0000000864b8e001 CR4: 00000000007706e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <TASK>
 ? __die_body+0x1a/0x60
 ? page_fault_oops+0x183/0x510
 ? exc_page_fault+0x69/0x150
 ? asm_exc_page_fault+0x22/0x30
 ? memcpy_orig+0xcd/0x130
 vsnprintf+0x102/0x4c0
 sprintf+0x51/0x80
 qedi_dbg_do_not_recover_cmd_read+0x2f/0x50 [qedi 6bcfdeeecdea037da47069eca2ba717c84a77324]
 full_proxy_read+0x50/0x80
 vfs_read+0xa5/0x2e0
 ? folio_add_new_anon_rmap+0x44/0xa0
 ? set_pte_at+0x15/0x30
 ? do_pte_missing+0x426/0x7f0
 ksys_read+0xa5/0xe0
 do_syscall_64+0x58/0x80
 ? __count_memcg_events+0x46/0x90
 ? count_memcg_event_mm+0x3d/0x60
 ? handle_mm_fault+0x196/0x2f0
 ? do_user_addr_fault+0x267/0x890
 ? exc_page_fault+0x69/0x150
 entry_SYSCALL_64_after_hwframe+0x72/0xdc
RIP: 0033:0x7f4800f20b4d",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
222,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-39506,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

liquidio: Adjust a NULL pointer handling path in lio_vf_rep_copy_packet

In lio_vf_rep_copy_packet() pg_info->page is compared to a NULL value,
but then it is unconditionally passed to skb_add_rx_frag() which looks
strange and could lead to null pointer dereference.

lio_vf_rep_copy_packet() call trace looks like:
	octeon_droq_process_packets
	 octeon_droq_fast_process_packets
	  octeon_droq_dispatch_pkt
	   octeon_create_recv_info
	    ...search in the dispatch_list...
	     ->disp_fn(rdisp->rinfo, ...)
	      lio_vf_rep_pkt_recv(struct octeon_recv_info *recv_info, ...)
In this path there is no code which sets pg_info->page to NULL.
So this check looks unneeded and doesn't solve potential problem.
But I guess the author had reason to add a check and I have no such card
and can't do real test.
In addition, the code in the function liquidio_push_packet() in
liquidio/lio_core.c does exactly the same.

Based on this, I consider the most acceptable compromise solution to
adjust this issue by moving skb_add_rx_frag() into conditional scope.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55, 1f233f327913f3dee0602cba9c64df1903772b55"
221,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-41076,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

NFSv4: Fix memory leak in nfs4_set_security_label

We leak nfs_fattr and nfs4_label every time we set a security xattr.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
220,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-41055,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mm: prevent derefencing NULL ptr in pfn_section_valid()

Commit 5ec8e8ea8b77 (""mm/sparsemem: fix race in accessing
memory_section->usage"") changed pfn_section_valid() to add a READ_ONCE()
call around ""ms->usage"" to fix a race with section_deactivate() where
ms->usage can be cleared.  The READ_ONCE() call, by itself, is not enough
to prevent NULL pointer dereference.  We need to check its value before
dereferencing it.",Linux,Linux,"90ad17575d26874287271127d43ef3c2af876cea, b448de2459b6d62a53892487ab18b7d823ff0529, 68ed9e33324021e9d6b798e9db00ca3093d2012a, 70064241f2229f7ba7b9599a98f68d9142e81a97, 5ec8e8ea8b7783fab150cf86404fc38cb4db8800, 5ec8e8ea8b7783fab150cf86404fc38cb4db8800"
218,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-28863,6.5,n/a,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.,isaacs,node-tar,< 6.2.1
229,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26717,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

HID: i2c-hid-of: fix NULL-deref on failed power up

A while back the I2C HID implementation was split in an ACPI and OF
part, but the new OF driver never initialises the client pointer which
is dereferenced on power-up failures.",Linux,Linux,"b33752c300232d7f95dd9a4353947d0c9e6a0e52, b33752c300232d7f95dd9a4353947d0c9e6a0e52, b33752c300232d7f95dd9a4353947d0c9e6a0e52, b33752c300232d7f95dd9a4353947d0c9e6a0e52, b33752c300232d7f95dd9a4353947d0c9e6a0e52"
217,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-43800,5,Moyenne,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.,expressjs,serve-static,"< 1.16.0, >= 2.0.0, < 2.1.0"
216,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-27019,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: Fix potential data-race in __nft_obj_type_get()

nft_unregister_obj() can concurrent with __nft_obj_type_get(),
and there is not any protection when iterate over nf_tables_objects
list in __nft_obj_type_get(). Therefore, there is potential data-race
of nf_tables_objects list entry.

Use list_for_each_entry_rcu() to iterate over nf_tables_objects
list in __nft_obj_type_get(), and use rcu_read_lock() in the caller
nft_obj_type_get() to protect the entire type query process.",Linux,Linux,"e50092404c1bc7aaeb0a0f4077fa6f07b073a20f, e50092404c1bc7aaeb0a0f4077fa6f07b073a20f, e50092404c1bc7aaeb0a0f4077fa6f07b073a20f, e50092404c1bc7aaeb0a0f4077fa6f07b073a20f, e50092404c1bc7aaeb0a0f4077fa6f07b073a20f, e50092404c1bc7aaeb0a0f4077fa6f07b073a20f"
215,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42322,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

ipvs: properly dereference pe in ip_vs_add_service

Use pe directly to resolve sparse warning:

  net/netfilter/ipvs/ip_vs_ctl.c:1471:27: warning: dereference of noderef expression",Linux,Linux,"39b9722315364121c6e2524515a6e95d52287549, 39b9722315364121c6e2524515a6e95d52287549, 39b9722315364121c6e2524515a6e95d52287549, 39b9722315364121c6e2524515a6e95d52287549"
214,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-47874,n/a,n/a,CWE-770: Allocation of Resources Without Limits or Throttling,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Starlette is an Asynchronous Server Gateway Interface (ASGI) framework/toolkit. Prior to version 0.40.0, Starlette treats `multipart/form-data` parts without a `filename` as text form fields and buffers those in byte strings with no size limit. This allows an attacker to upload arbitrary large form fields and cause Starlette to both slow down significantly due to excessive memory allocations and copy operations, and also consume more and more memory until the server starts swapping and grinds to a halt, or the OS terminates the server process with an OOM error. Uploading multiple such requests in parallel may be enough to render a service practically unusable, even if reasonable request size limits are enforced by a reverse proxy in front of Starlette. This Denial of service (DoS) vulnerability affects all applications built with Starlette (or FastAPI) accepting form requests. Verison 0.40.0 fixes this issue.",encode,starlette,< 0.40.0
213,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-37890,7.5,Élevée,CWE-476: NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.",websockets,ws,">= 2.1.0, < 5.2.4, >= 6.0.0, < 6.2.3, >= 7.0.0, < 7.5.10, >= 8.0.0, < 8.17.1"
212,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-6119,n/a,n/a,CWE-843 Access of Resource Using Incompatible Type ('Type Confusion'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Issue summary: Applications performing certificate name checks (e.g., TLS
clients checking server certificates) may attempt to read an invalid memory
address resulting in abnormal termination of the application process.

Impact summary: Abnormal termination of an application can a cause a denial of
service.

Applications performing certificate name checks (e.g., TLS clients checking
server certificates) may attempt to read an invalid memory address when
comparing the expected name with an `otherName` subject alternative name of an
X.509 certificate. This may result in an exception that terminates the
application program.

Note that basic certificate chain validation (signatures, dates, ...) is not
affected, the denial of service can occur only when the application also
specifies an expected DNS name, Email address or IP address.

TLS servers rarely solicit client certificates, and even when they do, they
generally don't perform a name check against a reference identifier (expected
identity), but rather extract the presented identity after checking the
certificate chain.  So TLS servers are generally not affected and the severity
of the issue is Moderate.

The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",OpenSSL,OpenSSL,"3.3.0, 3.2.0, 3.1.0, 3.0.0"
211,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-10172,n/a,n/a,CWE-611,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.,Redhat,jackson-mapper-asl,1.9.x
210,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-22018,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"A vulnerability has been identified in Node.js, affecting users of the experimental permission model when the --allow-fs-read flag is used.
This flaw arises from an inadequate permission model that fails to restrict file stats through the fs.lstat API. As a result, malicious actors can retrieve stats from files that they do not have explicit read access to.
This vulnerability affects all users using the experimental permission model in Node.js 20 and Node.js 21.
Please note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.",Node.js,Node.js,"20.11.0, 21.6.1"
228,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-40958,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

netns: Make get_net_ns() handle zero refcount net

Syzkaller hit a warning:
refcount_t: addition on 0; use-after-free.
WARNING: CPU: 3 PID: 7890 at lib/refcount.c:25 refcount_warn_saturate+0xdf/0x1d0
Modules linked in:
CPU: 3 PID: 7890 Comm: tun Not tainted 6.10.0-rc3-00100-gcaa4f9578aba-dirty #310
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
RIP: 0010:refcount_warn_saturate+0xdf/0x1d0
Code: 41 49 04 31 ff 89 de e8 9f 1e cd fe 84 db 75 9c e8 76 26 cd fe c6 05 b6 41 49 04 01 90 48 c7 c7 b8 8e 25 86 e8 d2 05 b5 fe 90 <0f> 0b 90 90 e9 79 ff ff ff e8 53 26 cd fe 0f b6 1
RSP: 0018:ffff8881067b7da0 EFLAGS: 00010286
RAX: 0000000000000000 RBX: 0000000000000000 RCX: ffffffff811c72ac
RDX: ffff8881026a2140 RSI: ffffffff811c72b5 RDI: 0000000000000001
RBP: ffff8881067b7db0 R08: 0000000000000000 R09: 205b5d3730353139
R10: 0000000000000000 R11: 205d303938375420 R12: ffff8881086500c4
R13: ffff8881086500c4 R14: ffff8881086500b0 R15: ffff888108650040
FS:  00007f5b2961a4c0(0000) GS:ffff88823bd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000055d7ed36fd18 CR3: 00000001482f6000 CR4: 00000000000006f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 ? show_regs+0xa3/0xc0
 ? __warn+0xa5/0x1c0
 ? refcount_warn_saturate+0xdf/0x1d0
 ? report_bug+0x1fc/0x2d0
 ? refcount_warn_saturate+0xdf/0x1d0
 ? handle_bug+0xa1/0x110
 ? exc_invalid_op+0x3c/0xb0
 ? asm_exc_invalid_op+0x1f/0x30
 ? __warn_printk+0xcc/0x140
 ? __warn_printk+0xd5/0x140
 ? refcount_warn_saturate+0xdf/0x1d0
 get_net_ns+0xa4/0xc0
 ? __pfx_get_net_ns+0x10/0x10
 open_related_ns+0x5a/0x130
 __tun_chr_ioctl+0x1616/0x2370
 ? __sanitizer_cov_trace_switch+0x58/0xa0
 ? __sanitizer_cov_trace_const_cmp2+0x1c/0x30
 ? __pfx_tun_chr_ioctl+0x10/0x10
 tun_chr_ioctl+0x2f/0x40
 __x64_sys_ioctl+0x11b/0x160
 x64_sys_call+0x1211/0x20d0
 do_syscall_64+0x9e/0x1d0
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f5b28f165d7
Code: b3 66 90 48 8b 05 b1 48 2d 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 81 48 2d 00 8
RSP: 002b:00007ffc2b59c5e8 EFLAGS: 00000246 ORIG_RAX: 0000000000000010
RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007f5b28f165d7
RDX: 0000000000000000 RSI: 00000000000054e3 RDI: 0000000000000003
RBP: 00007ffc2b59c650 R08: 00007f5b291ed8c0 R09: 00007f5b2961a4c0
R10: 0000000029690010 R11: 0000000000000246 R12: 0000000000400730
R13: 00007ffc2b59cf40 R14: 0000000000000000 R15: 0000000000000000
 </TASK>
Kernel panic - not syncing: kernel: panic_on_warn set ...

This is trigger as below:
          ns0                                    ns1
tun_set_iff() //dev is tun0
   tun->dev = dev
//ip link set tun0 netns ns1
                                       put_net() //ref is 0
__tun_chr_ioctl() //TUNGETDEVNETNS
   net = dev_net(tun->dev);
   open_related_ns(&net->ns, get_net_ns); //ns1
     get_net_ns()
        get_net() //addition on 0

Use maybe_get_net() in get_net_ns in case net's ref is zero to fix this",Linux,Linux,"0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f, 0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f, 0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f, 0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f, 0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f, 0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f, 0c3e0e3bb623c3735b8c9ab8aa8332f944f83a9f"
230,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-26136,6.5,n/a,Prototype Pollution,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.,n/a,tough-cookie,0
250,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44984,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bnxt_en: Fix double DMA unmapping for XDP_REDIRECT

Remove the dma_unmap_page_attrs() call in the driver's XDP_REDIRECT
code path.  This should have been removed when we let the page pool
handle the DMA mapping.  This bug causes the warning:

WARNING: CPU: 7 PID: 59 at drivers/iommu/dma-iommu.c:1198 iommu_dma_unmap_page+0xd5/0x100
CPU: 7 PID: 59 Comm: ksoftirqd/7 Tainted: G        W          6.8.0-1010-gcp #11-Ubuntu
Hardware name: Dell Inc. PowerEdge R7525/0PYVT1, BIOS 2.15.2 04/02/2024
RIP: 0010:iommu_dma_unmap_page+0xd5/0x100
Code: 89 ee 48 89 df e8 cb f2 69 ff 48 83 c4 08 5b 41 5c 41 5d 41 5e 41 5f 5d 31 c0 31 d2 31 c9 31 f6 31 ff 45 31 c0 e9 ab 17 71 00 <0f> 0b 48 83 c4 08 5b 41 5c 41 5d 41 5e 41 5f 5d 31 c0 31 d2 31 c9
RSP: 0018:ffffab1fc0597a48 EFLAGS: 00010246
RAX: 0000000000000000 RBX: ffff99ff838280c8 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
RBP: ffffab1fc0597a78 R08: 0000000000000002 R09: ffffab1fc0597c1c
R10: ffffab1fc0597cd3 R11: ffff99ffe375acd8 R12: 00000000e65b9000
R13: 0000000000000050 R14: 0000000000001000 R15: 0000000000000002
FS:  0000000000000000(0000) GS:ffff9a06efb80000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000565c34c37210 CR3: 00000005c7e3e000 CR4: 0000000000350ef0
? show_regs+0x6d/0x80
? __warn+0x89/0x150
? iommu_dma_unmap_page+0xd5/0x100
? report_bug+0x16a/0x190
? handle_bug+0x51/0xa0
? exc_invalid_op+0x18/0x80
? iommu_dma_unmap_page+0xd5/0x100
? iommu_dma_unmap_page+0x35/0x100
dma_unmap_page_attrs+0x55/0x220
? bpf_prog_4d7e87c0d30db711_xdp_dispatcher+0x64/0x9f
bnxt_rx_xdp+0x237/0x520 [bnxt_en]
bnxt_rx_pkt+0x640/0xdd0 [bnxt_en]
__bnxt_poll_work+0x1a1/0x3d0 [bnxt_en]
bnxt_poll+0xaa/0x1e0 [bnxt_en]
__napi_poll+0x33/0x1e0
net_rx_action+0x18a/0x2f0",Linux,Linux,"578fcfd26e2a1d0e687b347057959228567e2af8, 578fcfd26e2a1d0e687b347057959228567e2af8, 578fcfd26e2a1d0e687b347057959228567e2af8"
241,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-16869,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a ""Transfer-Encoding : chunked"" line), which leads to HTTP request smuggling.",n/a,n/a,n/a
249,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43907,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu/pm: Fix the null pointer dereference in apply_state_adjust_rules

Check the pointer value to fix potential null pointer
dereference",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
248,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-35827,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,An issue was discovered in the Linux kernel through 6.3.8. A use-after-free was found in ravb_remove in drivers/net/ethernet/renesas/ravb_main.c.,n/a,n/a,n/a
247,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42274,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Revert ""ALSA: firewire-lib: operate for period elapse event in process context""

Commit 7ba5ca32fe6e (""ALSA: firewire-lib: operate for period elapse event
in process context"") removed the process context workqueue from
amdtp_domain_stream_pcm_pointer() and update_pcm_pointers() to remove
its overhead.

With RME Fireface 800, this lead to a regression since
Kernels 5.14.0, causing an AB/BA deadlock competition for the
substream lock with eventual system freeze under ALSA operation:

thread 0:
    * (lock A) acquire substream lock by
	snd_pcm_stream_lock_irq() in
	snd_pcm_status64()
    * (lock B) wait for tasklet to finish by calling
    	tasklet_unlock_spin_wait() in
	tasklet_disable_in_atomic() in
	ohci_flush_iso_completions() of ohci.c

thread 1:
    * (lock B) enter tasklet
    * (lock A) attempt to acquire substream lock,
    	waiting for it to be released:
	snd_pcm_stream_lock_irqsave() in
    	snd_pcm_period_elapsed() in
	update_pcm_pointers() in
	process_ctx_payloads() in
	process_rx_packets() of amdtp-stream.c

? tasklet_unlock_spin_wait
 </NMI>
 <TASK>
ohci_flush_iso_completions firewire_ohci
amdtp_domain_stream_pcm_pointer snd_firewire_lib
snd_pcm_update_hw_ptr0 snd_pcm
snd_pcm_status64 snd_pcm

? native_queued_spin_lock_slowpath
 </NMI>
 <IRQ>
_raw_spin_lock_irqsave
snd_pcm_period_elapsed snd_pcm
process_rx_packets snd_firewire_lib
irq_target_callback snd_firewire_lib
handle_it_packet firewire_ohci
context_tasklet firewire_ohci

Restore the process context work queue to prevent deadlock
AB/BA deadlock competition for ALSA substream lock of
snd_pcm_stream_lock_irq() in snd_pcm_status64()
and snd_pcm_stream_lock_irqsave() in snd_pcm_period_elapsed().

revert commit 7ba5ca32fe6e (""ALSA: firewire-lib: operate for period
elapse event in process context"")

Replace inline description to prevent future deadlock.",Linux,Linux,"7ba5ca32fe6e8d2e153fb5602997336517b34743, 7ba5ca32fe6e8d2e153fb5602997336517b34743, 7ba5ca32fe6e8d2e153fb5602997336517b34743, 7ba5ca32fe6e8d2e153fb5602997336517b34743, 7ba5ca32fe6e8d2e153fb5602997336517b34743"
246,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2019-20445,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.",n/a,n/a,n/a
245,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-27011,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: fix memleak in map from abort path

The delete set command does not rely on the transaction object for
element removal, therefore, a combination of delete element + delete set
from the abort path could result in restoring twice the refcount of the
mapping.

Check for inactive element in the next generation for the delete element
command in the abort path, skip restoring state if next generation bit
has been already cleared. This is similar to the activate logic using
the set walk iterator.

[ 6170.286929] ------------[ cut here ]------------
[ 6170.286939] WARNING: CPU: 6 PID: 790302 at net/netfilter/nf_tables_api.c:2086 nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]
[ 6170.287071] Modules linked in: [...]
[ 6170.287633] CPU: 6 PID: 790302 Comm: kworker/6:2 Not tainted 6.9.0-rc3+ #365
[ 6170.287768] RIP: 0010:nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]
[ 6170.287886] Code: df 48 8d 7d 58 e8 69 2e 3b df 48 8b 7d 58 e8 80 1b 37 df 48 8d 7d 68 e8 57 2e 3b df 48 8b 7d 68 e8 6e 1b 37 df 48 89 ef eb c4 <0f> 0b 48 83 c4 08 5b 5d 41 5c 41 5d 41 5e 41 5f c3 cc cc cc cc 0f
[ 6170.287895] RSP: 0018:ffff888134b8fd08 EFLAGS: 00010202
[ 6170.287904] RAX: 0000000000000001 RBX: ffff888125bffb28 RCX: dffffc0000000000
[ 6170.287912] RDX: 0000000000000003 RSI: ffffffffa20298ab RDI: ffff88811ebe4750
[ 6170.287919] RBP: ffff88811ebe4700 R08: ffff88838e812650 R09: fffffbfff0623a55
[ 6170.287926] R10: ffffffff8311d2af R11: 0000000000000001 R12: ffff888125bffb10
[ 6170.287933] R13: ffff888125bffb10 R14: dead000000000122 R15: dead000000000100
[ 6170.287940] FS:  0000000000000000(0000) GS:ffff888390b00000(0000) knlGS:0000000000000000
[ 6170.287948] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 6170.287955] CR2: 00007fd31fc00710 CR3: 0000000133f60004 CR4: 00000000001706f0
[ 6170.287962] Call Trace:
[ 6170.287967]  <TASK>
[ 6170.287973]  ? __warn+0x9f/0x1a0
[ 6170.287986]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]
[ 6170.288092]  ? report_bug+0x1b1/0x1e0
[ 6170.287986]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]
[ 6170.288092]  ? report_bug+0x1b1/0x1e0
[ 6170.288104]  ? handle_bug+0x3c/0x70
[ 6170.288112]  ? exc_invalid_op+0x17/0x40
[ 6170.288120]  ? asm_exc_invalid_op+0x1a/0x20
[ 6170.288132]  ? nf_tables_chain_destroy+0x2b/0x220 [nf_tables]
[ 6170.288243]  ? nf_tables_chain_destroy+0x1f7/0x220 [nf_tables]
[ 6170.288366]  ? nf_tables_chain_destroy+0x2b/0x220 [nf_tables]
[ 6170.288483]  nf_tables_trans_destroy_work+0x588/0x590 [nf_tables]",Linux,Linux,"591054469b3eef34bc097c30fae8ededddf8d796, 591054469b3eef34bc097c30fae8ededddf8d796, 591054469b3eef34bc097c30fae8ededddf8d796"
244,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-24789,n/a,n/a,CWE-390: Detection of Error Condition Without Action,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.,Go standard library,archive/zip,"0, 1.22.0-0"
243,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42237,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

firmware: cs_dsp: Validate payload length before processing block

Move the payload length check in cs_dsp_load() and cs_dsp_coeff_load()
to be done before the block is processed.

The check that the length of a block payload does not exceed the number
of remaining bytes in the firwmware file buffer was being done near the
end of the loop iteration. However, some code before that check used the
length field without validating it.",Linux,Linux,"f6bc909e7673c30abcbdb329e7d0aa2e83c103d7, f6bc909e7673c30abcbdb329e7d0aa2e83c103d7, f6bc909e7673c30abcbdb329e7d0aa2e83c103d7, f6bc909e7673c30abcbdb329e7d0aa2e83c103d7"
242,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2022-21681,7.5,Élevée,CWE-400: Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",markedjs,marked,< 4.0.10
240,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-26855,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

net: ice: Fix potential NULL pointer dereference in ice_bridge_setlink()

The function ice_bridge_setlink() may encounter a NULL pointer dereference
if nlmsg_find_attr() returns NULL and br_spec is dereferenced subsequently
in nla_for_each_nested(). To address this issue, add a check to ensure that
br_spec is not NULL before proceeding with the nested attribute iteration.",Linux,Linux,"b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2, b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2, b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2, b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2, b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2, b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2, b1edc14a3fbfe0154a2aecb8bb9775c3012cb6e2"
231,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-42152,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

nvmet: fix a possible leak when destroy a ctrl during qp establishment

In nvmet_sq_destroy we capture sq->ctrl early and if it is non-NULL we
know that a ctrl was allocated (in the admin connect request handler)
and we need to release pending AERs, clear ctrl->sqs and sq->ctrl
(for nvme-loop primarily), and drop the final reference on the ctrl.

However, a small window is possible where nvmet_sq_destroy starts (as
a result of the client giving up and disconnecting) concurrently with
the nvme admin connect cmd (which may be in an early stage). But *before*
kill_and_confirm of sq->ref (i.e. the admin connect managed to get an sq
live reference). In this case, sq->ctrl was allocated however after it was
captured in a local variable in nvmet_sq_destroy.
This prevented the final reference drop on the ctrl.

Solve this by re-capturing the sq->ctrl after all inflight request has
completed, where for sure sq->ctrl reference is final, and move forward
based on that.

This issue was observed in an environment with many hosts connecting
multiple ctrls simoutanuosly, creating a delay in allocating a ctrl
leading up to this race window.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
239,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-36000,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mm/hugetlb: fix missing hugetlb_lock for resv uncharge

There is a recent report on UFFDIO_COPY over hugetlb:

https://lore.kernel.org/all/000000000000ee06de0616177560@google.com/

350:	lockdep_assert_held(&hugetlb_lock);

Should be an issue in hugetlb but triggered in an userfault context, where
it goes into the unlikely path where two threads modifying the resv map
together.  Mike has a fix in that path for resv uncharge but it looks like
the locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()
will update the cgroup pointer, so it requires to be called with the lock
held.",Linux,Linux,"79aa925bf239c234be8586780e482872dc4690dd, 79aa925bf239c234be8586780e482872dc4690dd, 79aa925bf239c234be8586780e482872dc4690dd, 79aa925bf239c234be8586780e482872dc4690dd"
238,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52530,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: fix potential key use-after-free

When ieee80211_key_link() is called by ieee80211_gtk_rekey_add()
but returns 0 due to KRACK protection (identical key reinstall),
ieee80211_gtk_rekey_add() will still return a pointer into the
key, in a potential use-after-free. This normally doesn't happen
since it's only called by iwlwifi in case of WoWLAN rekey offload
which has its own KRACK protection, but still better to fix, do
that by returning an error code and converting that to success on
the cfg80211 boundary only, leaving the error for bad callers of
ieee80211_gtk_rekey_add().",Linux,Linux,"fdf7cb4185b60c68e1a75e61691c4afdc15dea0e, fdf7cb4185b60c68e1a75e61691c4afdc15dea0e, fdf7cb4185b60c68e1a75e61691c4afdc15dea0e, fdf7cb4185b60c68e1a75e61691c4afdc15dea0e, fdf7cb4185b60c68e1a75e61691c4afdc15dea0e, fdf7cb4185b60c68e1a75e61691c4afdc15dea0e"
237,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-34155,n/a,n/a,CWE-674: Uncontrolled Recursion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.,Go standard library,go/parser,"0, 1.23.0-0"
236,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-41064,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/eeh: avoid possible crash when edev->pdev changes

If a PCI device is removed during eeh_pe_report_edev(), edev->pdev
will change and can cause a crash, hold the PCI rescan/remove lock
while taking a copy of edev->pdev->bus.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
235,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52463,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

efivarfs: force RO when remounting if SetVariable is not supported

If SetVariable at runtime is not supported by the firmware we never assign
a callback for that function. At the same time mount the efivarfs as
RO so no one can call that.  However, we never check the permission flags
when someone remounts the filesystem as RW. As a result this leads to a
crash looking like this:

$ mount -o remount,rw /sys/firmware/efi/efivars
$ efi-updatevar -f PK.auth PK

[  303.279166] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
[  303.280482] Mem abort info:
[  303.280854]   ESR = 0x0000000086000004
[  303.281338]   EC = 0x21: IABT (current EL), IL = 32 bits
[  303.282016]   SET = 0, FnV = 0
[  303.282414]   EA = 0, S1PTW = 0
[  303.282821]   FSC = 0x04: level 0 translation fault
[  303.283771] user pgtable: 4k pages, 48-bit VAs, pgdp=000000004258c000
[  303.284913] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
[  303.286076] Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP
[  303.286936] Modules linked in: qrtr tpm_tis tpm_tis_core crct10dif_ce arm_smccc_trng rng_core drm fuse ip_tables x_tables ipv6
[  303.288586] CPU: 1 PID: 755 Comm: efi-updatevar Not tainted 6.3.0-rc1-00108-gc7d0c4695c68 #1
[  303.289748] Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.04-00627-g88336918701d 04/01/2023
[  303.291150] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[  303.292123] pc : 0x0
[  303.292443] lr : efivar_set_variable_locked+0x74/0xec
[  303.293156] sp : ffff800008673c10
[  303.293619] x29: ffff800008673c10 x28: ffff0000037e8000 x27: 0000000000000000
[  303.294592] x26: 0000000000000800 x25: ffff000002467400 x24: 0000000000000027
[  303.295572] x23: ffffd49ea9832000 x22: ffff0000020c9800 x21: ffff000002467000
[  303.296566] x20: 0000000000000001 x19: 00000000000007fc x18: 0000000000000000
[  303.297531] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaac807ab54
[  303.298495] x14: ed37489f673633c0 x13: 71c45c606de13f80 x12: 47464259e219acf4
[  303.299453] x11: ffff000002af7b01 x10: 0000000000000003 x9 : 0000000000000002
[  303.300431] x8 : 0000000000000010 x7 : ffffd49ea8973230 x6 : 0000000000a85201
[  303.301412] x5 : 0000000000000000 x4 : ffff0000020c9800 x3 : 00000000000007fc
[  303.302370] x2 : 0000000000000027 x1 : ffff000002467400 x0 : ffff000002467000
[  303.303341] Call trace:
[  303.303679]  0x0
[  303.303938]  efivar_entry_set_get_size+0x98/0x16c
[  303.304585]  efivarfs_file_write+0xd0/0x1a4
[  303.305148]  vfs_write+0xc4/0x2e4
[  303.305601]  ksys_write+0x70/0x104
[  303.306073]  __arm64_sys_write+0x1c/0x28
[  303.306622]  invoke_syscall+0x48/0x114
[  303.307156]  el0_svc_common.constprop.0+0x44/0xec
[  303.307803]  do_el0_svc+0x38/0x98
[  303.308268]  el0_svc+0x2c/0x84
[  303.308702]  el0t_64_sync_handler+0xf4/0x120
[  303.309293]  el0t_64_sync+0x190/0x194
[  303.309794] Code: ???????? ???????? ???????? ???????? (????????)
[  303.310612] ---[ end trace 0000000000000000 ]---

Fix this by adding a .reconfigure() function to the fs operations which
we can use to check the requested flags and deny anything that's not RO
if the firmware doesn't implement SetVariable at runtime.",Linux,Linux,"f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed"
234,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2023-52476,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

perf/x86/lbr: Filter vsyscall addresses

We found that a panic can occur when a vsyscall is made while LBR sampling
is active. If the vsyscall is interrupted (NMI) for perf sampling, this
call sequence can occur (most recent at top):

    __insn_get_emulate_prefix()
    insn_get_emulate_prefix()
    insn_get_prefixes()
    insn_get_opcode()
    decode_branch_type()
    get_branch_type()
    intel_pmu_lbr_filter()
    intel_pmu_handle_irq()
    perf_event_nmi_handler()

Within __insn_get_emulate_prefix() at frame 0, a macro is called:

    peek_nbyte_next(insn_byte_t, insn, i)

Within this macro, this dereference occurs:

    (insn)->next_byte

Inspecting registers at this point, the value of the next_byte field is the
address of the vsyscall made, for example the location of the vsyscall
version of gettimeofday() at 0xffffffffff600000. The access to an address
in the vsyscall region will trigger an oops due to an unhandled page fault.

To fix the bug, filtering for vsyscalls can be done when
determining the branch type. This patch will return
a ""none"" branch if a kernel address if found to lie in the
vsyscall region.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
233,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-36006,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

mlxsw: spectrum_acl_tcam: Fix incorrect list API usage

Both the function that migrates all the chunks within a region and the
function that migrates all the entries within a chunk call
list_first_entry() on the respective lists without checking that the
lists are not empty. This is incorrect usage of the API, which leads to
the following warning [1].

Fix by returning if the lists are empty as there is nothing to migrate
in this case.

[1]
WARNING: CPU: 0 PID: 6437 at drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:1266 mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1/0>
Modules linked in:
CPU: 0 PID: 6437 Comm: kworker/0:37 Not tainted 6.9.0-rc3-custom-00883-g94a65f079ef6 #39
Hardware name: Mellanox Technologies Ltd. MSN3700/VMOD0005, BIOS 5.11 01/06/2019
Workqueue: mlxsw_core mlxsw_sp_acl_tcam_vregion_rehash_work
RIP: 0010:mlxsw_sp_acl_tcam_vchunk_migrate_all+0x1f1/0x2c0
[...]
Call Trace:
 <TASK>
 mlxsw_sp_acl_tcam_vregion_rehash_work+0x6c/0x4a0
 process_one_work+0x151/0x370
 worker_thread+0x2cb/0x3e0
 kthread+0xd0/0x100
 ret_from_fork+0x34/0x50
 ret_from_fork_asm+0x1a/0x30
 </TASK>",Linux,Linux,"6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf, 6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf, 6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf, 6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf, 6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf, 6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf, 6f9579d4e3021b17b0a4cde6b04a6c94c9575cdf"
232,Multiples vulnérabilités dans les produits IBM ,Avis,2025-01-10,CVE-2024-39499,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0021/,"In the Linux kernel, the following vulnerability has been resolved:

vmci: prevent speculation leaks by sanitizing event in event_deliver()

Coverity spotted that event_msg is controlled by user-space,
event_msg->event_data.event is passed to event_deliver() and used
as an index without sanitization.

This change ensures that the event index is sanitized to mitigate any
possibility of speculative information leaks.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.

Only compile tested, no access to HW.",Linux,Linux,"1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a, 1d990201f9bb499b7c76ab00abeb7e803c0bcb2a"
471,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49983,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: drop ppath from ext4_ext_replay_update_ex() to avoid double-free

When calling ext4_force_split_extent_at() in ext4_ext_replay_update_ex(),
the 'ppath' is updated but it is the 'path' that is freed, thus potentially
triggering a double-free in the following process:

ext4_ext_replay_update_ex
  ppath = path
  ext4_force_split_extent_at(&ppath)
    ext4_split_extent_at
      ext4_ext_insert_extent
        ext4_ext_create_new_leaf
          ext4_ext_grow_indepth
            ext4_find_extent
              if (depth > path[0].p_maxdepth)
                kfree(path)                 ---> path First freed
                *orig_path = path = NULL    ---> null ppath
  kfree(path)                               ---> path double-free !!!

So drop the unnecessary ppath and use path directly to avoid this problem.
And use ext4_find_extent() directly to update path, avoiding unnecessary
memory allocation and freeing. Also, propagate the error returned by
ext4_find_extent() instead of using strange error codes.",Linux,Linux,"8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2, 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2"
378,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46819,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: the warning dereferencing obj for nbio_v7_4

if ras_manager obj null, don't print NBIO err data",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
473,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41072,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: wext: add extra SIOCSIWSCAN data check

In 'cfg80211_wext_siwscan()', add extra check whether number of
channels passed via 'ioctl(sock, SIOCSIWSCAN, ...)' doesn't exceed
IW_MAX_FREQUENCIES and reject invalid request with -EINVAL otherwise.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
649,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49966,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: cancel dqi_sync_work before freeing oinfo

ocfs2_global_read_info() will initialize and schedule dqi_sync_work at the
end, if error occurs after successfully reading global quota, it will
trigger the following warning with CONFIG_DEBUG_OBJECTS_* enabled:

ODEBUG: free active (active state 0) object: 00000000d8b0ce28 object type: timer_list hint: qsync_work_fn+0x0/0x16c

This reports that there is an active delayed work when freeing oinfo in
error handling, so cancel dqi_sync_work first.  BTW, return status instead
of -1 when .read_file_info fails.",Linux,Linux,"171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475, 171bf93ce11f4c9929fdce6ce63df8da2f3c4475"
713,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43910,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: add missing check_func_arg_reg_off() to prevent out-of-bounds memory accesses

Currently, it's possible to pass in a modified CONST_PTR_TO_DYNPTR to
a global function as an argument. The adverse effects of this is that
BPF helpers can continue to make use of this modified
CONST_PTR_TO_DYNPTR from within the context of the global function,
which can unintentionally result in out-of-bounds memory accesses and
therefore compromise overall system stability i.e.

[  244.157771] BUG: KASAN: slab-out-of-bounds in bpf_dynptr_data+0x137/0x140
[  244.161345] Read of size 8 at addr ffff88810914be68 by task test_progs/302
[  244.167151] CPU: 0 PID: 302 Comm: test_progs Tainted: G O E 6.10.0-rc3-00131-g66b586715063 #533
[  244.174318] Call Trace:
[  244.175787]  <TASK>
[  244.177356]  dump_stack_lvl+0x66/0xa0
[  244.179531]  print_report+0xce/0x670
[  244.182314]  ? __virt_addr_valid+0x200/0x3e0
[  244.184908]  kasan_report+0xd7/0x110
[  244.187408]  ? bpf_dynptr_data+0x137/0x140
[  244.189714]  ? bpf_dynptr_data+0x137/0x140
[  244.192020]  bpf_dynptr_data+0x137/0x140
[  244.194264]  bpf_prog_b02a02fdd2bdc5fa_global_call_bpf_dynptr_data+0x22/0x26
[  244.198044]  bpf_prog_b0fe7b9d7dc3abde_callback_adjust_bpf_dynptr_reg_off+0x1f/0x23
[  244.202136]  bpf_user_ringbuf_drain+0x2c7/0x570
[  244.204744]  ? 0xffffffffc0009e58
[  244.206593]  ? __pfx_bpf_user_ringbuf_drain+0x10/0x10
[  244.209795]  bpf_prog_33ab33f6a804ba2d_user_ringbuf_callback_const_ptr_to_dynptr_reg_off+0x47/0x4b
[  244.215922]  bpf_trampoline_6442502480+0x43/0xe3
[  244.218691]  __x64_sys_prlimit64+0x9/0xf0
[  244.220912]  do_syscall_64+0xc1/0x1d0
[  244.223043]  entry_SYSCALL_64_after_hwframe+0x77/0x7f
[  244.226458] RIP: 0033:0x7ffa3eb8f059
[  244.228582] Code: 08 89 e8 5b 5d c3 66 2e 0f 1f 84 00 00 00 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 8f 1d 0d 00 f7 d8 64 89 01 48
[  244.241307] RSP: 002b:00007ffa3e9c6eb8 EFLAGS: 00000206 ORIG_RAX: 000000000000012e
[  244.246474] RAX: ffffffffffffffda RBX: 00007ffa3e9c7cdc RCX: 00007ffa3eb8f059
[  244.250478] RDX: 00007ffa3eb162b4 RSI: 0000000000000000 RDI: 00007ffa3e9c7fb0
[  244.255396] RBP: 00007ffa3e9c6ed0 R08: 00007ffa3e9c76c0 R09: 0000000000000000
[  244.260195] R10: 0000000000000000 R11: 0000000000000206 R12: ffffffffffffff80
[  244.264201] R13: 000000000000001c R14: 00007ffc5d6b4260 R15: 00007ffa3e1c7000
[  244.268303]  </TASK>

Add a check_func_arg_reg_off() to the path in which the BPF verifier
verifies the arguments of global function arguments, specifically
those which take an argument of type ARG_PTR_TO_DYNPTR |
MEM_RDONLY. Also, process_dynptr_func() doesn't appear to perform any
explicit and strict type matching on the supplied register type, so
let's also enforce that a register either type PTR_TO_STACK or
CONST_PTR_TO_DYNPTR is by the caller.",Linux,Linux,"a64bfe618665ea9c722f922cba8c6e3234eac5ac, a64bfe618665ea9c722f922cba8c6e3234eac5ac"
712,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52434,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix potential OOBs in smb2_parse_contexts()

Validate offsets and lengths before dereferencing create contexts in
smb2_parse_contexts().

This fixes following oops when accessing invalid create contexts from
server:

  BUG: unable to handle page fault for address: ffff8881178d8cc3
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 4a01067 P4D 4a01067 PUD 0
  Oops: 0000 [#1] PREEMPT SMP NOPTI
  CPU: 3 PID: 1736 Comm: mount.cifs Not tainted 6.7.0-rc4 #1
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS
  rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014
  RIP: 0010:smb2_parse_contexts+0xa0/0x3a0 [cifs]
  Code: f8 10 75 13 48 b8 93 ad 25 50 9c b4 11 e7 49 39 06 0f 84 d2 00
  00 00 8b 45 00 85 c0 74 61 41 29 c5 48 01 c5 41 83 fd 0f 76 55 <0f> b7
  7d 04 0f b7 45 06 4c 8d 74 3d 00 66 83 f8 04 75 bc ba 04 00
  RSP: 0018:ffffc900007939e0 EFLAGS: 00010216
  RAX: ffffc90000793c78 RBX: ffff8880180cc000 RCX: ffffc90000793c90
  RDX: ffffc90000793cc0 RSI: ffff8880178d8cc0 RDI: ffff8880180cc000
  RBP: ffff8881178d8cbf R08: ffffc90000793c22 R09: 0000000000000000
  R10: ffff8880180cc000 R11: 0000000000000024 R12: 0000000000000000
  R13: 0000000000000020 R14: 0000000000000000 R15: ffffc90000793c22
  FS: 00007f873753cbc0(0000) GS:ffff88806bc00000(0000)
  knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: ffff8881178d8cc3 CR3: 00000000181ca000 CR4: 0000000000750ef0
  PKRU: 55555554
  Call Trace:
   <TASK>
   ? __die+0x23/0x70
   ? page_fault_oops+0x181/0x480
   ? search_module_extables+0x19/0x60
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? exc_page_fault+0x1b6/0x1c0
   ? asm_exc_page_fault+0x26/0x30
   ? smb2_parse_contexts+0xa0/0x3a0 [cifs]
   SMB2_open+0x38d/0x5f0 [cifs]
   ? smb2_is_path_accessible+0x138/0x260 [cifs]
   smb2_is_path_accessible+0x138/0x260 [cifs]
   cifs_is_path_remote+0x8d/0x230 [cifs]
   cifs_mount+0x7e/0x350 [cifs]
   cifs_smb3_do_mount+0x128/0x780 [cifs]
   smb3_get_tree+0xd9/0x290 [cifs]
   vfs_get_tree+0x2c/0x100
   ? capable+0x37/0x70
   path_mount+0x2d7/0xb80
   ? srso_alias_return_thunk+0x5/0xfbef5
   ? _raw_spin_unlock_irqrestore+0x44/0x60
   __x64_sys_mount+0x11a/0x150
   do_syscall_64+0x47/0xf0
   entry_SYSCALL_64_after_hwframe+0x6f/0x77
  RIP: 0033:0x7f8737657b1e",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
711,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50001,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix error path in multi-packet WQE transmit

Remove the erroneous unmap in case no DMA mapping was established

The multi-packet WQE transmit code attempts to obtain a DMA mapping for
the skb. This could fail, e.g. under memory pressure, when the IOMMU
driver just can't allocate more memory for page tables. While the code
tries to handle this in the path below the err_unmap label it erroneously
unmaps one entry from the sq's FIFO list of active mappings. Since the
current map attempt failed this unmap is removing some random DMA mapping
that might still be required. If the PCI function now presents that IOVA,
the IOMMU may assumes a rogue DMA access and e.g. on s390 puts the PCI
function in error state.

The erroneous behavior was seen in a stress-test environment that created
memory pressure.",Linux,Linux,"5af75c747e2a868abbf8611494b50ed5e076fca7, 5af75c747e2a868abbf8611494b50ed5e076fca7, 5af75c747e2a868abbf8611494b50ed5e076fca7, 5af75c747e2a868abbf8611494b50ed5e076fca7, 5af75c747e2a868abbf8611494b50ed5e076fca7, 5af75c747e2a868abbf8611494b50ed5e076fca7, 5af75c747e2a868abbf8611494b50ed5e076fca7"
710,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49985,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i2c: stm32f7: Do not prepare/unprepare clock during runtime suspend/resume

In case there is any sort of clock controller attached to this I2C bus
controller, for example Versaclock or even an AIC32x4 I2C codec, then
an I2C transfer triggered from the clock controller clk_ops .prepare
callback may trigger a deadlock on drivers/clk/clk.c prepare_lock mutex.

This is because the clock controller first grabs the prepare_lock mutex
and then performs the prepare operation, including its I2C access. The
I2C access resumes this I2C bus controller via .runtime_resume callback,
which calls clk_prepare_enable(), which attempts to grab the prepare_lock
mutex again and deadlocks.

Since the clock are already prepared since probe() and unprepared in
remove(), use simple clk_enable()/clk_disable() calls to enable and
disable the clock on runtime suspend and resume, to avoid hitting the
prepare_lock mutex.",Linux,Linux,"4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf, 4e7bca6fc07bf9526d797b9787dcb21e40cd10cf"
709,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41071,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: Avoid address calculations via out of bounds array indexing

req->n_channels must be set before req->channels[] can be used.

This patch fixes one of the issues encountered in [1].

[   83.964255] UBSAN: array-index-out-of-bounds in net/mac80211/scan.c:364:4
[   83.964258] index 0 is out of range for type 'struct ieee80211_channel *[]'
[...]
[   83.964264] Call Trace:
[   83.964267]  <TASK>
[   83.964269]  dump_stack_lvl+0x3f/0xc0
[   83.964274]  __ubsan_handle_out_of_bounds+0xec/0x110
[   83.964278]  ieee80211_prep_hw_scan+0x2db/0x4b0
[   83.964281]  __ieee80211_start_scan+0x601/0x990
[   83.964291]  nl80211_trigger_scan+0x874/0x980
[   83.964295]  genl_family_rcv_msg_doit+0xe8/0x160
[   83.964298]  genl_rcv_msg+0x240/0x270
[...]

[1] https://bugzilla.kernel.org/show_bug.cgi?id=218810",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
708,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46838,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

userfaultfd: don't BUG_ON() if khugepaged yanks our page table

Since khugepaged was changed to allow retracting page tables in file
mappings without holding the mmap lock, these BUG_ON()s are wrong - get
rid of them.

We could also remove the preceding ""if (unlikely(...))"" block, but then we
could reach pte_offset_map_lock() with transhuge pages not just for file
mappings but also for anonymous mappings - which would probably be fine
but I think is not necessarily expected.",Linux,Linux,"1d65b771bc08cd054cf6d3766a72e113dc46d62f, 1d65b771bc08cd054cf6d3766a72e113dc46d62f, 1d65b771bc08cd054cf6d3766a72e113dc46d62f"
707,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47671,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

USB: usbtmc: prevent kernel-usb-infoleak

The syzbot reported a kernel-usb-infoleak in usbtmc_write,
we need to clear the structure before filling fields.",Linux,Linux,"4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775, 4ddc645f40e90fa3bc7af3a3f3bd7d29e671a775"
706,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49867,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: wait for fixup workers before stopping cleaner kthread during umount

During unmount, at close_ctree(), we have the following steps in this order:

1) Park the cleaner kthread - this doesn't destroy the kthread, it basically
   halts its execution (wake ups against it work but do nothing);

2) We stop the cleaner kthread - this results in freeing the respective
   struct task_struct;

3) We call btrfs_stop_all_workers() which waits for any jobs running in all
   the work queues and then free the work queues.

Syzbot reported a case where a fixup worker resulted in a crash when doing
a delayed iput on its inode while attempting to wake up the cleaner at
btrfs_add_delayed_iput(), because the task_struct of the cleaner kthread
was already freed. This can happen during unmount because we don't wait
for any fixup workers still running before we call kthread_stop() against
the cleaner kthread, which stops and free all its resources.

Fix this by waiting for any fixup workers at close_ctree() before we call
kthread_stop() against the cleaner and run pending delayed iputs.

The stack traces reported by syzbot were the following:

  BUG: KASAN: slab-use-after-free in __lock_acquire+0x77/0x2050 kernel/locking/lockdep.c:5065
  Read of size 8 at addr ffff8880272a8a18 by task kworker/u8:3/52

  CPU: 1 UID: 0 PID: 52 Comm: kworker/u8:3 Not tainted 6.12.0-rc1-syzkaller #0
  Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024
  Workqueue: btrfs-fixup btrfs_work_helper
  Call Trace:
   <TASK>
   __dump_stack lib/dump_stack.c:94 [inline]
   dump_stack_lvl+0x241/0x360 lib/dump_stack.c:120
   print_address_description mm/kasan/report.c:377 [inline]
   print_report+0x169/0x550 mm/kasan/report.c:488
   kasan_report+0x143/0x180 mm/kasan/report.c:601
   __lock_acquire+0x77/0x2050 kernel/locking/lockdep.c:5065
   lock_acquire+0x1ed/0x550 kernel/locking/lockdep.c:5825
   __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:110 [inline]
   _raw_spin_lock_irqsave+0xd5/0x120 kernel/locking/spinlock.c:162
   class_raw_spinlock_irqsave_constructor include/linux/spinlock.h:551 [inline]
   try_to_wake_up+0xb0/0x1480 kernel/sched/core.c:4154
   btrfs_writepage_fixup_worker+0xc16/0xdf0 fs/btrfs/inode.c:2842
   btrfs_work_helper+0x390/0xc50 fs/btrfs/async-thread.c:314
   process_one_work kernel/workqueue.c:3229 [inline]
   process_scheduled_works+0xa63/0x1850 kernel/workqueue.c:3310
   worker_thread+0x870/0xd30 kernel/workqueue.c:3391
   kthread+0x2f0/0x390 kernel/kthread.c:389
   ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244
   </TASK>

  Allocated by task 2:
   kasan_save_stack mm/kasan/common.c:47 [inline]
   kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
   unpoison_slab_object mm/kasan/common.c:319 [inline]
   __kasan_slab_alloc+0x66/0x80 mm/kasan/common.c:345
   kasan_slab_alloc include/linux/kasan.h:247 [inline]
   slab_post_alloc_hook mm/slub.c:4086 [inline]
   slab_alloc_node mm/slub.c:4135 [inline]
   kmem_cache_alloc_node_noprof+0x16b/0x320 mm/slub.c:4187
   alloc_task_struct_node kernel/fork.c:180 [inline]
   dup_task_struct+0x57/0x8c0 kernel/fork.c:1107
   copy_process+0x5d1/0x3d50 kernel/fork.c:2206
   kernel_clone+0x223/0x880 kernel/fork.c:2787
   kernel_thread+0x1bc/0x240 kernel/fork.c:2849
   create_kthread kernel/kthread.c:412 [inline]
   kthreadd+0x60d/0x810 kernel/kthread.c:765
   ret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147
   ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244

  Freed by task 61:
   kasan_save_stack mm/kasan/common.c:47 [inline]
   kasan_save_track+0x3f/0x80 mm/kasan/common.c:68
   kasan_save_free_info+0x40/0x50 mm/kasan/generic.c:579
   poison_slab_object mm/kasan/common.c:247 [inline]
   __kasan_slab_free+0x59/0x70 mm/kasan/common.c:264
   kasan_slab_free include/linux/kasan.h:230 [inline]
   slab_free_h
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
705,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44940,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fou: remove warn in gue_gro_receive on unsupported protocol

Drop the WARN_ON_ONCE inn gue_gro_receive if the encapsulated type is
not known or does not have a GRO handler.

Such a packet is easily constructed. Syzbot generates them and sets
off this warning.

Remove the warning as it is expected and not actionable.

The warning was previously reduced from WARN_ON to WARN_ON_ONCE in
commit 270136613bf7 (""fou: Do WARN_ON_ONCE in gue_gro_receive for bad
proto callbacks"").",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
704,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42272,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sched: act_ct: take care of padding in struct zones_ht_key

Blamed commit increased lookup key size from 2 bytes to 16 bytes,
because zones_ht_key got a struct net pointer.

Make sure rhashtable_lookup() is not using the padding bytes
which are not initialized.

 BUG: KMSAN: uninit-value in rht_ptr_rcu include/linux/rhashtable.h:376 [inline]
 BUG: KMSAN: uninit-value in __rhashtable_lookup include/linux/rhashtable.h:607 [inline]
 BUG: KMSAN: uninit-value in rhashtable_lookup include/linux/rhashtable.h:646 [inline]
 BUG: KMSAN: uninit-value in rhashtable_lookup_fast include/linux/rhashtable.h:672 [inline]
 BUG: KMSAN: uninit-value in tcf_ct_flow_table_get+0x611/0x2260 net/sched/act_ct.c:329
  rht_ptr_rcu include/linux/rhashtable.h:376 [inline]
  __rhashtable_lookup include/linux/rhashtable.h:607 [inline]
  rhashtable_lookup include/linux/rhashtable.h:646 [inline]
  rhashtable_lookup_fast include/linux/rhashtable.h:672 [inline]
  tcf_ct_flow_table_get+0x611/0x2260 net/sched/act_ct.c:329
  tcf_ct_init+0xa67/0x2890 net/sched/act_ct.c:1408
  tcf_action_init_1+0x6cc/0xb30 net/sched/act_api.c:1425
  tcf_action_init+0x458/0xf00 net/sched/act_api.c:1488
  tcf_action_add net/sched/act_api.c:2061 [inline]
  tc_ctl_action+0x4be/0x19d0 net/sched/act_api.c:2118
  rtnetlink_rcv_msg+0x12fc/0x1410 net/core/rtnetlink.c:6647
  netlink_rcv_skb+0x375/0x650 net/netlink/af_netlink.c:2550
  rtnetlink_rcv+0x34/0x40 net/core/rtnetlink.c:6665
  netlink_unicast_kernel net/netlink/af_netlink.c:1331 [inline]
  netlink_unicast+0xf52/0x1260 net/netlink/af_netlink.c:1357
  netlink_sendmsg+0x10da/0x11e0 net/netlink/af_netlink.c:1901
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:745
  ____sys_sendmsg+0x877/0xb60 net/socket.c:2597
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2651
  __sys_sendmsg net/socket.c:2680 [inline]
  __do_sys_sendmsg net/socket.c:2689 [inline]
  __se_sys_sendmsg net/socket.c:2687 [inline]
  __x64_sys_sendmsg+0x307/0x4a0 net/socket.c:2687
  x64_sys_call+0x2dd6/0x3c10 arch/x86/include/generated/asm/syscalls_64.h:47
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Local variable key created at:
  tcf_ct_flow_table_get+0x4a/0x2260 net/sched/act_ct.c:324
  tcf_ct_init+0xa67/0x2890 net/sched/act_ct.c:1408",Linux,Linux,"03f625505e27f709390a86c9b78d3707f4c23df8, aa1f81fe3a059bc984b230b5352ab89d06aa3c7b, 2f82f75f843445daa81e8b2a76774b1348033ce6, 9126fd82e9edc7b4796f756e4b258d34f17e5e4a, 88c67aeb14070bab61d3dd8be96c8b42ebcaf53a, 88c67aeb14070bab61d3dd8be96c8b42ebcaf53a"
703,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47718,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: rtw88: always wait for both firmware loading attempts

In 'rtw_wait_firmware_completion()', always wait for both (regular and
wowlan) firmware loading attempts. Otherwise if 'rtw_usb_intf_init()'
has failed in 'rtw_usb_probe()', 'rtw_usb_disconnect()' may issue
'ieee80211_free_hw()' when one of 'rtw_load_firmware_cb()' (usually
the wowlan one) is still in progress, causing UAF detected by KASAN.",Linux,Linux,"c8e5695eae9959fc5774c0f490f2450be8bad3de, c8e5695eae9959fc5774c0f490f2450be8bad3de, c8e5695eae9959fc5774c0f490f2450be8bad3de, c8e5695eae9959fc5774c0f490f2450be8bad3de, c8e5695eae9959fc5774c0f490f2450be8bad3de, c8e5695eae9959fc5774c0f490f2450be8bad3de, c8e5695eae9959fc5774c0f490f2450be8bad3de"
702,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44957,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xen: privcmd: Switch from mutex to spinlock for irqfds

irqfd_wakeup() gets EPOLLHUP, when it is called by
eventfd_release() by way of wake_up_poll(&ctx->wqh, EPOLLHUP), which
gets called under spin_lock_irqsave(). We can't use a mutex here as it
will lead to a deadlock.

Fix it by switching over to a spin lock.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
701,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46680,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: btnxpuart: Fix random crash seen while removing driver

This fixes the random kernel crash seen while removing the driver, when
running the load/unload test over multiple iterations.

1) modprobe btnxpuart
2) hciconfig hci0 reset
3) hciconfig (check hci0 interface up with valid BD address)
4) modprobe -r btnxpuart
Repeat steps 1 to 4

The ps_wakeup() call in btnxpuart_close() schedules the psdata->work(),
which gets scheduled after module is removed, causing a kernel crash.

This hidden issue got highlighted after enabling Power Save by default
in 4183a7be7700 (Bluetooth: btnxpuart: Enable Power Save feature on
startup)

The new ps_cleanup() deasserts UART break immediately while closing
serdev device, cancels any scheduled ps_work and destroys the ps_lock
mutex.

[   85.884604] Unable to handle kernel paging request at virtual address ffffd4a61638f258
[   85.884624] Mem abort info:
[   85.884625]   ESR = 0x0000000086000007
[   85.884628]   EC = 0x21: IABT (current EL), IL = 32 bits
[   85.884633]   SET = 0, FnV = 0
[   85.884636]   EA = 0, S1PTW = 0
[   85.884638]   FSC = 0x07: level 3 translation fault
[   85.884642] swapper pgtable: 4k pages, 48-bit VAs, pgdp=0000000041dd0000
[   85.884646] [ffffd4a61638f258] pgd=1000000095fff003, p4d=1000000095fff003, pud=100000004823d003, pmd=100000004823e003, pte=0000000000000000
[   85.884662] Internal error: Oops: 0000000086000007 [#1] PREEMPT SMP
[   85.890932] Modules linked in: algif_hash algif_skcipher af_alg overlay fsl_jr_uio caam_jr caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine authenc libdes crct10dif_ce polyval_ce polyval_generic snd_soc_imx_spdif snd_soc_imx_card snd_soc_ak5558 snd_soc_ak4458 caam secvio error snd_soc_fsl_spdif snd_soc_fsl_micfil snd_soc_fsl_sai snd_soc_fsl_utils gpio_ir_recv rc_core fuse [last unloaded: btnxpuart(O)]
[   85.927297] CPU: 1 PID: 67 Comm: kworker/1:3 Tainted: G           O       6.1.36+g937b1be4345a #1
[   85.936176] Hardware name: FSL i.MX8MM EVK board (DT)
[   85.936182] Workqueue: events 0xffffd4a61638f380
[   85.936198] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[   85.952817] pc : 0xffffd4a61638f258
[   85.952823] lr : 0xffffd4a61638f258
[   85.952827] sp : ffff8000084fbd70
[   85.952829] x29: ffff8000084fbd70 x28: 0000000000000000 x27: 0000000000000000
[   85.963112] x26: ffffd4a69133f000 x25: ffff4bf1c8540990 x24: ffff4bf215b87305
[   85.963119] x23: ffff4bf215b87300 x22: ffff4bf1c85409d0 x21: ffff4bf1c8540970
[   85.977382] x20: 0000000000000000 x19: ffff4bf1c8540880 x18: 0000000000000000
[   85.977391] x17: 0000000000000000 x16: 0000000000000133 x15: 0000ffffe2217090
[   85.977399] x14: 0000000000000001 x13: 0000000000000133 x12: 0000000000000139
[   85.977407] x11: 0000000000000001 x10: 0000000000000a60 x9 : ffff8000084fbc50
[   85.977417] x8 : ffff4bf215b7d000 x7 : ffff4bf215b83b40 x6 : 00000000000003e8
[   85.977424] x5 : 00000000410fd030 x4 : 0000000000000000 x3 : 0000000000000000
[   85.977432] x2 : 0000000000000000 x1 : ffff4bf1c4265880 x0 : 0000000000000000
[   85.977443] Call trace:
[   85.977446]  0xffffd4a61638f258
[   85.977451]  0xffffd4a61638f3e8
[   85.977455]  process_one_work+0x1d4/0x330
[   85.977464]  worker_thread+0x6c/0x430
[   85.977471]  kthread+0x108/0x10c
[   85.977476]  ret_from_fork+0x10/0x20
[   85.977488] Code: bad PC value
[   85.977491] ---[ end trace 0000000000000000 ]---

Preset since v6.9.11",Linux,Linux,"86d55f124b52de2ba0d066d89b766bcc0387fd72, 86d55f124b52de2ba0d066d89b766bcc0387fd72, 86d55f124b52de2ba0d066d89b766bcc0387fd72"
700,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49894,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix index out of bounds in degamma hardware format translation

Fixes index out of bounds issue in
`cm_helper_translate_curve_to_degamma_hw_format` function. The issue
could occur when the index 'i' exceeds the number of transfer function
points (TRANSFER_FUNC_POINTS).

The fix adds a check to ensure 'i' is within bounds before accessing the
transfer function points. If 'i' is out of bounds the function returns
false to indicate an error.

Reported by smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:594 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:595 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn10/dcn10_cm_common.c:596 cm_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
699,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50044,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: RFCOMM: FIX possible deadlock in rfcomm_sk_state_change

rfcomm_sk_state_change attempts to use sock_lock so it must never be
called with it locked but rfcomm_sock_ioctl always attempt to lock it
causing the following trace:

======================================================
WARNING: possible circular locking dependency detected
6.8.0-syzkaller-08951-gfe46a7dd189e #0 Not tainted
------------------------------------------------------
syz-executor386/5093 is trying to acquire lock:
ffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1671 [inline]
ffff88807c396258 (sk_lock-AF_BLUETOOTH-BTPROTO_RFCOMM){+.+.}-{0:0}, at: rfcomm_sk_state_change+0x5b/0x310 net/bluetooth/rfcomm/sock.c:73

but task is already holding lock:
ffff88807badfd28 (&d->lock){+.+.}-{3:3}, at: __rfcomm_dlc_close+0x226/0x6a0 net/bluetooth/rfcomm/core.c:491",Linux,Linux,"3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626, 3241ad820dbb172021e0268b5611031991431626"
698,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49879,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm: omapdrm: Add missing check for alloc_ordered_workqueue

As it may return NULL pointer and cause NULL pointer dereference. Add check
for the return value of alloc_ordered_workqueue.",Linux,Linux,"2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325, 2f95bc6d324a93b2411bcc5defe4d4414c45f325"
697,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49935,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ACPI: PAD: fix crash in exit_round_robin()

The kernel occasionally crashes in cpumask_clear_cpu(), which is called
within exit_round_robin(), because when executing clear_bit(nr, addr) with
nr set to 0xffffffff, the address calculation may cause misalignment within
the memory, leading to access to an invalid memory address.

----------
BUG: unable to handle kernel paging request at ffffffffe0740618
        ...
CPU: 3 PID: 2919323 Comm: acpi_pad/14 Kdump: loaded Tainted: G           OE  X --------- -  - 4.18.0-425.19.2.el8_7.x86_64 #1
        ...
RIP: 0010:power_saving_thread+0x313/0x411 [acpi_pad]
Code: 89 cd 48 89 d3 eb d1 48 c7 c7 55 70 72 c0 e8 64 86 b0 e4 c6 05 0d a1 02 00 01 e9 bc fd ff ff 45 89 e4 42 8b 04 a5 20 82 72 c0 <f0> 48 0f b3 05 f4 9c 01 00 42 c7 04 a5 20 82 72 c0 ff ff ff ff 31
RSP: 0018:ff72a5d51fa77ec8 EFLAGS: 00010202
RAX: 00000000ffffffff RBX: ff462981e5d8cb80 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000246 RDI: 0000000000000246
RBP: ff46297556959d80 R08: 0000000000000382 R09: ff46297c8d0f38d8
R10: 0000000000000000 R11: 0000000000000001 R12: 000000000000000e
R13: 0000000000000000 R14: ffffffffffffffff R15: 000000000000000e
FS:  0000000000000000(0000) GS:ff46297a800c0000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: ffffffffe0740618 CR3: 0000007e20410004 CR4: 0000000000771ee0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 ? acpi_pad_add+0x120/0x120 [acpi_pad]
 kthread+0x10b/0x130
 ? set_kthread_struct+0x50/0x50
 ret_from_fork+0x1f/0x40
        ...
CR2: ffffffffe0740618

crash> dis -lr ffffffffc0726923
        ...
/usr/src/debug/kernel-4.18.0-425.19.2.el8_7/linux-4.18.0-425.19.2.el8_7.x86_64/./include/linux/cpumask.h: 114
0xffffffffc0726918 <power_saving_thread+776>:	mov    %r12d,%r12d
/usr/src/debug/kernel-4.18.0-425.19.2.el8_7/linux-4.18.0-425.19.2.el8_7.x86_64/./include/linux/cpumask.h: 325
0xffffffffc072691b <power_saving_thread+779>:	mov    -0x3f8d7de0(,%r12,4),%eax
/usr/src/debug/kernel-4.18.0-425.19.2.el8_7/linux-4.18.0-425.19.2.el8_7.x86_64/./arch/x86/include/asm/bitops.h: 80
0xffffffffc0726923 <power_saving_thread+787>:	lock btr %rax,0x19cf4(%rip)        # 0xffffffffc0740620 <pad_busy_cpus_bits>

crash> px tsk_in_cpu[14]
$66 = 0xffffffff

crash> px 0xffffffffc072692c+0x19cf4
$99 = 0xffffffffc0740620

crash> sym 0xffffffffc0740620
ffffffffc0740620 (b) pad_busy_cpus_bits [acpi_pad]

crash> px pad_busy_cpus_bits[0]
$42 = 0xfffc0
----------

To fix this, ensure that tsk_in_cpu[tsk_index] != -1 before calling
cpumask_clear_cpu() in exit_round_robin(), just as it is done in
round_robin_cpu().

[ rjw: Subject edit, avoid updates to the same value ]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
696,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46851,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Avoid race between dcn10_set_drr() and dc_state_destruct()

dc_state_destruct() nulls the resource context of the DC state. The pipe
context passed to dcn10_set_drr() is a member of this resource context.

If dc_state_destruct() is called parallel to the IRQ processing (which
calls dcn10_set_drr() at some point), we can end up using already nulled
function callback fields of struct stream_resource.

The logic in dcn10_set_drr() already tries to avoid this, by checking tg
against NULL. But if the nulling happens exactly after the NULL check and
before the next access, then we get a race.

Avoid this by copying tg first to a local variable, and then use this
variable for all the operations. This should work, as long as nobody
frees the resource pool where the timing generators live.

(cherry picked from commit a3cc326a43bdc48fbdf53443e1027a03e309b643)",Linux,Linux,"06ad7e16425619a4a77154c2e85bededb3e04a4f, 06ad7e16425619a4a77154c2e85bededb3e04a4f"
695,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47685,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_reject_ipv6: fix nf_reject_ip6_tcphdr_put()

syzbot reported that nf_reject_ip6_tcphdr_put() was possibly sending
garbage on the four reserved tcp bits (th->res1)

Use skb_put_zero() to clear the whole TCP header,
as done in nf_reject_ip_tcphdr_put()

BUG: KMSAN: uninit-value in nf_reject_ip6_tcphdr_put+0x688/0x6c0 net/ipv6/netfilter/nf_reject_ipv6.c:255
  nf_reject_ip6_tcphdr_put+0x688/0x6c0 net/ipv6/netfilter/nf_reject_ipv6.c:255
  nf_send_reset6+0xd84/0x15b0 net/ipv6/netfilter/nf_reject_ipv6.c:344
  nft_reject_inet_eval+0x3c1/0x880 net/netfilter/nft_reject_inet.c:48
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x438/0x22a0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_inet+0x41a/0x4f0 net/netfilter/nft_chain_filter.c:161
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626
  nf_hook include/linux/netfilter.h:269 [inline]
  NF_HOOK include/linux/netfilter.h:312 [inline]
  ipv6_rcv+0x29b/0x390 net/ipv6/ip6_input.c:310
  __netif_receive_skb_one_core net/core/dev.c:5661 [inline]
  __netif_receive_skb+0x1da/0xa00 net/core/dev.c:5775
  process_backlog+0x4ad/0xa50 net/core/dev.c:6108
  __napi_poll+0xe7/0x980 net/core/dev.c:6772
  napi_poll net/core/dev.c:6841 [inline]
  net_rx_action+0xa5a/0x19b0 net/core/dev.c:6963
  handle_softirqs+0x1ce/0x800 kernel/softirq.c:554
  __do_softirq+0x14/0x1a kernel/softirq.c:588
  do_softirq+0x9a/0x100 kernel/softirq.c:455
  __local_bh_enable_ip+0x9f/0xb0 kernel/softirq.c:382
  local_bh_enable include/linux/bottom_half.h:33 [inline]
  rcu_read_unlock_bh include/linux/rcupdate.h:908 [inline]
  __dev_queue_xmit+0x2692/0x5610 net/core/dev.c:4450
  dev_queue_xmit include/linux/netdevice.h:3105 [inline]
  neigh_resolve_output+0x9ca/0xae0 net/core/neighbour.c:1565
  neigh_output include/net/neighbour.h:542 [inline]
  ip6_finish_output2+0x2347/0x2ba0 net/ipv6/ip6_output.c:141
  __ip6_finish_output net/ipv6/ip6_output.c:215 [inline]
  ip6_finish_output+0xbb8/0x14b0 net/ipv6/ip6_output.c:226
  NF_HOOK_COND include/linux/netfilter.h:303 [inline]
  ip6_output+0x356/0x620 net/ipv6/ip6_output.c:247
  dst_output include/net/dst.h:450 [inline]
  NF_HOOK include/linux/netfilter.h:314 [inline]
  ip6_xmit+0x1ba6/0x25d0 net/ipv6/ip6_output.c:366
  inet6_csk_xmit+0x442/0x530 net/ipv6/inet6_connection_sock.c:135
  __tcp_transmit_skb+0x3b07/0x4880 net/ipv4/tcp_output.c:1466
  tcp_transmit_skb net/ipv4/tcp_output.c:1484 [inline]
  tcp_connect+0x35b6/0x7130 net/ipv4/tcp_output.c:4143
  tcp_v6_connect+0x1bcc/0x1e40 net/ipv6/tcp_ipv6.c:333
  __inet_stream_connect+0x2ef/0x1730 net/ipv4/af_inet.c:679
  inet_stream_connect+0x6a/0xd0 net/ipv4/af_inet.c:750
  __sys_connect_file net/socket.c:2061 [inline]
  __sys_connect+0x606/0x690 net/socket.c:2078
  __do_sys_connect net/socket.c:2088 [inline]
  __se_sys_connect net/socket.c:2085 [inline]
  __x64_sys_connect+0x91/0xe0 net/socket.c:2085
  x64_sys_call+0x27a5/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:43
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was stored to memory at:
  nf_reject_ip6_tcphdr_put+0x60c/0x6c0 net/ipv6/netfilter/nf_reject_ipv6.c:249
  nf_send_reset6+0xd84/0x15b0 net/ipv6/netfilter/nf_reject_ipv6.c:344
  nft_reject_inet_eval+0x3c1/0x880 net/netfilter/nft_reject_inet.c:48
  expr_call_ops_eval net/netfilter/nf_tables_core.c:240 [inline]
  nft_do_chain+0x438/0x22a0 net/netfilter/nf_tables_core.c:288
  nft_do_chain_inet+0x41a/0x4f0 net/netfilter/nft_chain_filter.c:161
  nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
  nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626
  nf_hook include/linux/netfilter.h:269 [inline]
  NF_HOOK include/linux/netfilter.h:312 [inline]
  ipv6_rcv+0x29b/0x390 net/ipv6/ip6_input.c:310
  __netif_receive_skb_one_core
---truncated---",Linux,Linux,"c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb, c8d7b98bec43faaa6583c3135030be5eb4693acb"
714,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43861,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: usb: qmi_wwan: fix memory leak for not ip packets

Free the unused skb when not ip packets arrive.",Linux,Linux,"c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3, c6adf77953bcec0ad63d7782479452464e50f7a3"
715,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50000,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Fix NULL deref in mlx5e_tir_builder_alloc()

In mlx5e_tir_builder_alloc() kvzalloc() may return NULL
which is dereferenced on the next line in a reference
to the modify field.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"a6696735d694b365bca45873e9dbca26120a8375, a6696735d694b365bca45873e9dbca26120a8375, a6696735d694b365bca45873e9dbca26120a8375, a6696735d694b365bca45873e9dbca26120a8375, a6696735d694b365bca45873e9dbca26120a8375, a6696735d694b365bca45873e9dbca26120a8375"
716,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47710,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sock_map: Add a cond_resched() in sock_hash_free()

Several syzbot soft lockup reports all have in common sock_hash_free()

If a map with a large number of buckets is destroyed, we need to yield
the cpu when needed.",Linux,Linux,"5bed77b0a2a0e6b6bc0ae8e851cafb38ef0374df, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1, 75e68e5bf2c7fa9d3e874099139df03d5952a3e1"
727,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42319,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mailbox: mtk-cmdq: Move devm_mbox_controller_register() after devm_pm_runtime_enable()

When mtk-cmdq unbinds, a WARN_ON message with condition
pm_runtime_get_sync() < 0 occurs.

According to the call tracei below:
  cmdq_mbox_shutdown
  mbox_free_channel
  mbox_controller_unregister
  __devm_mbox_controller_unregister
  ...

The root cause can be deduced to be calling pm_runtime_get_sync() after
calling pm_runtime_disable() as observed below:
1. CMDQ driver uses devm_mbox_controller_register() in cmdq_probe()
   to bind the cmdq device to the mbox_controller, so
   devm_mbox_controller_unregister() will automatically unregister
   the device bound to the mailbox controller when the device-managed
   resource is removed. That means devm_mbox_controller_unregister()
   and cmdq_mbox_shoutdown() will be called after cmdq_remove().
2. CMDQ driver also uses devm_pm_runtime_enable() in cmdq_probe() after
   devm_mbox_controller_register(), so that devm_pm_runtime_disable()
   will be called after cmdq_remove(), but before
   devm_mbox_controller_unregister().

To fix this problem, cmdq_probe() needs to move
devm_mbox_controller_register() after devm_pm_runtime_enable() to make
devm_pm_runtime_disable() be called after
devm_mbox_controller_unregister().",Linux,Linux,"623a6143a845bd485b00ba684f0ccef11835edab, 623a6143a845bd485b00ba684f0ccef11835edab, 623a6143a845bd485b00ba684f0ccef11835edab, 623a6143a845bd485b00ba684f0ccef11835edab"
735,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43835,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

virtio_net: Fix napi_skb_cache_put warning

After the commit bdacf3e34945 (""net: Use nested-BH locking for
napi_alloc_cache."") was merged, the following warning began to appear:

	 WARNING: CPU: 5 PID: 1 at net/core/skbuff.c:1451 napi_skb_cache_put+0x82/0x4b0

	  __warn+0x12f/0x340
	  napi_skb_cache_put+0x82/0x4b0
	  napi_skb_cache_put+0x82/0x4b0
	  report_bug+0x165/0x370
	  handle_bug+0x3d/0x80
	  exc_invalid_op+0x1a/0x50
	  asm_exc_invalid_op+0x1a/0x20
	  __free_old_xmit+0x1c8/0x510
	  napi_skb_cache_put+0x82/0x4b0
	  __free_old_xmit+0x1c8/0x510
	  __free_old_xmit+0x1c8/0x510
	  __pfx___free_old_xmit+0x10/0x10

The issue arises because virtio is assuming it's running in NAPI context
even when it's not, such as in the netpoll case.

To resolve this, modify virtnet_poll_tx() to only set NAPI when budget
is available. Same for virtnet_poll_cleantx(), which always assumed that
it was in a NAPI context.",Linux,Linux,"df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810, df133f3f96257ee29696c0ed8bd198ec801dc810"
734,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26822,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: set correct id, uid and cruid for multiuser automounts

When uid, gid and cruid are not specified, we need to dynamically
set them into the filesystem context used for automounting otherwise
they'll end up reusing the values from the parent mount.",Linux,Linux,"9fd29a5bae6e8f94b410374099a6fddb253d2d5f, 9fd29a5bae6e8f94b410374099a6fddb253d2d5f, 9fd29a5bae6e8f94b410374099a6fddb253d2d5f"
733,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2022-38096,6.3,n/a,CWE-476 NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"A NULL pointer dereference vulnerability was found in vmwgfx driver in drivers/gpu/vmxgfx/vmxgfx_execbuf.c in GPU component of Linux kernel with device file '/dev/dri/renderD128 (or Dxxx)'. This flaw allows a local attacker with a user account on the system to gain privilege, causing a denial of service(DoS).",Linux,kernel,v4.20-rc1
732,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46701,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

libfs: fix infinite directory reads for offset dir

After we switch tmpfs dir operations from simple_dir_operations to
simple_offset_dir_operations, every rename happened will fill new dentry
to dest dir's maple tree(&SHMEM_I(inode)->dir_offsets->mt) with a free
key starting with octx->newx_offset, and then set newx_offset equals to
free key + 1. This will lead to infinite readdir combine with rename
happened at the same time, which fail generic/736 in xfstests(detail show
as below).

1. create 5000 files(1 2 3...) under one dir
2. call readdir(man 3 readdir) once, and get one entry
3. rename(entry, ""TEMPFILE""), then rename(""TEMPFILE"", entry)
4. loop 2~3, until readdir return nothing or we loop too many
   times(tmpfs break test with the second condition)

We choose the same logic what commit 9b378f6ad48cf (""btrfs: fix infinite
directory reads"") to fix it, record the last_index when we open dir, and
do not emit the entry which index >= last_index. The file->private_data
now used in offset dir can use directly to do this, and we also update
the last_index when we llseek the dir file.

[brauner: only update last_index after seek when offset is zero like Jan suggested]",Linux,Linux,"a2e459555c5f9da3e619b7e47a63f98574dc75f1, a2e459555c5f9da3e619b7e47a63f98574dc75f1"
731,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42304,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: make sure the first directory block is not a hole

The syzbot constructs a directory that has no dirblock but is non-inline,
i.e. the first directory block is a hole. And no errors are reported when
creating files in this directory in the following flow.

    ext4_mknod
     ...
      ext4_add_entry
        // Read block 0
        ext4_read_dirblock(dir, block, DIRENT)
          bh = ext4_bread(NULL, inode, block, 0)
          if (!bh && (type == INDEX || type == DIRENT_HTREE))
          // The first directory block is a hole
          // But type == DIRENT, so no error is reported.

After that, we get a directory block without '.' and '..' but with a valid
dentry. This may cause some code that relies on dot or dotdot (such as
make_indexed_dir()) to crash.

Therefore when ext4_read_dirblock() finds that the first directory block
is a hole report that the filesystem is corrupted and return an error to
avoid loading corrupted data from disk causing something bad.",Linux,Linux,"3a17ca864baffc0c6f6e8aad525aa4365775a193, 4e19d6b65fb4fc42e352ce9883649e049da14743, 4e19d6b65fb4fc42e352ce9883649e049da14743, 4e19d6b65fb4fc42e352ce9883649e049da14743, 4e19d6b65fb4fc42e352ce9883649e049da14743, 4e19d6b65fb4fc42e352ce9883649e049da14743, 4e19d6b65fb4fc42e352ce9883649e049da14743, 4e19d6b65fb4fc42e352ce9883649e049da14743"
730,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46864,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/hyperv: fix kexec crash due to VP assist page corruption

commit 9636be85cc5b (""x86/hyperv: Fix hyperv_pcpu_input_arg handling when
CPUs go online/offline"") introduces a new cpuhp state for hyperv
initialization.

cpuhp_setup_state() returns the state number if state is
CPUHP_AP_ONLINE_DYN or CPUHP_BP_PREPARE_DYN and 0 for all other states.
For the hyperv case, since a new cpuhp state was introduced it would
return 0. However, in hv_machine_shutdown(), the cpuhp_remove_state() call
is conditioned upon ""hyperv_init_cpuhp > 0"". This will never be true and
so hv_cpu_die() won't be called on all CPUs. This means the VP assist page
won't be reset. When the kexec kernel tries to setup the VP assist page
again, the hypervisor corrupts the memory region of the old VP assist page
causing a panic in case the kexec kernel is using that memory elsewhere.
This was originally fixed in commit dfe94d4086e4 (""x86/hyperv: Fix kexec
panic/hang issues"").

Get rid of hyperv_init_cpuhp entirely since we are no longer using a
dynamic cpuhp state and use CPUHP_AP_HYPERV_ONLINE directly with
cpuhp_remove_state().",Linux,Linux,"9636be85cc5bdd8b7a7f6a53405cbcc52161c93c, 9636be85cc5bdd8b7a7f6a53405cbcc52161c93c, 9636be85cc5bdd8b7a7f6a53405cbcc52161c93c"
729,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46810,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/bridge: tc358767: Check if fully initialized before signalling HPD event via IRQ

Make sure the connector is fully initialized before signalling any
HPD events via drm_kms_helper_hotplug_event(), otherwise this may
lead to NULL pointer dereference.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
728,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47698,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drivers: media: dvb-frontends/rtl2832: fix an out-of-bounds write error

Ensure index in rtl2832_pid_filter does not exceed 31 to prevent
out-of-bounds access.

dev->filters is a 32-bit value, so set_bit and clear_bit functions should
only operate on indices from 0 to 31. If index is 32, it will attempt to
access a non-existent 33rd bit, leading to out-of-bounds access.
Change the boundary check from index > 32 to index >= 32 to resolve this
issue.

[hverkuil: added fixes tag, rtl2830_pid_filter -> rtl2832_pid_filter in logmsg]",Linux,Linux,"4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b, 4b01e01a81b6629878344430531ced347cc2ed5b"
726,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43892,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

memcg: protect concurrent access to mem_cgroup_idr

Commit 73f576c04b94 (""mm: memcontrol: fix cgroup creation failure after
many small jobs"") decoupled the memcg IDs from the CSS ID space to fix the
cgroup creation failures.  It introduced IDR to maintain the memcg ID
space.  The IDR depends on external synchronization mechanisms for
modifications.  For the mem_cgroup_idr, the idr_alloc() and idr_replace()
happen within css callback and thus are protected through cgroup_mutex
from concurrent modifications.  However idr_remove() for mem_cgroup_idr
was not protected against concurrency and can be run concurrently for
different memcgs when they hit their refcnt to zero.  Fix that.

We have been seeing list_lru based kernel crashes at a low frequency in
our fleet for a long time.  These crashes were in different part of
list_lru code including list_lru_add(), list_lru_del() and reparenting
code.  Upon further inspection, it looked like for a given object (dentry
and inode), the super_block's list_lru didn't have list_lru_one for the
memcg of that object.  The initial suspicions were either the object is
not allocated through kmem_cache_alloc_lru() or somehow
memcg_list_lru_alloc() failed to allocate list_lru_one() for a memcg but
returned success.  No evidence were found for these cases.

Looking more deeply, we started seeing situations where valid memcg's id
is not present in mem_cgroup_idr and in some cases multiple valid memcgs
have same id and mem_cgroup_idr is pointing to one of them.  So, the most
reasonable explanation is that these situations can happen due to race
between multiple idr_remove() calls or race between
idr_alloc()/idr_replace() and idr_remove().  These races are causing
multiple memcgs to acquire the same ID and then offlining of one of them
would cleanup list_lrus on the system for all of them.  Later access from
other memcgs to the list_lru cause crashes due to missing list_lru_one.",Linux,Linux,"73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546, 73f576c04b9410ed19660f74f97521bee6e1c546"
717,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46771,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

can: bcm: Remove proc entry when dev is unregistered.

syzkaller reported a warning in bcm_connect() below. [0]

The repro calls connect() to vxcan1, removes vxcan1, and calls
connect() with ifindex == 0.

Calling connect() for a BCM socket allocates a proc entry.
Then, bcm_sk(sk)->bound is set to 1 to prevent further connect().

However, removing the bound device resets bcm_sk(sk)->bound to 0
in bcm_notify().

The 2nd connect() tries to allocate a proc entry with the same
name and sets NULL to bcm_sk(sk)->bcm_proc_read, leaking the
original proc entry.

Since the proc entry is available only for connect()ed sockets,
let's clean up the entry when the bound netdev is unregistered.

[0]:
proc_dir_entry 'can-bcm/2456' already registered
WARNING: CPU: 1 PID: 394 at fs/proc/generic.c:376 proc_register+0x645/0x8f0 fs/proc/generic.c:375
Modules linked in:
CPU: 1 PID: 394 Comm: syz-executor403 Not tainted 6.10.0-rc7-g852e42cc2dd4
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
RIP: 0010:proc_register+0x645/0x8f0 fs/proc/generic.c:375
Code: 00 00 00 00 00 48 85 ed 0f 85 97 02 00 00 4d 85 f6 0f 85 9f 02 00 00 48 c7 c7 9b cb cf 87 48 89 de 4c 89 fa e8 1c 6f eb fe 90 <0f> 0b 90 90 48 c7 c7 98 37 99 89 e8 cb 7e 22 05 bb 00 00 00 10 48
RSP: 0018:ffa0000000cd7c30 EFLAGS: 00010246
RAX: 9e129be1950f0200 RBX: ff1100011b51582c RCX: ff1100011857cd80
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000002
RBP: 0000000000000000 R08: ffd400000000000f R09: ff1100013e78cac0
R10: ffac800000cd7980 R11: ff1100013e12b1f0 R12: 0000000000000000
R13: 0000000000000000 R14: 0000000000000000 R15: ff1100011a99a2ec
FS:  00007fbd7086f740(0000) GS:ff1100013fd00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00000000200071c0 CR3: 0000000118556004 CR4: 0000000000771ef0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe07f0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <TASK>
 proc_create_net_single+0x144/0x210 fs/proc/proc_net.c:220
 bcm_connect+0x472/0x840 net/can/bcm.c:1673
 __sys_connect_file net/socket.c:2049 [inline]
 __sys_connect+0x5d2/0x690 net/socket.c:2066
 __do_sys_connect net/socket.c:2076 [inline]
 __se_sys_connect net/socket.c:2073 [inline]
 __x64_sys_connect+0x8f/0x100 net/socket.c:2073
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xd9/0x1c0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x4b/0x53
RIP: 0033:0x7fbd708b0e5d
Code: ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 73 9f 1b 00 f7 d8 64 89 01 48
RSP: 002b:00007fff8cd33f08 EFLAGS: 00000246 ORIG_RAX: 000000000000002a
RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fbd708b0e5d
RDX: 0000000000000010 RSI: 0000000020000040 RDI: 0000000000000003
RBP: 0000000000000000 R08: 0000000000000040 R09: 0000000000000040
R10: 0000000000000040 R11: 0000000000000246 R12: 00007fff8cd34098
R13: 0000000000401280 R14: 0000000000406de8 R15: 00007fbd70ab9000
 </TASK>
remove_proc_entry: removing non-empty directory 'net/can-bcm', leaking at least '2456'",Linux,Linux,"ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828, ffd980f976e7fd666c2e61bf8ab35107efd11828"
725,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49930,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath11k: fix array out-of-bound access in SoC stats

Currently, the ath11k_soc_dp_stats::hal_reo_error array is defined with a
maximum size of DP_REO_DST_RING_MAX. However, the ath11k_dp_process_rx()
function access ath11k_soc_dp_stats::hal_reo_error using the REO
destination SRNG ring ID, which is incorrect. SRNG ring ID differ from
normal ring ID, and this usage leads to out-of-bounds array access. To fix
this issue, modify ath11k_dp_process_rx() to use the normal ring ID
directly instead of the SRNG ring ID to avoid out-of-bounds array access.

Tested-on: QCN9074 hw1.0 PCI WLAN.HK.2.7.0.1-01744-QCAHKSWPL_SILICONZ-1",Linux,Linux,"d5c65159f2895379e11ca13f62feabe93278985d, d5c65159f2895379e11ca13f62feabe93278985d, d5c65159f2895379e11ca13f62feabe93278985d, d5c65159f2895379e11ca13f62feabe93278985d, d5c65159f2895379e11ca13f62feabe93278985d, d5c65159f2895379e11ca13f62feabe93278985d, d5c65159f2895379e11ca13f62feabe93278985d"
724,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49892,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Initialize get_bytes_per_element's default to 1

Variables, used as denominators and maybe not assigned to other values,
should not be 0. bytes_per_element_y & bytes_per_element_c are
initialized by get_bytes_per_element() which should never return 0.

This fixes 10 DIVIDE_BY_ZERO issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
723,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50093,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

thermal: intel: int340x: processor: Fix warning during module unload

The processor_thermal driver uses pcim_device_enable() to enable a PCI
device, which means the device will be automatically disabled on driver
detach.  Thus there is no need to call pci_disable_device() again on it.

With recent PCI device resource management improvements, e.g. commit
f748a07a0b64 (""PCI: Remove legacy pcim_release()""), this problem is
exposed and triggers the warining below.

 [  224.010735] proc_thermal_pci 0000:00:04.0: disabling already-disabled device
 [  224.010747] WARNING: CPU: 8 PID: 4442 at drivers/pci/pci.c:2250 pci_disable_device+0xe5/0x100
 ...
 [  224.010844] Call Trace:
 [  224.010845]  <TASK>
 [  224.010847]  ? show_regs+0x6d/0x80
 [  224.010851]  ? __warn+0x8c/0x140
 [  224.010854]  ? pci_disable_device+0xe5/0x100
 [  224.010856]  ? report_bug+0x1c9/0x1e0
 [  224.010859]  ? handle_bug+0x46/0x80
 [  224.010862]  ? exc_invalid_op+0x1d/0x80
 [  224.010863]  ? asm_exc_invalid_op+0x1f/0x30
 [  224.010867]  ? pci_disable_device+0xe5/0x100
 [  224.010869]  ? pci_disable_device+0xe5/0x100
 [  224.010871]  ? kfree+0x21a/0x2b0
 [  224.010873]  pcim_disable_device+0x20/0x30
 [  224.010875]  devm_action_release+0x16/0x20
 [  224.010878]  release_nodes+0x47/0xc0
 [  224.010880]  devres_release_all+0x9f/0xe0
 [  224.010883]  device_unbind_cleanup+0x12/0x80
 [  224.010885]  device_release_driver_internal+0x1ca/0x210
 [  224.010887]  driver_detach+0x4e/0xa0
 [  224.010889]  bus_remove_driver+0x6f/0xf0
 [  224.010890]  driver_unregister+0x35/0x60
 [  224.010892]  pci_unregister_driver+0x44/0x90
 [  224.010894]  proc_thermal_pci_driver_exit+0x14/0x5f0 [processor_thermal_device_pci]
 ...
 [  224.010921] ---[ end trace 0000000000000000 ]---

Remove the excess pci_disable_device() calls.

[ rjw: Subject and changelog edits ]",Linux,Linux,"acd65d5d1cf4a3324c8970ba74632abe069fe23e, acd65d5d1cf4a3324c8970ba74632abe069fe23e, acd65d5d1cf4a3324c8970ba74632abe069fe23e, acd65d5d1cf4a3324c8970ba74632abe069fe23e, acd65d5d1cf4a3324c8970ba74632abe069fe23e"
722,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46717,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: SHAMPO, Fix incorrect page release

Under the following conditions:
1) No skb created yet
2) header_size == 0 (no SHAMPO header)
3) header_index + 1 % MLX5E_SHAMPO_WQ_HEADER_PER_PAGE == 0 (this is the
   last page fragment of a SHAMPO header page)

a new skb is formed with a page that is NOT a SHAMPO header page (it
is a regular data page). Further down in the same function
(mlx5e_handle_rx_cqe_mpwrq_shampo()), a SHAMPO header page from
header_index is released. This is wrong and it leads to SHAMPO header
pages being released more than once.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
721,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47665,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i3c: mipi-i3c-hci: Error out instead on BUG_ON() in IBI DMA setup

Definitely condition dma_get_cache_alignment * defined value > 256
during driver initialization is not reason to BUG_ON(). Turn that to
graceful error out with -EINVAL.",Linux,Linux,"3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0, 3a379bbcea0af6280e1ca0d1edfcf4e68cde6ee0"
720,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44996,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vsock: fix recursive ->recvmsg calls

After a vsock socket has been added to a BPF sockmap, its prot->recvmsg
has been replaced with vsock_bpf_recvmsg(). Thus the following
recursiion could happen:

vsock_bpf_recvmsg()
 -> __vsock_recvmsg()
  -> vsock_connectible_recvmsg()
   -> prot->recvmsg()
    -> vsock_bpf_recvmsg() again

We need to fix it by calling the original ->recvmsg() without any BPF
sockmap logic in __vsock_recvmsg().",Linux,Linux,"634f1a7110b439c65fd8a809171c1d2d28bcea6f, 634f1a7110b439c65fd8a809171c1d2d28bcea6f, 634f1a7110b439c65fd8a809171c1d2d28bcea6f"
719,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46841,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: don't BUG_ON on ENOMEM from btrfs_lookup_extent_info() in walk_down_proc()

We handle errors here properly, ENOMEM isn't fatal, return the error.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
718,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44941,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to cover read extent cache access with lock

syzbot reports a f2fs bug as below:

BUG: KASAN: slab-use-after-free in sanity_check_extent_cache+0x370/0x410 fs/f2fs/extent_cache.c:46
Read of size 4 at addr ffff8880739ab220 by task syz-executor200/5097

CPU: 0 PID: 5097 Comm: syz-executor200 Not tainted 6.9.0-rc6-syzkaller #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
Call Trace:
 <TASK>
 __dump_stack lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114
 print_address_description mm/kasan/report.c:377 [inline]
 print_report+0x169/0x550 mm/kasan/report.c:488
 kasan_report+0x143/0x180 mm/kasan/report.c:601
 sanity_check_extent_cache+0x370/0x410 fs/f2fs/extent_cache.c:46
 do_read_inode fs/f2fs/inode.c:509 [inline]
 f2fs_iget+0x33e1/0x46e0 fs/f2fs/inode.c:560
 f2fs_nfs_get_inode+0x74/0x100 fs/f2fs/super.c:3237
 generic_fh_to_dentry+0x9f/0xf0 fs/libfs.c:1413
 exportfs_decode_fh_raw+0x152/0x5f0 fs/exportfs/expfs.c:444
 exportfs_decode_fh+0x3c/0x80 fs/exportfs/expfs.c:584
 do_handle_to_path fs/fhandle.c:155 [inline]
 handle_to_path fs/fhandle.c:210 [inline]
 do_handle_open+0x495/0x650 fs/fhandle.c:226
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

We missed to cover sanity_check_extent_cache() w/ extent cache lock,
so, below race case may happen, result in use after free issue.

- f2fs_iget
 - do_read_inode
  - f2fs_init_read_extent_tree
  : add largest extent entry in to cache
					- shrink
					 - f2fs_shrink_read_extent_tree
					  - __shrink_extent_tree
					   - __detach_extent_node
					   : drop largest extent entry
  - sanity_check_extent_cache
  : access et->largest w/o lock

let's refactor sanity_check_extent_cache() to avoid extent cache access
and call it before f2fs_init_read_extent_tree() to fix this issue.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
694,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49933,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

blk_iocost: fix more out of bound shifts

Recently running UBSAN caught few out of bound shifts in the
ioc_forgive_debts() function:

UBSAN: shift-out-of-bounds in block/blk-iocost.c:2142:38
shift exponent 80 is too large for 64-bit type 'u64' (aka 'unsigned long
long')
...
UBSAN: shift-out-of-bounds in block/blk-iocost.c:2144:30
shift exponent 80 is too large for 64-bit type 'u64' (aka 'unsigned long
long')
...
Call Trace:
<IRQ>
dump_stack_lvl+0xca/0x130
__ubsan_handle_shift_out_of_bounds+0x22c/0x280
? __lock_acquire+0x6441/0x7c10
ioc_timer_fn+0x6cec/0x7750
? blk_iocost_init+0x720/0x720
? call_timer_fn+0x5d/0x470
call_timer_fn+0xfa/0x470
? blk_iocost_init+0x720/0x720
__run_timer_base+0x519/0x700
...

Actual impact of this issue was not identified but I propose to fix the
undefined behaviour.
The proposed fix to prevent those out of bound shifts consist of
precalculating exponent before using it the shift operations by taking
min value from the actual exponent and maximum possible number of bits.",Linux,Linux,"7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3, 7caa47151ab2e644dd221f741ec7578d9532c9a3"
693,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43833,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: v4l: async: Fix NULL pointer dereference in adding ancillary links

In v4l2_async_create_ancillary_links(), ancillary links are created for
lens and flash sub-devices. These are sub-device to sub-device links and
if the async notifier is related to a V4L2 device, the source sub-device
of the ancillary link is NULL, leading to a NULL pointer dereference.
Check the notifier's sd field is non-NULL in
v4l2_async_create_ancillary_links().

[Sakari Ailus: Reword the subject and commit messages slightly.]",Linux,Linux,"aa4faf6eb27132532d5a133d9241254c16d4bafa, aa4faf6eb27132532d5a133d9241254c16d4bafa, aa4faf6eb27132532d5a133d9241254c16d4bafa, aa4faf6eb27132532d5a133d9241254c16d4bafa"
692,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46808,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add missing NULL pointer check within dpcd_extend_address_range

[Why & How]
ASSERT if return NULL from kcalloc.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
660,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46744,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Squashfs: sanity check symbolic link size

Syzkiller reports a ""KMSAN: uninit-value in pick_link"" bug.

This is caused by an uninitialised page, which is ultimately caused
by a corrupted symbolic link size read from disk.

The reason why the corrupted symlink size causes an uninitialised
page is due to the following sequence of events:

1. squashfs_read_inode() is called to read the symbolic
   link from disk.  This assigns the corrupted value
   3875536935 to inode->i_size.

2. Later squashfs_symlink_read_folio() is called, which assigns
   this corrupted value to the length variable, which being a
   signed int, overflows producing a negative number.

3. The following loop that fills in the page contents checks that
   the copied bytes is less than length, which being negative means
   the loop is skipped, producing an uninitialised page.

This patch adds a sanity check which checks that the symbolic
link size is not larger than expected.

--

V2: fix spelling mistake.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
668,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44943,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm: gup: stop abusing try_grab_folio

A kernel warning was reported when pinning folio in CMA memory when
launching SEV virtual machine.  The splat looks like:

[  464.325306] WARNING: CPU: 13 PID: 6734 at mm/gup.c:1313 __get_user_pages+0x423/0x520
[  464.325464] CPU: 13 PID: 6734 Comm: qemu-kvm Kdump: loaded Not tainted 6.6.33+ #6
[  464.325477] RIP: 0010:__get_user_pages+0x423/0x520
[  464.325515] Call Trace:
[  464.325520]  <TASK>
[  464.325523]  ? __get_user_pages+0x423/0x520
[  464.325528]  ? __warn+0x81/0x130
[  464.325536]  ? __get_user_pages+0x423/0x520
[  464.325541]  ? report_bug+0x171/0x1a0
[  464.325549]  ? handle_bug+0x3c/0x70
[  464.325554]  ? exc_invalid_op+0x17/0x70
[  464.325558]  ? asm_exc_invalid_op+0x1a/0x20
[  464.325567]  ? __get_user_pages+0x423/0x520
[  464.325575]  __gup_longterm_locked+0x212/0x7a0
[  464.325583]  internal_get_user_pages_fast+0xfb/0x190
[  464.325590]  pin_user_pages_fast+0x47/0x60
[  464.325598]  sev_pin_memory+0xca/0x170 [kvm_amd]
[  464.325616]  sev_mem_enc_register_region+0x81/0x130 [kvm_amd]

Per the analysis done by yangge, when starting the SEV virtual machine, it
will call pin_user_pages_fast(..., FOLL_LONGTERM, ...) to pin the memory. 
But the page is in CMA area, so fast GUP will fail then fallback to the
slow path due to the longterm pinnalbe check in try_grab_folio().

The slow path will try to pin the pages then migrate them out of CMA area.
But the slow path also uses try_grab_folio() to pin the page, it will
also fail due to the same check then the above warning is triggered.

In addition, the try_grab_folio() is supposed to be used in fast path and
it elevates folio refcount by using add ref unless zero.  We are guaranteed
to have at least one stable reference in slow path, so the simple atomic add
could be used.  The performance difference should be trivial, but the
misuse may be confusing and misleading.

Redefined try_grab_folio() to try_grab_folio_fast(), and try_grab_page()
to try_grab_folio(), and use them in the proper paths.  This solves both
the abuse and the kernel warning.

The proper naming makes their usecase more clear and should prevent from
abusing in the future.

peterx said:

: The user will see the pin fails, for gpu-slow it further triggers the WARN
: right below that failure (as in the original report):
: 
:         folio = try_grab_folio(page, page_increm - 1,
:                                 foll_flags);
:         if (WARN_ON_ONCE(!folio)) { <------------------------ here
:                 /*
:                         * Release the 1st page ref if the
:                         * folio is problematic, fail hard.
:                         */
:                 gup_put_folio(page_folio(page), 1,
:                                 foll_flags);
:                 ret = -EFAULT;
:                 goto out;
:         }

[1] https://lore.kernel.org/linux-mm/1719478388-31917-1-git-send-email-yangge1116@126.com/

[shy828301@gmail.com: fix implicit declaration of function try_grab_folio_fast]
  Link: https://lkml.kernel.org/r/CAHbLzkowMSso-4Nufc9hcMehQsK9PNz3OSu-+eniU-2Mm-xjhA@mail.gmail.com",Linux,Linux,"57edfcfd3419b4799353d8cbd6ce49da075cfdbd, 57edfcfd3419b4799353d8cbd6ce49da075cfdbd"
667,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43830,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

leds: trigger: Unregister sysfs attributes before calling deactivate()

Triggers which have trigger specific sysfs attributes typically store
related data in trigger-data allocated by the activate() callback and
freed by the deactivate() callback.

Calling device_remove_groups() after calling deactivate() leaves a window
where the sysfs attributes show/store functions could be called after
deactivation and then operate on the just freed trigger-data.

Move the device_remove_groups() call to before deactivate() to close
this race window.

This also makes the deactivation path properly do things in reverse order
of the activation path which calls the activate() callback before calling
device_add_groups().",Linux,Linux,"a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49, a7e7a3156300a7e1982b03cc9cb8fb0c86434c49"
666,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50184,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

virtio_pmem: Check device status before requesting flush

If a pmem device is in a bad status, the driver side could wait for
host ack forever in virtio_pmem_flush(), causing the system to hang.

So add a status check in the beginning of virtio_pmem_flush() to return
early if the device is not activated.",Linux,Linux,"6e84200c0a2994b991259d19450eee561029bf70, 6e84200c0a2994b991259d19450eee561029bf70, 6e84200c0a2994b991259d19450eee561029bf70, 6e84200c0a2994b991259d19450eee561029bf70, 6e84200c0a2994b991259d19450eee561029bf70, 6e84200c0a2994b991259d19450eee561029bf70, 6e84200c0a2994b991259d19450eee561029bf70"
665,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-40910,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ax25: Fix refcount imbalance on inbound connections

When releasing a socket in ax25_release(), we call netdev_put() to
decrease the refcount on the associated ax.25 device. However, the
execution path for accepting an incoming connection never calls
netdev_hold(). This imbalance leads to refcount errors, and ultimately
to kernel crashes.

A typical call trace for the above situation will start with one of the
following errors:

    refcount_t: decrement hit 0; leaking memory.
    refcount_t: underflow; use-after-free.

And will then have a trace like:

    Call Trace:
    <TASK>
    ? show_regs+0x64/0x70
    ? __warn+0x83/0x120
    ? refcount_warn_saturate+0xb2/0x100
    ? report_bug+0x158/0x190
    ? prb_read_valid+0x20/0x30
    ? handle_bug+0x3e/0x70
    ? exc_invalid_op+0x1c/0x70
    ? asm_exc_invalid_op+0x1f/0x30
    ? refcount_warn_saturate+0xb2/0x100
    ? refcount_warn_saturate+0xb2/0x100
    ax25_release+0x2ad/0x360
    __sock_release+0x35/0xa0
    sock_close+0x19/0x20
    [...]

On reboot (or any attempt to remove the interface), the kernel gets
stuck in an infinite loop:

    unregister_netdevice: waiting for ax0 to become free. Usage count = 0

This patch corrects these issues by ensuring that we call netdev_hold()
and ax25_dev_hold() for new connections in ax25_accept(). This makes the
logic leading to ax25_accept() match the logic for ax25_bind(): in both
cases we increment the refcount, which is ultimately decremented in
ax25_release().",Linux,Linux,"9fd75b66b8f68498454d685dc4ba13192ae069b0, 9fd75b66b8f68498454d685dc4ba13192ae069b0, 9fd75b66b8f68498454d685dc4ba13192ae069b0, 9fd75b66b8f68498454d685dc4ba13192ae069b0"
664,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46811,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix index may exceed array range within fpu_update_bw_bounding_box

[Why]
Coverity reports OVERRUN warning. soc.num_states could
be 40. But array range of bw_params->clk_table.entries is 8.

[How]
Assert if soc.num_states greater than 8.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
663,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44975,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

cgroup/cpuset: fix panic caused by partcmd_update

We find a bug as below:
BUG: unable to handle page fault for address: 00000003
PGD 0 P4D 0
Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 3 PID: 358 Comm: bash Tainted: G        W I        6.6.0-10893-g60d6
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/4
RIP: 0010:partition_sched_domains_locked+0x483/0x600
Code: 01 48 85 d2 74 0d 48 83 05 29 3f f8 03 01 f3 48 0f bc c2 89 c0 48 9
RSP: 0018:ffffc90000fdbc58 EFLAGS: 00000202
RAX: 0000000100000003 RBX: ffff888100b3dfa0 RCX: 0000000000000000
RDX: 0000000000000000 RSI: 0000000000000000 RDI: 000000000002fe80
RBP: ffff888100b3dfb0 R08: 0000000000000001 R09: 0000000000000000
R10: ffffc90000fdbcb0 R11: 0000000000000004 R12: 0000000000000002
R13: ffff888100a92b48 R14: 0000000000000000 R15: 0000000000000000
FS:  00007f44a5425740(0000) GS:ffff888237d80000(0000) knlGS:0000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000100030973 CR3: 000000010722c000 CR4: 00000000000006e0
Call Trace:
 <TASK>
 ? show_regs+0x8c/0xa0
 ? __die_body+0x23/0xa0
 ? __die+0x3a/0x50
 ? page_fault_oops+0x1d2/0x5c0
 ? partition_sched_domains_locked+0x483/0x600
 ? search_module_extables+0x2a/0xb0
 ? search_exception_tables+0x67/0x90
 ? kernelmode_fixup_or_oops+0x144/0x1b0
 ? __bad_area_nosemaphore+0x211/0x360
 ? up_read+0x3b/0x50
 ? bad_area_nosemaphore+0x1a/0x30
 ? exc_page_fault+0x890/0xd90
 ? __lock_acquire.constprop.0+0x24f/0x8d0
 ? __lock_acquire.constprop.0+0x24f/0x8d0
 ? asm_exc_page_fault+0x26/0x30
 ? partition_sched_domains_locked+0x483/0x600
 ? partition_sched_domains_locked+0xf0/0x600
 rebuild_sched_domains_locked+0x806/0xdc0
 update_partition_sd_lb+0x118/0x130
 cpuset_write_resmask+0xffc/0x1420
 cgroup_file_write+0xb2/0x290
 kernfs_fop_write_iter+0x194/0x290
 new_sync_write+0xeb/0x160
 vfs_write+0x16f/0x1d0
 ksys_write+0x81/0x180
 __x64_sys_write+0x21/0x30
 x64_sys_call+0x2f25/0x4630
 do_syscall_64+0x44/0xb0
 entry_SYSCALL_64_after_hwframe+0x78/0xe2
RIP: 0033:0x7f44a553c887

It can be reproduced with cammands:
cd /sys/fs/cgroup/
mkdir test
cd test/
echo +cpuset > ../cgroup.subtree_control
echo root > cpuset.cpus.partition
cat /sys/fs/cgroup/cpuset.cpus.effective
0-3
echo 0-3 > cpuset.cpus // taking away all cpus from root

This issue is caused by the incorrect rebuilding of scheduling domains.
In this scenario, test/cpuset.cpus.partition should be an invalid root
and should not trigger the rebuilding of scheduling domains. When calling
update_parent_effective_cpumask with partcmd_update, if newmask is not
null, it should recheck newmask whether there are cpus is available
for parect/cs that has tasks.",Linux,Linux,"0c7f293efc87a06b51db9aa65256f8cb0a5a0a21, 0c7f293efc87a06b51db9aa65256f8cb0a5a0a21"
662,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42294,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

block: fix deadlock between sd_remove & sd_release

Our test report the following hung task:

[ 2538.459400] INFO: task ""kworker/0:0"":7 blocked for more than 188 seconds.
[ 2538.459427] Call trace:
[ 2538.459430]  __switch_to+0x174/0x338
[ 2538.459436]  __schedule+0x628/0x9c4
[ 2538.459442]  schedule+0x7c/0xe8
[ 2538.459447]  schedule_preempt_disabled+0x24/0x40
[ 2538.459453]  __mutex_lock+0x3ec/0xf04
[ 2538.459456]  __mutex_lock_slowpath+0x14/0x24
[ 2538.459459]  mutex_lock+0x30/0xd8
[ 2538.459462]  del_gendisk+0xdc/0x350
[ 2538.459466]  sd_remove+0x30/0x60
[ 2538.459470]  device_release_driver_internal+0x1c4/0x2c4
[ 2538.459474]  device_release_driver+0x18/0x28
[ 2538.459478]  bus_remove_device+0x15c/0x174
[ 2538.459483]  device_del+0x1d0/0x358
[ 2538.459488]  __scsi_remove_device+0xa8/0x198
[ 2538.459493]  scsi_forget_host+0x50/0x70
[ 2538.459497]  scsi_remove_host+0x80/0x180
[ 2538.459502]  usb_stor_disconnect+0x68/0xf4
[ 2538.459506]  usb_unbind_interface+0xd4/0x280
[ 2538.459510]  device_release_driver_internal+0x1c4/0x2c4
[ 2538.459514]  device_release_driver+0x18/0x28
[ 2538.459518]  bus_remove_device+0x15c/0x174
[ 2538.459523]  device_del+0x1d0/0x358
[ 2538.459528]  usb_disable_device+0x84/0x194
[ 2538.459532]  usb_disconnect+0xec/0x300
[ 2538.459537]  hub_event+0xb80/0x1870
[ 2538.459541]  process_scheduled_works+0x248/0x4dc
[ 2538.459545]  worker_thread+0x244/0x334
[ 2538.459549]  kthread+0x114/0x1bc

[ 2538.461001] INFO: task ""fsck."":15415 blocked for more than 188 seconds.
[ 2538.461014] Call trace:
[ 2538.461016]  __switch_to+0x174/0x338
[ 2538.461021]  __schedule+0x628/0x9c4
[ 2538.461025]  schedule+0x7c/0xe8
[ 2538.461030]  blk_queue_enter+0xc4/0x160
[ 2538.461034]  blk_mq_alloc_request+0x120/0x1d4
[ 2538.461037]  scsi_execute_cmd+0x7c/0x23c
[ 2538.461040]  ioctl_internal_command+0x5c/0x164
[ 2538.461046]  scsi_set_medium_removal+0x5c/0xb0
[ 2538.461051]  sd_release+0x50/0x94
[ 2538.461054]  blkdev_put+0x190/0x28c
[ 2538.461058]  blkdev_release+0x28/0x40
[ 2538.461063]  __fput+0xf8/0x2a8
[ 2538.461066]  __fput_sync+0x28/0x5c
[ 2538.461070]  __arm64_sys_close+0x84/0xe8
[ 2538.461073]  invoke_syscall+0x58/0x114
[ 2538.461078]  el0_svc_common+0xac/0xe0
[ 2538.461082]  do_el0_svc+0x1c/0x28
[ 2538.461087]  el0_svc+0x38/0x68
[ 2538.461090]  el0t_64_sync_handler+0x68/0xbc
[ 2538.461093]  el0t_64_sync+0x1a8/0x1ac

  T1:				T2:
  sd_remove
  del_gendisk
  __blk_mark_disk_dead
  blk_freeze_queue_start
  ++q->mq_freeze_depth
  				bdev_release
 				mutex_lock(&disk->open_mutex)
  				sd_release
 				scsi_execute_cmd
 				blk_queue_enter
 				wait_event(!q->mq_freeze_depth)
  mutex_lock(&disk->open_mutex)

SCSI does not set GD_OWNS_QUEUE, so QUEUE_FLAG_DYING is not set in
this scenario. This is a classic ABBA deadlock. To fix the deadlock,
make sure we don't try to acquire disk->open_mutex after freezing
the queue.",Linux,Linux,"eec1be4c30df73238b936fa9f3653773a6f8b15c, eec1be4c30df73238b936fa9f3653773a6f8b15c, eec1be4c30df73238b936fa9f3653773a6f8b15c"
661,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47683,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Skip Recompute DSC Params if no Stream on Link

[why]
Encounter NULL pointer dereference uner mst + dsc setup.

BUG: kernel NULL pointer dereference, address: 0000000000000008
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP NOPTI
    CPU: 4 PID: 917 Comm: sway Not tainted 6.3.9-arch1-1 #1 124dc55df4f5272ccb409f39ef4872fc2b3376a2
    Hardware name: LENOVO 20NKS01Y00/20NKS01Y00, BIOS R12ET61W(1.31 ) 07/28/2022
    RIP: 0010:drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper]
    Code: 01 00 00 48 8b 85 60 05 00 00 48 63 80 88 00 00 00 3b 43 28 0f 8d 2e 01 00 00 48 8b 53 30 48 8d 04 80 48 8d 04 c2 48 8b 40 18 <48> 8>
    RSP: 0018:ffff960cc2df77d8 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: ffff8afb87e81280 RCX: 0000000000000224
    RDX: ffff8afb9ee37c00 RSI: ffff8afb8da1a578 RDI: ffff8afb87e81280
    RBP: ffff8afb83d67000 R08: 0000000000000001 R09: ffff8afb9652f850
    R10: ffff960cc2df7908 R11: 0000000000000002 R12: 0000000000000000
    R13: ffff8afb8d7688a0 R14: ffff8afb8da1a578 R15: 0000000000000224
    FS:  00007f4dac35ce00(0000) GS:ffff8afe30b00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000008 CR3: 000000010ddc6000 CR4: 00000000003506e0
    Call Trace:
<TASK>
     ? __die+0x23/0x70
     ? page_fault_oops+0x171/0x4e0
     ? plist_add+0xbe/0x100
     ? exc_page_fault+0x7c/0x180
     ? asm_exc_page_fault+0x26/0x30
     ? drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
     ? drm_dp_atomic_find_time_slots+0x28/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
     compute_mst_dsc_configs_for_link+0x2ff/0xa40 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     ? fill_plane_buffer_attributes+0x419/0x510 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     compute_mst_dsc_configs_for_state+0x1e1/0x250 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     amdgpu_dm_atomic_check+0xecd/0x1190 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     drm_atomic_check_only+0x5c5/0xa40
     drm_mode_atomic_ioctl+0x76e/0xbc0

[how]
dsc recompute should be skipped if no mode change detected on the new
request. If detected, keep checking whether the stream is already on
current state or not.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
659,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52498,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PM: sleep: Fix possible deadlocks in core system-wide PM code

It is reported that in low-memory situations the system-wide resume core
code deadlocks, because async_schedule_dev() executes its argument
function synchronously if it cannot allocate memory (and not only in
that case) and that function attempts to acquire a mutex that is already
held.  Executing the argument function synchronously from within
dpm_async_fn() may also be problematic for ordering reasons (it may
cause a consumer device's resume callback to be invoked before a
requisite supplier device's one, for example).

Address this by changing the code in question to use
async_schedule_dev_nocall() for scheduling the asynchronous
execution of device suspend and resume functions and to directly
run them synchronously if async_schedule_dev_nocall() returns false.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
670,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46774,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/rtas: Prevent Spectre v1 gadget construction in sys_rtas()

Smatch warns:

  arch/powerpc/kernel/rtas.c:1932 __do_sys_rtas() warn: potential
  spectre issue 'args.args' [r] (local cap)

The 'nargs' and 'nret' locals come directly from a user-supplied
buffer and are used as indexes into a small stack-based array and as
inputs to copy_to_user() after they are subject to bounds checks.

Use array_index_nospec() after the bounds checks to clamp these values
for speculative execution.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
658,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47692,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: return -EINVAL when namelen is 0

When we have a corrupted main.sqlite in /var/lib/nfs/nfsdcld/, it may
result in namelen being 0, which will cause memdup_user() to return
ZERO_SIZE_PTR.
When we access the name.data that has been assigned the value of
ZERO_SIZE_PTR in nfs4_client_to_reclaim(), null pointer dereference is
triggered.

[ T1205] ==================================================================
[ T1205] BUG: KASAN: null-ptr-deref in nfs4_client_to_reclaim+0xe9/0x260
[ T1205] Read of size 1 at addr 0000000000000010 by task nfsdcld/1205
[ T1205]
[ T1205] CPU: 11 PID: 1205 Comm: nfsdcld Not tainted 5.10.0-00003-g2c1423731b8d #406
[ T1205] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS ?-20190727_073836-buildvm-ppc64le-16.ppc.fedoraproject.org-3.fc31 04/01/2014
[ T1205] Call Trace:
[ T1205]  dump_stack+0x9a/0xd0
[ T1205]  ? nfs4_client_to_reclaim+0xe9/0x260
[ T1205]  __kasan_report.cold+0x34/0x84
[ T1205]  ? nfs4_client_to_reclaim+0xe9/0x260
[ T1205]  kasan_report+0x3a/0x50
[ T1205]  nfs4_client_to_reclaim+0xe9/0x260
[ T1205]  ? nfsd4_release_lockowner+0x410/0x410
[ T1205]  cld_pipe_downcall+0x5ca/0x760
[ T1205]  ? nfsd4_cld_tracking_exit+0x1d0/0x1d0
[ T1205]  ? down_write_killable_nested+0x170/0x170
[ T1205]  ? avc_policy_seqno+0x28/0x40
[ T1205]  ? selinux_file_permission+0x1b4/0x1e0
[ T1205]  rpc_pipe_write+0x84/0xb0
[ T1205]  vfs_write+0x143/0x520
[ T1205]  ksys_write+0xc9/0x170
[ T1205]  ? __ia32_sys_read+0x50/0x50
[ T1205]  ? ktime_get_coarse_real_ts64+0xfe/0x110
[ T1205]  ? ktime_get_coarse_real_ts64+0xa2/0x110
[ T1205]  do_syscall_64+0x33/0x40
[ T1205]  entry_SYSCALL_64_after_hwframe+0x67/0xd1
[ T1205] RIP: 0033:0x7fdbdb761bc7
[ T1205] Code: 0f 00 f7 d8 64 89 02 48 c7 c0 ff ff ff ff eb b7 0f 1f 00 f3 0f 1e fa 64 8b 04 25 18 00 00 00 85 c0 75 10 b8 01 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 514
[ T1205] RSP: 002b:00007fff8c4b7248 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
[ T1205] RAX: ffffffffffffffda RBX: 000000000000042b RCX: 00007fdbdb761bc7
[ T1205] RDX: 000000000000042b RSI: 00007fff8c4b75f0 RDI: 0000000000000008
[ T1205] RBP: 00007fdbdb761bb0 R08: 0000000000000000 R09: 0000000000000001
[ T1205] R10: 0000000000000000 R11: 0000000000000246 R12: 000000000000042b
[ T1205] R13: 0000000000000008 R14: 00007fff8c4b75f0 R15: 0000000000000000
[ T1205] ==================================================================

Fix it by checking namelen.",Linux,Linux,"74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53, 74725959c33c14114fdce1e36e3504d106584d53"
657,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47757,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix potential oob read in nilfs_btree_check_delete()

The function nilfs_btree_check_delete(), which checks whether degeneration
to direct mapping occurs before deleting a b-tree entry, causes memory
access outside the block buffer when retrieving the maximum key if the
root node has no entries.

This does not usually happen because b-tree mappings with 0 child nodes
are never created by mkfs.nilfs2 or nilfs2 itself.  However, it can happen
if the b-tree root node read from a device is configured that way, so fix
this potential issue by adding a check for that case.",Linux,Linux,"17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4"
656,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49902,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: check if leafidx greater than num leaves per dmap tree

syzbot report a out of bounds in dbSplit, it because dmt_leafidx greater
than num leaves per dmap tree, add a checking for dmt_leafidx in dbFindLeaf.

Shaggy:
Modified sanity check to apply to control pages as well as leaf pages.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
655,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43875,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: endpoint: Clean up error handling in vpci_scan_bus()

Smatch complains about inconsistent NULL checking in vpci_scan_bus():

    drivers/pci/endpoint/functions/pci-epf-vntb.c:1024 vpci_scan_bus() error: we previously assumed 'vpci_bus' could be null (see line 1021)

Instead of printing an error message and then crashing we should return
an error code and clean up.

Also the NULL check is reversed so it prints an error for success
instead of failure.",Linux,Linux,"e2b6ef72b7aea9d7d480d2df499bcd1c93247abb, e35f56bb03304abc92c928b641af41ca372966bb, e35f56bb03304abc92c928b641af41ca372966bb, e35f56bb03304abc92c928b641af41ca372966bb, e35f56bb03304abc92c928b641af41ca372966bb"
654,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42295,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: handle inconsistent state in nilfs_btnode_create_block()

Syzbot reported that a buffer state inconsistency was detected in
nilfs_btnode_create_block(), triggering a kernel bug.

It is not appropriate to treat this inconsistency as a bug; it can occur
if the argument block address (the buffer index of the newly created
block) is a virtual block number and has been reallocated due to
corruption of the bitmap used to manage its allocation state.

So, modify nilfs_btnode_create_block() and its callers to treat it as a
possible filesystem error, rather than triggering a kernel bug.",Linux,Linux,"a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c, a60be987d45dd510aeb54389526f9957cfab106c"
653,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26800,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tls: fix use-after-free on failed backlog decryption

When the decrypt request goes to the backlog and crypto_aead_decrypt
returns -EBUSY, tls_do_decryption will wait until all async
decryptions have completed. If one of them fails, tls_do_decryption
will return -EBADMSG and tls_decrypt_sg jumps to the error path,
releasing all the pages. But the pages have been passed to the async
callback, and have already been released by tls_decrypt_done.

The only true async case is when crypto_aead_decrypt returns
 -EINPROGRESS. With -EBUSY, we already waited so we can tell
tls_sw_recvmsg that the data is available for immediate copy, but we
need to notify tls_decrypt_sg (via the new ->async_done flag) that the
memory has already been released.",Linux,Linux,"cd1bbca03f3c1d845ce274c0d0a66de8e5929f72, 13eca403876bbea3716e82cdfe6f1e6febb38754, ab6397f072e5097f267abf5cb08a8004e6b17694, 8590541473188741055d27b955db0777569438e3"
652,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46718,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe: Don't overmap identity VRAM mapping

Overmapping the identity VRAM mapping is triggering hardware bugs on
certain platforms. Use 2M pages for the last unaligned (to 1G) VRAM
chunk.

v2:
 - Always use 2M pages for last chunk (Fei Yang)
 - break loop when 2M pages are used
 - Add assert for usable_size being 2M aligned
v3:
 - Fix checkpatch",Linux,Linux,"dd08ebf6c3525a7ea2186e636df064ea47281987, dd08ebf6c3525a7ea2186e636df064ea47281987"
651,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46691,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: typec: ucsi: Move unregister out of atomic section

Commit '9329933699b3 (""soc: qcom: pmic_glink: Make client-lock
non-sleeping"")' moved the pmic_glink client list under a spinlock, as it
is accessed by the rpmsg/glink callback, which in turn is invoked from
IRQ context.

This means that ucsi_unregister() is now called from atomic context,
which isn't feasible as it's expecting a sleepable context. An effort is
under way to get GLINK to invoke its callbacks in a sleepable context,
but until then lets schedule the unregistration.

A side effect of this is that ucsi_unregister() can now happen
after the remote processor, and thereby the communication link with it, is
gone. pmic_glink_send() is amended with a check to avoid the resulting NULL
pointer dereference.
This does however result in the user being informed about this error by
the following entry in the kernel log:

  ucsi_glink.pmic_glink_ucsi pmic_glink.ucsi.0: failed to send UCSI write request: -5",Linux,Linux,"9329933699b32d467a99befa20415c4b2172389a, 9329933699b32d467a99befa20415c4b2172389a"
669,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44950,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

serial: sc16is7xx: fix invalid FIFO access with special register set

When enabling access to the special register set, Receiver time-out and
RHR interrupts can happen. In this case, the IRQ handler will try to read
from the FIFO thru the RHR register at address 0x00, but address 0x00 is
mapped to DLL register, resulting in erroneous FIFO reading.

Call graph example:
    sc16is7xx_startup(): entry
    sc16is7xx_ms_proc(): entry
    sc16is7xx_set_termios(): entry
    sc16is7xx_set_baud(): DLH/DLL = $009C --> access special register set
    sc16is7xx_port_irq() entry            --> IIR is 0x0C
    sc16is7xx_handle_rx() entry
    sc16is7xx_fifo_read(): --> unable to access FIFO (RHR) because it is
                               mapped to DLL (LCR=LCR_CONF_MODE_A)
    sc16is7xx_set_baud(): exit --> Restore access to general register set

Fix the problem by claiming the efr_lock mutex when accessing the Special
register set.",Linux,Linux,"dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b"
671,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46805,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix the waring dereferencing hive

Check the amdgpu_hive_info *hive that maybe is NULL.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
691,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47734,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bonding: Fix unnecessary warnings and logs from bond_xdp_get_xmit_slave()

syzbot reported a WARNING in bond_xdp_get_xmit_slave. To reproduce
this[1], one bond device (bond1) has xdpdrv, which increases
bpf_master_redirect_enabled_key. Another bond device (bond0) which is
unsupported by XDP but its slave (veth3) has xdpgeneric that returns
XDP_TX. This triggers WARN_ON_ONCE() from the xdp_master_redirect().
To reduce unnecessary warnings and improve log management, we need to
delete the WARN_ON_ONCE() and add ratelimit to the netdev_err().

[1] Steps to reproduce:
    # Needs tx_xdp with return XDP_TX;
    ip l add veth0 type veth peer veth1
    ip l add veth3 type veth peer veth4
    ip l add bond0 type bond mode 6 # BOND_MODE_ALB, unsupported by XDP
    ip l add bond1 type bond # BOND_MODE_ROUNDROBIN by default
    ip l set veth0 master bond1
    ip l set bond1 up
    # Increases bpf_master_redirect_enabled_key
    ip l set dev bond1 xdpdrv object tx_xdp.o section xdp_tx
    ip l set veth3 master bond0
    ip l set bond0 up
    ip l set veth4 up
    # Triggers WARN_ON_ONCE() from the xdp_master_redirect()
    ip l set veth3 xdpgeneric object tx_xdp.o section xdp_tx",Linux,Linux,"9e2ee5c7e7c35d195e2aa0692a7241d47a433d1e, 9e2ee5c7e7c35d195e2aa0692a7241d47a433d1e, 9e2ee5c7e7c35d195e2aa0692a7241d47a433d1e, 9e2ee5c7e7c35d195e2aa0692a7241d47a433d1e, 9e2ee5c7e7c35d195e2aa0692a7241d47a433d1e, 9e2ee5c7e7c35d195e2aa0692a7241d47a433d1e"
682,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46780,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: protect references to superblock parameters exposed in sysfs

The superblock buffers of nilfs2 can not only be overwritten at runtime
for modifications/repairs, but they are also regularly swapped, replaced
during resizing, and even abandoned when degrading to one side due to
backing device issues.  So, accessing them requires mutual exclusion using
the reader/writer semaphore ""nilfs->ns_sem"".

Some sysfs attribute show methods read this superblock buffer without the
necessary mutual exclusion, which can cause problems with pointer
dereferencing and memory access, so fix it.",Linux,Linux,"da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53, da7141fb78db915680616e15677539fc8140cf53"
690,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43863,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/vmwgfx: Fix a deadlock in dma buf fence polling

Introduce a version of the fence ops that on release doesn't remove
the fence from the pending list, and thus doesn't require a lock to
fix poll->fence wait->fence unref deadlocks.

vmwgfx overwrites the wait callback to iterate over the list of all
fences and update their status, to do that it holds a lock to prevent
the list modifcations from other threads. The fence destroy callback
both deletes the fence and removes it from the list of pending
fences, for which it holds a lock.

dma buf polling cb unrefs a fence after it's been signaled: so the poll
calls the wait, which signals the fences, which are being destroyed.
The destruction tries to acquire the lock on the pending fences list
which it can never get because it's held by the wait from which it
was called.

Old bug, but not a lot of userspace apps were using dma-buf polling
interfaces. Fix those, in particular this fixes KDE stalls/deadlock.",Linux,Linux,"2298e804e96eb3635c39519c8287befd92460303, 2298e804e96eb3635c39519c8287befd92460303, 2298e804e96eb3635c39519c8287befd92460303, 2298e804e96eb3635c39519c8287befd92460303, 2298e804e96eb3635c39519c8287befd92460303"
689,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42077,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix DIO failure due to insufficient transaction credits

The code in ocfs2_dio_end_io_write() estimates number of necessary
transaction credits using ocfs2_calc_extend_credits().  This however does
not take into account that the IO could be arbitrarily large and can
contain arbitrary number of extents.

Extent tree manipulations do often extend the current transaction but not
in all of the cases.  For example if we have only single block extents in
the tree, ocfs2_mark_extent_written() will end up calling
ocfs2_replace_extent_rec() all the time and we will never extend the
current transaction and eventually exhaust all the transaction credits if
the IO contains many single block extents.  Once that happens a
WARN_ON(jbd2_handle_buffer_credits(handle) <= 0) is triggered in
jbd2_journal_dirty_metadata() and subsequently OCFS2 aborts in response to
this error.  This was actually triggered by one of our customers on a
heavily fragmented OCFS2 filesystem.

To fix the issue make sure the transaction always has enough credits for
one extent insert before each call of ocfs2_mark_extent_written().

Heming Zhao said:

------
PANIC: ""Kernel panic - not syncing: OCFS2: (device dm-1): panic forced after error""

PID: xxx  TASK: xxxx  CPU: 5  COMMAND: ""SubmitThread-CA""
  #0 machine_kexec at ffffffff8c069932
  #1 __crash_kexec at ffffffff8c1338fa
  #2 panic at ffffffff8c1d69b9
  #3 ocfs2_handle_error at ffffffffc0c86c0c [ocfs2]
  #4 __ocfs2_abort at ffffffffc0c88387 [ocfs2]
  #5 ocfs2_journal_dirty at ffffffffc0c51e98 [ocfs2]
  #6 ocfs2_split_extent at ffffffffc0c27ea3 [ocfs2]
  #7 ocfs2_change_extent_flag at ffffffffc0c28053 [ocfs2]
  #8 ocfs2_mark_extent_written at ffffffffc0c28347 [ocfs2]
  #9 ocfs2_dio_end_io_write at ffffffffc0c2bef9 [ocfs2]
#10 ocfs2_dio_end_io at ffffffffc0c2c0f5 [ocfs2]
#11 dio_complete at ffffffff8c2b9fa7
#12 do_blockdev_direct_IO at ffffffff8c2bc09f
#13 ocfs2_direct_IO at ffffffffc0c2b653 [ocfs2]
#14 generic_file_direct_write at ffffffff8c1dcf14
#15 __generic_file_write_iter at ffffffff8c1dd07b
#16 ocfs2_file_write_iter at ffffffffc0c49f1f [ocfs2]
#17 aio_write at ffffffff8c2cc72e
#18 kmem_cache_alloc at ffffffff8c248dde
#19 do_io_submit at ffffffff8c2ccada
#20 do_syscall_64 at ffffffff8c004984
#21 entry_SYSCALL_64_after_hwframe at ffffffff8c8000ba",Linux,Linux,"c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f, c15471f79506830f80eca0e7fe09b8213953ab5f"
688,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2022-48943,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: x86/mmu: make apf token non-zero to fix bug

In current async pagefault logic, when a page is ready, KVM relies on
kvm_arch_can_dequeue_async_page_present() to determine whether to deliver
a READY event to the Guest. This function test token value of struct
kvm_vcpu_pv_apf_data, which must be reset to zero by Guest kernel when a
READY event is finished by Guest. If value is zero meaning that a READY
event is done, so the KVM can deliver another.
But the kvm_arch_setup_async_pf() may produce a valid token with zero
value, which is confused with previous mention and may lead the loss of
this READY event.

This bug may cause task blocked forever in Guest:
 INFO: task stress:7532 blocked for more than 1254 seconds.
       Not tainted 5.10.0 #16
 ""echo 0 > /proc/sys/kernel/hung_task_timeout_secs"" disables this message.
 task:stress          state:D stack:    0 pid: 7532 ppid:  1409
 flags:0x00000080
 Call Trace:
  __schedule+0x1e7/0x650
  schedule+0x46/0xb0
  kvm_async_pf_task_wait_schedule+0xad/0xe0
  ? exit_to_user_mode_prepare+0x60/0x70
  __kvm_handle_async_pf+0x4f/0xb0
  ? asm_exc_page_fault+0x8/0x30
  exc_page_fault+0x6f/0x110
  ? asm_exc_page_fault+0x8/0x30
  asm_exc_page_fault+0x1e/0x30
 RIP: 0033:0x402d00
 RSP: 002b:00007ffd31912500 EFLAGS: 00010206
 RAX: 0000000000071000 RBX: ffffffffffffffff RCX: 00000000021a32b0
 RDX: 000000000007d011 RSI: 000000000007d000 RDI: 00000000021262b0
 RBP: 00000000021262b0 R08: 0000000000000003 R09: 0000000000000086
 R10: 00000000000000eb R11: 00007fefbdf2baa0 R12: 0000000000000000
 R13: 0000000000000002 R14: 000000000007d000 R15: 0000000000001000",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
687,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38553,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: fec: remove .ndo_poll_controller to avoid deadlocks

There is a deadlock issue found in sungem driver, please refer to the
commit ac0a230f719b (""eth: sungem: remove .ndo_poll_controller to avoid
deadlocks""). The root cause of the issue is that netpoll is in atomic
context and disable_irq() is called by .ndo_poll_controller interface
of sungem driver, however, disable_irq() might sleep. After analyzing
the implementation of fec_poll_controller(), the fec driver should have
the same issue. Due to the fec driver uses NAPI for TX completions, the
.ndo_poll_controller is unnecessary to be implemented in the fec driver,
so fec_poll_controller() can be safely removed.",Linux,Linux,"7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8, 7f5c6addcdc039c1a7c435857e6284ecac5d97c8"
686,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43860,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

remoteproc: imx_rproc: Skip over memory region when node value is NULL

In imx_rproc_addr_init() ""nph = of_count_phandle_with_args()"" just counts
number of phandles. But phandles may be empty. So of_parse_phandle() in
the parsing loop (0 < a < nph) may return NULL which is later dereferenced.
Adjust this issue by adding NULL-return check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.

[Fixed title to fit within the prescribed 70-75 charcters]",Linux,Linux,"a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf, a0ff4aa6f010801b2a61c203c6e09d01b110fddf"
685,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52497,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

erofs: fix lz4 inplace decompression

Currently EROFS can map another compressed buffer for inplace
decompression, that was used to handle the cases that some pages of
compressed data are actually not in-place I/O.

However, like most simple LZ77 algorithms, LZ4 expects the compressed
data is arranged at the end of the decompressed buffer and it
explicitly uses memmove() to handle overlapping:
  __________________________________________________________
 |_ direction of decompression --> ____ |_ compressed data _|

Although EROFS arranges compressed data like this, it typically maps two
individual virtual buffers so the relative order is uncertain.
Previously, it was hardly observed since LZ4 only uses memmove() for
short overlapped literals and x86/arm64 memmove implementations seem to
completely cover it up and they don't have this issue.  Juhyung reported
that EROFS data corruption can be found on a new Intel x86 processor.
After some analysis, it seems that recent x86 processors with the new
FSRM feature expose this issue with ""rep movsb"".

Let's strictly use the decompressed buffer for lz4 inplace
decompression for now.  Later, as an useful improvement, we could try
to tie up these two buffers together in the correct order.",Linux,Linux,"0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9, 0ffd71bcc3a03ebb3551661a36052488369c4de9"
684,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42101,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/nouveau: fix null pointer dereference in nouveau_connector_get_modes

In nouveau_connector_get_modes(), the return value of drm_mode_duplicate()
is assigned to mode, which will lead to a possible NULL pointer
dereference on failure of drm_mode_duplicate(). Add a check to avoid npd.",Linux,Linux,"6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12, 6ee738610f41b59733f63718f0bdbcba7d3a3f12"
683,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46817,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Stop amdgpu_dm initialize when stream nums greater than 6

[Why]
Coverity reports OVERRUN warning. Should abort amdgpu_dm
initialize.

[How]
Return failure to amdgpu_dm_init.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
681,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41068,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/sclp: Fix sclp_init() cleanup on failure

If sclp_init() fails it only partially cleans up: if there are multiple
failing calls to sclp_init() sclp_state_change_event will be added several
times to sclp_reg_list, which results in the following warning:

------------[ cut here ]------------
list_add double add: new=000003ffe1598c10, prev=000003ffe1598bf0, next=000003ffe1598c10.
WARNING: CPU: 0 PID: 1 at lib/list_debug.c:35 __list_add_valid_or_report+0xde/0xf8
CPU: 0 PID: 1 Comm: swapper/0 Not tainted 6.10.0-rc3
Krnl PSW : 0404c00180000000 000003ffe0d6076a (__list_add_valid_or_report+0xe2/0xf8)
           R:0 T:1 IO:0 EX:0 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 RI:0 EA:3
...
Call Trace:
 [<000003ffe0d6076a>] __list_add_valid_or_report+0xe2/0xf8
([<000003ffe0d60766>] __list_add_valid_or_report+0xde/0xf8)
 [<000003ffe0a8d37e>] sclp_init+0x40e/0x450
 [<000003ffe00009f2>] do_one_initcall+0x42/0x1e0
 [<000003ffe15b77a6>] do_initcalls+0x126/0x150
 [<000003ffe15b7a0a>] kernel_init_freeable+0x1ba/0x1f8
 [<000003ffe0d6650e>] kernel_init+0x2e/0x180
 [<000003ffe000301c>] __ret_from_fork+0x3c/0x60
 [<000003ffe0d759ca>] ret_from_fork+0xa/0x30

Fix this by removing sclp_state_change_event from sclp_reg_list when
sclp_init() fails.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
672,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42090,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

pinctrl: fix deadlock in create_pinctrl() when handling -EPROBE_DEFER

In create_pinctrl(), pinctrl_maps_mutex is acquired before calling
add_setting(). If add_setting() returns -EPROBE_DEFER, create_pinctrl()
calls pinctrl_free(). However, pinctrl_free() attempts to acquire
pinctrl_maps_mutex, which is already held by create_pinctrl(), leading to
a potential deadlock.

This patch resolves the issue by releasing pinctrl_maps_mutex before
calling pinctrl_free(), preventing the deadlock.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.",Linux,Linux,"42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7, 42fed7ba44e4e8c1fb27b28ad14490cb1daff3c7"
680,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43882,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

exec: Fix ToCToU between perm check and set-uid/gid usage

When opening a file for exec via do_filp_open(), permission checking is
done against the file's metadata at that moment, and on success, a file
pointer is passed back. Much later in the execve() code path, the file
metadata (specifically mode, uid, and gid) is used to determine if/how
to set the uid and gid. However, those values may have changed since the
permissions check, meaning the execution may gain unintended privileges.

For example, if a file could change permissions from executable and not
set-id:

---------x 1 root root 16048 Aug  7 13:16 target

to set-id and non-executable:

---S------ 1 root root 16048 Aug  7 13:16 target

it is possible to gain root privileges when execution should have been
disallowed.

While this race condition is rare in real-world scenarios, it has been
observed (and proven exploitable) when package managers are updating
the setuid bits of installed programs. Such files start with being
world-executable but then are adjusted to be group-exec with a set-uid
bit. For example, ""chmod o-x,u+s target"" makes ""target"" executable only
by uid ""root"" and gid ""cdrom"", while also becoming setuid-root:

-rwxr-xr-x 1 root cdrom 16048 Aug  7 13:16 target

becomes:

-rwsr-xr-- 1 root cdrom 16048 Aug  7 13:16 target

But racing the chmod means users without group ""cdrom"" membership can
get the permission to execute ""target"" just before the chmod, and when
the chmod finishes, the exec reaches brpm_fill_uid(), and performs the
setuid to root, violating the expressed authorization of ""only cdrom
group members can setuid to root"".

Re-check that we still have execute permissions in case the metadata
has changed. It would be better to keep a copy from the perm-check time,
but until we can do that refactoring, the least-bad option is to do a
full inode_permission() call (under inode lock). It is understood that
this is safe against dead-locks, but hardly optimal.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
679,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41042,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: prefer nft_chain_validate

nft_chain_validate already performs loop detection because a cycle will
result in a call stack overflow (ctx->level >= NFT_JUMP_STACK_SIZE).

It also follows maps via ->validate callback in nft_lookup, so there
appears no reason to iterate the maps again.

nf_tables_check_loops() and all its helper functions can be removed.
This improves ruleset load time significantly, from 23s down to 12s.

This also fixes a crash bug. Old loop detection code can result in
unbounded recursion:

BUG: TASK stack guard page was hit at ....
Oops: stack guard page: 0000 [#1] PREEMPT SMP KASAN
CPU: 4 PID: 1539 Comm: nft Not tainted 6.10.0-rc5+ #1
[..]

with a suitable ruleset during validation of register stores.

I can't see any actual reason to attempt to check for this from
nft_validate_register_store(), at this point the transaction is still in
progress, so we don't have a full picture of the rule graph.

For nf-next it might make sense to either remove it or make this depend
on table->validate_state in case we could catch an error earlier
(for improved error reporting to userspace).",Linux,Linux,"20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25, 20a69341f2d00cd042e81c82289fba8a13c05a25"
678,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42261,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Validate passed in drm syncobj handles in the timestamp extension

If userspace provides an unknown or invalid handle anywhere in the handle
array the rest of the driver will not handle that well.

Fix it by checking handle was looked up successfully or otherwise fail the
extension by jumping into the existing unwind.

(cherry picked from commit 8d1276d1b8f738c3afe1457d4dff5cc66fc848a3)",Linux,Linux,"9ba0ff3e083f6a4a0b6698f06bfff74805fefa5f, 9ba0ff3e083f6a4a0b6698f06bfff74805fefa5f"
677,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44983,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: flowtable: validate vlan header

Ensure there is sufficient room to access the protocol field of the
VLAN header, validate it once before the flowtable lookup.

=====================================================
BUG: KMSAN: uninit-value in nf_flow_offload_inet_hook+0x45a/0x5f0 net/netfilter/nf_flow_table_inet.c:32
 nf_flow_offload_inet_hook+0x45a/0x5f0 net/netfilter/nf_flow_table_inet.c:32
 nf_hook_entry_hookfn include/linux/netfilter.h:154 [inline]
 nf_hook_slow+0xf4/0x400 net/netfilter/core.c:626
 nf_hook_ingress include/linux/netfilter_netdev.h:34 [inline]
 nf_ingress net/core/dev.c:5440 [inline]",Linux,Linux,"4cd91f7c290f64fe430867ddbae10bff34657b6a, 4cd91f7c290f64fe430867ddbae10bff34657b6a, 4cd91f7c290f64fe430867ddbae10bff34657b6a, 4cd91f7c290f64fe430867ddbae10bff34657b6a, 4cd91f7c290f64fe430867ddbae10bff34657b6a"
676,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49851,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tpm: Clean up TPM space after command failure

tpm_dev_transmit prepares the TPM space before attempting command
transmission. However if the command fails no rollback of this
preparation is done. This can result in transient handles being leaked
if the device is subsequently closed with no further commands performed.

Fix this by flushing the space in the event of command transmission
failure.",Linux,Linux,"745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68, 745b361e989af21ad40811c2586b60229f870a68"
675,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36941,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: nl80211: don't free NULL coalescing rule

If the parsing fails, we can dereference a NULL pointer here.",Linux,Linux,"be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24, be29b99a9b51b0338eea3c66a58de53bbd01de24"
674,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45007,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

char: xillybus: Don't destroy workqueue from work item running on it

Triggered by a kref decrement, destroy_workqueue() may be called from
within a work item for destroying its own workqueue. This illegal
situation is averted by adding a module-global workqueue for exclusive
use of the offending work item. Other work items continue to be queued
on per-device workqueues to ensure performance.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
673,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38667,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

riscv: prevent pt_regs corruption for secondary idle threads

Top of the kernel thread stack should be reserved for pt_regs. However
this is not the case for the idle threads of the secondary boot harts.
Their stacks overlap with their pt_regs, so both may get corrupted.

Similar issue has been fixed for the primary hart, see c7cdd96eca28
(""riscv: prevent stack corruption by reserving task_pt_regs(p) early"").
However that fix was not propagated to the secondary harts. The problem
has been noticed in some CPU hotplug tests with V enabled. The function
smp_callin stored several registers on stack, corrupting top of pt_regs
structure including status field. As a result, kernel attempted to save
or restore inexistent V context.",Linux,Linux,"2875fe0561569f82d0e63658ccf0d11ce7da8922, 2875fe0561569f82d0e63658ccf0d11ce7da8922, 2875fe0561569f82d0e63658ccf0d11ce7da8922, 2875fe0561569f82d0e63658ccf0d11ce7da8922"
736,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49946,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ppp: do not assume bh is held in ppp_channel_bridge_input()

Networking receive path is usually handled from BH handler.
However, some protocols need to acquire the socket lock, and
packets might be stored in the socket backlog is the socket was
owned by a user process.

In this case, release_sock(), __release_sock(), and sk_backlog_rcv()
might call the sk->sk_backlog_rcv() handler in process context.

sybot caught ppp was not considering this case in
ppp_channel_bridge_input() :

WARNING: inconsistent lock state
6.11.0-rc7-syzkaller-g5f5673607153 #0 Not tainted
--------------------------------
inconsistent {SOFTIRQ-ON-W} -> {IN-SOFTIRQ-W} usage.
ksoftirqd/1/24 [HC0[0]:SC1[1]:HE1:SE0] takes:
 ffff0000db7f11e0 (&pch->downl){+.?.}-{2:2}, at: spin_lock include/linux/spinlock.h:351 [inline]
 ffff0000db7f11e0 (&pch->downl){+.?.}-{2:2}, at: ppp_channel_bridge_input drivers/net/ppp/ppp_generic.c:2272 [inline]
 ffff0000db7f11e0 (&pch->downl){+.?.}-{2:2}, at: ppp_input+0x16c/0x854 drivers/net/ppp/ppp_generic.c:2304
{SOFTIRQ-ON-W} state was registered at:
   lock_acquire+0x240/0x728 kernel/locking/lockdep.c:5759
   __raw_spin_lock include/linux/spinlock_api_smp.h:133 [inline]
   _raw_spin_lock+0x48/0x60 kernel/locking/spinlock.c:154
   spin_lock include/linux/spinlock.h:351 [inline]
   ppp_channel_bridge_input drivers/net/ppp/ppp_generic.c:2272 [inline]
   ppp_input+0x16c/0x854 drivers/net/ppp/ppp_generic.c:2304
   pppoe_rcv_core+0xfc/0x314 drivers/net/ppp/pppoe.c:379
   sk_backlog_rcv include/net/sock.h:1111 [inline]
   __release_sock+0x1a8/0x3d8 net/core/sock.c:3004
   release_sock+0x68/0x1b8 net/core/sock.c:3558
   pppoe_sendmsg+0xc8/0x5d8 drivers/net/ppp/pppoe.c:903
   sock_sendmsg_nosec net/socket.c:730 [inline]
   __sock_sendmsg net/socket.c:745 [inline]
   __sys_sendto+0x374/0x4f4 net/socket.c:2204
   __do_sys_sendto net/socket.c:2216 [inline]
   __se_sys_sendto net/socket.c:2212 [inline]
   __arm64_sys_sendto+0xd8/0xf8 net/socket.c:2212
   __invoke_syscall arch/arm64/kernel/syscall.c:35 [inline]
   invoke_syscall+0x98/0x2b8 arch/arm64/kernel/syscall.c:49
   el0_svc_common+0x130/0x23c arch/arm64/kernel/syscall.c:132
   do_el0_svc+0x48/0x58 arch/arm64/kernel/syscall.c:151
   el0_svc+0x54/0x168 arch/arm64/kernel/entry-common.c:712
   el0t_64_sync_handler+0x84/0xfc arch/arm64/kernel/entry-common.c:730
   el0t_64_sync+0x190/0x194 arch/arm64/kernel/entry.S:598
irq event stamp: 282914
 hardirqs last  enabled at (282914): [<ffff80008b42e30c>] __raw_spin_unlock_irqrestore include/linux/spinlock_api_smp.h:151 [inline]
 hardirqs last  enabled at (282914): [<ffff80008b42e30c>] _raw_spin_unlock_irqrestore+0x38/0x98 kernel/locking/spinlock.c:194
 hardirqs last disabled at (282913): [<ffff80008b42e13c>] __raw_spin_lock_irqsave include/linux/spinlock_api_smp.h:108 [inline]
 hardirqs last disabled at (282913): [<ffff80008b42e13c>] _raw_spin_lock_irqsave+0x2c/0x7c kernel/locking/spinlock.c:162
 softirqs last  enabled at (282904): [<ffff8000801f8e88>] softirq_handle_end kernel/softirq.c:400 [inline]
 softirqs last  enabled at (282904): [<ffff8000801f8e88>] handle_softirqs+0xa3c/0xbfc kernel/softirq.c:582
 softirqs last disabled at (282909): [<ffff8000801fbdf8>] run_ksoftirqd+0x70/0x158 kernel/softirq.c:928

other info that might help us debug this:
 Possible unsafe locking scenario:

       CPU0
       ----
  lock(&pch->downl);
  <Interrupt>
    lock(&pch->downl);

 *** DEADLOCK ***

1 lock held by ksoftirqd/1/24:
  #0: ffff80008f74dfa0 (rcu_read_lock){....}-{1:2}, at: rcu_lock_acquire+0x10/0x4c include/linux/rcupdate.h:325

stack backtrace:
CPU: 1 UID: 0 PID: 24 Comm: ksoftirqd/1 Not tainted 6.11.0-rc7-syzkaller-g5f5673607153 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 08/06/2024
Call trace:
  dump_backtrace+0x1b8/0x1e4 arch/arm64/kernel/stacktrace.c:319
  show_stack+0x2c/0x3c arch/arm64/kernel/stacktrace.c:326
  __dump_sta
---truncated---",Linux,Linux,"4cf476ced45d7f12df30a68e833b263e7a2202d1, 4cf476ced45d7f12df30a68e833b263e7a2202d1, 4cf476ced45d7f12df30a68e833b263e7a2202d1, 4cf476ced45d7f12df30a68e833b263e7a2202d1, 4cf476ced45d7f12df30a68e833b263e7a2202d1, 4cf476ced45d7f12df30a68e833b263e7a2202d1"
737,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46708,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

pinctrl: qcom: x1e80100: Fix special pin offsets

Remove the erroneus 0x100000 offset to prevent the boards from crashing
on pin state setting, as well as for the intended state changes to take
effect.",Linux,Linux,"05e4941d97ef05ddaa742a57301daab8a2f7db5b, 05e4941d97ef05ddaa742a57301daab8a2f7db5b"
738,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47695,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/rtrs-clt: Reset cid to con_num - 1 to stay in bounds

In the function init_conns(), after the create_con() and create_cm() for
loop if something fails. In the cleanup for loop after the destroy tag, we
access out of bound memory because cid is set to clt_path->s.con_num.

This commits resets the cid to clt_path->s.con_num - 1, to stay in bounds
in the cleanup loop later.",Linux,Linux,"6a98d71daea186247005099758af549e6afdd244, 6a98d71daea186247005099758af549e6afdd244, 6a98d71daea186247005099758af549e6afdd244, 6a98d71daea186247005099758af549e6afdd244, 6a98d71daea186247005099758af549e6afdd244, 6a98d71daea186247005099758af549e6afdd244"
793,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36893,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: typec: tcpm: Check for port partner validity before consuming it

typec_register_partner() does not guarantee partner registration
to always succeed. In the event of failure, port->partner is set
to the error value or NULL. Given that port->partner validity is
not checked, this results in the following crash:

Unable to handle kernel NULL pointer dereference at virtual address xx
 pc : run_state_machine+0x1bc8/0x1c08
 lr : run_state_machine+0x1b90/0x1c08
..
 Call trace:
   run_state_machine+0x1bc8/0x1c08
   tcpm_state_machine_work+0x94/0xe4
   kthread_worker_fn+0x118/0x328
   kthread+0x1d0/0x23c
   ret_from_fork+0x10/0x20

To prevent the crash, check for port->partner validity before
derefencing it in all the call sites.",Linux,Linux,"31220bd89c22a18478f52fcd8069e8e2adb8f4f2, 9b7cd3fe01f0d03cf5820b351a6be2a6e0a6da6f, c97cd0b4b54eb42aed7f6c3c295a2d137f6d2416, c97cd0b4b54eb42aed7f6c3c295a2d137f6d2416, c97cd0b4b54eb42aed7f6c3c295a2d137f6d2416"
801,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47501,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: Fix NULL pointer dereference in i40e_dbg_dump_desc

When trying to dump VFs VSI RX/TX descriptors
using debugfs there was a crash
due to NULL pointer dereference in i40e_dbg_dump_desc.
Added a check to i40e_dbg_dump_desc that checks if
VSI type is correct for dumping RX/TX descriptors.",Linux,Linux,"02e9c290814cc143ceccecb14eac3e7a05da745e, 02e9c290814cc143ceccecb14eac3e7a05da745e, 02e9c290814cc143ceccecb14eac3e7a05da745e"
800,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49927,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/ioapic: Handle allocation failures gracefully

Breno observed panics when using failslab under certain conditions during
runtime:

   can not alloc irq_pin_list (-1,0,20)
   Kernel panic - not syncing: IO-APIC: failed to add irq-pin. Can not proceed

   panic+0x4e9/0x590
   mp_irqdomain_alloc+0x9ab/0xa80
   irq_domain_alloc_irqs_locked+0x25d/0x8d0
   __irq_domain_alloc_irqs+0x80/0x110
   mp_map_pin_to_irq+0x645/0x890
   acpi_register_gsi_ioapic+0xe6/0x150
   hpet_open+0x313/0x480

That's a pointless panic which is a leftover of the historic IO/APIC code
which panic'ed during early boot when the interrupt allocation failed.

The only place which might justify panic is the PIT/HPET timer_check() code
which tries to figure out whether the timer interrupt is delivered through
the IO/APIC. But that code does not require to handle interrupt allocation
failures. If the interrupt cannot be allocated then timer delivery fails
and it either panics due to that or falls back to legacy mode.

Cure this by removing the panic wrapper around __add_pin_to_irq_node() and
making mp_irqdomain_alloc() aware of the failure condition and handle it as
any other failure in this function gracefully.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
799,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44937,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

platform/x86: intel-vbtn: Protect ACPI notify handler against recursion

Since commit e2ffcda16290 (""ACPI: OSL: Allow Notify () handlers to run on
all CPUs"") ACPI notify handlers like the intel-vbtn notify_handler() may
run on multiple CPU cores racing with themselves.

This race gets hit on Dell Venue 7140 tablets when undocking from
the keyboard, causing the handler to try and register priv->switches_dev
twice, as can be seen from the dev_info() message getting logged twice:

[ 83.861800] intel-vbtn INT33D6:00: Registering Intel Virtual Switches input-dev after receiving a switch event
[ 83.861858] input: Intel Virtual Switches as /devices/pci0000:00/0000:00:1f.0/PNP0C09:00/INT33D6:00/input/input17
[ 83.861865] intel-vbtn INT33D6:00: Registering Intel Virtual Switches input-dev after receiving a switch event

After which things go seriously wrong:
[ 83.861872] sysfs: cannot create duplicate filename '/devices/pci0000:00/0000:00:1f.0/PNP0C09:00/INT33D6:00/input/input17'
...
[ 83.861967] kobject: kobject_add_internal failed for input17 with -EEXIST, don't try to register things with the same name in the same directory.
[ 83.877338] BUG: kernel NULL pointer dereference, address: 0000000000000018
...

Protect intel-vbtn notify_handler() from racing with itself with a mutex
to fix this.",Linux,Linux,"e2ffcda1629012a2c1a3706432bc45fdc899a584, e2ffcda1629012a2c1a3706432bc45fdc899a584"
798,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43820,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

dm-raid: Fix WARN_ON_ONCE check for sync_thread in raid_resume

rm-raid devices will occasionally trigger the following warning when
being resumed after a table load because DM_RECOVERY_RUNNING is set:

WARNING: CPU: 7 PID: 5660 at drivers/md/dm-raid.c:4105 raid_resume+0xee/0x100 [dm_raid]

The failing check is:
WARN_ON_ONCE(test_bit(MD_RECOVERY_RUNNING, &mddev->recovery));

This check is designed to make sure that the sync thread isn't
registered, but md_check_recovery can set MD_RECOVERY_RUNNING without
the sync_thread ever getting registered. Instead of checking if
MD_RECOVERY_RUNNING is set, check if sync_thread is non-NULL.",Linux,Linux,"16c4770c75b1223998adbeb7286f9a15c65fba73, 16c4770c75b1223998adbeb7286f9a15c65fba73"
797,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41015,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: add bounds checking to ocfs2_check_dir_entry()

This adds sanity checks for ocfs2_dir_entry to make sure all members of
ocfs2_dir_entry don't stray beyond valid memory region.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
796,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42315,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

exfat: fix potential deadlock on __exfat_get_dentry_set

When accessing a file with more entries than ES_MAX_ENTRY_NUM, the bh-array
is allocated in __exfat_get_entry_set. The problem is that the bh-array is
allocated with GFP_KERNEL. It does not make sense. In the following cases,
a deadlock for sbi->s_lock between the two processes may occur.

       CPU0                CPU1
       ----                ----
  kswapd
   balance_pgdat
    lock(fs_reclaim)
                      exfat_iterate
                       lock(&sbi->s_lock)
                       exfat_readdir
                        exfat_get_uniname_from_ext_entry
                         exfat_get_dentry_set
                          __exfat_get_dentry_set
                           kmalloc_array
                            ...
                            lock(fs_reclaim)
    ...
    evict
     exfat_evict_inode
      lock(&sbi->s_lock)

To fix this, let's allocate bh-array with GFP_NOFS.",Linux,Linux,"bd3bdb9e0d656f760b11d0c638d35d7f7068144d, 92dcd7d6c6068bf4fd35a6f64d606e27d634807e, d8fe01ad2d8ab33aaf8f2efad9e8f1dae11c4b0c, a3ff29a95fde16906304455aa8c0bd84eb770258, a3ff29a95fde16906304455aa8c0bd84eb770258, a3ff29a95fde16906304455aa8c0bd84eb770258"
795,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46686,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

smb/client: avoid dereferencing rdata=NULL in smb2_new_read_req()

This happens when called from SMB2_read() while using rdma
and reaching the rdma_readwrite_threshold.",Linux,Linux,"edf38e9f4269591d26b3783c0b348c9345580c3c, a6559cc1d35d3eeafb0296aca347b2f745a28a74, a6559cc1d35d3eeafb0296aca347b2f745a28a74, a6559cc1d35d3eeafb0296aca347b2f745a28a74"
794,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44931,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

gpio: prevent potential speculation leaks in gpio_device_get_desc()

Userspace may trigger a speculative read of an address outside the gpio
descriptor array.
Users can do that by calling gpio_ioctl() with an offset out of range.
Offset is copied from user and then used as an array index to get
the gpio descriptor without sanitization in gpio_device_get_desc().

This change ensures that the offset is sanitized by using
array_index_nospec() to mitigate any possibility of speculative
information leaks.

This bug was discovered and resolved using Coverity Static Analysis
Security Testing (SAST) by Synopsys, Inc.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
792,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43825,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

iio: Fix the sorting functionality in iio_gts_build_avail_time_table

The sorting in iio_gts_build_avail_time_table is not working as intended.
It could result in an out-of-bounds access when the time is zero.

Here are more details:

1. When the gts->itime_table[i].time_us is zero, e.g., the time
sequence is `3, 0, 1`, the inner for-loop will not terminate and do
out-of-bound writes. This is because once `times[j] > new`, the value
`new` will be added in the current position and the `times[j]` will be
moved to `j+1` position, which makes the if-condition always hold.
Meanwhile, idx will be added one, making the loop keep running without
termination and out-of-bound write.
2. If none of the gts->itime_table[i].time_us is zero, the elements
will just be copied without being sorted as described in the comment
""Sort times from all tables to one and remove duplicates"".

For more details, please refer to
https://lore.kernel.org/all/6dd0d822-046c-4dd2-9532-79d7ab96ec05@gmail.com.",Linux,Linux,"38416c28e16890b52fdd5eb73479299ec3f062f3, 38416c28e16890b52fdd5eb73479299ec3f062f3, 38416c28e16890b52fdd5eb73479299ec3f062f3"
803,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49895,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix index out of bounds in DCN30 degamma hardware format translation

This commit addresses a potential index out of bounds issue in the
`cm3_helper_translate_curve_to_degamma_hw_format` function in the DCN30
color  management module. The issue could occur when the index 'i'
exceeds the  number of transfer function points (TRANSFER_FUNC_POINTS).

The fix adds a check to ensure 'i' is within bounds before accessing the
transfer function points. If 'i' is out of bounds, the function returns
false to indicate an error.

Reported by smatch:
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:338 cm3_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.red' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:339 cm3_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.green' 1025 <= s32max
drivers/gpu/drm/amd/amdgpu/../display/dc/dcn30/dcn30_cm_common.c:340 cm3_helper_translate_curve_to_degamma_hw_format() error: buffer overflow 'output_tf->tf_pts.blue' 1025 <= s32max",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
791,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45003,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vfs: Don't evict inode under the inode lru traversing context

The inode reclaiming process(See function prune_icache_sb) collects all
reclaimable inodes and mark them with I_FREEING flag at first, at that
time, other processes will be stuck if they try getting these inodes
(See function find_inode_fast), then the reclaiming process destroy the
inodes by function dispose_list(). Some filesystems(eg. ext4 with
ea_inode feature, ubifs with xattr) may do inode lookup in the inode
evicting callback function, if the inode lookup is operated under the
inode lru traversing context, deadlock problems may happen.

Case 1: In function ext4_evict_inode(), the ea inode lookup could happen
        if ea_inode feature is enabled, the lookup process will be stuck
	under the evicting context like this:

 1. File A has inode i_reg and an ea inode i_ea
 2. getfattr(A, xattr_buf) // i_ea is added into lru // lru->i_ea
 3. Then, following three processes running like this:

    PA                              PB
 echo 2 > /proc/sys/vm/drop_caches
  shrink_slab
   prune_dcache_sb
   // i_reg is added into lru, lru->i_ea->i_reg
   prune_icache_sb
    list_lru_walk_one
     inode_lru_isolate
      i_ea->i_state |= I_FREEING // set inode state
     inode_lru_isolate
      __iget(i_reg)
      spin_unlock(&i_reg->i_lock)
      spin_unlock(lru_lock)
                                     rm file A
                                      i_reg->nlink = 0
      iput(i_reg) // i_reg->nlink is 0, do evict
       ext4_evict_inode
        ext4_xattr_delete_inode
         ext4_xattr_inode_dec_ref_all
          ext4_xattr_inode_iget
           ext4_iget(i_ea->i_ino)
            iget_locked
             find_inode_fast
              __wait_on_freeing_inode(i_ea) ----→ AA deadlock
    dispose_list // cannot be executed by prune_icache_sb
     wake_up_bit(&i_ea->i_state)

Case 2: In deleted inode writing function ubifs_jnl_write_inode(), file
        deleting process holds BASEHD's wbuf->io_mutex while getting the
	xattr inode, which could race with inode reclaiming process(The
        reclaiming process could try locking BASEHD's wbuf->io_mutex in
	inode evicting function), then an ABBA deadlock problem would
	happen as following:

 1. File A has inode ia and a xattr(with inode ixa), regular file B has
    inode ib and a xattr.
 2. getfattr(A, xattr_buf) // ixa is added into lru // lru->ixa
 3. Then, following three processes running like this:

        PA                PB                        PC
                echo 2 > /proc/sys/vm/drop_caches
                 shrink_slab
                  prune_dcache_sb
                  // ib and ia are added into lru, lru->ixa->ib->ia
                  prune_icache_sb
                   list_lru_walk_one
                    inode_lru_isolate
                     ixa->i_state |= I_FREEING // set inode state
                    inode_lru_isolate
                     __iget(ib)
                     spin_unlock(&ib->i_lock)
                     spin_unlock(lru_lock)
                                                   rm file B
                                                    ib->nlink = 0
 rm file A
  iput(ia)
   ubifs_evict_inode(ia)
    ubifs_jnl_delete_inode(ia)
     ubifs_jnl_write_inode(ia)
      make_reservation(BASEHD) // Lock wbuf->io_mutex
      ubifs_iget(ixa->i_ino)
       iget_locked
        find_inode_fast
         __wait_on_freeing_inode(ixa)
          |          iput(ib) // ib->nlink is 0, do evict
          |           ubifs_evict_inode
          |            ubifs_jnl_delete_inode(ib)
          ↓             ubifs_jnl_write_inode
     ABBA deadlock ←-----make_reservation(BASEHD)
                   dispose_list // cannot be executed by prune_icache_sb
                    wake_up_bit(&ixa->i_state)

Fix the possible deadlock by using new inode state flag I_LRU_ISOLATING
to pin the inode in memory while inode_lru_isolate(
---truncated---",Linux,Linux,"e50e5129f384ae282adebfb561189cdb19b81cee, e50e5129f384ae282adebfb561189cdb19b81cee, e50e5129f384ae282adebfb561189cdb19b81cee, e50e5129f384ae282adebfb561189cdb19b81cee, e50e5129f384ae282adebfb561189cdb19b81cee, e50e5129f384ae282adebfb561189cdb19b81cee, e50e5129f384ae282adebfb561189cdb19b81cee"
790,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49860,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ACPI: sysfs: validate return type of _STR method

Only buffer objects are valid return values of _STR.

If something else is returned description_show() will access invalid
memory.",Linux,Linux,"d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba, d1efe3c324ead77d3f6cd85093b50f6bd2e17aba"
789,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50003,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix system hang while resume with TBT monitor

[Why]
Connected with a Thunderbolt monitor and do the suspend and the system
may hang while resume.

The TBT monitor HPD will be triggered during the resume procedure
and call the drm_client_modeset_probe() while
struct drm_connector connector->dev->master is NULL.

It will mess up the pipe topology after resume.

[How]
Skip the TBT monitor HPD during the resume procedure because we
currently will probe the connectors after resume by default.

(cherry picked from commit 453f86a26945207a16b8f66aaed5962dc2b95b85)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
788,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44965,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/mm: Fix pti_clone_pgtable() alignment assumption

Guenter reported dodgy crashes on an i386-nosmp build using GCC-11
that had the form of endless traps until entry stack exhaust and then
#DF from the stack guard.

It turned out that pti_clone_pgtable() had alignment assumptions on
the start address, notably it hard assumes start is PMD aligned. This
is true on x86_64, but very much not true on i386.

These assumptions can cause the end condition to malfunction, leading
to a 'short' clone. Guess what happens when the user mapping has a
short copy of the entry text?

Use the correct increment form for addr to avoid alignment
assumptions.",Linux,Linux,"16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526, 16a3fe634f6a568c6234b8747e5d50487fed3526"
787,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43884,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: MGMT: Add error handling to pair_device()

hci_conn_params_add() never checks for a NULL value and could lead to a NULL
pointer dereference causing a crash.

Fixed by adding error handling in the function.",Linux,Linux,"5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0, 5157b8a503fa834e8569c7fed06981e3d3d53db0"
786,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46852,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

dma-buf: heaps: Fix off-by-one in CMA heap fault handler

Until VM_DONTEXPAND was added in commit 1c1914d6e8c6 (""dma-buf: heaps:
Don't track CMA dma-buf pages under RssFile"") it was possible to obtain
a mapping larger than the buffer size via mremap and bypass the overflow
check in dma_buf_mmap_internal. When using such a mapping to attempt to
fault past the end of the buffer, the CMA heap fault handler also checks
the fault offset against the buffer size, but gets the boundary wrong by
1. Fix the boundary check so that we don't read off the end of the pages
array and insert an arbitrary page in the mapping.",Linux,Linux,"a5d2d29e24be8967ef78a1b1fb2292413e3b3df9, a5d2d29e24be8967ef78a1b1fb2292413e3b3df9, a5d2d29e24be8967ef78a1b1fb2292413e3b3df9, a5d2d29e24be8967ef78a1b1fb2292413e3b3df9, a5d2d29e24be8967ef78a1b1fb2292413e3b3df9, a5d2d29e24be8967ef78a1b1fb2292413e3b3df9"
785,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52594,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath9k: Fix potential array-index-out-of-bounds read in ath9k_htc_txstatus()

Fix an array-index-out-of-bounds read in ath9k_htc_txstatus(). The bug
occurs when txs->cnt, data from a URB provided by a USB device, is
bigger than the size of the array txs->txstatus, which is
HTC_MAX_TX_STATUS. WARN_ON() already checks it, but there is no bug
handling code after the check. Make the function return if that is the
case.

Found by a modified version of syzkaller.

UBSAN: array-index-out-of-bounds in htc_drv_txrx.c
index 13 is out of range for type '__wmi_event_txstatus [12]'
Call Trace:
 ath9k_htc_txstatus
 ath9k_wmi_event_tasklet
 tasklet_action_common
 __do_softirq
 irq_exit_rxu
 sysvec_apic_timer_interrupt",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
784,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46848,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

perf/x86/intel: Limit the period on Haswell

Running the ltp test cve-2015-3290 concurrently reports the following
warnings.

perfevents: irq loop stuck!
  WARNING: CPU: 31 PID: 32438 at arch/x86/events/intel/core.c:3174
  intel_pmu_handle_irq+0x285/0x370
  Call Trace:
   <NMI>
   ? __warn+0xa4/0x220
   ? intel_pmu_handle_irq+0x285/0x370
   ? __report_bug+0x123/0x130
   ? intel_pmu_handle_irq+0x285/0x370
   ? __report_bug+0x123/0x130
   ? intel_pmu_handle_irq+0x285/0x370
   ? report_bug+0x3e/0xa0
   ? handle_bug+0x3c/0x70
   ? exc_invalid_op+0x18/0x50
   ? asm_exc_invalid_op+0x1a/0x20
   ? irq_work_claim+0x1e/0x40
   ? intel_pmu_handle_irq+0x285/0x370
   perf_event_nmi_handler+0x3d/0x60
   nmi_handle+0x104/0x330

Thanks to Thomas Gleixner's analysis, the issue is caused by the low
initial period (1) of the frequency estimation algorithm, which triggers
the defects of the HW, specifically erratum HSW11 and HSW143. (For the
details, please refer https://lore.kernel.org/lkml/87plq9l5d2.ffs@tglx/)

The HSW11 requires a period larger than 100 for the INST_RETIRED.ALL
event, but the initial period in the freq mode is 1. The erratum is the
same as the BDM11, which has been supported in the kernel. A minimum
period of 128 is enforced as well on HSW.

HSW143 is regarding that the fixed counter 1 may overcount 32 with the
Hyper-Threading is enabled. However, based on the test, the hardware
has more issues than it tells. Besides the fixed counter 1, the message
'interrupt took too long' can be observed on any counter which was armed
with a period < 32 and two events expired in the same NMI. A minimum
period of 32 is enforced for the rest of the events.
The recommended workaround code of the HSW143 is not implemented.
Because it only addresses the issue for the fixed counter. It brings
extra overhead through extra MSR writing. No related overcounting issue
has been reported so far.",Linux,Linux,"3a632cb229bfb18b6d09822cc842451ea46c013e, 3a632cb229bfb18b6d09822cc842451ea46c013e, 3a632cb229bfb18b6d09822cc842451ea46c013e, 3a632cb229bfb18b6d09822cc842451ea46c013e"
802,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46832,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

MIPS: cevt-r4k: Don't call get_c0_compare_int if timer irq is installed

This avoids warning:

[    0.118053] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:283

Caused by get_c0_compare_int on secondary CPU.

We also skipped saving IRQ number to struct clock_event_device *cd as
it's never used by clockevent core, as per comments it's only meant
for ""non CPU local devices"".",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
804,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46678,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bonding: change ipsec_lock from spin lock to mutex

In the cited commit, bond->ipsec_lock is added to protect ipsec_list,
hence xdo_dev_state_add and xdo_dev_state_delete are called inside
this lock. As ipsec_lock is a spin lock and such xfrmdev ops may sleep,
""scheduling while atomic"" will be triggered when changing bond's
active slave.

[  101.055189] BUG: scheduling while atomic: bash/902/0x00000200
[  101.055726] Modules linked in:
[  101.058211] CPU: 3 PID: 902 Comm: bash Not tainted 6.9.0-rc4+ #1
[  101.058760] Hardware name:
[  101.059434] Call Trace:
[  101.059436]  <TASK>
[  101.060873]  dump_stack_lvl+0x51/0x60
[  101.061275]  __schedule_bug+0x4e/0x60
[  101.061682]  __schedule+0x612/0x7c0
[  101.062078]  ? __mod_timer+0x25c/0x370
[  101.062486]  schedule+0x25/0xd0
[  101.062845]  schedule_timeout+0x77/0xf0
[  101.063265]  ? asm_common_interrupt+0x22/0x40
[  101.063724]  ? __bpf_trace_itimer_state+0x10/0x10
[  101.064215]  __wait_for_common+0x87/0x190
[  101.064648]  ? usleep_range_state+0x90/0x90
[  101.065091]  cmd_exec+0x437/0xb20 [mlx5_core]
[  101.065569]  mlx5_cmd_do+0x1e/0x40 [mlx5_core]
[  101.066051]  mlx5_cmd_exec+0x18/0x30 [mlx5_core]
[  101.066552]  mlx5_crypto_create_dek_key+0xea/0x120 [mlx5_core]
[  101.067163]  ? bonding_sysfs_store_option+0x4d/0x80 [bonding]
[  101.067738]  ? kmalloc_trace+0x4d/0x350
[  101.068156]  mlx5_ipsec_create_sa_ctx+0x33/0x100 [mlx5_core]
[  101.068747]  mlx5e_xfrm_add_state+0x47b/0xaa0 [mlx5_core]
[  101.069312]  bond_change_active_slave+0x392/0x900 [bonding]
[  101.069868]  bond_option_active_slave_set+0x1c2/0x240 [bonding]
[  101.070454]  __bond_opt_set+0xa6/0x430 [bonding]
[  101.070935]  __bond_opt_set_notify+0x2f/0x90 [bonding]
[  101.071453]  bond_opt_tryset_rtnl+0x72/0xb0 [bonding]
[  101.071965]  bonding_sysfs_store_option+0x4d/0x80 [bonding]
[  101.072567]  kernfs_fop_write_iter+0x10c/0x1a0
[  101.073033]  vfs_write+0x2d8/0x400
[  101.073416]  ? alloc_fd+0x48/0x180
[  101.073798]  ksys_write+0x5f/0xe0
[  101.074175]  do_syscall_64+0x52/0x110
[  101.074576]  entry_SYSCALL_64_after_hwframe+0x4b/0x53

As bond_ipsec_add_sa_all and bond_ipsec_del_sa_all are only called
from bond_change_active_slave, which requires holding the RTNL lock.
And bond_ipsec_add_sa and bond_ipsec_del_sa are xfrm state
xdo_dev_state_add and xdo_dev_state_delete APIs, which are in user
context. So ipsec_lock doesn't have to be spin lock, change it to
mutex, and thus the above issue can be resolved.",Linux,Linux,"9a5605505d9c7dbfdb89cc29a8f5fc5cf9fd2334, 9a5605505d9c7dbfdb89cc29a8f5fc5cf9fd2334, 9a5605505d9c7dbfdb89cc29a8f5fc5cf9fd2334"
782,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50041,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

i40e: Fix macvlan leak by synchronizing access to mac_filter_hash

This patch addresses a macvlan leak issue in the i40e driver caused by
concurrent access to vsi->mac_filter_hash. The leak occurs when multiple
threads attempt to modify the mac_filter_hash simultaneously, leading to
inconsistent state and potential memory leaks.

To fix this, we now wrap the calls to i40e_del_mac_filter() and zeroing
vf->default_lan_addr.addr with spin_lock/unlock_bh(&vsi->mac_filter_hash_lock),
ensuring atomic operations and preventing concurrent access.

Additionally, we add lockdep_assert_held(&vsi->mac_filter_hash_lock) in
i40e_add_mac_filter() to help catch similar issues in the future.

Reproduction steps:
1. Spawn VFs and configure port vlan on them.
2. Trigger concurrent macvlan operations (e.g., adding and deleting
	portvlan and/or mac filters).
3. Observe the potential memory leak and inconsistent state in the
	mac_filter_hash.

This synchronization ensures the integrity of the mac_filter_hash and prevents
the described leak.",Linux,Linux,"ddec6cbbe22781d17965f1e6386e5a6363c058d2, fed0d9f13266a22ce1fc9a97521ef9cdc6271a23, fed0d9f13266a22ce1fc9a97521ef9cdc6271a23, fed0d9f13266a22ce1fc9a97521ef9cdc6271a23, fed0d9f13266a22ce1fc9a97521ef9cdc6271a23"
815,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45025,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fix bitmap corruption on close_range() with CLOSE_RANGE_UNSHARE

copy_fd_bitmaps(new, old, count) is expected to copy the first
count/BITS_PER_LONG bits from old->full_fds_bits[] and fill
the rest with zeroes.  What it does is copying enough words
(BITS_TO_LONGS(count/BITS_PER_LONG)), then memsets the rest.
That works fine, *if* all bits past the cutoff point are
clear.  Otherwise we are risking garbage from the last word
we'd copied.

For most of the callers that is true - expand_fdtable() has
count equal to old->max_fds, so there's no open descriptors
past count, let alone fully occupied words in ->open_fds[],
which is what bits in ->full_fds_bits[] correspond to.

The other caller (dup_fd()) passes sane_fdtable_size(old_fdt, max_fds),
which is the smallest multiple of BITS_PER_LONG that covers all
opened descriptors below max_fds.  In the common case (copying on
fork()) max_fds is ~0U, so all opened descriptors will be below
it and we are fine, by the same reasons why the call in expand_fdtable()
is safe.

Unfortunately, there is a case where max_fds is less than that
and where we might, indeed, end up with junk in ->full_fds_bits[] -
close_range(from, to, CLOSE_RANGE_UNSHARE) with
	* descriptor table being currently shared
	* 'to' being above the current capacity of descriptor table
	* 'from' being just under some chunk of opened descriptors.
In that case we end up with observably wrong behaviour - e.g. spawn
a child with CLONE_FILES, get all descriptors in range 0..127 open,
then close_range(64, ~0U, CLOSE_RANGE_UNSHARE) and watch dup(0) ending
up with descriptor #128, despite #64 being observably not open.

The minimally invasive fix would be to deal with that in dup_fd().
If this proves to add measurable overhead, we can go that way, but
let's try to fix copy_fd_bitmaps() first.

* new helper: bitmap_copy_and_expand(to, from, bits_to_copy, size).
* make copy_fd_bitmaps() take the bitmap size in words, rather than
bits; it's 'count' argument is always a multiple of BITS_PER_LONG,
so we are not losing any information, and that way we can use the
same helper for all three bitmaps - compiler will see that count
is a multiple of BITS_PER_LONG for the large ones, so it'll generate
plain memcpy()+memset().

Reproducer added to tools/testing/selftests/core/close_range_test.c",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
823,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46825,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: use IWL_FW_CHECK for link ID check

The lookup function iwl_mvm_rcu_fw_link_id_to_link_conf() is
normally called with input from the firmware, so it should use
IWL_FW_CHECK() instead of WARN_ON().",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
822,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49975,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

uprobes: fix kernel info leak via ""[uprobes]"" vma

xol_add_vma() maps the uninitialized page allocated by __create_xol_area()
into userspace. On some architectures (x86) this memory is readable even
without VM_READ, VM_EXEC results in the same pgprot_t as VM_EXEC|VM_READ,
although this doesn't really matter, debugger can read this memory anyway.",Linux,Linux,"d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe, d4b3b6384f98f8692ad0209891ccdbc7e78bbefe"
821,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46761,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

pci/hotplug/pnv_php: Fix hotplug driver crash on Powernv

The hotplug driver for powerpc (pci/hotplug/pnv_php.c) causes a kernel
crash when we try to hot-unplug/disable the PCIe switch/bridge from
the PHB.

The crash occurs because although the MSI data structure has been
released during disable/hot-unplug path and it has been assigned
with NULL, still during unregistration the code was again trying to
explicitly disable the MSI which causes the NULL pointer dereference and
kernel crash.

The patch fixes the check during unregistration path to prevent invoking
pci_disable_msi/msix() since its data structure is already freed.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
820,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46729,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Fix incorrect size calculation for loop

[WHY]
fe_clk_en has size of 5 but sizeof(fe_clk_en) has byte size 20 which is
lager than the array size.

[HOW]
Divide byte size 20 by its element size.

This fixes 2 OVERRUN issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
819,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43879,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: cfg80211: handle 2x996 RU allocation in cfg80211_calculate_bitrate_he()

Currently NL80211_RATE_INFO_HE_RU_ALLOC_2x996 is not handled in
cfg80211_calculate_bitrate_he(), leading to below warning:

kernel: invalid HE MCS: bw:6, ru:6
kernel: WARNING: CPU: 0 PID: 2312 at net/wireless/util.c:1501 cfg80211_calculate_bitrate_he+0x22b/0x270 [cfg80211]

Fix it by handling 2x996 RU allocation in the same way as 160 MHz bandwidth.",Linux,Linux,"c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f, c4cbaf7973a794839af080f13748335976cf3f3f"
818,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41065,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/pseries: Whitelist dtl slub object for copying to userspace

Reading the dispatch trace log from /sys/kernel/debug/powerpc/dtl/cpu-*
results in a BUG() when the config CONFIG_HARDENED_USERCOPY is enabled as
shown below.

    kernel BUG at mm/usercopy.c:102!
    Oops: Exception in kernel mode, sig: 5 [#1]
    LE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries
    Modules linked in: xfs libcrc32c dm_service_time sd_mod t10_pi sg ibmvfc
    scsi_transport_fc ibmveth pseries_wdt dm_multipath dm_mirror dm_region_hash dm_log dm_mod fuse
    CPU: 27 PID: 1815 Comm: python3 Not tainted 6.10.0-rc3 #85
    Hardware name: IBM,9040-MRX POWER10 (raw) 0x800200 0xf000006 of:IBM,FW1060.00 (NM1060_042) hv:phyp pSeries
    NIP:  c0000000005d23d4 LR: c0000000005d23d0 CTR: 00000000006ee6f8
    REGS: c000000120c078c0 TRAP: 0700   Not tainted  (6.10.0-rc3)
    MSR:  8000000000029033 <SF,EE,ME,IR,DR,RI,LE>  CR: 2828220f  XER: 0000000e
    CFAR: c0000000001fdc80 IRQMASK: 0
    [ ... GPRs omitted ... ]
    NIP [c0000000005d23d4] usercopy_abort+0x78/0xb0
    LR [c0000000005d23d0] usercopy_abort+0x74/0xb0
    Call Trace:
     usercopy_abort+0x74/0xb0 (unreliable)
     __check_heap_object+0xf8/0x120
     check_heap_object+0x218/0x240
     __check_object_size+0x84/0x1a4
     dtl_file_read+0x17c/0x2c4
     full_proxy_read+0x8c/0x110
     vfs_read+0xdc/0x3a0
     ksys_read+0x84/0x144
     system_call_exception+0x124/0x330
     system_call_vectored_common+0x15c/0x2ec
    --- interrupt: 3000 at 0x7fff81f3ab34

Commit 6d07d1cd300f (""usercopy: Restrict non-usercopy caches to size 0"")
requires that only whitelisted areas in slab/slub objects can be copied to
userspace when usercopy hardening is enabled using CONFIG_HARDENED_USERCOPY.
Dtl contains hypervisor dispatch events which are expected to be read by
privileged users. Hence mark this safe for user access.
Specify useroffset=0 and usersize=DISPATCH_LOG_BYTES to whitelist the
entire object.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
817,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45013,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nvme: move stopping keep-alive into nvme_uninit_ctrl()

Commit 4733b65d82bd (""nvme: start keep-alive after admin queue setup"")
moves starting keep-alive from nvme_start_ctrl() into
nvme_init_ctrl_finish(), but don't move stopping keep-alive into
nvme_uninit_ctrl(), so keep-alive work can be started and keep pending
after failing to start controller, finally use-after-free is triggered if
nvme host driver is unloaded.

This patch fixes kernel panic when running nvme/004 in case that connection
failure is triggered, by moving stopping keep-alive into nvme_uninit_ctrl().

This way is reasonable because keep-alive is now started in
nvme_init_ctrl_finish().",Linux,Linux,"3af755a46881c32fecaecfdeaf3a8f0a869deca5, 3af755a46881c32fecaecfdeaf3a8f0a869deca5"
816,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26777,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fbdev: sis: Error out if pixclock equals zero

The userspace program could pass any values to the driver through
ioctl() interface. If the driver doesn't check the value of pixclock,
it may cause divide-by-zero error.

In sisfb_check_var(), var->pixclock is used as a divisor to caculate
drate before it is checked against zero. Fix this by checking it
at the beginning.

This is similar to CVE-2022-3061 in i740fb which was fixed by
commit 15cf0b8.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
814,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42269,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: iptables: Fix potential null-ptr-deref in ip6table_nat_table_init().

ip6table_nat_table_init() accesses net->gen->ptr[ip6table_nat_net_ops.id],
but the function is exposed to user space before the entry is allocated
via register_pernet_subsys().

Let's call register_pernet_subsys() before xt_register_template().",Linux,Linux,"fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1"
805,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43821,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Fix a possible null pointer dereference

In function lpfc_xcvr_data_show, the memory allocation with kmalloc might
fail, thereby making rdp_context a null pointer. In the following context
and functions that use this pointer, there are dereferencing operations,
leading to null pointer dereference.

To fix this issue, a null pointer check should be added. If it is null,
use scnprintf to notify the user and return len.",Linux,Linux,"479b0917e4477f49df2e3be454aac3cfa5dec171, 479b0917e4477f49df2e3be454aac3cfa5dec171, 479b0917e4477f49df2e3be454aac3cfa5dec171"
813,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35904,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

selinux: avoid dereference of garbage after mount failure

In case kern_mount() fails and returns an error pointer return in the
error branch instead of continuing and dereferencing the error pointer.

While on it drop the never read static variable selinuxfs_mount.",Linux,Linux,"0619f0f5e36f12e100ef294f5980cfe7c93ff23e, 0619f0f5e36f12e100ef294f5980cfe7c93ff23e, 0619f0f5e36f12e100ef294f5980cfe7c93ff23e"
812,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50031,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Stop the active perfmon before being destroyed

When running `kmscube` with one or more performance monitors enabled
via `GALLIUM_HUD`, the following kernel panic can occur:

[   55.008324] Unable to handle kernel paging request at virtual address 00000000052004a4
[   55.008368] Mem abort info:
[   55.008377]   ESR = 0x0000000096000005
[   55.008387]   EC = 0x25: DABT (current EL), IL = 32 bits
[   55.008402]   SET = 0, FnV = 0
[   55.008412]   EA = 0, S1PTW = 0
[   55.008421]   FSC = 0x05: level 1 translation fault
[   55.008434] Data abort info:
[   55.008442]   ISV = 0, ISS = 0x00000005, ISS2 = 0x00000000
[   55.008455]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
[   55.008467]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[   55.008481] user pgtable: 4k pages, 39-bit VAs, pgdp=00000001046c6000
[   55.008497] [00000000052004a4] pgd=0000000000000000, p4d=0000000000000000, pud=0000000000000000
[   55.008525] Internal error: Oops: 0000000096000005 [#1] PREEMPT SMP
[   55.008542] Modules linked in: rfcomm [...] vc4 v3d snd_soc_hdmi_codec drm_display_helper
gpu_sched drm_shmem_helper cec drm_dma_helper drm_kms_helper i2c_brcmstb
drm drm_panel_orientation_quirks snd_soc_core snd_compress snd_pcm_dmaengine snd_pcm snd_timer snd backlight
[   55.008799] CPU: 2 PID: 166 Comm: v3d_bin Tainted: G         C         6.6.47+rpt-rpi-v8 #1  Debian 1:6.6.47-1+rpt1
[   55.008824] Hardware name: Raspberry Pi 4 Model B Rev 1.5 (DT)
[   55.008838] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[   55.008855] pc : __mutex_lock.constprop.0+0x90/0x608
[   55.008879] lr : __mutex_lock.constprop.0+0x58/0x608
[   55.008895] sp : ffffffc080673cf0
[   55.008904] x29: ffffffc080673cf0 x28: 0000000000000000 x27: ffffff8106188a28
[   55.008926] x26: ffffff8101e78040 x25: ffffff8101baa6c0 x24: ffffffd9d989f148
[   55.008947] x23: ffffffda1c2a4008 x22: 0000000000000002 x21: ffffffc080673d38
[   55.008968] x20: ffffff8101238000 x19: ffffff8104f83188 x18: 0000000000000000
[   55.008988] x17: 0000000000000000 x16: ffffffda1bd04d18 x15: 00000055bb08bc90
[   55.009715] x14: 0000000000000000 x13: 0000000000000000 x12: ffffffda1bd4cbb0
[   55.010433] x11: 00000000fa83b2da x10: 0000000000001a40 x9 : ffffffda1bd04d04
[   55.011162] x8 : ffffff8102097b80 x7 : 0000000000000000 x6 : 00000000030a5857
[   55.011880] x5 : 00ffffffffffffff x4 : 0300000005200470 x3 : 0300000005200470
[   55.012598] x2 : ffffff8101238000 x1 : 0000000000000021 x0 : 0300000005200470
[   55.013292] Call trace:
[   55.013959]  __mutex_lock.constprop.0+0x90/0x608
[   55.014646]  __mutex_lock_slowpath+0x1c/0x30
[   55.015317]  mutex_lock+0x50/0x68
[   55.015961]  v3d_perfmon_stop+0x40/0xe0 [v3d]
[   55.016627]  v3d_bin_job_run+0x10c/0x2d8 [v3d]
[   55.017282]  drm_sched_main+0x178/0x3f8 [gpu_sched]
[   55.017921]  kthread+0x11c/0x128
[   55.018554]  ret_from_fork+0x10/0x20
[   55.019168] Code: f9400260 f1001c1f 54001ea9 927df000 (b9403401)
[   55.019776] ---[ end trace 0000000000000000 ]---
[   55.020411] note: v3d_bin[166] exited with preempt_count 1

This issue arises because, upon closing the file descriptor (which happens
when we interrupt `kmscube`), the active performance monitor is not
stopped. Although all perfmons are destroyed in `v3d_perfmon_close_file()`,
the active performance monitor's pointer (`v3d->active_perfmon`) is still
retained.

If `kmscube` is run again, the driver will attempt to stop the active
performance monitor using the stale pointer in `v3d->active_perfmon`.
However, this pointer is no longer valid because the previous process has
already terminated, and all performance monitors associated with it have
been destroyed and freed.

To fix this, when the active performance monitor belongs to a given
process, explicitly stop it before destroying and freeing it.",Linux,Linux,"26a4dc29b74a137f45665089f6d3d633fcc9b662, 26a4dc29b74a137f45665089f6d3d633fcc9b662, 26a4dc29b74a137f45665089f6d3d633fcc9b662, 26a4dc29b74a137f45665089f6d3d633fcc9b662, 26a4dc29b74a137f45665089f6d3d633fcc9b662"
811,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43870,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

perf: Fix event leak upon exit

When a task is scheduled out, pending sigtrap deliveries are deferred
to the target task upon resume to userspace via task_work.

However failures while adding an event's callback to the task_work
engine are ignored. And since the last call for events exit happen
after task work is eventually closed, there is a small window during
which pending sigtrap can be queued though ignored, leaking the event
refcount addition such as in the following scenario:

    TASK A
    -----

    do_exit()
       exit_task_work(tsk);

       <IRQ>
       perf_event_overflow()
          event->pending_sigtrap = pending_id;
          irq_work_queue(&event->pending_irq);
       </IRQ>
    =========> PREEMPTION: TASK A -> TASK B
       event_sched_out()
          event->pending_sigtrap = 0;
          atomic_long_inc_not_zero(&event->refcount)
          // FAILS: task work has exited
          task_work_add(&event->pending_task)
       [...]
       <IRQ WORK>
       perf_pending_irq()
          // early return: event->oncpu = -1
       </IRQ WORK>
       [...]
    =========> TASK B -> TASK A
       perf_event_exit_task(tsk)
          perf_event_exit_event()
             free_event()
                WARN(atomic_long_cmpxchg(&event->refcount, 1, 0) != 1)
                // leak event due to unexpected refcount == 2

As a result the event is never released while the task exits.

Fix this with appropriate task_work_add()'s error handling.",Linux,Linux,"8bffa95ac19ff27c8261904f89d36c7fcf215d59, 517e6a301f34613bff24a8e35b5455884f2d83d8, 517e6a301f34613bff24a8e35b5455884f2d83d8, 517e6a301f34613bff24a8e35b5455884f2d83d8, 517e6a301f34613bff24a8e35b5455884f2d83d8"
810,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47659,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

smack: tcp: ipv4, fix incorrect labeling

Currently, Smack mirrors the label of incoming tcp/ipv4 connections:
when a label 'foo' connects to a label 'bar' with tcp/ipv4,
'foo' always gets 'foo' in returned ipv4 packets. So,
1) returned packets are incorrectly labeled ('foo' instead of 'bar')
2) 'bar' can write to 'foo' without being authorized to write.

Here is a scenario how to see this:

* Take two machines, let's call them C and S,
   with active Smack in the default state
   (no settings, no rules, no labeled hosts, only builtin labels)

* At S, add Smack rule 'foo bar w'
   (labels 'foo' and 'bar' are instantiated at S at this moment)

* At S, at label 'bar', launch a program
   that listens for incoming tcp/ipv4 connections

* From C, at label 'foo', connect to the listener at S.
   (label 'foo' is instantiated at C at this moment)
   Connection succeedes and works.

* Send some data in both directions.
* Collect network traffic of this connection.

All packets in both directions are labeled with the CIPSO
of the label 'foo'. Hence, label 'bar' writes to 'foo' without
being authorized, and even without ever being known at C.

If anybody cares: exactly the same happens with DCCP.

This behavior 1st manifested in release 2.6.29.4 (see Fixes below)
and it looks unintentional. At least, no explanation was provided.

I changed returned packes label into the 'bar',
to bring it into line with the Smack documentation claims.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
809,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49882,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix double brelse() the buffer of the extents path

In ext4_ext_try_to_merge_up(), set path[1].p_bh to NULL after it has been
released, otherwise it may be released twice. An example of what triggers
this is as follows:

  split2    map    split1
|--------|-------|--------|

ext4_ext_map_blocks
 ext4_ext_handle_unwritten_extents
  ext4_split_convert_extents
   // path->p_depth == 0
   ext4_split_extent
     // 1. do split1
     ext4_split_extent_at
       |ext4_ext_insert_extent
       |  ext4_ext_create_new_leaf
       |    ext4_ext_grow_indepth
       |      le16_add_cpu(&neh->eh_depth, 1)
       |    ext4_find_extent
       |      // return -ENOMEM
       |// get error and try zeroout
       |path = ext4_find_extent
       |  path->p_depth = 1
       |ext4_ext_try_to_merge
       |  ext4_ext_try_to_merge_up
       |    path->p_depth = 0
       |    brelse(path[1].p_bh)  ---> not set to NULL here
       |// zeroout success
     // 2. update path
     ext4_find_extent
     // 3. do split2
     ext4_split_extent_at
       ext4_ext_insert_extent
         ext4_ext_create_new_leaf
           ext4_ext_grow_indepth
             le16_add_cpu(&neh->eh_depth, 1)
           ext4_find_extent
             path[0].p_bh = NULL;
             path->p_depth = 1
             read_extent_tree_block  ---> return err
             // path[1].p_bh is still the old value
             ext4_free_ext_path
               ext4_ext_drop_refs
                 // path->p_depth == 1
                 brelse(path[1].p_bh)  ---> brelse a buffer twice

Finally got the following WARRNING when removing the buffer from lru:

============================================
VFS: brelse: Trying to free free buffer
WARNING: CPU: 2 PID: 72 at fs/buffer.c:1241 __brelse+0x58/0x90
CPU: 2 PID: 72 Comm: kworker/u19:1 Not tainted 6.9.0-dirty #716
RIP: 0010:__brelse+0x58/0x90
Call Trace:
 <TASK>
 __find_get_block+0x6e7/0x810
 bdev_getblk+0x2b/0x480
 __ext4_get_inode_loc+0x48a/0x1240
 ext4_get_inode_loc+0xb2/0x150
 ext4_reserve_inode_write+0xb7/0x230
 __ext4_mark_inode_dirty+0x144/0x6a0
 ext4_ext_insert_extent+0x9c8/0x3230
 ext4_ext_map_blocks+0xf45/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]
============================================",Linux,Linux,"ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4, ecb94f5fdf4b72547fca022421a9dca1672bddd4"
808,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45021,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

memcg_write_event_control(): fix a user-triggerable oops

we are *not* guaranteed that anything past the terminating NUL
is mapped (let alone initialized with anything sane).",Linux,Linux,"0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3, 0dea116876eefc9c7ca9c5d74fe665481e499fa3"
807,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46752,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: replace BUG_ON() with error handling at update_ref_for_cow()

Instead of a BUG_ON() just return an error, log an error message and
abort the transaction in case we find an extent buffer belonging to the
relocation tree that doesn't have the full backref flag set. This is
unexpected and should never happen (save for bugs or a potential bad
memory).",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
806,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44993,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Fix out-of-bounds read in `v3d_csd_job_run()`

When enabling UBSAN on Raspberry Pi 5, we get the following warning:

[  387.894977] UBSAN: array-index-out-of-bounds in drivers/gpu/drm/v3d/v3d_sched.c:320:3
[  387.903868] index 7 is out of range for type '__u32 [7]'
[  387.909692] CPU: 0 PID: 1207 Comm: kworker/u16:2 Tainted: G        WC         6.10.3-v8-16k-numa #151
[  387.919166] Hardware name: Raspberry Pi 5 Model B Rev 1.0 (DT)
[  387.925961] Workqueue: v3d_csd drm_sched_run_job_work [gpu_sched]
[  387.932525] Call trace:
[  387.935296]  dump_backtrace+0x170/0x1b8
[  387.939403]  show_stack+0x20/0x38
[  387.942907]  dump_stack_lvl+0x90/0xd0
[  387.946785]  dump_stack+0x18/0x28
[  387.950301]  __ubsan_handle_out_of_bounds+0x98/0xd0
[  387.955383]  v3d_csd_job_run+0x3a8/0x438 [v3d]
[  387.960707]  drm_sched_run_job_work+0x520/0x6d0 [gpu_sched]
[  387.966862]  process_one_work+0x62c/0xb48
[  387.971296]  worker_thread+0x468/0x5b0
[  387.975317]  kthread+0x1c4/0x1e0
[  387.978818]  ret_from_fork+0x10/0x20
[  387.983014] ---[ end trace ]---

This happens because the UAPI provides only seven configuration
registers and we are reading the eighth position of this u32 array.

Therefore, fix the out-of-bounds read in `v3d_csd_job_run()` by
accessing only seven positions on the '__u32 [7]' array. The eighth
register exists indeed on V3D 7.1, but it isn't currently used. That
being so, let's guarantee that it remains unused and add a note that it
could be set in a future patch.",Linux,Linux,"0ad5bc1ce4634ce9b5eaf017b01399ec5e49a03d, 0ad5bc1ce4634ce9b5eaf017b01399ec5e49a03d"
783,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46868,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

firmware: qcom: uefisecapp: Fix deadlock in qcuefi_acquire()

If the __qcuefi pointer is not set, then in the original code, we would
hold onto the lock.  That means that if we tried to set it later, then
it would cause a deadlock.  Drop the lock on the error path.  That's
what all the callers are expecting.",Linux,Linux,"759e7a2b62eb3ef3c93ffeb5cca788a09627d7d9, 759e7a2b62eb3ef3c93ffeb5cca788a09627d7d9"
781,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46818,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check gpio_id before used as array index

[WHY & HOW]
GPIO_ID_UNKNOWN (-1) is not a valid value for array index and therefore
should be checked in advance.

This fixes 5 OVERRUN issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
739,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38619,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb-storage: alauda: Check whether the media is initialized

The member ""uzonesize"" of struct alauda_info will remain 0
if alauda_init_media() fails, potentially causing divide errors
in alauda_read_data() and alauda_write_lba().
- Add a member ""media_initialized"" to struct alauda_info.
- Change a condition in alauda_check_media() to ensure the
  first initialization.
- Add an error check for the return value of alauda_init_media().",Linux,Linux,"e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f"
749,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43852,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

hwmon: (ltc2991) re-order conditions to fix off by one bug

LTC2991_T_INT_CH_NR is 4.  The st->temp_en[] array has LTC2991_MAX_CHANNEL
(4) elements.  Thus if ""channel"" is equal to LTC2991_T_INT_CH_NR then we
have read one element beyond the end of the array.  Flip the conditions
around so that we check if ""channel"" is valid before using it as an array
index.",Linux,Linux,"2b9ea4262ae9114b0b86ac893b4d6175d8520001, 2b9ea4262ae9114b0b86ac893b4d6175d8520001"
757,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43842,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: rtw89: Fix array index mistake in rtw89_sta_info_get_iter()

In rtw89_sta_info_get_iter() 'status->he_gi' is compared to array size.
But then 'rate->he_gi' is used as array index instead of 'status->he_gi'.
This can lead to go beyond array boundaries in case of 'rate->he_gi' is
not equal to 'status->he_gi' and is bigger than array size. Looks like
""copy-paste"" mistake.

Fix this mistake by replacing 'rate->he_gi' with 'status->he_gi'.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"e3ec7017f6a20d12ddd9fe23d345ebb7b8c104dd, e3ec7017f6a20d12ddd9fe23d345ebb7b8c104dd, e3ec7017f6a20d12ddd9fe23d345ebb7b8c104dd, e3ec7017f6a20d12ddd9fe23d345ebb7b8c104dd"
756,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2022-48733,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix use-after-free after failure to create a snapshot

At ioctl.c:create_snapshot(), we allocate a pending snapshot structure and
then attach it to the transaction's list of pending snapshots. After that
we call btrfs_commit_transaction(), and if that returns an error we jump
to 'fail' label, where we kfree() the pending snapshot structure. This can
result in a later use-after-free of the pending snapshot:

1) We allocated the pending snapshot and added it to the transaction's
   list of pending snapshots;

2) We call btrfs_commit_transaction(), and it fails either at the first
   call to btrfs_run_delayed_refs() or btrfs_start_dirty_block_groups().
   In both cases, we don't abort the transaction and we release our
   transaction handle. We jump to the 'fail' label and free the pending
   snapshot structure. We return with the pending snapshot still in the
   transaction's list;

3) Another task commits the transaction. This time there's no error at
   all, and then during the transaction commit it accesses a pointer
   to the pending snapshot structure that the snapshot creation task
   has already freed, resulting in a user-after-free.

This issue could actually be detected by smatch, which produced the
following warning:

  fs/btrfs/ioctl.c:843 create_snapshot() warn: '&pending_snapshot->list' not removed from list

So fix this by not having the snapshot creation ioctl directly add the
pending snapshot to the transaction's list. Instead add the pending
snapshot to the transaction handle, and then at btrfs_commit_transaction()
we add the snapshot to the list only when we can guarantee that any error
returned after that point will result in a transaction abort, in which
case the ioctl code can safely free the pending snapshot and no one can
access it anymore.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
755,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46732,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Assign linear_pitch_alignment even for VM

[Description]
Assign linear_pitch_alignment so we don't cause a divide by 0
error in VM environments",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
754,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42260,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Validate passed in drm syncobj handles in the performance extension

If userspace provides an unknown or invalid handle anywhere in the handle
array the rest of the driver will not handle that well.

Fix it by checking handle was looked up successfully or otherwise fail the
extension by jumping into the existing unwind.

(cherry picked from commit a546b7e4d73c23838d7e4d2c92882b3ca902d213)",Linux,Linux,"bae7cb5d68001a8d4ceec5964dda74bb9aab7220, bae7cb5d68001a8d4ceec5964dda74bb9aab7220"
753,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49883,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: aovid use-after-free in ext4_ext_insert_extent()

As Ojaswin mentioned in Link, in ext4_ext_insert_extent(), if the path is
reallocated in ext4_ext_create_new_leaf(), we'll use the stale path and
cause UAF. Below is a sample trace with dummy values:

ext4_ext_insert_extent
  path = *ppath = 2000
  ext4_ext_create_new_leaf(ppath)
    ext4_find_extent(ppath)
      path = *ppath = 2000
      if (depth > path[0].p_maxdepth)
            kfree(path = 2000);
            *ppath = path = NULL;
      path = kcalloc() = 3000
      *ppath = 3000;
      return path;
  /* here path is still 2000, UAF! */
  eh = path[depth].p_hdr

==================================================================
BUG: KASAN: slab-use-after-free in ext4_ext_insert_extent+0x26d4/0x3330
Read of size 8 at addr ffff8881027bf7d0 by task kworker/u36:1/179
CPU: 3 UID: 0 PID: 179 Comm: kworker/u6:1 Not tainted 6.11.0-rc2-dirty #866
Call Trace:
 <TASK>
 ext4_ext_insert_extent+0x26d4/0x3330
 ext4_ext_map_blocks+0xe22/0x2d40
 ext4_map_blocks+0x71e/0x1700
 ext4_do_writepages+0x1290/0x2800
[...]

Allocated by task 179:
 ext4_find_extent+0x81c/0x1f70
 ext4_ext_map_blocks+0x146/0x2d40
 ext4_map_blocks+0x71e/0x1700
 ext4_do_writepages+0x1290/0x2800
 ext4_writepages+0x26d/0x4e0
 do_writepages+0x175/0x700
[...]

Freed by task 179:
 kfree+0xcb/0x240
 ext4_find_extent+0x7c0/0x1f70
 ext4_ext_insert_extent+0xa26/0x3330
 ext4_ext_map_blocks+0xe22/0x2d40
 ext4_map_blocks+0x71e/0x1700
 ext4_do_writepages+0x1290/0x2800
 ext4_writepages+0x26d/0x4e0
 do_writepages+0x175/0x700
[...]
==================================================================

So use *ppath to update the path to avoid the above problem.",Linux,Linux,"10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279, 10809df84a4d868db61af621bae3658494165279"
752,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47668,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

lib/generic-radix-tree.c: Fix rare race in __genradix_ptr_alloc()

If we need to increase the tree depth, allocate a new node, and then
race with another thread that increased the tree depth before us, we'll
still have a preallocated node that might be used later.

If we then use that node for a new non-root node, it'll still have a
pointer to the old root instead of being zeroed - fix this by zeroing it
in the cmpxchg failure path.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
751,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46804,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add array index check for hdcp ddc access

[Why]
Coverity reports OVERRUN warning. Do not check if array
index valid.

[How]
Check msg_id valid and valid array index.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
750,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44980,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe: Fix opregion leak

Being part o the display, ideally the setup and cleanup would be done by
display itself. However this is a bigger refactor that needs to be done
on both i915 and xe. For now, just fix the leak:

unreferenced object 0xffff8881a0300008 (size 192):
  comm ""modprobe"", pid 4354, jiffies 4295647021
  hex dump (first 32 bytes):
    00 00 87 27 81 88 ff ff 18 80 9b 00 00 c9 ff ff  ...'............
    18 81 9b 00 00 c9 ff ff 00 00 00 00 00 00 00 00  ................
  backtrace (crc 99260e31):
    [<ffffffff823ce65b>] kmemleak_alloc+0x4b/0x80
    [<ffffffff81493be2>] kmalloc_trace_noprof+0x312/0x3d0
    [<ffffffffa1345679>] intel_opregion_setup+0x89/0x700 [xe]
    [<ffffffffa125bfaf>] xe_display_init_noirq+0x2f/0x90 [xe]
    [<ffffffffa1199ec3>] xe_device_probe+0x7a3/0xbf0 [xe]
    [<ffffffffa11f3713>] xe_pci_probe+0x333/0x5b0 [xe]
    [<ffffffff81af6be8>] local_pci_probe+0x48/0xb0
    [<ffffffff81af8778>] pci_device_probe+0xc8/0x280
    [<ffffffff81d09048>] really_probe+0xf8/0x390
    [<ffffffff81d0937a>] __driver_probe_device+0x8a/0x170
    [<ffffffff81d09503>] driver_probe_device+0x23/0xb0
    [<ffffffff81d097b7>] __driver_attach+0xc7/0x190
    [<ffffffff81d0628d>] bus_for_each_dev+0x7d/0xd0
    [<ffffffff81d0851e>] driver_attach+0x1e/0x30
    [<ffffffff81d07ac7>] bus_add_driver+0x117/0x250

(cherry picked from commit 6f4e43a2f771b737d991142ec4f6d4b7ff31fbb4)",Linux,Linux,"44e694958b95395bd1c41508c88c8ca141bf9bd7, 44e694958b95395bd1c41508c88c8ca141bf9bd7"
748,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45017,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix IPsec RoCE MPV trace call

Prevent the call trace below from happening, by not allowing IPsec
creation over a slave, if master device doesn't support IPsec.

WARNING: CPU: 44 PID: 16136 at kernel/locking/rwsem.c:240 down_read+0x75/0x94
Modules linked in: esp4_offload esp4 act_mirred act_vlan cls_flower sch_ingress mlx5_vdpa vringh vhost_iotlb vdpa mst_pciconf(OE) nfsv3 nfs_acl nfs lockd grace fscache netfs xt_CHECKSUM xt_MASQUERADE xt_conntrack ipt_REJECT nf_reject_ipv4 nft_compat nft_counter nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 rfkill cuse fuse rpcrdma sunrpc rdma_ucm ib_srpt ib_isert iscsi_target_mod target_core_mod ib_umad ib_iser libiscsi scsi_transport_iscsi rdma_cm ib_ipoib iw_cm ib_cm ipmi_ssif intel_rapl_msr intel_rapl_common amd64_edac edac_mce_amd kvm_amd kvm irqbypass crct10dif_pclmul crc32_pclmul mlx5_ib ghash_clmulni_intel sha1_ssse3 dell_smbios ib_uverbs aesni_intel crypto_simd dcdbas wmi_bmof dell_wmi_descriptor cryptd pcspkr ib_core acpi_ipmi sp5100_tco ccp i2c_piix4 ipmi_si ptdma k10temp ipmi_devintf ipmi_msghandler acpi_power_meter acpi_cpufreq ext4 mbcache jbd2 sd_mod t10_pi sg mgag200 drm_kms_helper syscopyarea sysfillrect mlx5_core sysimgblt fb_sys_fops cec
 ahci libahci mlxfw drm pci_hyperv_intf libata tg3 sha256_ssse3 tls megaraid_sas i2c_algo_bit psample wmi dm_mirror dm_region_hash dm_log dm_mod [last unloaded: mst_pci]
CPU: 44 PID: 16136 Comm: kworker/44:3 Kdump: loaded Tainted: GOE 5.15.0-20240509.el8uek.uek7_u3_update_v6.6_ipsec_bf.x86_64 #2
Hardware name: Dell Inc. PowerEdge R7525/074H08, BIOS 2.0.3 01/15/2021
Workqueue: events xfrm_state_gc_task
RIP: 0010:down_read+0x75/0x94
Code: 00 48 8b 45 08 65 48 8b 14 25 80 fc 01 00 83 e0 02 48 09 d0 48 83 c8 01 48 89 45 08 5d 31 c0 89 c2 89 c6 89 c7 e9 cb 88 3b 00 <0f> 0b 48 8b 45 08 a8 01 74 b2 a8 02 75 ae 48 89 c2 48 83 ca 02 f0
RSP: 0018:ffffb26387773da8 EFLAGS: 00010282
RAX: 0000000000000000 RBX: ffffa08b658af900 RCX: 0000000000000001
RDX: 0000000000000000 RSI: ff886bc5e1366f2f RDI: 0000000000000000
RBP: ffffa08b658af940 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000000 R12: ffffa0a9bfb31540
R13: ffffa0a9bfb37900 R14: 0000000000000000 R15: ffffa0a9bfb37905
FS:  0000000000000000(0000) GS:ffffa0a9bfb00000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000055a45ed814e8 CR3: 000000109038a000 CR4: 0000000000350ee0
Call Trace:
 <TASK>
 ? show_trace_log_lvl+0x1d6/0x2f9
 ? show_trace_log_lvl+0x1d6/0x2f9
 ? mlx5_devcom_for_each_peer_begin+0x29/0x60 [mlx5_core]
 ? down_read+0x75/0x94
 ? __warn+0x80/0x113
 ? down_read+0x75/0x94
 ? report_bug+0xa4/0x11d
 ? handle_bug+0x35/0x8b
 ? exc_invalid_op+0x14/0x75
 ? asm_exc_invalid_op+0x16/0x1b
 ? down_read+0x75/0x94
 ? down_read+0xe/0x94
 mlx5_devcom_for_each_peer_begin+0x29/0x60 [mlx5_core]
 mlx5_ipsec_fs_roce_tx_destroy+0xb1/0x130 [mlx5_core]
 tx_destroy+0x1b/0xc0 [mlx5_core]
 tx_ft_put+0x53/0xc0 [mlx5_core]
 mlx5e_xfrm_free_state+0x45/0x90 [mlx5_core]
 ___xfrm_state_destroy+0x10f/0x1a2
 xfrm_state_gc_task+0x81/0xa9
 process_one_work+0x1f1/0x3c6
 worker_thread+0x53/0x3e4
 ? process_one_work.cold+0x46/0x3c
 kthread+0x127/0x144
 ? set_kthread_struct+0x60/0x52
 ret_from_fork+0x22/0x2d
 </TASK>
---[ end trace 5ef7896144d398e1 ]---",Linux,Linux,"dfbd229abeee76a0bcf015e93c85dca8d18568d4, dfbd229abeee76a0bcf015e93c85dca8d18568d4"
759,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42311,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

hfs: fix to initialize fields of hfs_inode_info after hfs_alloc_inode()

Syzbot reports uninitialized value access issue as below:

loop0: detected capacity change from 0 to 64
=====================================================
BUG: KMSAN: uninit-value in hfs_revalidate_dentry+0x307/0x3f0 fs/hfs/sysdep.c:30
 hfs_revalidate_dentry+0x307/0x3f0 fs/hfs/sysdep.c:30
 d_revalidate fs/namei.c:862 [inline]
 lookup_fast+0x89e/0x8e0 fs/namei.c:1649
 walk_component fs/namei.c:2001 [inline]
 link_path_walk+0x817/0x1480 fs/namei.c:2332
 path_lookupat+0xd9/0x6f0 fs/namei.c:2485
 filename_lookup+0x22e/0x740 fs/namei.c:2515
 user_path_at_empty+0x8b/0x390 fs/namei.c:2924
 user_path_at include/linux/namei.h:57 [inline]
 do_mount fs/namespace.c:3689 [inline]
 __do_sys_mount fs/namespace.c:3898 [inline]
 __se_sys_mount+0x66b/0x810 fs/namespace.c:3875
 __x64_sys_mount+0xe4/0x140 fs/namespace.c:3875
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x63/0x6b

BUG: KMSAN: uninit-value in hfs_ext_read_extent fs/hfs/extent.c:196 [inline]
BUG: KMSAN: uninit-value in hfs_get_block+0x92d/0x1620 fs/hfs/extent.c:366
 hfs_ext_read_extent fs/hfs/extent.c:196 [inline]
 hfs_get_block+0x92d/0x1620 fs/hfs/extent.c:366
 block_read_full_folio+0x4ff/0x11b0 fs/buffer.c:2271
 hfs_read_folio+0x55/0x60 fs/hfs/inode.c:39
 filemap_read_folio+0x148/0x4f0 mm/filemap.c:2426
 do_read_cache_folio+0x7c8/0xd90 mm/filemap.c:3553
 do_read_cache_page mm/filemap.c:3595 [inline]
 read_cache_page+0xfb/0x2f0 mm/filemap.c:3604
 read_mapping_page include/linux/pagemap.h:755 [inline]
 hfs_btree_open+0x928/0x1ae0 fs/hfs/btree.c:78
 hfs_mdb_get+0x260c/0x3000 fs/hfs/mdb.c:204
 hfs_fill_super+0x1fb1/0x2790 fs/hfs/super.c:406
 mount_bdev+0x628/0x920 fs/super.c:1359
 hfs_mount+0xcd/0xe0 fs/hfs/super.c:456
 legacy_get_tree+0x167/0x2e0 fs/fs_context.c:610
 vfs_get_tree+0xdc/0x5d0 fs/super.c:1489
 do_new_mount+0x7a9/0x16f0 fs/namespace.c:3145
 path_mount+0xf98/0x26a0 fs/namespace.c:3475
 do_mount fs/namespace.c:3488 [inline]
 __do_sys_mount fs/namespace.c:3697 [inline]
 __se_sys_mount+0x919/0x9e0 fs/namespace.c:3674
 __ia32_sys_mount+0x15b/0x1b0 fs/namespace.c:3674
 do_syscall_32_irqs_on arch/x86/entry/common.c:112 [inline]
 __do_fast_syscall_32+0xa2/0x100 arch/x86/entry/common.c:178
 do_fast_syscall_32+0x37/0x80 arch/x86/entry/common.c:203
 do_SYSENTER_32+0x1f/0x30 arch/x86/entry/common.c:246
 entry_SYSENTER_compat_after_hwframe+0x70/0x82

Uninit was created at:
 __alloc_pages+0x9a6/0xe00 mm/page_alloc.c:4590
 __alloc_pages_node include/linux/gfp.h:238 [inline]
 alloc_pages_node include/linux/gfp.h:261 [inline]
 alloc_slab_page mm/slub.c:2190 [inline]
 allocate_slab mm/slub.c:2354 [inline]
 new_slab+0x2d7/0x1400 mm/slub.c:2407
 ___slab_alloc+0x16b5/0x3970 mm/slub.c:3540
 __slab_alloc mm/slub.c:3625 [inline]
 __slab_alloc_node mm/slub.c:3678 [inline]
 slab_alloc_node mm/slub.c:3850 [inline]
 kmem_cache_alloc_lru+0x64d/0xb30 mm/slub.c:3879
 alloc_inode_sb include/linux/fs.h:3018 [inline]
 hfs_alloc_inode+0x5a/0xc0 fs/hfs/super.c:165
 alloc_inode+0x83/0x440 fs/inode.c:260
 new_inode_pseudo fs/inode.c:1005 [inline]
 new_inode+0x38/0x4f0 fs/inode.c:1031
 hfs_new_inode+0x61/0x1010 fs/hfs/inode.c:186
 hfs_mkdir+0x54/0x250 fs/hfs/dir.c:228
 vfs_mkdir+0x49a/0x700 fs/namei.c:4126
 do_mkdirat+0x529/0x810 fs/namei.c:4149
 __do_sys_mkdirat fs/namei.c:4164 [inline]
 __se_sys_mkdirat fs/namei.c:4162 [inline]
 __x64_sys_mkdirat+0xc8/0x120 fs/namei.c:4162
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x63/0x6b

It missed to initialize .tz_secondswest, .cached_start and .cached_blocks
fields in struct hfs_inode_info after hfs_alloc_inode(), fix it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
747,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42126,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc: Avoid nmi_enter/nmi_exit in real mode interrupt.

nmi_enter()/nmi_exit() touches per cpu variables which can lead to kernel
crash when invoked during real mode interrupt handling (e.g. early HMI/MCE
interrupt handler) if percpu allocation comes from vmalloc area.

Early HMI/MCE handlers are called through DEFINE_INTERRUPT_HANDLER_NMI()
wrapper which invokes nmi_enter/nmi_exit calls. We don't see any issue when
percpu allocation is from the embedded first chunk. However with
CONFIG_NEED_PER_CPU_PAGE_FIRST_CHUNK enabled there are chances where percpu
allocation can come from the vmalloc area.

With kernel command line ""percpu_alloc=page"" we can force percpu allocation
to come from vmalloc area and can see kernel crash in machine_check_early:

[    1.215714] NIP [c000000000e49eb4] rcu_nmi_enter+0x24/0x110
[    1.215717] LR [c0000000000461a0] machine_check_early+0xf0/0x2c0
[    1.215719] --- interrupt: 200
[    1.215720] [c000000fffd73180] [0000000000000000] 0x0 (unreliable)
[    1.215722] [c000000fffd731b0] [0000000000000000] 0x0
[    1.215724] [c000000fffd73210] [c000000000008364] machine_check_early_common+0x134/0x1f8

Fix this by avoiding use of nmi_enter()/nmi_exit() in real mode if percpu
first chunk is not embedded.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
746,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49973,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

r8169: add tally counter fields added with RTL8125

RTL8125 added fields to the tally counter, what may result in the chip
dma'ing these new fields to unallocated memory. Therefore make sure
that the allocated memory area is big enough to hold all of the
tally counter values, even if we use only parts of it.",Linux,Linux,"f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87, f1bce4ad2f1cee6759711904b9fffe4a3dd8af87"
745,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46711,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: pm: fix ID 0 endp usage after multiple re-creations

'local_addr_used' and 'add_addr_accepted' are decremented for addresses
not related to the initial subflow (ID0), because the source and
destination addresses of the initial subflows are known from the
beginning: they don't count as ""additional local address being used"" or
""ADD_ADDR being accepted"".

It is then required not to increment them when the entrypoint used by
the initial subflow is removed and re-added during a connection. Without
this modification, this entrypoint cannot be removed and re-added more
than once.",Linux,Linux,"3ad14f54bd7448384458e69f0183843f683ecce8, 3ad14f54bd7448384458e69f0183843f683ecce8, 3ad14f54bd7448384458e69f0183843f683ecce8, 3ad14f54bd7448384458e69f0183843f683ecce8"
474,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43895,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Skip Recompute DSC Params if no Stream on Link

[why]
Encounter NULL pointer dereference uner mst + dsc setup.

BUG: kernel NULL pointer dereference, address: 0000000000000008
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP NOPTI
    CPU: 4 PID: 917 Comm: sway Not tainted 6.3.9-arch1-1 #1 124dc55df4f5272ccb409f39ef4872fc2b3376a2
    Hardware name: LENOVO 20NKS01Y00/20NKS01Y00, BIOS R12ET61W(1.31 ) 07/28/2022
    RIP: 0010:drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper]
    Code: 01 00 00 48 8b 85 60 05 00 00 48 63 80 88 00 00 00 3b 43 28 0f 8d 2e 01 00 00 48 8b 53 30 48 8d 04 80 48 8d 04 c2 48 8b 40 18 <48> 8>
    RSP: 0018:ffff960cc2df77d8 EFLAGS: 00010293
    RAX: 0000000000000000 RBX: ffff8afb87e81280 RCX: 0000000000000224
    RDX: ffff8afb9ee37c00 RSI: ffff8afb8da1a578 RDI: ffff8afb87e81280
    RBP: ffff8afb83d67000 R08: 0000000000000001 R09: ffff8afb9652f850
    R10: ffff960cc2df7908 R11: 0000000000000002 R12: 0000000000000000
    R13: ffff8afb8d7688a0 R14: ffff8afb8da1a578 R15: 0000000000000224
    FS:  00007f4dac35ce00(0000) GS:ffff8afe30b00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 0000000000000008 CR3: 000000010ddc6000 CR4: 00000000003506e0
    Call Trace:
<TASK>
     ? __die+0x23/0x70
     ? page_fault_oops+0x171/0x4e0
     ? plist_add+0xbe/0x100
     ? exc_page_fault+0x7c/0x180
     ? asm_exc_page_fault+0x26/0x30
     ? drm_dp_atomic_find_time_slots+0x5e/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
     ? drm_dp_atomic_find_time_slots+0x28/0x260 [drm_display_helper 0e67723696438d8e02b741593dd50d80b44c2026]
     compute_mst_dsc_configs_for_link+0x2ff/0xa40 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     ? fill_plane_buffer_attributes+0x419/0x510 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     compute_mst_dsc_configs_for_state+0x1e1/0x250 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     amdgpu_dm_atomic_check+0xecd/0x1190 [amdgpu 62e600d2a75e9158e1cd0a243bdc8e6da040c054]
     drm_atomic_check_only+0x5c5/0xa40
     drm_mode_atomic_ioctl+0x76e/0xbc0

[how]
dsc recompute should be skipped if no mode change detected on the new
request. If detected, keep checking whether the stream is already on
current state or not.

(cherry picked from commit 8151a6c13111b465dbabe07c19f572f7cbd16fef)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
743,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50039,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: accept TCA_STAB only for root qdisc

Most qdiscs maintain their backlog using qdisc_pkt_len(skb)
on the assumption it is invariant between the enqueue()
and dequeue() handlers.

Unfortunately syzbot can crash a host rather easily using
a TBF + SFQ combination, with an STAB on SFQ [1]

We can't support TCA_STAB on arbitrary level, this would
require to maintain per-qdisc storage.

[1]
[   88.796496] BUG: kernel NULL pointer dereference, address: 0000000000000000
[   88.798611] #PF: supervisor read access in kernel mode
[   88.799014] #PF: error_code(0x0000) - not-present page
[   88.799506] PGD 0 P4D 0
[   88.799829] Oops: Oops: 0000 [#1] SMP NOPTI
[   88.800569] CPU: 14 UID: 0 PID: 2053 Comm: b371744477 Not tainted 6.12.0-rc1-virtme #1117
[   88.801107] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
[   88.801779] RIP: 0010:sfq_dequeue (net/sched/sch_sfq.c:272 net/sched/sch_sfq.c:499) sch_sfq
[ 88.802544] Code: 0f b7 50 12 48 8d 04 d5 00 00 00 00 48 89 d6 48 29 d0 48 8b 91 c0 01 00 00 48 c1 e0 03 48 01 c2 66 83 7a 1a 00 7e c0 48 8b 3a <4c> 8b 07 4c 89 02 49 89 50 08 48 c7 47 08 00 00 00 00 48 c7 07 00
All code
========
   0:	0f b7 50 12          	movzwl 0x12(%rax),%edx
   4:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
   b:	00
   c:	48 89 d6             	mov    %rdx,%rsi
   f:	48 29 d0             	sub    %rdx,%rax
  12:	48 8b 91 c0 01 00 00 	mov    0x1c0(%rcx),%rdx
  19:	48 c1 e0 03          	shl    $0x3,%rax
  1d:	48 01 c2             	add    %rax,%rdx
  20:	66 83 7a 1a 00       	cmpw   $0x0,0x1a(%rdx)
  25:	7e c0                	jle    0xffffffffffffffe7
  27:	48 8b 3a             	mov    (%rdx),%rdi
  2a:*	4c 8b 07             	mov    (%rdi),%r8		<-- trapping instruction
  2d:	4c 89 02             	mov    %r8,(%rdx)
  30:	49 89 50 08          	mov    %rdx,0x8(%r8)
  34:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  3b:	00
  3c:	48                   	rex.W
  3d:	c7                   	.byte 0xc7
  3e:	07                   	(bad)
	...

Code starting with the faulting instruction
===========================================
   0:	4c 8b 07             	mov    (%rdi),%r8
   3:	4c 89 02             	mov    %r8,(%rdx)
   6:	49 89 50 08          	mov    %rdx,0x8(%r8)
   a:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  11:	00
  12:	48                   	rex.W
  13:	c7                   	.byte 0xc7
  14:	07                   	(bad)
	...
[   88.803721] RSP: 0018:ffff9a1f892b7d58 EFLAGS: 00000206
[   88.804032] RAX: 0000000000000000 RBX: ffff9a1f8420c800 RCX: ffff9a1f8420c800
[   88.804560] RDX: ffff9a1f81bc1440 RSI: 0000000000000000 RDI: 0000000000000000
[   88.805056] RBP: ffffffffc04bb0e0 R08: 0000000000000001 R09: 00000000ff7f9a1f
[   88.805473] R10: 000000000001001b R11: 0000000000009a1f R12: 0000000000000140
[   88.806194] R13: 0000000000000001 R14: ffff9a1f886df400 R15: ffff9a1f886df4ac
[   88.806734] FS:  00007f445601a740(0000) GS:ffff9a2e7fd80000(0000) knlGS:0000000000000000
[   88.807225] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[   88.807672] CR2: 0000000000000000 CR3: 000000050cc46000 CR4: 00000000000006f0
[   88.808165] Call Trace:
[   88.808459]  <TASK>
[   88.808710] ? __die (arch/x86/kernel/dumpstack.c:421 arch/x86/kernel/dumpstack.c:434)
[   88.809261] ? page_fault_oops (arch/x86/mm/fault.c:715)
[   88.809561] ? exc_page_fault (./arch/x86/include/asm/irqflags.h:26 ./arch/x86/include/asm/irqflags.h:87 ./arch/x86/include/asm/irqflags.h:147 arch/x86/mm/fault.c:1489 arch/x86/mm/fault.c:1539)
[   88.809806] ? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:623)
[   88.810074] ? sfq_dequeue (net/sched/sch_sfq.c:272 net/sched/sch_sfq.c:499) sch_sfq
[   88.810411] sfq_reset (net/sched/sch_sfq.c:525) sch_sfq
[   88.810671] qdisc_reset (./include/linux/skbuff.h:2135 ./include/linux/skbuff.h:2441 ./include/linux/skbuff.h:3304 ./include/linux/skbuff.h:3310 net/sched/sch_g
---truncated---",Linux,Linux,"175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c, 175f9c1bba9b825d22b142d183c9e175488b260c"
742,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42289,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qla2xxx: During vport delete send async logout explicitly

During vport delete, it is observed that during unload we hit a crash
because of stale entries in outstanding command array.  For all these stale
I/O entries, eh_abort was issued and aborted (fast_fail_io = 2009h) but
I/Os could not complete while vport delete is in process of deleting.

  BUG: kernel NULL pointer dereference, address: 000000000000001c
  #PF: supervisor read access in kernel mode
  #PF: error_code(0x0000) - not-present page
  PGD 0 P4D 0
  Oops: 0000 [#1] PREEMPT SMP NOPTI
  Workqueue: qla2xxx_wq qla_do_work [qla2xxx]
  RIP: 0010:dma_direct_unmap_sg+0x51/0x1e0
  RSP: 0018:ffffa1e1e150fc68 EFLAGS: 00010046
  RAX: 0000000000000000 RBX: 0000000000000021 RCX: 0000000000000001
  RDX: 0000000000000021 RSI: 0000000000000000 RDI: ffff8ce208a7a0d0
  RBP: ffff8ce208a7a0d0 R08: 0000000000000000 R09: ffff8ce378aac9c8
  R10: ffff8ce378aac8a0 R11: ffffa1e1e150f9d8 R12: 0000000000000000
  R13: 0000000000000000 R14: ffff8ce378aac9c8 R15: 0000000000000000
  FS:  0000000000000000(0000) GS:ffff8d217f000000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 000000000000001c CR3: 0000002089acc000 CR4: 0000000000350ee0
  Call Trace:
  <TASK>
  qla2xxx_qpair_sp_free_dma+0x417/0x4e0
  ? qla2xxx_qpair_sp_compl+0x10d/0x1a0
  ? qla2x00_status_entry+0x768/0x2830
  ? newidle_balance+0x2f0/0x430
  ? dequeue_entity+0x100/0x3c0
  ? qla24xx_process_response_queue+0x6a1/0x19e0
  ? __schedule+0x2d5/0x1140
  ? qla_do_work+0x47/0x60
  ? process_one_work+0x267/0x440
  ? process_one_work+0x440/0x440
  ? worker_thread+0x2d/0x3d0
  ? process_one_work+0x440/0x440
  ? kthread+0x156/0x180
  ? set_kthread_struct+0x50/0x50
  ? ret_from_fork+0x22/0x30
  </TASK>

Send out async logout explicitly for all the ports during vport delete.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
741,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46792,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

riscv: misaligned: Restrict user access to kernel memory

raw_copy_{to,from}_user() do not call access_ok(), so this code allowed
userspace to access any virtual memory address.",Linux,Linux,"7c83232161f609bbc452a1255f823f41afc411dd, 7c83232161f609bbc452a1255f823f41afc411dd"
740,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38611,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: i2c: et8ek8: Don't strip remove function when driver is builtin

Using __exit for the remove function results in the remove callback
being discarded with CONFIG_VIDEO_ET8EK8=y. When such a device gets
unbound (e.g. using sysfs or hotplug), the driver is just removed
without the cleanup being performed. This results in resource leaks. Fix
it by compiling in the remove callback unconditionally.

This also fixes a W=1 modpost warning:

	WARNING: modpost: drivers/media/i2c/et8ek8/et8ek8: section mismatch in reference: et8ek8_i2c_driver+0x10 (section: .data) -> et8ek8_remove (section: .exit.text)",Linux,Linux,"c5254e72b8edc2ca0a98703e92e8c34959343d2c, c5254e72b8edc2ca0a98703e92e8c34959343d2c, c5254e72b8edc2ca0a98703e92e8c34959343d2c, c5254e72b8edc2ca0a98703e92e8c34959343d2c"
758,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46840,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: clean up our handling of refs == 0 in snapshot delete

In reada we BUG_ON(refs == 0), which could be unkind since we aren't
holding a lock on the extent leaf and thus could get a transient
incorrect answer.  In walk_down_proc we also BUG_ON(refs == 0), which
could happen if we have extent tree corruption.  Change that to return
-EUCLEAN.  In do_walk_down() we catch this case and handle it correctly,
however we return -EIO, which -EUCLEAN is a more appropriate error code.
Finally in walk_up_proc we have the same BUG_ON(refs == 0), so convert
that to proper error handling.  Also adjust the error message so we can
actually do something with the information.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
760,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42322,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ipvs: properly dereference pe in ip_vs_add_service

Use pe directly to resolve sparse warning:

  net/netfilter/ipvs/ip_vs_ctl.c:1471:27: warning: dereference of noderef expression",Linux,Linux,"39b9722315364121c6e2524515a6e95d52287549, 39b9722315364121c6e2524515a6e95d52287549, 39b9722315364121c6e2524515a6e95d52287549, 39b9722315364121c6e2524515a6e95d52287549"
780,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46733,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix qgroup reserve leaks in cow_file_range

In the buffered write path, the dirty page owns the qgroup reserve until
it creates an ordered_extent.

Therefore, any errors that occur before the ordered_extent is created
must free that reservation, or else the space is leaked. The fstest
generic/475 exercises various IO error paths, and is able to trigger
errors in cow_file_range where we fail to get to allocating the ordered
extent. Note that because we *do* clear delalloc, we are likely to
remove the inode from the delalloc list, so the inodes/pages to not have
invalidate/launder called on them in the commit abort path.

This results in failures at the unmount stage of the test that look like:

  BTRFS: error (device dm-8 state EA) in cleanup_transaction:2018: errno=-5 IO failure
  BTRFS: error (device dm-8 state EA) in btrfs_replace_file_extents:2416: errno=-5 IO failure
  BTRFS warning (device dm-8 state EA): qgroup 0/5 has unreleased space, type 0 rsv 28672
  ------------[ cut here ]------------
  WARNING: CPU: 3 PID: 22588 at fs/btrfs/disk-io.c:4333 close_ctree+0x222/0x4d0 [btrfs]
  Modules linked in: btrfs blake2b_generic libcrc32c xor zstd_compress raid6_pq
  CPU: 3 PID: 22588 Comm: umount Kdump: loaded Tainted: G W          6.10.0-rc7-gab56fde445b8 #21
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Arch Linux 1.16.3-1-1 04/01/2014
  RIP: 0010:close_ctree+0x222/0x4d0 [btrfs]
  RSP: 0018:ffffb4465283be00 EFLAGS: 00010202
  RAX: 0000000000000001 RBX: ffffa1a1818e1000 RCX: 0000000000000001
  RDX: 0000000000000000 RSI: ffffb4465283bbe0 RDI: ffffa1a19374fcb8
  RBP: ffffa1a1818e13c0 R08: 0000000100028b16 R09: 0000000000000000
  R10: 0000000000000003 R11: 0000000000000003 R12: ffffa1a18ad7972c
  R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
  FS:  00007f9168312b80(0000) GS:ffffa1a4afcc0000(0000) knlGS:0000000000000000
  CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
  CR2: 00007f91683c9140 CR3: 000000010acaa000 CR4: 00000000000006f0
  Call Trace:
   <TASK>
   ? close_ctree+0x222/0x4d0 [btrfs]
   ? __warn.cold+0x8e/0xea
   ? close_ctree+0x222/0x4d0 [btrfs]
   ? report_bug+0xff/0x140
   ? handle_bug+0x3b/0x70
   ? exc_invalid_op+0x17/0x70
   ? asm_exc_invalid_op+0x1a/0x20
   ? close_ctree+0x222/0x4d0 [btrfs]
   generic_shutdown_super+0x70/0x160
   kill_anon_super+0x11/0x40
   btrfs_kill_super+0x11/0x20 [btrfs]
   deactivate_locked_super+0x2e/0xa0
   cleanup_mnt+0xb5/0x150
   task_work_run+0x57/0x80
   syscall_exit_to_user_mode+0x121/0x130
   do_syscall_64+0xab/0x1a0
   entry_SYSCALL_64_after_hwframe+0x77/0x7f
  RIP: 0033:0x7f916847a887
  ---[ end trace 0000000000000000 ]---
  BTRFS error (device dm-8 state EA): qgroup reserved space leaked

Cases 2 and 3 in the out_reserve path both pertain to this type of leak
and must free the reserved qgroup data. Because it is already an error
path, I opted not to handle the possible errors in
btrfs_free_qgroup_data.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
771,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43832,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

s390/uv: Don't call folio_wait_writeback() without a folio reference

folio_wait_writeback() requires that no spinlocks are held and that
a folio reference is held, as documented. After we dropped the PTL, the
folio could get freed concurrently. So grab a temporary reference.",Linux,Linux,"214d9bbcd3a67230b932f6cea83c078ab34d9e70, 214d9bbcd3a67230b932f6cea83c078ab34d9e70, 214d9bbcd3a67230b932f6cea83c078ab34d9e70, 214d9bbcd3a67230b932f6cea83c078ab34d9e70"
779,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47670,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: add bounds checking to ocfs2_xattr_find_entry()

Add a paranoia check to make sure it doesn't stray beyond valid memory
region containing ocfs2 xattr entries when scanning for a match.  It will
prevent out-of-bound access in case of crafted images.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
778,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46814,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check msg_id before processing transcation

[WHY & HOW]
HDCP_MESSAGE_ID_INVALID (-1) is not a valid msg_id nor is it a valid
array index, and it needs checking before used.

This fixes 4 OVERRUN issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
777,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46823,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

kunit/overflow: Fix UB in overflow_allocation_test

The 'device_name' array doesn't exist out of the
'overflow_allocation_test' function scope. However, it is being used as
a driver name when calling 'kunit_driver_create' from
'kunit_device_register'. It produces the kernel panic with KASAN
enabled.

Since this variable is used in one place only, remove it and pass the
device name into kunit_device_register directly as an ascii string.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
776,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35963,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: hci_sock: Fix not validating setsockopt user input

Check user input length before copying data.",Linux,Linux,"09572fca7223bcf32c9f0d5e100d8381a81d55f4, 09572fca7223bcf32c9f0d5e100d8381a81d55f4, 09572fca7223bcf32c9f0d5e100d8381a81d55f4, 09572fca7223bcf32c9f0d5e100d8381a81d55f4"
775,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45019,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5e: Take state lock during tx timeout reporter

mlx5e_safe_reopen_channels() requires the state lock taken. The
referenced changed in the Fixes tag removed the lock to fix another
issue. This patch adds it back but at a later point (when calling
mlx5e_safe_reopen_channels()) to avoid the deadlock referenced in the
Fixes tag.",Linux,Linux,"514232495aa523641febaa58b687fe6df1cd0b73, 8ce3d969348a7c7fa3469588eb1319f9f3cc0eaa, eab0da38912ebdad922ed0388209f7eb0a5163cd, eab0da38912ebdad922ed0388209f7eb0a5163cd"
774,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46737,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nvmet-tcp: fix kernel crash if commands allocation fails

If the commands allocation fails in nvmet_tcp_alloc_cmds()
the kernel crashes in nvmet_tcp_release_queue_work() because of
a NULL pointer dereference.

  nvmet: failed to install queue 0 cntlid 1 ret 6
  Unable to handle kernel NULL pointer dereference at
         virtual address 0000000000000008

Fix the bug by setting queue->nr_cmds to zero in case
nvmet_tcp_alloc_cmd() fails.",Linux,Linux,"872d26a391da92ed8f0c0f5cb5fef428067b7f30, 872d26a391da92ed8f0c0f5cb5fef428067b7f30, 872d26a391da92ed8f0c0f5cb5fef428067b7f30, 872d26a391da92ed8f0c0f5cb5fef428067b7f30, 872d26a391da92ed8f0c0f5cb5fef428067b7f30, 872d26a391da92ed8f0c0f5cb5fef428067b7f30, 872d26a391da92ed8f0c0f5cb5fef428067b7f30"
773,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46720,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: fix dereference after null check

check the pointer hive before use.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
772,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45022,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm/vmalloc: fix page mapping if vm_area_alloc_pages() with high order fallback to order 0

The __vmap_pages_range_noflush() assumes its argument pages** contains
pages with the same page shift.  However, since commit e9c3cda4d86e (""mm,
vmalloc: fix high order __GFP_NOFAIL allocations""), if gfp_flags includes
__GFP_NOFAIL with high order in vm_area_alloc_pages() and page allocation
failed for high order, the pages** may contain two different page shifts
(high order and order-0).  This could lead __vmap_pages_range_noflush() to
perform incorrect mappings, potentially resulting in memory corruption.

Users might encounter this as follows (vmap_allow_huge = true, 2M is for
PMD_SIZE):

kvmalloc(2M, __GFP_NOFAIL|GFP_X)
    __vmalloc_node_range_noprof(vm_flags=VM_ALLOW_HUGE_VMAP)
        vm_area_alloc_pages(order=9) ---> order-9 allocation failed and fallback to order-0
            vmap_pages_range()
                vmap_pages_range_noflush()
                    __vmap_pages_range_noflush(page_shift = 21) ----> wrong mapping happens

We can remove the fallback code because if a high-order allocation fails,
__vmalloc_node_range_noprof() will retry with order-0.  Therefore, it is
unnecessary to fallback to order-0 here.  Therefore, fix this by removing
the fallback code.",Linux,Linux,"fe5c2bdcb14c8612eb5e7a09159801c7219e9ac4, e9c3cda4d86e56bf7fe403729f38c4f0f65d3860, e9c3cda4d86e56bf7fe403729f38c4f0f65d3860, e9c3cda4d86e56bf7fe403729f38c4f0f65d3860"
770,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43859,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to truncate preallocated blocks in f2fs_file_open()

chenyuwen reports a f2fs bug as below:

Unable to handle kernel NULL pointer dereference at virtual address 0000000000000011
 fscrypt_set_bio_crypt_ctx+0x78/0x1e8
 f2fs_grab_read_bio+0x78/0x208
 f2fs_submit_page_read+0x44/0x154
 f2fs_get_read_data_page+0x288/0x5f4
 f2fs_get_lock_data_page+0x60/0x190
 truncate_partial_data_page+0x108/0x4fc
 f2fs_do_truncate_blocks+0x344/0x5f0
 f2fs_truncate_blocks+0x6c/0x134
 f2fs_truncate+0xd8/0x200
 f2fs_iget+0x20c/0x5ac
 do_garbage_collect+0x5d0/0xf6c
 f2fs_gc+0x22c/0x6a4
 f2fs_disable_checkpoint+0xc8/0x310
 f2fs_fill_super+0x14bc/0x1764
 mount_bdev+0x1b4/0x21c
 f2fs_mount+0x20/0x30
 legacy_get_tree+0x50/0xbc
 vfs_get_tree+0x5c/0x1b0
 do_new_mount+0x298/0x4cc
 path_mount+0x33c/0x5fc
 __arm64_sys_mount+0xcc/0x15c
 invoke_syscall+0x60/0x150
 el0_svc_common+0xb8/0xf8
 do_el0_svc+0x28/0xa0
 el0_svc+0x24/0x84
 el0t_64_sync_handler+0x88/0xec

It is because inode.i_crypt_info is not initialized during below path:
- mount
 - f2fs_fill_super
  - f2fs_disable_checkpoint
   - f2fs_gc
    - f2fs_iget
     - f2fs_truncate

So, let's relocate truncation of preallocated blocks to f2fs_file_open(),
after fscrypt_file_open().",Linux,Linux,"d4dd19ec1ea0cf6532d65709325c42b1398614a8, d4dd19ec1ea0cf6532d65709325c42b1398614a8, d4dd19ec1ea0cf6532d65709325c42b1398614a8, d4dd19ec1ea0cf6532d65709325c42b1398614a8"
761,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45012,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nouveau/firmware: use dma non-coherent allocator

Currently, enabling SG_DEBUG in the kernel will cause nouveau to hit a
BUG() on startup, when the iommu is enabled:

kernel BUG at include/linux/scatterlist.h:187!
invalid opcode: 0000 [#1] PREEMPT SMP NOPTI
CPU: 7 PID: 930 Comm: (udev-worker) Not tainted 6.9.0-rc3Lyude-Test+ #30
Hardware name: MSI MS-7A39/A320M GAMING PRO (MS-7A39), BIOS 1.I0 01/22/2019
RIP: 0010:sg_init_one+0x85/0xa0
Code: 69 88 32 01 83 e1 03 f6 c3 03 75 20 a8 01 75 1e 48 09 cb 41 89 54
24 08 49 89 1c 24 41 89 6c 24 0c 5b 5d 41 5c e9 7b b9 88 00 <0f> 0b 0f 0b
0f 0b 48 8b 05 5e 46 9a 01 eb b2 66 66 2e 0f 1f 84 00
RSP: 0018:ffffa776017bf6a0 EFLAGS: 00010246
RAX: 0000000000000000 RBX: ffffa77600d87000 RCX: 000000000000002b
RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffffa77680d87000
RBP: 000000000000e000 R08: 0000000000000000 R09: 0000000000000000
R10: ffff98f4c46aa508 R11: 0000000000000000 R12: ffff98f4c46aa508
R13: ffff98f4c46aa008 R14: ffffa77600d4a000 R15: ffffa77600d4a018
FS:  00007feeb5aae980(0000) GS:ffff98f5c4dc0000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007f22cb9a4520 CR3: 00000001043ba000 CR4: 00000000003506f0
Call Trace:
 <TASK>
 ? die+0x36/0x90
 ? do_trap+0xdd/0x100
 ? sg_init_one+0x85/0xa0
 ? do_error_trap+0x65/0x80
 ? sg_init_one+0x85/0xa0
 ? exc_invalid_op+0x50/0x70
 ? sg_init_one+0x85/0xa0
 ? asm_exc_invalid_op+0x1a/0x20
 ? sg_init_one+0x85/0xa0
 nvkm_firmware_ctor+0x14a/0x250 [nouveau]
 nvkm_falcon_fw_ctor+0x42/0x70 [nouveau]
 ga102_gsp_booter_ctor+0xb4/0x1a0 [nouveau]
 r535_gsp_oneinit+0xb3/0x15f0 [nouveau]
 ? srso_return_thunk+0x5/0x5f
 ? srso_return_thunk+0x5/0x5f
 ? nvkm_udevice_new+0x95/0x140 [nouveau]
 ? srso_return_thunk+0x5/0x5f
 ? srso_return_thunk+0x5/0x5f
 ? ktime_get+0x47/0xb0

Fix this by using the non-coherent allocator instead, I think there
might be a better answer to this, but it involve ripping up some of
APIs using sg lists.",Linux,Linux,"2541626cfb794e57ba0575a6920826f591f7ced0, 2541626cfb794e57ba0575a6920826f591f7ced0, 2541626cfb794e57ba0575a6920826f591f7ced0"
769,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52821,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/panel: fix a possible null pointer dereference

In versatile_panel_get_modes(), the return value of drm_mode_duplicate()
is assigned to mode, which will lead to a NULL pointer dereference
on failure of drm_mode_duplicate(). Add a check to avoid npd.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
768,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43849,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

soc: qcom: pdr: protect locator_addr with the main mutex

If the service locator server is restarted fast enough, the PDR can
rewrite locator_addr fields concurrently. Protect them by placing
modification of those fields under the main pdr->lock.",Linux,Linux,"fbe639b44a82755d639df1c5d147c93f02ac5a0f, fbe639b44a82755d639df1c5d147c93f02ac5a0f, fbe639b44a82755d639df1c5d147c93f02ac5a0f, fbe639b44a82755d639df1c5d147c93f02ac5a0f, fbe639b44a82755d639df1c5d147c93f02ac5a0f, fbe639b44a82755d639df1c5d147c93f02ac5a0f"
767,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46759,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

hwmon: (adc128d818) Fix underflows seen when writing limit attributes

DIV_ROUND_CLOSEST() after kstrtol() results in an underflow if a large
negative number such as -9223372036854775808 is provided by the user.
Fix it by reordering clamp_val() and DIV_ROUND_CLOSEST() operations.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
766,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46803,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdkfd: Check debug trap enable before write dbg_ev_file

In interrupt context, write dbg_ev_file will be run by work queue. It
will cause write dbg_ev_file execution after debug_trap_disable, which
will cause NULL pointer access.
v2: cancel work ""debug_event_workarea"" before set dbg_ev_file as NULL.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
765,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47661,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Avoid overflow from uint32_t to uint8_t

[WHAT & HOW]
dmub_rb_cmd's ramping_boundary has size of uint8_t and it is assigned
0xFFFF. Fix it by changing it to uint8_t with value of 0xFF.

This fixes 2 INTEGER_OVERFLOW issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
764,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41059,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

hfsplus: fix uninit-value in copy_name

[syzbot reported]
BUG: KMSAN: uninit-value in sized_strscpy+0xc4/0x160
 sized_strscpy+0xc4/0x160
 copy_name+0x2af/0x320 fs/hfsplus/xattr.c:411
 hfsplus_listxattr+0x11e9/0x1a50 fs/hfsplus/xattr.c:750
 vfs_listxattr fs/xattr.c:493 [inline]
 listxattr+0x1f3/0x6b0 fs/xattr.c:840
 path_listxattr fs/xattr.c:864 [inline]
 __do_sys_listxattr fs/xattr.c:876 [inline]
 __se_sys_listxattr fs/xattr.c:873 [inline]
 __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873
 x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
 slab_post_alloc_hook mm/slub.c:3877 [inline]
 slab_alloc_node mm/slub.c:3918 [inline]
 kmalloc_trace+0x57b/0xbe0 mm/slub.c:4065
 kmalloc include/linux/slab.h:628 [inline]
 hfsplus_listxattr+0x4cc/0x1a50 fs/hfsplus/xattr.c:699
 vfs_listxattr fs/xattr.c:493 [inline]
 listxattr+0x1f3/0x6b0 fs/xattr.c:840
 path_listxattr fs/xattr.c:864 [inline]
 __do_sys_listxattr fs/xattr.c:876 [inline]
 __se_sys_listxattr fs/xattr.c:873 [inline]
 __x64_sys_listxattr+0x16b/0x2f0 fs/xattr.c:873
 x64_sys_call+0x2ba0/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:195
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
[Fix]
When allocating memory to strbuf, initialize memory to 0.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
763,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46763,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fou: Fix null-ptr-deref in GRO.

We observed a null-ptr-deref in fou_gro_receive() while shutting down
a host.  [0]

The NULL pointer is sk->sk_user_data, and the offset 8 is of protocol
in struct fou.

When fou_release() is called due to netns dismantle or explicit tunnel
teardown, udp_tunnel_sock_release() sets NULL to sk->sk_user_data.
Then, the tunnel socket is destroyed after a single RCU grace period.

So, in-flight udp4_gro_receive() could find the socket and execute the
FOU GRO handler, where sk->sk_user_data could be NULL.

Let's use rcu_dereference_sk_user_data() in fou_from_sock() and add NULL
checks in FOU GRO handlers.

[0]:
BUG: kernel NULL pointer dereference, address: 0000000000000008
 PF: supervisor read access in kernel mode
 PF: error_code(0x0000) - not-present page
PGD 80000001032f4067 P4D 80000001032f4067 PUD 103240067 PMD 0
SMP PTI
CPU: 0 PID: 0 Comm: swapper/0 Not tainted 5.10.216-204.855.amzn2.x86_64 #1
Hardware name: Amazon EC2 c5.large/, BIOS 1.0 10/16/2017
RIP: 0010:fou_gro_receive (net/ipv4/fou.c:233) [fou]
Code: 41 5f c3 cc cc cc cc e8 e7 2e 69 f4 0f 1f 80 00 00 00 00 0f 1f 44 00 00 49 89 f8 41 54 48 89 f7 48 89 d6 49 8b 80 88 02 00 00 <0f> b6 48 08 0f b7 42 4a 66 25 fd fd 80 cc 02 66 89 42 4a 0f b6 42
RSP: 0018:ffffa330c0003d08 EFLAGS: 00010297
RAX: 0000000000000000 RBX: ffff93d9e3a6b900 RCX: 0000000000000010
RDX: ffff93d9e3a6b900 RSI: ffff93d9e3a6b900 RDI: ffff93dac2e24d08
RBP: ffff93d9e3a6b900 R08: ffff93dacbce6400 R09: 0000000000000002
R10: 0000000000000000 R11: ffffffffb5f369b0 R12: ffff93dacbce6400
R13: ffff93dac2e24d08 R14: 0000000000000000 R15: ffffffffb4edd1c0
FS:  0000000000000000(0000) GS:ffff93daee800000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000008 CR3: 0000000102140001 CR4: 00000000007706f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <IRQ>
 ? show_trace_log_lvl (arch/x86/kernel/dumpstack.c:259)
 ? __die_body.cold (arch/x86/kernel/dumpstack.c:478 arch/x86/kernel/dumpstack.c:420)
 ? no_context (arch/x86/mm/fault.c:752)
 ? exc_page_fault (arch/x86/include/asm/irqflags.h:49 arch/x86/include/asm/irqflags.h:89 arch/x86/mm/fault.c:1435 arch/x86/mm/fault.c:1483)
 ? asm_exc_page_fault (arch/x86/include/asm/idtentry.h:571)
 ? fou_gro_receive (net/ipv4/fou.c:233) [fou]
 udp_gro_receive (include/linux/netdevice.h:2552 net/ipv4/udp_offload.c:559)
 udp4_gro_receive (net/ipv4/udp_offload.c:604)
 inet_gro_receive (net/ipv4/af_inet.c:1549 (discriminator 7))
 dev_gro_receive (net/core/dev.c:6035 (discriminator 4))
 napi_gro_receive (net/core/dev.c:6170)
 ena_clean_rx_irq (drivers/amazon/net/ena/ena_netdev.c:1558) [ena]
 ena_io_poll (drivers/amazon/net/ena/ena_netdev.c:1742) [ena]
 napi_poll (net/core/dev.c:6847)
 net_rx_action (net/core/dev.c:6917)
 __do_softirq (arch/x86/include/asm/jump_label.h:25 include/linux/jump_label.h:200 include/trace/events/irq.h:142 kernel/softirq.c:299)
 asm_call_irq_on_stack (arch/x86/entry/entry_64.S:809)
</IRQ>
 do_softirq_own_stack (arch/x86/include/asm/irq_stack.h:27 arch/x86/include/asm/irq_stack.h:77 arch/x86/kernel/irq_64.c:77)
 irq_exit_rcu (kernel/softirq.c:393 kernel/softirq.c:423 kernel/softirq.c:435)
 common_interrupt (arch/x86/kernel/irq.c:239)
 asm_common_interrupt (arch/x86/include/asm/idtentry.h:626)
RIP: 0010:acpi_idle_do_entry (arch/x86/include/asm/irqflags.h:49 arch/x86/include/asm/irqflags.h:89 drivers/acpi/processor_idle.c:114 drivers/acpi/processor_idle.c:575)
Code: 8b 15 d1 3c c4 02 ed c3 cc cc cc cc 65 48 8b 04 25 40 ef 01 00 48 8b 00 a8 08 75 eb 0f 1f 44 00 00 0f 00 2d d5 09 55 00 fb f4 <fa> c3 cc cc cc cc e9 be fc ff ff 66 66 2e 0f 1f 84 00 00 00 00 00
RSP: 0018:ffffffffb5603e58 EFLAGS: 00000246
RAX: 0000000000004000 RBX: ffff93dac0929c00 RCX: ffff93daee833900
RDX: ffff93daee800000 RSI: ffff93d
---truncated---",Linux,Linux,"d92283e338f6d6503b7417536bf3478f466cbc01, d92283e338f6d6503b7417536bf3478f466cbc01, d92283e338f6d6503b7417536bf3478f466cbc01, d92283e338f6d6503b7417536bf3478f466cbc01, d92283e338f6d6503b7417536bf3478f466cbc01, d92283e338f6d6503b7417536bf3478f466cbc01"
762,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46753,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: handle errors from btrfs_dec_ref() properly

In walk_up_proc() we BUG_ON(ret) from btrfs_dec_ref().  This is
incorrect, we have proper error handling here, return the error.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
650,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42270,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: iptables: Fix null-ptr-deref in iptable_nat_table_init().

We had a report that iptables-restore sometimes triggered null-ptr-deref
at boot time. [0]

The problem is that iptable_nat_table_init() is exposed to user space
before the kernel fully initialises netns.

In the small race window, a user could call iptable_nat_table_init()
that accesses net_generic(net, iptable_nat_net_id), which is available
only after registering iptable_nat_net_ops.

Let's call register_pernet_subsys() before xt_register_template().

[0]:
bpfilter: Loaded bpfilter_umh pid 11702
Started bpfilter
BUG: kernel NULL pointer dereference, address: 0000000000000013
 PF: supervisor write access in kernel mode
 PF: error_code(0x0002) - not-present page
PGD 0 P4D 0
PREEMPT SMP NOPTI
CPU: 2 PID: 11879 Comm: iptables-restor Not tainted 6.1.92-99.174.amzn2023.x86_64 #1
Hardware name: Amazon EC2 c6i.4xlarge/, BIOS 1.0 10/16/2017
RIP: 0010:iptable_nat_table_init (net/ipv4/netfilter/iptable_nat.c:87 net/ipv4/netfilter/iptable_nat.c:121) iptable_nat
Code: 10 4c 89 f6 48 89 ef e8 0b 19 bb ff 41 89 c4 85 c0 75 38 41 83 c7 01 49 83 c6 28 41 83 ff 04 75 dc 48 8b 44 24 08 48 8b 0c 24 <48> 89 08 4c 89 ef e8 a2 3b a2 cf 48 83 c4 10 44 89 e0 5b 5d 41 5c
RSP: 0018:ffffbef902843cd0 EFLAGS: 00010246
RAX: 0000000000000013 RBX: ffff9f4b052caa20 RCX: ffff9f4b20988d80
RDX: 0000000000000000 RSI: 0000000000000064 RDI: ffffffffc04201c0
RBP: ffff9f4b29394000 R08: ffff9f4b07f77258 R09: ffff9f4b07f77240
R10: 0000000000000000 R11: ffff9f4b09635388 R12: 0000000000000000
R13: ffff9f4b1a3c6c00 R14: ffff9f4b20988e20 R15: 0000000000000004
FS:  00007f6284340000(0000) GS:ffff9f51fe280000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000013 CR3: 00000001d10a6005 CR4: 00000000007706e0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
PKRU: 55555554
Call Trace:
 <TASK>
 ? show_trace_log_lvl (arch/x86/kernel/dumpstack.c:259)
 ? show_trace_log_lvl (arch/x86/kernel/dumpstack.c:259)
 ? xt_find_table_lock (net/netfilter/x_tables.c:1259)
 ? __die_body.cold (arch/x86/kernel/dumpstack.c:478 arch/x86/kernel/dumpstack.c:420)
 ? page_fault_oops (arch/x86/mm/fault.c:727)
 ? exc_page_fault (./arch/x86/include/asm/irqflags.h:40 ./arch/x86/include/asm/irqflags.h:75 arch/x86/mm/fault.c:1470 arch/x86/mm/fault.c:1518)
 ? asm_exc_page_fault (./arch/x86/include/asm/idtentry.h:570)
 ? iptable_nat_table_init (net/ipv4/netfilter/iptable_nat.c:87 net/ipv4/netfilter/iptable_nat.c:121) iptable_nat
 xt_find_table_lock (net/netfilter/x_tables.c:1259)
 xt_request_find_table_lock (net/netfilter/x_tables.c:1287)
 get_info (net/ipv4/netfilter/ip_tables.c:965)
 ? security_capable (security/security.c:809 (discriminator 13))
 ? ns_capable (kernel/capability.c:376 kernel/capability.c:397)
 ? do_ipt_get_ctl (net/ipv4/netfilter/ip_tables.c:1656)
 ? bpfilter_send_req (net/bpfilter/bpfilter_kern.c:52) bpfilter
 nf_getsockopt (net/netfilter/nf_sockopt.c:116)
 ip_getsockopt (net/ipv4/ip_sockglue.c:1827)
 __sys_getsockopt (net/socket.c:2327)
 __x64_sys_getsockopt (net/socket.c:2342 net/socket.c:2339 net/socket.c:2339)
 do_syscall_64 (arch/x86/entry/common.c:51 arch/x86/entry/common.c:81)
 entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:121)
RIP: 0033:0x7f62844685ee
Code: 48 8b 0d 45 28 0f 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa 49 89 ca b8 37 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 0a c3 66 0f 1f 84 00 00 00 00 00 48 8b 15 09
RSP: 002b:00007ffd1f83d638 EFLAGS: 00000246 ORIG_RAX: 0000000000000037
RAX: ffffffffffffffda RBX: 00007ffd1f83d680 RCX: 00007f62844685ee
RDX: 0000000000000040 RSI: 0000000000000000 RDI: 0000000000000004
RBP: 0000000000000004 R08: 00007ffd1f83d670 R09: 0000558798ffa2a0
R10: 00007ffd1f83d680 R11: 0000000000000246 R12: 00007ffd1f83e3b2
R13: 00007f6284
---truncated---",Linux,Linux,"fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1, fdacd57c79b79a03c7ca88f706ad9fb7b46831c1"
744,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46794,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

x86/tdx: Fix data leak in mmio_read()

The mmio_read() function makes a TDVMCALL to retrieve MMIO data for an
address from the VMM.

Sean noticed that mmio_read() unintentionally exposes the value of an
initialized variable (val) on the stack to the VMM.

This variable is only needed as an output value. It did not need to be
passed to the VMM in the first place.

Do not send the original value of *val to the VMM.

[ dhansen: clarify what 'val' is used for. ]",Linux,Linux,"31d58c4e557d46fa7f8557714250fb6f89c941ae, 31d58c4e557d46fa7f8557714250fb6f89c941ae, 31d58c4e557d46fa7f8557714250fb6f89c941ae, 31d58c4e557d46fa7f8557714250fb6f89c941ae"
648,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38633,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

serial: max3100: Update uart_driver_registered on driver removal

The removal of the last MAX3100 device triggers the removal of
the driver. However, code doesn't update the respective global
variable and after insmod — rmmod — insmod cycle the kernel
oopses:

  max3100 spi-PRP0001:01: max3100_probe: adding port 0
  BUG: kernel NULL pointer dereference, address: 0000000000000408
  ...
  RIP: 0010:serial_core_register_port+0xa0/0x840
  ...
   max3100_probe+0x1b6/0x280 [max3100]
   spi_probe+0x8d/0xb0

Update the actual state so next time UART driver will be registered
again.

Hugo also noticed, that the error path in the probe also affected
by having the variable set, and not cleared. Instead of clearing it
move the assignment after the successfull uart_register_driver() call.",Linux,Linux,"7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676, 7831d56b0a3544cbb6f82f76c34ca95e24d5b676"
527,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2020-24490,n/a,n/a,denial of service,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,Improper buffer restrictions in BlueZ may allow an unauthenticated user to potentially enable denial of service via adjacent access. This affects all Linux kernel versions that support BlueZ.,n/a,BlueZ Advisory,all Linux kernel versions that support BlueZ
535,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46870,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Disable DMCUB timeout for DCN35

[Why]
DMCUB can intermittently take longer than expected to process commands.

Old ASIC policy was to continue while logging a diagnostic error - which
works fine for ASIC without IPS, but with IPS this could lead to a race
condition where we attempt to access DCN state while it's inaccessible,
leading to a system hang when the NIU port is not disabled or register
accesses that timeout and the display configuration in an undefined
state.

[How]
We need to investigate why these accesses take longer than expected, but
for now we should disable the timeout on DCN35 to avoid this race
condition. Since the waits happen only at lower interrupt levels the
risk of taking too long at higher IRQ and causing a system watchdog
timeout are minimal.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
534,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43850,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

soc: qcom: icc-bwmon: Fix refcount imbalance seen during bwmon_remove

The following warning is seen during bwmon_remove due to refcount
imbalance, fix this by releasing the OPPs after use.

Logs:
WARNING: at drivers/opp/core.c:1640 _opp_table_kref_release+0x150/0x158
Hardware name: Qualcomm Technologies, Inc. X1E80100 CRD (DT)
...
Call trace:
_opp_table_kref_release+0x150/0x158
dev_pm_opp_remove_table+0x100/0x1b4
devm_pm_opp_of_table_release+0x10/0x1c
devm_action_release+0x14/0x20
devres_release_all+0xa4/0x104
device_unbind_cleanup+0x18/0x60
device_release_driver_internal+0x1ec/0x228
driver_detach+0x50/0x98
bus_remove_driver+0x6c/0xbc
driver_unregister+0x30/0x60
platform_driver_unregister+0x14/0x20
bwmon_driver_exit+0x18/0x524 [icc_bwmon]
__arm64_sys_delete_module+0x184/0x264
invoke_syscall+0x48/0x118
el0_svc_common.constprop.0+0xc8/0xe8
do_el0_svc+0x20/0x2c
el0_svc+0x34/0xdc
el0t_64_sync_handler+0x13c/0x158
el0t_64_sync+0x190/0x194
--[ end trace 0000000000000000 ]---",Linux,Linux,"b9c2ae6cac403dee3195fda9eb28d8ee733b225b, b9c2ae6cac403dee3195fda9eb28d8ee733b225b, b9c2ae6cac403dee3195fda9eb28d8ee733b225b"
533,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36270,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: tproxy: bail out if IP has been disabled on the device

syzbot reports:
general protection fault, probably for non-canonical address 0xdffffc0000000003: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000018-0x000000000000001f]
[..]
RIP: 0010:nf_tproxy_laddr4+0xb7/0x340 net/ipv4/netfilter/nf_tproxy_ipv4.c:62
Call Trace:
 nft_tproxy_eval_v4 net/netfilter/nft_tproxy.c:56 [inline]
 nft_tproxy_eval+0xa9a/0x1a00 net/netfilter/nft_tproxy.c:168

__in_dev_get_rcu() can return NULL, so check for this.",Linux,Linux,"cc6eb433856983e91071469c4ce57accb6947ccb, cc6eb433856983e91071469c4ce57accb6947ccb, cc6eb433856983e91071469c4ce57accb6947ccb, cc6eb433856983e91071469c4ce57accb6947ccb, cc6eb433856983e91071469c4ce57accb6947ccb, cc6eb433856983e91071469c4ce57accb6947ccb, cc6eb433856983e91071469c4ce57accb6947ccb"
532,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49868,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: fix a NULL pointer dereference when failed to start a new trasacntion

[BUG]
Syzbot reported a NULL pointer dereference with the following crash:

  FAULT_INJECTION: forcing a failure.
   start_transaction+0x830/0x1670 fs/btrfs/transaction.c:676
   prepare_to_relocate+0x31f/0x4c0 fs/btrfs/relocation.c:3642
   relocate_block_group+0x169/0xd20 fs/btrfs/relocation.c:3678
  ...
  BTRFS info (device loop0): balance: ended with status: -12
  Oops: general protection fault, probably for non-canonical address 0xdffffc00000000cc: 0000 [#1] PREEMPT SMP KASAN NOPTI
  KASAN: null-ptr-deref in range [0x0000000000000660-0x0000000000000667]
  RIP: 0010:btrfs_update_reloc_root+0x362/0xa80 fs/btrfs/relocation.c:926
  Call Trace:
   <TASK>
   commit_fs_roots+0x2ee/0x720 fs/btrfs/transaction.c:1496
   btrfs_commit_transaction+0xfaf/0x3740 fs/btrfs/transaction.c:2430
   del_balance_item fs/btrfs/volumes.c:3678 [inline]
   reset_balance_state+0x25e/0x3c0 fs/btrfs/volumes.c:3742
   btrfs_balance+0xead/0x10c0 fs/btrfs/volumes.c:4574
   btrfs_ioctl_balance+0x493/0x7c0 fs/btrfs/ioctl.c:3673
   vfs_ioctl fs/ioctl.c:51 [inline]
   __do_sys_ioctl fs/ioctl.c:907 [inline]
   __se_sys_ioctl+0xf9/0x170 fs/ioctl.c:893
   do_syscall_x64 arch/x86/entry/common.c:52 [inline]
   do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
   entry_SYSCALL_64_after_hwframe+0x77/0x7f

[CAUSE]
The allocation failure happens at the start_transaction() inside
prepare_to_relocate(), and during the error handling we call
unset_reloc_control(), which makes fs_info->balance_ctl to be NULL.

Then we continue the error path cleanup in btrfs_balance() by calling
reset_balance_state() which will call del_balance_item() to fully delete
the balance item in the root tree.

However during the small window between set_reloc_contrl() and
unset_reloc_control(), we can have a subvolume tree update and created a
reloc_root for that subvolume.

Then we go into the final btrfs_commit_transaction() of
del_balance_item(), and into btrfs_update_reloc_root() inside
commit_fs_roots().

That function checks if fs_info->reloc_ctl is in the merge_reloc_tree
stage, but since fs_info->reloc_ctl is NULL, it results a NULL pointer
dereference.

[FIX]
Just add extra check on fs_info->reloc_ctl inside
btrfs_update_reloc_root(), before checking
fs_info->reloc_ctl->merge_reloc_tree.

That DEAD_RELOC_TREE handling is to prevent further modification to the
reloc tree during merge stage, but since there is no reloc_ctl at all,
we do not need to bother that.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
531,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41019,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fs/ntfs3: Validate ff offset

This adds sanity checks for ff offset. There is a check
on rt->first_free at first, but walking through by ff
without any check. If the second ff is a large offset.
We may encounter an out-of-bound read.",Linux,Linux,"4534a70b7056fd4b9a1c6db5a4ce3c98546b291e, 4534a70b7056fd4b9a1c6db5a4ce3c98546b291e, 4534a70b7056fd4b9a1c6db5a4ce3c98546b291e, 4534a70b7056fd4b9a1c6db5a4ce3c98546b291e, 4534a70b7056fd4b9a1c6db5a4ce3c98546b291e, 4534a70b7056fd4b9a1c6db5a4ce3c98546b291e"
530,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50189,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

HID: amd_sfh: Switch to device-managed dmam_alloc_coherent()

Using the device-managed version allows to simplify clean-up in probe()
error path.

Additionally, this device-managed ensures proper cleanup, which helps to
resolve memory errors, page faults, btrfs going read-only, and btrfs
disk corruption.",Linux,Linux,"4b2c53d93a4bc9d52cc0ec354629cfc9dc217f93, 4b2c53d93a4bc9d52cc0ec354629cfc9dc217f93, 4b2c53d93a4bc9d52cc0ec354629cfc9dc217f93, 4b2c53d93a4bc9d52cc0ec354629cfc9dc217f93, 4b2c53d93a4bc9d52cc0ec354629cfc9dc217f93"
529,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42079,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

gfs2: Fix NULL pointer dereference in gfs2_log_flush

In gfs2_jindex_free(), set sdp->sd_jdesc to NULL under the log flush
lock to provide exclusion against gfs2_log_flush().

In gfs2_log_flush(), check if sdp->sd_jdesc is non-NULL before
dereferencing it.  Otherwise, we could run into a NULL pointer
dereference when outstanding glock work races with an unmount
(glock_work_func -> run_queue -> do_xmote -> inode_go_sync ->
gfs2_log_flush).",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
528,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47664,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

spi: hisi-kunpeng: Add verification for the max_frequency provided by the firmware

If the value of max_speed_hz is 0, it may cause a division by zero
error in hisi_calc_effective_speed().
The value of max_speed_hz is provided by firmware.
Firmware is generally considered as a trusted domain. However, as
division by zero errors can cause system failure, for defense measure,
the value of max_speed is validated here. So 0 is regarded as invalid
and an error code is returned.",Linux,Linux,"c770d8631e1810d8f1ce21b18ad5dd67eeb39e5c, c770d8631e1810d8f1ce21b18ad5dd67eeb39e5c, c770d8631e1810d8f1ce21b18ad5dd67eeb39e5c"
526,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50096,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nouveau/dmem: Fix vulnerability in migrate_to_ram upon copy error

The `nouveau_dmem_copy_one` function ensures that the copy push command is
sent to the device firmware but does not track whether it was executed
successfully.

In the case of a copy error (e.g., firmware or hardware failure), the
copy push command will be sent via the firmware channel, and
`nouveau_dmem_copy_one` will likely report success, leading to the
`migrate_to_ram` function returning a dirty HIGH_USER page to the user.

This can result in a security vulnerability, as a HIGH_USER page that may
contain sensitive or corrupted data could be returned to the user.

To prevent this vulnerability, we allocate a zero page. Thus, in case of
an error, a non-dirty (zero) page will be returned to the user.",Linux,Linux,"5be73b690875f7eb2d2defb54ccd7f2f12074984, 5be73b690875f7eb2d2defb54ccd7f2f12074984, 5be73b690875f7eb2d2defb54ccd7f2f12074984, 5be73b690875f7eb2d2defb54ccd7f2f12074984, 5be73b690875f7eb2d2defb54ccd7f2f12074984, 5be73b690875f7eb2d2defb54ccd7f2f12074984, 5be73b690875f7eb2d2defb54ccd7f2f12074984"
538,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46757,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,n/a,n/a,n/a,
525,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43881,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath12k: change DMA direction while mapping reinjected packets

For fragmented packets, ath12k reassembles each fragment as a normal
packet and then reinjects it into HW ring. In this case, the DMA
direction should be DMA_TO_DEVICE, not DMA_FROM_DEVICE. Otherwise,
an invalid payload may be reinjected into the HW and
subsequently delivered to the host.

Given that arbitrary memory can be allocated to the skb buffer,
knowledge about the data contained in the reinjected buffer is lacking.
Consequently, there’s a risk of private information being leaked.

Tested-on: QCN9274 hw2.0 PCI WLAN.WBE.1.1.1-00209-QCAHKSWPL_SILICONZ-1",Linux,Linux,"d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2, d889913205cf7ebda905b1e62c5867ed4e39f6c2"
524,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46806,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix the warning division or modulo by zero

Checks the partition mode and returns an error for an invalid mode.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
523,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42259,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/i915/gem: Fix Virtual Memory mapping boundaries calculation

Calculating the size of the mapped area as the lesser value
between the requested size and the actual size does not consider
the partial mapping offset. This can cause page fault access.

Fix the calculation of the starting and ending addresses, the
total size is now deduced from the difference between the end and
start addresses.

Additionally, the calculations have been rewritten in a clearer
and more understandable form.

[Joonas: Add Requires: tag]
Requires: 60a2066c5005 (""drm/i915/gem: Adjust vma offset for framebuffer mmap offset"")
(cherry picked from commit 97b6784753da06d9d40232328efc5c5367e53417)",Linux,Linux,"c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5, c58305af1835095ddc25ee6f548ac05915e66ac5"
522,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42296,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix return value of f2fs_convert_inline_inode()

If device is readonly, make f2fs_convert_inline_inode()
return EROFS instead of zero, otherwise it may trigger
panic during writeback of inline inode's dirty page as
below:

 f2fs_write_single_data_page+0xbb6/0x1e90 fs/f2fs/data.c:2888
 f2fs_write_cache_pages fs/f2fs/data.c:3187 [inline]
 __f2fs_write_data_pages fs/f2fs/data.c:3342 [inline]
 f2fs_write_data_pages+0x1efe/0x3a90 fs/f2fs/data.c:3369
 do_writepages+0x359/0x870 mm/page-writeback.c:2634
 filemap_fdatawrite_wbc+0x125/0x180 mm/filemap.c:397
 __filemap_fdatawrite_range mm/filemap.c:430 [inline]
 file_write_and_wait_range+0x1aa/0x290 mm/filemap.c:788
 f2fs_do_sync_file+0x68a/0x1ae0 fs/f2fs/file.c:276
 generic_write_sync include/linux/fs.h:2806 [inline]
 f2fs_file_write_iter+0x7bd/0x24e0 fs/f2fs/file.c:4977
 call_write_iter include/linux/fs.h:2114 [inline]
 new_sync_write fs/read_write.c:497 [inline]
 vfs_write+0xa72/0xc90 fs/read_write.c:590
 ksys_write+0x1a0/0x2c0 fs/read_write.c:643
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf5/0x240 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
521,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50007,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ALSA: asihpi: Fix potential OOB array access

ASIHPI driver stores some values in the static array upon a response
from the driver, and its index depends on the firmware.  We shouldn't
trust it blindly.

This patch adds a sanity check of the array index to fit in the array
size.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
520,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44958,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sched/smt: Fix unbalance sched_smt_present dec/inc

I got the following warn report while doing stress test:

jump label: negative count!
WARNING: CPU: 3 PID: 38 at kernel/jump_label.c:263 static_key_slow_try_dec+0x9d/0xb0
Call Trace:
 <TASK>
 __static_key_slow_dec_cpuslocked+0x16/0x70
 sched_cpu_deactivate+0x26e/0x2a0
 cpuhp_invoke_callback+0x3ad/0x10d0
 cpuhp_thread_fun+0x3f5/0x680
 smpboot_thread_fn+0x56d/0x8d0
 kthread+0x309/0x400
 ret_from_fork+0x41/0x70
 ret_from_fork_asm+0x1b/0x30
 </TASK>

Because when cpuset_cpu_inactive() fails in sched_cpu_deactivate(),
the cpu offline failed, but sched_smt_present is decremented before
calling sched_cpu_deactivate(), it leads to unbalanced dec/inc, so
fix it by incrementing sched_smt_present in the error path.",Linux,Linux,"c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e, c5511d03ec090980732e929c318a7a6374b5550e"
519,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47118,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

pid: take a reference when initializing `cad_pid`

During boot, kernel_init_freeable() initializes `cad_pid` to the init
task's struct pid.  Later on, we may change `cad_pid` via a sysctl, and
when this happens proc_do_cad_pid() will increment the refcount on the
new pid via get_pid(), and will decrement the refcount on the old pid
via put_pid().  As we never called get_pid() when we initialized
`cad_pid`, we decrement a reference we never incremented, can therefore
free the init task's struct pid early.  As there can be dangling
references to the struct pid, we can later encounter a use-after-free
(e.g.  when delivering signals).

This was spotted when fuzzing v5.13-rc3 with Syzkaller, but seems to
have been around since the conversion of `cad_pid` to struct pid in
commit 9ec52099e4b8 (""[PATCH] replace cad_pid by a struct pid"") from the
pre-KASAN stone age of v2.6.19.

Fix this by getting a reference to the init task's struct pid when we
assign it to `cad_pid`.

Full KASAN splat below.

   ==================================================================
   BUG: KASAN: use-after-free in ns_of_pid include/linux/pid.h:153 [inline]
   BUG: KASAN: use-after-free in task_active_pid_ns+0xc0/0xc8 kernel/pid.c:509
   Read of size 4 at addr ffff23794dda0004 by task syz-executor.0/273

   CPU: 1 PID: 273 Comm: syz-executor.0 Not tainted 5.12.0-00001-g9aef892b2d15 #1
   Hardware name: linux,dummy-virt (DT)
   Call trace:
    ns_of_pid include/linux/pid.h:153 [inline]
    task_active_pid_ns+0xc0/0xc8 kernel/pid.c:509
    do_notify_parent+0x308/0xe60 kernel/signal.c:1950
    exit_notify kernel/exit.c:682 [inline]
    do_exit+0x2334/0x2bd0 kernel/exit.c:845
    do_group_exit+0x108/0x2c8 kernel/exit.c:922
    get_signal+0x4e4/0x2a88 kernel/signal.c:2781
    do_signal arch/arm64/kernel/signal.c:882 [inline]
    do_notify_resume+0x300/0x970 arch/arm64/kernel/signal.c:936
    work_pending+0xc/0x2dc

   Allocated by task 0:
    slab_post_alloc_hook+0x50/0x5c0 mm/slab.h:516
    slab_alloc_node mm/slub.c:2907 [inline]
    slab_alloc mm/slub.c:2915 [inline]
    kmem_cache_alloc+0x1f4/0x4c0 mm/slub.c:2920
    alloc_pid+0xdc/0xc00 kernel/pid.c:180
    copy_process+0x2794/0x5e18 kernel/fork.c:2129
    kernel_clone+0x194/0x13c8 kernel/fork.c:2500
    kernel_thread+0xd4/0x110 kernel/fork.c:2552
    rest_init+0x44/0x4a0 init/main.c:687
    arch_call_rest_init+0x1c/0x28
    start_kernel+0x520/0x554 init/main.c:1064
    0x0

   Freed by task 270:
    slab_free_hook mm/slub.c:1562 [inline]
    slab_free_freelist_hook+0x98/0x260 mm/slub.c:1600
    slab_free mm/slub.c:3161 [inline]
    kmem_cache_free+0x224/0x8e0 mm/slub.c:3177
    put_pid.part.4+0xe0/0x1a8 kernel/pid.c:114
    put_pid+0x30/0x48 kernel/pid.c:109
    proc_do_cad_pid+0x190/0x1b0 kernel/sysctl.c:1401
    proc_sys_call_handler+0x338/0x4b0 fs/proc/proc_sysctl.c:591
    proc_sys_write+0x34/0x48 fs/proc/proc_sysctl.c:617
    call_write_iter include/linux/fs.h:1977 [inline]
    new_sync_write+0x3ac/0x510 fs/read_write.c:518
    vfs_write fs/read_write.c:605 [inline]
    vfs_write+0x9c4/0x1018 fs/read_write.c:585
    ksys_write+0x124/0x240 fs/read_write.c:658
    __do_sys_write fs/read_write.c:670 [inline]
    __se_sys_write fs/read_write.c:667 [inline]
    __arm64_sys_write+0x78/0xb0 fs/read_write.c:667
    __invoke_syscall arch/arm64/kernel/syscall.c:37 [inline]
    invoke_syscall arch/arm64/kernel/syscall.c:49 [inline]
    el0_svc_common.constprop.1+0x16c/0x388 arch/arm64/kernel/syscall.c:129
    do_el0_svc+0xf8/0x150 arch/arm64/kernel/syscall.c:168
    el0_svc+0x28/0x38 arch/arm64/kernel/entry-common.c:416
    el0_sync_handler+0x134/0x180 arch/arm64/kernel/entry-common.c:432
    el0_sync+0x154/0x180 arch/arm64/kernel/entry.S:701

   The buggy address belongs to the object at ffff23794dda0000
    which belongs to the cache pid of size 224
   The buggy address is located 4 bytes inside of
    224-byte region [ff
---truncated---",Linux,Linux,"9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6, 9ec52099e4b8678a60e9f93e41ad87885d64f3e6"
518,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-39301,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/9p: fix uninit-value in p9_client_rpc()

Syzbot with the help of KMSAN reported the following error:

BUG: KMSAN: uninit-value in trace_9p_client_res include/trace/events/9p.h:146 [inline]
BUG: KMSAN: uninit-value in p9_client_rpc+0x1314/0x1340 net/9p/client.c:754
 trace_9p_client_res include/trace/events/9p.h:146 [inline]
 p9_client_rpc+0x1314/0x1340 net/9p/client.c:754
 p9_client_create+0x1551/0x1ff0 net/9p/client.c:1031
 v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c:410
 v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c:122
 legacy_get_tree+0x114/0x290 fs/fs_context.c:662
 vfs_get_tree+0xa7/0x570 fs/super.c:1797
 do_new_mount+0x71f/0x15e0 fs/namespace.c:3352
 path_mount+0x742/0x1f20 fs/namespace.c:3679
 do_mount fs/namespace.c:3692 [inline]
 __do_sys_mount fs/namespace.c:3898 [inline]
 __se_sys_mount+0x725/0x810 fs/namespace.c:3875
 __x64_sys_mount+0xe4/0x150 fs/namespace.c:3875
 do_syscall_64+0xd5/0x1f0
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

Uninit was created at:
 __alloc_pages+0x9d6/0xe70 mm/page_alloc.c:4598
 __alloc_pages_node include/linux/gfp.h:238 [inline]
 alloc_pages_node include/linux/gfp.h:261 [inline]
 alloc_slab_page mm/slub.c:2175 [inline]
 allocate_slab mm/slub.c:2338 [inline]
 new_slab+0x2de/0x1400 mm/slub.c:2391
 ___slab_alloc+0x1184/0x33d0 mm/slub.c:3525
 __slab_alloc mm/slub.c:3610 [inline]
 __slab_alloc_node mm/slub.c:3663 [inline]
 slab_alloc_node mm/slub.c:3835 [inline]
 kmem_cache_alloc+0x6d3/0xbe0 mm/slub.c:3852
 p9_tag_alloc net/9p/client.c:278 [inline]
 p9_client_prepare_req+0x20a/0x1770 net/9p/client.c:641
 p9_client_rpc+0x27e/0x1340 net/9p/client.c:688
 p9_client_create+0x1551/0x1ff0 net/9p/client.c:1031
 v9fs_session_init+0x1b9/0x28e0 fs/9p/v9fs.c:410
 v9fs_mount+0xe2/0x12b0 fs/9p/vfs_super.c:122
 legacy_get_tree+0x114/0x290 fs/fs_context.c:662
 vfs_get_tree+0xa7/0x570 fs/super.c:1797
 do_new_mount+0x71f/0x15e0 fs/namespace.c:3352
 path_mount+0x742/0x1f20 fs/namespace.c:3679
 do_mount fs/namespace.c:3692 [inline]
 __do_sys_mount fs/namespace.c:3898 [inline]
 __se_sys_mount+0x725/0x810 fs/namespace.c:3875
 __x64_sys_mount+0xe4/0x150 fs/namespace.c:3875
 do_syscall_64+0xd5/0x1f0
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

If p9_check_errors() fails early in p9_client_rpc(), req->rc.tag
will not be properly initialized. However, trace_9p_client_res()
ends up trying to print it out anyway before p9_client_rpc()
finishes.

Fix this issue by assigning default values to p9_fcall fields
such as 'tag' and (just in case KMSAN unearths something new) 'id'
during the tag allocation stage.",Linux,Linux,"348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06, 348b59012e5c6402741d067cf6eeeb6271999d06"
536,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44995,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: hns3: fix a deadlock problem when config TC during resetting

When config TC during the reset process, may cause a deadlock, the flow is
as below:
                             pf reset start
                                 │
                                 ▼
                              ......
setup tc                         │
    │                            ▼
    ▼                      DOWN: napi_disable()
napi_disable()(skip)             │
    │                            │
    ▼                            ▼
  ......                      ......
    │                            │
    ▼                            │
napi_enable()                    │
                                 ▼
                           UINIT: netif_napi_del()
                                 │
                                 ▼
                              ......
                                 │
                                 ▼
                           INIT: netif_napi_add()
                                 │
                                 ▼
                              ......                 global reset start
                                 │                      │
                                 ▼                      ▼
                           UP: napi_enable()(skip)    ......
                                 │                      │
                                 ▼                      ▼
                              ......                 napi_disable()

In reset process, the driver will DOWN the port and then UINIT, in this
case, the setup tc process will UP the port before UINIT, so cause the
problem. Adds a DOWN process in UINIT to fix it.",Linux,Linux,"bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0, bb6b94a896d4dd4dcdeccca87c3fd22521c652c0"
539,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47699,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix potential null-ptr-deref in nilfs_btree_insert()

Patch series ""nilfs2: fix potential issues with empty b-tree nodes"".

This series addresses three potential issues with empty b-tree nodes that
can occur with corrupted filesystem images, including one recently
discovered by syzbot.


This patch (of 3):

If a b-tree is broken on the device, and the b-tree height is greater than
2 (the level of the root node is greater than 1) even if the number of
child nodes of the b-tree root is 0, a NULL pointer dereference occurs in
nilfs_btree_prepare_insert(), which is called from nilfs_btree_insert().

This is because, when the number of child nodes of the b-tree root is 0,
nilfs_btree_do_lookup() does not set the block buffer head in any of
path[x].bp_bh, leaving it as the initial value of NULL, but if the level
of the b-tree root node is greater than 1, nilfs_btree_get_nonroot_node(),
which accesses the buffer memory of path[x].bp_bh, is called.

Fix this issue by adding a check to nilfs_btree_root_broken(), which
performs sanity checks when reading the root node from the device, to
detect this inconsistency.

Thanks to Lizhi Xu for trying to solve the bug and clarifying the cause
early on.",Linux,Linux,"17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4, 17c76b0104e4a6513983777e1a17e0297a12b0c4"
516,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47672,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: iwlwifi: mvm: don't wait for tx queues if firmware is dead

There is a WARNING in iwl_trans_wait_tx_queues_empty() (that was
recently converted from just a message), that can be hit if we
wait for TX queues to become empty after firmware died. Clearly,
we can't expect anything from the firmware after it's declared dead.

Don't call iwl_trans_wait_tx_queues_empty() in this case. While it could
be a good idea to stop the flow earlier, the flush functions do some
maintenance work that is not related to the firmware, so keep that part
of the code running even when the firmware is not running.

[edit commit message]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
550,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44935,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sctp: Fix null-ptr-deref in reuseport_add_sock().

syzbot reported a null-ptr-deref while accessing sk2->sk_reuseport_cb in
reuseport_add_sock(). [0]

The repro first creates a listener with SO_REUSEPORT.  Then, it creates
another listener on the same port and concurrently closes the first
listener.

The second listen() calls reuseport_add_sock() with the first listener as
sk2, where sk2->sk_reuseport_cb is not expected to be cleared concurrently,
but the close() does clear it by reuseport_detach_sock().

The problem is SCTP does not properly synchronise reuseport_alloc(),
reuseport_add_sock(), and reuseport_detach_sock().

The caller of reuseport_alloc() and reuseport_{add,detach}_sock() must
provide synchronisation for sockets that are classified into the same
reuseport group.

Otherwise, such sockets form multiple identical reuseport groups, and
all groups except one would be silently dead.

  1. Two sockets call listen() concurrently
  2. No socket in the same group found in sctp_ep_hashtable[]
  3. Two sockets call reuseport_alloc() and form two reuseport groups
  4. Only one group hit first in __sctp_rcv_lookup_endpoint() receives
      incoming packets

Also, the reported null-ptr-deref could occur.

TCP/UDP guarantees that would not happen by holding the hash bucket lock.

Let's apply the locking strategy to __sctp_hash_endpoint() and
__sctp_unhash_endpoint().

[0]:
Oops: general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] PREEMPT SMP KASAN PTI
KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]
CPU: 1 UID: 0 PID: 10230 Comm: syz-executor119 Not tainted 6.10.0-syzkaller-12585-g301927d2d2eb #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/27/2024
RIP: 0010:reuseport_add_sock+0x27e/0x5e0 net/core/sock_reuseport.c:350
Code: 00 0f b7 5d 00 bf 01 00 00 00 89 de e8 1b a4 ff f7 83 fb 01 0f 85 a3 01 00 00 e8 6d a0 ff f7 49 8d 7e 12 48 89 f8 48 c1 e8 03 <42> 0f b6 04 28 84 c0 0f 85 4b 02 00 00 41 0f b7 5e 12 49 8d 7e 14
RSP: 0018:ffffc9000b947c98 EFLAGS: 00010202
RAX: 0000000000000002 RBX: ffff8880252ddf98 RCX: ffff888079478000
RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000012
RBP: 0000000000000001 R08: ffffffff8993e18d R09: 1ffffffff1fef385
R10: dffffc0000000000 R11: fffffbfff1fef386 R12: ffff8880252ddac0
R13: dffffc0000000000 R14: 0000000000000000 R15: 0000000000000000
FS:  00007f24e45b96c0(0000) GS:ffff8880b9300000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 00007ffcced5f7b8 CR3: 00000000241be000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 __sctp_hash_endpoint net/sctp/input.c:762 [inline]
 sctp_hash_endpoint+0x52a/0x600 net/sctp/input.c:790
 sctp_listen_start net/sctp/socket.c:8570 [inline]
 sctp_inet_listen+0x767/0xa20 net/sctp/socket.c:8625
 __sys_listen_socket net/socket.c:1883 [inline]
 __sys_listen+0x1b7/0x230 net/socket.c:1894
 __do_sys_listen net/socket.c:1902 [inline]
 __se_sys_listen net/socket.c:1900 [inline]
 __x64_sys_listen+0x5a/0x70 net/socket.c:1900
 do_syscall_x64 arch/x86/entry/common.c:52 [inline]
 do_syscall_64+0xf3/0x230 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f
RIP: 0033:0x7f24e46039b9
Code: 28 00 00 00 75 05 48 83 c4 28 c3 e8 91 1a 00 00 90 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
RSP: 002b:00007f24e45b9228 EFLAGS: 00000246 ORIG_RAX: 0000000000000032
RAX: ffffffffffffffda RBX: 00007f24e468e428 RCX: 00007f24e46039b9
RDX: 00007f24e46039b9 RSI: 0000000000000003 RDI: 0000000000000004
RBP: 00007f24e468e420 R08: 00007f24e45b96c0 R09: 00007f24e45b96c0
R10: 00007f24e45b96c0 R11: 0000000000000246 R12: 00007f24e468e42c
R13:
---truncated---",Linux,Linux,"6ba84574026792ce33a40c7da721dea36d0f3973, 6ba84574026792ce33a40c7da721dea36d0f3973, 6ba84574026792ce33a40c7da721dea36d0f3973, 6ba84574026792ce33a40c7da721dea36d0f3973, 6ba84574026792ce33a40c7da721dea36d0f3973, 6ba84574026792ce33a40c7da721dea36d0f3973, 6ba84574026792ce33a40c7da721dea36d0f3973"
558,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46785,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

eventfs: Use list_del_rcu() for SRCU protected list variable

Chi Zhiling reported:

  We found a null pointer accessing in tracefs[1], the reason is that the
  variable 'ei_child' is set to LIST_POISON1, that means the list was
  removed in eventfs_remove_rec. so when access the ei_child->is_freed, the
  panic triggered.

  by the way, the following script can reproduce this panic

  loop1 (){
      while true
      do
          echo ""p:kp submit_bio"" > /sys/kernel/debug/tracing/kprobe_events
          echo """" > /sys/kernel/debug/tracing/kprobe_events
      done
  }
  loop2 (){
      while true
      do
          tree /sys/kernel/debug/tracing/events/kprobes/
      done
  }
  loop1 &
  loop2

  [1]:
  [ 1147.959632][T17331] Unable to handle kernel paging request at virtual address dead000000000150
  [ 1147.968239][T17331] Mem abort info:
  [ 1147.971739][T17331]   ESR = 0x0000000096000004
  [ 1147.976172][T17331]   EC = 0x25: DABT (current EL), IL = 32 bits
  [ 1147.982171][T17331]   SET = 0, FnV = 0
  [ 1147.985906][T17331]   EA = 0, S1PTW = 0
  [ 1147.989734][T17331]   FSC = 0x04: level 0 translation fault
  [ 1147.995292][T17331] Data abort info:
  [ 1147.998858][T17331]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
  [ 1148.005023][T17331]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
  [ 1148.010759][T17331]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
  [ 1148.016752][T17331] [dead000000000150] address between user and kernel address ranges
  [ 1148.024571][T17331] Internal error: Oops: 0000000096000004 [#1] SMP
  [ 1148.030825][T17331] Modules linked in: team_mode_loadbalance team nlmon act_gact cls_flower sch_ingress bonding tls macvlan dummy ib_core bridge stp llc veth amdgpu amdxcp mfd_core gpu_sched drm_exec drm_buddy radeon crct10dif_ce video drm_suballoc_helper ghash_ce drm_ttm_helper sha2_ce ttm sha256_arm64 i2c_algo_bit sha1_ce sbsa_gwdt cp210x drm_display_helper cec sr_mod cdrom drm_kms_helper binfmt_misc sg loop fuse drm dm_mod nfnetlink ip_tables autofs4 [last unloaded: tls]
  [ 1148.072808][T17331] CPU: 3 PID: 17331 Comm: ls Tainted: G        W         ------- ----  6.6.43 #2
  [ 1148.081751][T17331] Source Version: 21b3b386e948bedd29369af66f3e98ab01b1c650
  [ 1148.088783][T17331] Hardware name: Greatwall GW-001M1A-FTF/GW-001M1A-FTF, BIOS KunLun BIOS V4.0 07/16/2020
  [ 1148.098419][T17331] pstate: 20000005 (nzCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
  [ 1148.106060][T17331] pc : eventfs_iterate+0x2c0/0x398
  [ 1148.111017][T17331] lr : eventfs_iterate+0x2fc/0x398
  [ 1148.115969][T17331] sp : ffff80008d56bbd0
  [ 1148.119964][T17331] x29: ffff80008d56bbf0 x28: ffff001ff5be2600 x27: 0000000000000000
  [ 1148.127781][T17331] x26: ffff001ff52ca4e0 x25: 0000000000009977 x24: dead000000000100
  [ 1148.135598][T17331] x23: 0000000000000000 x22: 000000000000000b x21: ffff800082645f10
  [ 1148.143415][T17331] x20: ffff001fddf87c70 x19: ffff80008d56bc90 x18: 0000000000000000
  [ 1148.151231][T17331] x17: 0000000000000000 x16: 0000000000000000 x15: ffff001ff52ca4e0
  [ 1148.159048][T17331] x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000
  [ 1148.166864][T17331] x11: 0000000000000000 x10: 0000000000000000 x9 : ffff8000804391d0
  [ 1148.174680][T17331] x8 : 0000000180000000 x7 : 0000000000000018 x6 : 0000aaab04b92862
  [ 1148.182498][T17331] x5 : 0000aaab04b92862 x4 : 0000000080000000 x3 : 0000000000000068
  [ 1148.190314][T17331] x2 : 000000000000000f x1 : 0000000000007ea8 x0 : 0000000000000001
  [ 1148.198131][T17331] Call trace:
  [ 1148.201259][T17331]  eventfs_iterate+0x2c0/0x398
  [ 1148.205864][T17331]  iterate_dir+0x98/0x188
  [ 1148.210036][T17331]  __arm64_sys_getdents64+0x78/0x160
  [ 1148.215161][T17331]  invoke_syscall+0x78/0x108
  [ 1148.219593][T17331]  el0_svc_common.constprop.0+0x48/0xf0
  [ 1148.224977][T17331]  do_el0_svc+0x24/0x38
  [ 1148.228974][T17331]  el0_svc+0x40/0x168
  [ 1148.232798][T17
---truncated---",Linux,Linux,"5dfb04100326f70e3b2d2872c2476ed20b804837, 43aa6f97c2d03a52c1ddb86768575fc84344bdbb, 43aa6f97c2d03a52c1ddb86768575fc84344bdbb"
557,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43817,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: missing check virtio

Two missing check in virtio_net_hdr_to_skb() allowed syzbot
to crash kernels again

1. After the skb_segment function the buffer may become non-linear
(nr_frags != 0), but since the SKBTX_SHARED_FRAG flag is not set anywhere
the __skb_linearize function will not be executed, then the buffer will
remain non-linear. Then the condition (offset >= skb_headlen(skb))
becomes true, which causes WARN_ON_ONCE in skb_checksum_help.

2. The struct sk_buff and struct virtio_net_hdr members must be
mathematically related.
(gso_size) must be greater than (needed) otherwise WARN_ON_ONCE.
(remainder) must be greater than (needed) otherwise WARN_ON_ONCE.
(remainder) may be 0 if division is without remainder.

offset+2 (4191) > skb_headlen() (1116)
WARNING: CPU: 1 PID: 5084 at net/core/dev.c:3303 skb_checksum_help+0x5e2/0x740 net/core/dev.c:3303
Modules linked in:
CPU: 1 PID: 5084 Comm: syz-executor336 Not tainted 6.7.0-rc3-syzkaller-00014-gdf60cee26a2e #0
Hardware name: Google Compute Engine/Google Compute Engine, BIOS Google 11/10/2023
RIP: 0010:skb_checksum_help+0x5e2/0x740 net/core/dev.c:3303
Code: 89 e8 83 e0 07 83 c0 03 38 d0 7c 08 84 d2 0f 85 52 01 00 00 44 89 e2 2b 53 74 4c 89 ee 48 c7 c7 40 57 e9 8b e8 af 8f dd f8 90 <0f> 0b 90 90 e9 87 fe ff ff e8 40 0f 6e f9 e9 4b fa ff ff 48 89 ef
RSP: 0018:ffffc90003a9f338 EFLAGS: 00010286
RAX: 0000000000000000 RBX: ffff888025125780 RCX: ffffffff814db209
RDX: ffff888015393b80 RSI: ffffffff814db216 RDI: 0000000000000001
RBP: ffff8880251257f4 R08: 0000000000000001 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000001 R12: 000000000000045c
R13: 000000000000105f R14: ffff8880251257f0 R15: 000000000000105d
FS:  0000555555c24380(0000) GS:ffff8880b9900000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 000000002000f000 CR3: 0000000023151000 CR4: 00000000003506f0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 <TASK>
 ip_do_fragment+0xa1b/0x18b0 net/ipv4/ip_output.c:777
 ip_fragment.constprop.0+0x161/0x230 net/ipv4/ip_output.c:584
 ip_finish_output_gso net/ipv4/ip_output.c:286 [inline]
 __ip_finish_output net/ipv4/ip_output.c:308 [inline]
 __ip_finish_output+0x49c/0x650 net/ipv4/ip_output.c:295
 ip_finish_output+0x31/0x310 net/ipv4/ip_output.c:323
 NF_HOOK_COND include/linux/netfilter.h:303 [inline]
 ip_output+0x13b/0x2a0 net/ipv4/ip_output.c:433
 dst_output include/net/dst.h:451 [inline]
 ip_local_out+0xaf/0x1a0 net/ipv4/ip_output.c:129
 iptunnel_xmit+0x5b4/0x9b0 net/ipv4/ip_tunnel_core.c:82
 ipip6_tunnel_xmit net/ipv6/sit.c:1034 [inline]
 sit_tunnel_xmit+0xed2/0x28f0 net/ipv6/sit.c:1076
 __netdev_start_xmit include/linux/netdevice.h:4940 [inline]
 netdev_start_xmit include/linux/netdevice.h:4954 [inline]
 xmit_one net/core/dev.c:3545 [inline]
 dev_hard_start_xmit+0x13d/0x6d0 net/core/dev.c:3561
 __dev_queue_xmit+0x7c1/0x3d60 net/core/dev.c:4346
 dev_queue_xmit include/linux/netdevice.h:3134 [inline]
 packet_xmit+0x257/0x380 net/packet/af_packet.c:276
 packet_snd net/packet/af_packet.c:3087 [inline]
 packet_sendmsg+0x24ca/0x5240 net/packet/af_packet.c:3119
 sock_sendmsg_nosec net/socket.c:730 [inline]
 __sock_sendmsg+0xd5/0x180 net/socket.c:745
 __sys_sendto+0x255/0x340 net/socket.c:2190
 __do_sys_sendto net/socket.c:2202 [inline]
 __se_sys_sendto net/socket.c:2198 [inline]
 __x64_sys_sendto+0xe0/0x1b0 net/socket.c:2198
 do_syscall_x64 arch/x86/entry/common.c:51 [inline]
 do_syscall_64+0x40/0x110 arch/x86/entry/common.c:82
 entry_SYSCALL_64_after_hwframe+0x63/0x6b

Found by Linux Verification Center (linuxtesting.org) with Syzkaller",Linux,Linux,"0f6925b3e8da0dbbb52447ca8a8b42b371aac7db, 0f6925b3e8da0dbbb52447ca8a8b42b371aac7db, 0f6925b3e8da0dbbb52447ca8a8b42b371aac7db, 0f6925b3e8da0dbbb52447ca8a8b42b371aac7db, 0f6925b3e8da0dbbb52447ca8a8b42b371aac7db"
556,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46861,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usbnet: ipheth: do not stop RX on failing RX callback

RX callbacks can fail for multiple reasons:

* Payload too short
* Payload formatted incorrecly (e.g. bad NCM framing)
* Lack of memory

None of these should cause the driver to seize up.

Make such failures non-critical and continue processing further
incoming URBs.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
555,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46683,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe: prevent UAF around preempt fence

The fence lock is part of the queue, therefore in the current design
anything locking the fence should then also hold a ref to the queue to
prevent the queue from being freed.

However, currently it looks like we signal the fence and then drop the
queue ref, but if something is waiting on the fence, the waiter is
kicked to wake up at some later point, where upon waking up it first
grabs the lock before checking the fence state. But if we have already
dropped the queue ref, then the lock might already be freed as part of
the queue, leading to uaf.

To prevent this, move the fence lock into the fence itself so we don't
run into lifetime issues. Alternative might be to have device level
lock, or only release the queue in the fence release callback, however
that might require pushing to another worker to avoid locking issues.

References: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/2454
References: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/2342
References: https://gitlab.freedesktop.org/drm/xe/kernel/-/issues/2020
(cherry picked from commit 7116c35aacedc38be6d15bd21b2fc936eed0008b)",Linux,Linux,"dd08ebf6c3525a7ea2186e636df064ea47281987, dd08ebf6c3525a7ea2186e636df064ea47281987"
554,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47086,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

phonet/pep: refuse to enable an unbound pipe

This ioctl() implicitly assumed that the socket was already bound to
a valid local socket name, i.e. Phonet object. If the socket was not
bound, two separate problems would occur:

1) We'd send an pipe enablement request with an invalid source object.
2) Later socket calls could BUG on the socket unexpectedly being
   connected yet not bound to a valid object.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
553,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49963,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mailbox: bcm2835: Fix timeout during suspend mode

During noirq suspend phase the Raspberry Pi power driver suffer of
firmware property timeouts. The reason is that the IRQ of the underlying
BCM2835 mailbox is disabled and rpi_firmware_property_list() will always
run into a timeout [1].

Since the VideoCore side isn't consider as a wakeup source, set the
IRQF_NO_SUSPEND flag for the mailbox IRQ in order to keep it enabled
during suspend-resume cycle.

[1]
PM: late suspend of devices complete after 1.754 msecs
WARNING: CPU: 0 PID: 438 at drivers/firmware/raspberrypi.c:128
 rpi_firmware_property_list+0x204/0x22c
Firmware transaction 0x00028001 timeout
Modules linked in:
CPU: 0 PID: 438 Comm: bash Tainted: G         C         6.9.3-dirty #17
Hardware name: BCM2835
Call trace:
unwind_backtrace from show_stack+0x18/0x1c
show_stack from dump_stack_lvl+0x34/0x44
dump_stack_lvl from __warn+0x88/0xec
__warn from warn_slowpath_fmt+0x7c/0xb0
warn_slowpath_fmt from rpi_firmware_property_list+0x204/0x22c
rpi_firmware_property_list from rpi_firmware_property+0x68/0x8c
rpi_firmware_property from rpi_firmware_set_power+0x54/0xc0
rpi_firmware_set_power from _genpd_power_off+0xe4/0x148
_genpd_power_off from genpd_sync_power_off+0x7c/0x11c
genpd_sync_power_off from genpd_finish_suspend+0xcc/0xe0
genpd_finish_suspend from dpm_run_callback+0x78/0xd0
dpm_run_callback from device_suspend_noirq+0xc0/0x238
device_suspend_noirq from dpm_suspend_noirq+0xb0/0x168
dpm_suspend_noirq from suspend_devices_and_enter+0x1b8/0x5ac
suspend_devices_and_enter from pm_suspend+0x254/0x2e4
pm_suspend from state_store+0xa8/0xd4
state_store from kernfs_fop_write_iter+0x154/0x1a0
kernfs_fop_write_iter from vfs_write+0x12c/0x184
vfs_write from ksys_write+0x78/0xc0
ksys_write from ret_fast_syscall+0x0/0x54
Exception stack(0xcc93dfa8 to 0xcc93dff0)
[...]
PM: noirq suspend of devices complete after 3095.584 msecs",Linux,Linux,"0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca, 0bae6af6d704f026d4938739786e0a69d50177ca"
552,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47712,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: wilc1000: fix potential RCU dereference issue in wilc_parse_join_bss_param

In the `wilc_parse_join_bss_param` function, the TSF field of the `ies`
structure is accessed after the RCU read-side critical section is
unlocked. According to RCU usage rules, this is illegal. Reusing this
pointer can lead to unpredictable behavior, including accessing memory
that has been updated or causing use-after-free issues.

This possible bug was identified using a static analysis tool developed
by myself, specifically designed to detect RCU-related issues.

To address this, the TSF value is now stored in a local variable
`ies_tsf` before the RCU lock is released. The `param->tsf_lo` field is
then assigned using this local variable, ensuring that the TSF value is
safely accessed.",Linux,Linux,"e556006de4ea93abe2b46cba202a2556c544b8b2, b4bbf38c350acb6500cbe667b1e2e68f896e4b38, d80fc436751cfa6b02a8eda74eb6cce7dadfe5a2, 745003b5917b610352f52fe0d11ef658d6471ec2, 4bfd20d5f5c62b5495d6c0016ee6933bd3add7ce, 205c50306acf58a335eb19fa84e40140f4fe814f, 205c50306acf58a335eb19fa84e40140f4fe814f, 205c50306acf58a335eb19fa84e40140f4fe814f"
551,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44999,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

gtp: pull network headers in gtp_dev_xmit()

syzbot/KMSAN reported use of uninit-value in get_dev_xmit() [1]

We must make sure the IPv4 or Ipv6 header is pulled in skb->head
before accessing fields in them.

Use pskb_inet_may_pull() to fix this issue.

[1]
BUG: KMSAN: uninit-value in ipv6_pdp_find drivers/net/gtp.c:220 [inline]
 BUG: KMSAN: uninit-value in gtp_build_skb_ip6 drivers/net/gtp.c:1229 [inline]
 BUG: KMSAN: uninit-value in gtp_dev_xmit+0x1424/0x2540 drivers/net/gtp.c:1281
  ipv6_pdp_find drivers/net/gtp.c:220 [inline]
  gtp_build_skb_ip6 drivers/net/gtp.c:1229 [inline]
  gtp_dev_xmit+0x1424/0x2540 drivers/net/gtp.c:1281
  __netdev_start_xmit include/linux/netdevice.h:4913 [inline]
  netdev_start_xmit include/linux/netdevice.h:4922 [inline]
  xmit_one net/core/dev.c:3580 [inline]
  dev_hard_start_xmit+0x247/0xa20 net/core/dev.c:3596
  __dev_queue_xmit+0x358c/0x5610 net/core/dev.c:4423
  dev_queue_xmit include/linux/netdevice.h:3105 [inline]
  packet_xmit+0x9c/0x6c0 net/packet/af_packet.c:276
  packet_snd net/packet/af_packet.c:3145 [inline]
  packet_sendmsg+0x90e3/0xa3a0 net/packet/af_packet.c:3177
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:745
  __sys_sendto+0x685/0x830 net/socket.c:2204
  __do_sys_sendto net/socket.c:2216 [inline]
  __se_sys_sendto net/socket.c:2212 [inline]
  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2212
  x64_sys_call+0x3799/0x3c10 arch/x86/include/generated/asm/syscalls_64.h:45
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
  slab_post_alloc_hook mm/slub.c:3994 [inline]
  slab_alloc_node mm/slub.c:4037 [inline]
  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4080
  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:583
  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:674
  alloc_skb include/linux/skbuff.h:1320 [inline]
  alloc_skb_with_frags+0xc8/0xbf0 net/core/skbuff.c:6526
  sock_alloc_send_pskb+0xa81/0xbf0 net/core/sock.c:2815
  packet_alloc_skb net/packet/af_packet.c:2994 [inline]
  packet_snd net/packet/af_packet.c:3088 [inline]
  packet_sendmsg+0x749c/0xa3a0 net/packet/af_packet.c:3177
  sock_sendmsg_nosec net/socket.c:730 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:745
  __sys_sendto+0x685/0x830 net/socket.c:2204
  __do_sys_sendto net/socket.c:2216 [inline]
  __se_sys_sendto net/socket.c:2212 [inline]
  __x64_sys_sendto+0x125/0x1d0 net/socket.c:2212
  x64_sys_call+0x3799/0x3c10 arch/x86/include/generated/asm/syscalls_64.h:45
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

CPU: 0 UID: 0 PID: 7115 Comm: syz.1.515 Not tainted 6.11.0-rc1-syzkaller-00043-g94ede2a3e913 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 06/27/2024",Linux,Linux,"459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69, 459aa660eb1d8ce67080da1983bb81d716aa5a69"
549,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26625,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

llc: call sock_orphan() at release time

syzbot reported an interesting trace [1] caused by a stale sk->sk_wq
pointer in a closed llc socket.

In commit ff7b11aa481f (""net: socket: set sock->sk to NULL after
calling proto_ops::release()"") Eric Biggers hinted that some protocols
are missing a sock_orphan(), we need to perform a full audit.

In net-next, I plan to clear sock->sk from sock_orphan() and
amend Eric patch to add a warning.

[1]
 BUG: KASAN: slab-use-after-free in list_empty include/linux/list.h:373 [inline]
 BUG: KASAN: slab-use-after-free in waitqueue_active include/linux/wait.h:127 [inline]
 BUG: KASAN: slab-use-after-free in sock_def_write_space_wfree net/core/sock.c:3384 [inline]
 BUG: KASAN: slab-use-after-free in sock_wfree+0x9a8/0x9d0 net/core/sock.c:2468
Read of size 8 at addr ffff88802f4fc880 by task ksoftirqd/1/27

CPU: 1 PID: 27 Comm: ksoftirqd/1 Not tainted 6.8.0-rc1-syzkaller-00049-g6098d87eaf31 #0
Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.2-debian-1.16.2-1 04/01/2014
Call Trace:
 <TASK>
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0xd9/0x1b0 lib/dump_stack.c:106
  print_address_description mm/kasan/report.c:377 [inline]
  print_report+0xc4/0x620 mm/kasan/report.c:488
  kasan_report+0xda/0x110 mm/kasan/report.c:601
  list_empty include/linux/list.h:373 [inline]
  waitqueue_active include/linux/wait.h:127 [inline]
  sock_def_write_space_wfree net/core/sock.c:3384 [inline]
  sock_wfree+0x9a8/0x9d0 net/core/sock.c:2468
  skb_release_head_state+0xa3/0x2b0 net/core/skbuff.c:1080
  skb_release_all net/core/skbuff.c:1092 [inline]
  napi_consume_skb+0x119/0x2b0 net/core/skbuff.c:1404
  e1000_unmap_and_free_tx_resource+0x144/0x200 drivers/net/ethernet/intel/e1000/e1000_main.c:1970
  e1000_clean_tx_irq drivers/net/ethernet/intel/e1000/e1000_main.c:3860 [inline]
  e1000_clean+0x4a1/0x26e0 drivers/net/ethernet/intel/e1000/e1000_main.c:3801
  __napi_poll.constprop.0+0xb4/0x540 net/core/dev.c:6576
  napi_poll net/core/dev.c:6645 [inline]
  net_rx_action+0x956/0xe90 net/core/dev.c:6778
  __do_softirq+0x21a/0x8de kernel/softirq.c:553
  run_ksoftirqd kernel/softirq.c:921 [inline]
  run_ksoftirqd+0x31/0x60 kernel/softirq.c:913
  smpboot_thread_fn+0x660/0xa10 kernel/smpboot.c:164
  kthread+0x2c6/0x3a0 kernel/kthread.c:388
  ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:147
  ret_from_fork_asm+0x11/0x20 arch/x86/entry/entry_64.S:242
 </TASK>

Allocated by task 5167:
  kasan_save_stack+0x33/0x50 mm/kasan/common.c:47
  kasan_save_track+0x14/0x30 mm/kasan/common.c:68
  unpoison_slab_object mm/kasan/common.c:314 [inline]
  __kasan_slab_alloc+0x81/0x90 mm/kasan/common.c:340
  kasan_slab_alloc include/linux/kasan.h:201 [inline]
  slab_post_alloc_hook mm/slub.c:3813 [inline]
  slab_alloc_node mm/slub.c:3860 [inline]
  kmem_cache_alloc_lru+0x142/0x6f0 mm/slub.c:3879
  alloc_inode_sb include/linux/fs.h:3019 [inline]
  sock_alloc_inode+0x25/0x1c0 net/socket.c:308
  alloc_inode+0x5d/0x220 fs/inode.c:260
  new_inode_pseudo+0x16/0x80 fs/inode.c:1005
  sock_alloc+0x40/0x270 net/socket.c:634
  __sock_create+0xbc/0x800 net/socket.c:1535
  sock_create net/socket.c:1622 [inline]
  __sys_socket_create net/socket.c:1659 [inline]
  __sys_socket+0x14c/0x260 net/socket.c:1706
  __do_sys_socket net/socket.c:1720 [inline]
  __se_sys_socket net/socket.c:1718 [inline]
  __x64_sys_socket+0x72/0xb0 net/socket.c:1718
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xd3/0x250 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x63/0x6b

Freed by task 0:
  kasan_save_stack+0x33/0x50 mm/kasan/common.c:47
  kasan_save_track+0x14/0x30 mm/kasan/common.c:68
  kasan_save_free_info+0x3f/0x60 mm/kasan/generic.c:640
  poison_slab_object mm/kasan/common.c:241 [inline]
  __kasan_slab_free+0x121/0x1b0 mm/kasan/common.c:257
  kasan_slab_free include/linux/kasan.h:184 [inline]
  slab_free_hook mm/slub.c:2121 [inlin
---truncated---",Linux,Linux,"43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6, 43815482370c510c569fd18edb57afcb0fa8cab6"
540,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42278,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ASoC: TAS2781: Fix tasdev_load_calibrated_data()

This function has a reversed if statement so it's either a no-op or it
leads to a NULL dereference.",Linux,Linux,"57847c2ec5fb5e951fe9028f9e587e3e878d9129, b195acf5266d2dee4067f89345c3e6b88d925311, b195acf5266d2dee4067f89345c3e6b88d925311"
548,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52488,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

serial: sc16is7xx: convert from _raw_ to _noinc_ regmap functions for FIFO

The SC16IS7XX IC supports a burst mode to access the FIFOs where the
initial register address is sent ($00), followed by all the FIFO data
without having to resend the register address each time. In this mode, the
IC doesn't increment the register address for each R/W byte.

The regmap_raw_read() and regmap_raw_write() are functions which can
perform IO over multiple registers. They are currently used to read/write
from/to the FIFO, and although they operate correctly in this burst mode on
the SPI bus, they would corrupt the regmap cache if it was not disabled
manually. The reason is that when the R/W size is more than 1 byte, these
functions assume that the register address is incremented and handle the
cache accordingly.

Convert FIFO R/W functions to use the regmap _noinc_ versions in order to
remove the manual cache control which was a workaround when using the
_raw_ versions. FIFO registers are properly declared as volatile so
cache will not be used/updated for FIFO accesses.",Linux,Linux,"dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b, dfeae619d781dee61666d5551b93ba3be755a86b"
547,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43883,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: vhci-hcd: Do not drop references before new references are gained

At a few places the driver carries stale pointers
to references that can still be used. Make sure that does not happen.
This strictly speaking closes ZDI-CAN-22273, though there may be
similar races in the driver.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
546,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50264,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

vsock/virtio: Initialization of the dangling pointer occurring in vsk->trans

During loopback communication, a dangling pointer can be created in
vsk->trans, potentially leading to a Use-After-Free condition.  This
issue is resolved by initializing vsk->trans to NULL.",Linux,Linux,"06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b, 06a8fc78367d070720af960dcecec917d3ae5f3b"
545,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42264,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/v3d: Prevent out of bounds access in performance query extensions

Check that the number of perfmons userspace is passing in the copy and
reset extensions is not greater than the internal kernel storage where
the ids will be copied into.

(cherry picked from commit f32b5128d2c440368b5bf3a7a356823e235caabb)",Linux,Linux,"bae7cb5d68001a8d4ceec5964dda74bb9aab7220, bae7cb5d68001a8d4ceec5964dda74bb9aab7220"
544,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43854,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

block: initialize integrity buffer to zero before writing it to media

Metadata added by bio_integrity_prep is using plain kmalloc, which leads
to random kernel memory being written media.  For PI metadata this is
limited to the app tag that isn't used by kernel generated metadata,
but for non-PI metadata the entire buffer leaks kernel memory.

Fix this by adding the __GFP_ZERO flag to allocations for writes.",Linux,Linux,"7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b, 7ba1ba12eeef0aa7113beb16410ef8b7c748e18b"
543,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50059,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ntb: ntb_hw_switchtec: Fix use after free vulnerability in switchtec_ntb_remove due to race condition

In the switchtec_ntb_add function, it can call switchtec_ntb_init_sndev
function, then &sndev->check_link_status_work is bound with
check_link_status_work. switchtec_ntb_link_notification may be called
to start the work.

If we remove the module which will call switchtec_ntb_remove to make
cleanup, it will free sndev through kfree(sndev), while the work
mentioned above will be used. The sequence of operations that may lead
to a UAF bug is as follows:

CPU0                                 CPU1

                        | check_link_status_work
switchtec_ntb_remove    |
kfree(sndev);           |
                        | if (sndev->link_force_down)
                        | // use sndev

Fix it by ensuring that the work is canceled before proceeding with
the cleanup in switchtec_ntb_remove.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
542,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46677,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

gtp: fix a potential NULL pointer dereference

When sockfd_lookup() fails, gtp_encap_enable_socket() returns a
NULL pointer, but its callers only check for error pointers thus miss
the NULL pointer case.

Fix it by returning an error pointer with the error code carried from
sockfd_lookup().

(I found this bug during code inspection.)",Linux,Linux,"1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9, 1e3a3abd8b28cfda9d0d0167e50e0fe11bc372a9"
541,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50062,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/rtrs-srv: Avoid null pointer deref during path establishment

For RTRS path establishment, RTRS client initiates and completes con_num
of connections. After establishing all its connections, the information
is exchanged between the client and server through the info_req message.
During this exchange, it is essential that all connections have been
established, and the state of the RTRS srv path is CONNECTED.

So add these sanity checks, to make sure we detect and abort process in
error scenarios to avoid null pointer deref.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
517,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50049,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check null pointer before dereferencing se

[WHAT & HOW]
se is null checked previously in the same function, indicating
it might be null; therefore, it must be checked when used again.

This fixes 1 FORWARD_NULL issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
515,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46784,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: mana: Fix error handling in mana_create_txq/rxq's NAPI cleanup

Currently napi_disable() gets called during rxq and txq cleanup,
even before napi is enabled and hrtimer is initialized. It causes
kernel panic.

? page_fault_oops+0x136/0x2b0
  ? page_counter_cancel+0x2e/0x80
  ? do_user_addr_fault+0x2f2/0x640
  ? refill_obj_stock+0xc4/0x110
  ? exc_page_fault+0x71/0x160
  ? asm_exc_page_fault+0x27/0x30
  ? __mmdrop+0x10/0x180
  ? __mmdrop+0xec/0x180
  ? hrtimer_active+0xd/0x50
  hrtimer_try_to_cancel+0x2c/0xf0
  hrtimer_cancel+0x15/0x30
  napi_disable+0x65/0x90
  mana_destroy_rxq+0x4c/0x2f0
  mana_create_rxq.isra.0+0x56c/0x6d0
  ? mana_uncfg_vport+0x50/0x50
  mana_alloc_queues+0x21b/0x320
  ? skb_dequeue+0x5f/0x80",Linux,Linux,"e1b5683ff62e7b328317aec08869495992053e9d, e1b5683ff62e7b328317aec08869495992053e9d, e1b5683ff62e7b328317aec08869495992053e9d, e1b5683ff62e7b328317aec08869495992053e9d"
560,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49875,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: map the EBADMSG to nfserr_io to avoid warning

Ext4 will throw -EBADMSG through ext4_readdir when a checksum error
occurs, resulting in the following WARNING.

Fix it by mapping EBADMSG to nfserr_io.

nfsd_buffered_readdir
 iterate_dir // -EBADMSG -74
  ext4_readdir // .iterate_shared
   ext4_dx_readdir
    ext4_htree_fill_tree
     htree_dirblock_to_tree
      ext4_read_dirblock
       __ext4_read_dirblock
        ext4_dirblock_csum_verify
         warn_no_space_for_csum
          __warn_no_space_for_csum
        return ERR_PTR(-EFSBADCRC) // -EBADMSG -74
 nfserrno // WARNING

[  161.115610] ------------[ cut here ]------------
[  161.116465] nfsd: non-standard errno: -74
[  161.117315] WARNING: CPU: 1 PID: 780 at fs/nfsd/nfsproc.c:878 nfserrno+0x9d/0xd0
[  161.118596] Modules linked in:
[  161.119243] CPU: 1 PID: 780 Comm: nfsd Not tainted 5.10.0-00014-g79679361fd5d #138
[  161.120684] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.14.0-0-g155821a1990b-prebuilt.qe
mu.org 04/01/2014
[  161.123601] RIP: 0010:nfserrno+0x9d/0xd0
[  161.124676] Code: 0f 87 da 30 dd 00 83 e3 01 b8 00 00 00 05 75 d7 44 89 ee 48 c7 c7 c0 57 24 98 89 44 24 04 c6
 05 ce 2b 61 03 01 e8 99 20 d8 00 <0f> 0b 8b 44 24 04 eb b5 4c 89 e6 48 c7 c7 a0 6d a4 99 e8 cc 15 33
[  161.127797] RSP: 0018:ffffc90000e2f9c0 EFLAGS: 00010286
[  161.128794] RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000000
[  161.130089] RDX: 1ffff1103ee16f6d RSI: 0000000000000008 RDI: fffff520001c5f2a
[  161.131379] RBP: 0000000000000022 R08: 0000000000000001 R09: ffff8881f70c1827
[  161.132664] R10: ffffed103ee18304 R11: 0000000000000001 R12: 0000000000000021
[  161.133949] R13: 00000000ffffffb6 R14: ffff8881317c0000 R15: ffffc90000e2fbd8
[  161.135244] FS:  0000000000000000(0000) GS:ffff8881f7080000(0000) knlGS:0000000000000000
[  161.136695] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[  161.137761] CR2: 00007fcaad70b348 CR3: 0000000144256006 CR4: 0000000000770ee0
[  161.139041] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[  161.140291] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[  161.141519] PKRU: 55555554
[  161.142076] Call Trace:
[  161.142575]  ? __warn+0x9b/0x140
[  161.143229]  ? nfserrno+0x9d/0xd0
[  161.143872]  ? report_bug+0x125/0x150
[  161.144595]  ? handle_bug+0x41/0x90
[  161.145284]  ? exc_invalid_op+0x14/0x70
[  161.146009]  ? asm_exc_invalid_op+0x12/0x20
[  161.146816]  ? nfserrno+0x9d/0xd0
[  161.147487]  nfsd_buffered_readdir+0x28b/0x2b0
[  161.148333]  ? nfsd4_encode_dirent_fattr+0x380/0x380
[  161.149258]  ? nfsd_buffered_filldir+0xf0/0xf0
[  161.150093]  ? wait_for_concurrent_writes+0x170/0x170
[  161.151004]  ? generic_file_llseek_size+0x48/0x160
[  161.151895]  nfsd_readdir+0x132/0x190
[  161.152606]  ? nfsd4_encode_dirent_fattr+0x380/0x380
[  161.153516]  ? nfsd_unlink+0x380/0x380
[  161.154256]  ? override_creds+0x45/0x60
[  161.155006]  nfsd4_encode_readdir+0x21a/0x3d0
[  161.155850]  ? nfsd4_encode_readlink+0x210/0x210
[  161.156731]  ? write_bytes_to_xdr_buf+0x97/0xe0
[  161.157598]  ? __write_bytes_to_xdr_buf+0xd0/0xd0
[  161.158494]  ? lock_downgrade+0x90/0x90
[  161.159232]  ? nfs4svc_decode_voidarg+0x10/0x10
[  161.160092]  nfsd4_encode_operation+0x15a/0x440
[  161.160959]  nfsd4_proc_compound+0x718/0xe90
[  161.161818]  nfsd_dispatch+0x18e/0x2c0
[  161.162586]  svc_process_common+0x786/0xc50
[  161.163403]  ? nfsd_svc+0x380/0x380
[  161.164137]  ? svc_printk+0x160/0x160
[  161.164846]  ? svc_xprt_do_enqueue.part.0+0x365/0x380
[  161.165808]  ? nfsd_svc+0x380/0x380
[  161.166523]  ? rcu_is_watching+0x23/0x40
[  161.167309]  svc_process+0x1a5/0x200
[  161.168019]  nfsd+0x1f5/0x380
[  161.168663]  ? nfsd_shutdown_threads+0x260/0x260
[  161.169554]  kthread+0x1c4/0x210
[  161.170224]  ? kthread_insert_work_sanity_check+0x80/0x80
[  161.171246]  ret_from_fork+0x1f/0x30",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
483,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44971,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: dsa: bcm_sf2: Fix a possible memory leak in bcm_sf2_mdio_register()

bcm_sf2_mdio_register() calls of_phy_find_device() and then
phy_device_remove() in a loop to remove existing PHY devices.
of_phy_find_device() eventually calls bus_find_device(), which calls
get_device() on the returned struct device * to increment the refcount.
The current implementation does not decrement the refcount, which causes
memory leak.

This commit adds the missing phy_device_free() call to decrement the
refcount via put_device() to balance the refcount.",Linux,Linux,"771089c2a485958e423f305e974303760167b45c, 771089c2a485958e423f305e974303760167b45c, 771089c2a485958e423f305e974303760167b45c, 771089c2a485958e423f305e974303760167b45c, 771089c2a485958e423f305e974303760167b45c, 771089c2a485958e423f305e974303760167b45c"
491,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49957,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: fix null-ptr-deref when journal load failed.

During the mounting process, if journal_reset() fails because of too short
journal, then lead to jbd2_journal_load() fails with NULL j_sb_buffer. 
Subsequently, ocfs2_journal_shutdown() calls
jbd2_journal_flush()->jbd2_cleanup_journal_tail()->
__jbd2_update_log_tail()->jbd2_journal_update_sb_log_tail()
->lock_buffer(journal->j_sb_buffer), resulting in a null-pointer
dereference error.

To resolve this issue, we should check the JBD2_LOADED flag to ensure the
journal was properly loaded.  Additionally, use journal instead of
osb->journal directly to simplify the code.",Linux,Linux,"f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1, f6f50e28f0cb8d7bcdfaacc83129f005dede11b1"
490,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43888,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm: list_lru: fix UAF for memory cgroup

The mem_cgroup_from_slab_obj() is supposed to be called under rcu lock or
cgroup_mutex or others which could prevent returned memcg from being
freed.  Fix it by adding missing rcu read lock.

Found by code inspection.

[songmuchun@bytedance.com: only grab rcu lock when necessary, per Vlastimil]
  Link: https://lkml.kernel.org/r/20240801024603.1865-1-songmuchun@bytedance.com",Linux,Linux,"0a97c01cd20bb96359d8c9dedad92a061ed34e0b, 0a97c01cd20bb96359d8c9dedad92a061ed34e0b"
489,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50013,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

exfat: fix memory leak in exfat_load_bitmap()

If the first directory entry in the root directory is not a bitmap
directory entry, 'bh' will not be released and reassigned, which
will cause a memory leak.",Linux,Linux,"1e49a94cf707204b66a3fb242f2814712c941f52, 1e49a94cf707204b66a3fb242f2814712c941f52, 1e49a94cf707204b66a3fb242f2814712c941f52, 1e49a94cf707204b66a3fb242f2814712c941f52, 1e49a94cf707204b66a3fb242f2814712c941f52, 1e49a94cf707204b66a3fb242f2814712c941f52, 1e49a94cf707204b66a3fb242f2814712c941f52"
488,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-27072,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: usbtv: Remove useless locks in usbtv_video_free()

Remove locks calls in usbtv_video_free() because
are useless and may led to a deadlock as reported here:
https://syzkaller.appspot.com/x/bisect.txt?x=166dc872180000
Also remove usbtv_stop() call since it will be called when
unregistering the device.

Before 'c838530d230b' this issue would only be noticed if you
disconnect while streaming and now it is noticeable even when
disconnecting while not streaming.


[hverkuil: fix minor spelling mistake in log message]",Linux,Linux,"f3d27f34fdd7701e499617d2c1d94480a98f6d07, f3d27f34fdd7701e499617d2c1d94480a98f6d07, f3d27f34fdd7701e499617d2c1d94480a98f6d07, f3d27f34fdd7701e499617d2c1d94480a98f6d07, f3d27f34fdd7701e499617d2c1d94480a98f6d07, f3d27f34fdd7701e499617d2c1d94480a98f6d07"
487,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43867,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/nouveau: prime: fix refcount underflow

Calling nouveau_bo_ref() on a nouveau_bo without initializing it (and
hence the backing ttm_bo) leads to a refcount underflow.

Instead of calling nouveau_bo_ref() in the unwind path of
drm_gem_object_init(), clean things up manually.

(cherry picked from commit 1b93f3e89d03cfc576636e195466a0d728ad8de5)",Linux,Linux,"ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6, ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6, ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6, ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6, ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6, ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6, ab9ccb96a6e6f95bcde6b8b2a524370efdbfdcd6"
486,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52486,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm: Don't unref the same fb many times by mistake due to deadlock handling

If we get a deadlock after the fb lookup in drm_mode_page_flip_ioctl()
we proceed to unref the fb and then retry the whole thing from the top.
But we forget to reset the fb pointer back to NULL, and so if we then
get another error during the retry, before the fb lookup, we proceed
the unref the same fb again without having gotten another reference.
The end result is that the fb will (eventually) end up being freed
while it's still in use.

Reset fb to NULL once we've unreffed it to avoid doing it again
until we've done another fb lookup.

This turned out to be pretty easy to hit on a DG2 when doing async
flips (and CONFIG_DEBUG_WW_MUTEX_SLOWPATH=y). The first symptom I
saw that drm_closefb() simply got stuck in a busy loop while walking
the framebuffer list. Fortunately I was able to convince it to oops
instead, and from there it was easier to track down the culprit.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
485,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42267,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

riscv/mm: Add handling for VM_FAULT_SIGSEGV in mm_fault_error()

Handle VM_FAULT_SIGSEGV in the page fault path so that we correctly
kill the process and we don't BUG() the kernel.",Linux,Linux,"07037db5d479f90377c998259a4f9a469c404edf, 07037db5d479f90377c998259a4f9a469c404edf, 07037db5d479f90377c998259a4f9a469c404edf, 07037db5d479f90377c998259a4f9a469c404edf, 07037db5d479f90377c998259a4f9a469c404edf, 07037db5d479f90377c998259a4f9a469c404edf"
484,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43894,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/client: fix null pointer dereference in drm_client_modeset_probe

In drm_client_modeset_probe(), the return value of drm_mode_duplicate() is
assigned to modeset->mode, which will lead to a possible NULL pointer
dereference on failure of drm_mode_duplicate(). Add a check to avoid npd.",Linux,Linux,"cf13909aee054f5aa667d4b9da0ac7df4f6c1327, cf13909aee054f5aa667d4b9da0ac7df4f6c1327, cf13909aee054f5aa667d4b9da0ac7df4f6c1327, cf13909aee054f5aa667d4b9da0ac7df4f6c1327, cf13909aee054f5aa667d4b9da0ac7df4f6c1327, cf13909aee054f5aa667d4b9da0ac7df4f6c1327, cf13909aee054f5aa667d4b9da0ac7df4f6c1327"
482,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45010,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: pm: only mark 'subflow' endp as available

Adding the following warning ...

  WARN_ON_ONCE(msk->pm.local_addr_used == 0)

... before decrementing the local_addr_used counter helped to find a bug
when running the ""remove single address"" subtest from the mptcp_join.sh
selftests.

Removing a 'signal' endpoint will trigger the removal of all subflows
linked to this endpoint via mptcp_pm_nl_rm_addr_or_subflow() with
rm_type == MPTCP_MIB_RMSUBFLOW. This will decrement the local_addr_used
counter, which is wrong in this case because this counter is linked to
'subflow' endpoints, and here it is a 'signal' endpoint that is being
removed.

Now, the counter is decremented, only if the ID is being used outside
of mptcp_pm_nl_rm_addr_or_subflow(), only for 'subflow' endpoints, and
if the ID is not 0 -- local_addr_used is not taking into account these
ones. This marking of the ID as being available, and the decrement is
done no matter if a subflow using this ID is currently available,
because the subflow could have been closed before.",Linux,Linux,"06faa22710342bca5e9c249634199c650799fce6, 06faa22710342bca5e9c249634199c650799fce6, 06faa22710342bca5e9c249634199c650799fce6, 06faa22710342bca5e9c249634199c650799fce6"
493,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-38602,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ax25: Fix reference count leak issues of ax25_dev

The ax25_addr_ax25dev() and ax25_dev_device_down() exist a reference
count leak issue of the object ""ax25_dev"".

Memory leak issue in ax25_addr_ax25dev():

The reference count of the object ""ax25_dev"" can be increased multiple
times in ax25_addr_ax25dev(). This will cause a memory leak.

Memory leak issues in ax25_dev_device_down():

The reference count of ax25_dev is set to 1 in ax25_dev_device_up() and
then increase the reference count when ax25_dev is added to ax25_dev_list.
As a result, the reference count of ax25_dev is 2. But when the device is
shutting down. The ax25_dev_device_down() drops the reference count once
or twice depending on if we goto unlock_put or not, which will cause
memory leak.

As for the issue of ax25_addr_ax25dev(), it is impossible for one pointer
to be on a list twice. So add a break in ax25_addr_ax25dev(). As for the
issue of ax25_dev_device_down(), increase the reference count of ax25_dev
once in ax25_dev_device_up() and decrease the reference count of ax25_dev
after it is removed from the ax25_dev_list.",Linux,Linux,"d01ffb9eee4af165d83b08dd73ebdf9fe94a519b, d01ffb9eee4af165d83b08dd73ebdf9fe94a519b, d01ffb9eee4af165d83b08dd73ebdf9fe94a519b, d01ffb9eee4af165d83b08dd73ebdf9fe94a519b, d01ffb9eee4af165d83b08dd73ebdf9fe94a519b"
481,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43837,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix null pointer dereference in resolve_prog_type() for BPF_PROG_TYPE_EXT

When loading a EXT program without specifying `attr->attach_prog_fd`,
the `prog->aux->dst_prog` will be null. At this time, calling
resolve_prog_type() anywhere will result in a null pointer dereference.

Example stack trace:

[    8.107863] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000004
[    8.108262] Mem abort info:
[    8.108384]   ESR = 0x0000000096000004
[    8.108547]   EC = 0x25: DABT (current EL), IL = 32 bits
[    8.108722]   SET = 0, FnV = 0
[    8.108827]   EA = 0, S1PTW = 0
[    8.108939]   FSC = 0x04: level 0 translation fault
[    8.109102] Data abort info:
[    8.109203]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
[    8.109399]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
[    8.109614]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[    8.109836] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000101354000
[    8.110011] [0000000000000004] pgd=0000000000000000, p4d=0000000000000000
[    8.112624] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
[    8.112783] Modules linked in:
[    8.113120] CPU: 0 PID: 99 Comm: may_access_dire Not tainted 6.10.0-rc3-next-20240613-dirty #1
[    8.113230] Hardware name: linux,dummy-virt (DT)
[    8.113390] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[    8.113429] pc : may_access_direct_pkt_data+0x24/0xa0
[    8.113746] lr : add_subprog_and_kfunc+0x634/0x8e8
[    8.113798] sp : ffff80008283b9f0
[    8.113813] x29: ffff80008283b9f0 x28: ffff800082795048 x27: 0000000000000001
[    8.113881] x26: ffff0000c0bb2600 x25: 0000000000000000 x24: 0000000000000000
[    8.113897] x23: ffff0000c1134000 x22: 000000000001864f x21: ffff0000c1138000
[    8.113912] x20: 0000000000000001 x19: ffff0000c12b8000 x18: ffffffffffffffff
[    8.113929] x17: 0000000000000000 x16: 0000000000000000 x15: 0720072007200720
[    8.113944] x14: 0720072007200720 x13: 0720072007200720 x12: 0720072007200720
[    8.113958] x11: 0720072007200720 x10: 0000000000f9fca4 x9 : ffff80008021f4e4
[    8.113991] x8 : 0101010101010101 x7 : 746f72705f6d656d x6 : 000000001e0e0f5f
[    8.114006] x5 : 000000000001864f x4 : ffff0000c12b8000 x3 : 000000000000001c
[    8.114020] x2 : 0000000000000002 x1 : 0000000000000000 x0 : 0000000000000000
[    8.114126] Call trace:
[    8.114159]  may_access_direct_pkt_data+0x24/0xa0
[    8.114202]  bpf_check+0x3bc/0x28c0
[    8.114214]  bpf_prog_load+0x658/0xa58
[    8.114227]  __sys_bpf+0xc50/0x2250
[    8.114240]  __arm64_sys_bpf+0x28/0x40
[    8.114254]  invoke_syscall.constprop.0+0x54/0xf0
[    8.114273]  do_el0_svc+0x4c/0xd8
[    8.114289]  el0_svc+0x3c/0x140
[    8.114305]  el0t_64_sync_handler+0x134/0x150
[    8.114331]  el0t_64_sync+0x168/0x170
[    8.114477] Code: 7100707f 54000081 f9401c00 f9403800 (b9400403)
[    8.118672] ---[ end trace 0000000000000000 ]---

One way to fix it is by forcing `attach_prog_fd` non-empty when
bpf_prog_load(). But this will lead to `libbpf_probe_bpf_prog_type`
API broken which use verifier log to probe prog type and will log
nothing if we reject invalid EXT prog before bpf_check().

Another way is by adding null check in resolve_prog_type().

The issue was introduced by commit 4a9c7bbe2ed4 (""bpf: Resolve to
prog->aux->dst_prog->type only for BPF_PROG_TYPE_EXT"") which wanted
to correct type resolution for BPF_PROG_TYPE_TRACING programs. Before
that, the type resolution of BPF_PROG_TYPE_EXT prog actually follows
the logic below:

  prog->aux->dst_prog ? prog->aux->dst_prog->type : prog->type;

It implies that when EXT program is not yet attached to `dst_prog`,
the prog type should be EXT itself. This code worked fine in the past.
So just keep using it.

Fix this by returning `prog->type` for BPF_PROG_TYPE_EXT if `dst_prog`
is not present in resolve_prog_type().",Linux,Linux,"4a9c7bbe2ed4d2b240674b1fb606c41d3940c412, 4a9c7bbe2ed4d2b240674b1fb606c41d3940c412, 4a9c7bbe2ed4d2b240674b1fb606c41d3940c412, 4a9c7bbe2ed4d2b240674b1fb606c41d3940c412"
480,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-36938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf, skmsg: Fix NULL pointer dereference in sk_psock_skb_ingress_enqueue

Fix NULL pointer data-races in sk_psock_skb_ingress_enqueue() which
syzbot reported [1].

[1]
BUG: KCSAN: data-race in sk_psock_drop / sk_psock_skb_ingress_enqueue

write to 0xffff88814b3278b8 of 8 bytes by task 10724 on cpu 1:
 sk_psock_stop_verdict net/core/skmsg.c:1257 [inline]
 sk_psock_drop+0x13e/0x1f0 net/core/skmsg.c:843
 sk_psock_put include/linux/skmsg.h:459 [inline]
 sock_map_close+0x1a7/0x260 net/core/sock_map.c:1648
 unix_release+0x4b/0x80 net/unix/af_unix.c:1048
 __sock_release net/socket.c:659 [inline]
 sock_close+0x68/0x150 net/socket.c:1421
 __fput+0x2c1/0x660 fs/file_table.c:422
 __fput_sync+0x44/0x60 fs/file_table.c:507
 __do_sys_close fs/open.c:1556 [inline]
 __se_sys_close+0x101/0x1b0 fs/open.c:1541
 __x64_sys_close+0x1f/0x30 fs/open.c:1541
 do_syscall_64+0xd3/0x1d0
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

read to 0xffff88814b3278b8 of 8 bytes by task 10713 on cpu 0:
 sk_psock_data_ready include/linux/skmsg.h:464 [inline]
 sk_psock_skb_ingress_enqueue+0x32d/0x390 net/core/skmsg.c:555
 sk_psock_skb_ingress_self+0x185/0x1e0 net/core/skmsg.c:606
 sk_psock_verdict_apply net/core/skmsg.c:1008 [inline]
 sk_psock_verdict_recv+0x3e4/0x4a0 net/core/skmsg.c:1202
 unix_read_skb net/unix/af_unix.c:2546 [inline]
 unix_stream_read_skb+0x9e/0xf0 net/unix/af_unix.c:2682
 sk_psock_verdict_data_ready+0x77/0x220 net/core/skmsg.c:1223
 unix_stream_sendmsg+0x527/0x860 net/unix/af_unix.c:2339
 sock_sendmsg_nosec net/socket.c:730 [inline]
 __sock_sendmsg+0x140/0x180 net/socket.c:745
 ____sys_sendmsg+0x312/0x410 net/socket.c:2584
 ___sys_sendmsg net/socket.c:2638 [inline]
 __sys_sendmsg+0x1e9/0x280 net/socket.c:2667
 __do_sys_sendmsg net/socket.c:2676 [inline]
 __se_sys_sendmsg net/socket.c:2674 [inline]
 __x64_sys_sendmsg+0x46/0x50 net/socket.c:2674
 do_syscall_64+0xd3/0x1d0
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

value changed: 0xffffffff83d7feb0 -> 0x0000000000000000

Reported by Kernel Concurrency Sanitizer on:
CPU: 0 PID: 10713 Comm: syz-executor.4 Tainted: G        W          6.8.0-syzkaller-08951-gfe46a7dd189e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 02/29/2024

Prior to this, commit 4cd12c6065df (""bpf, sockmap: Fix NULL pointer
dereference in sk_psock_verdict_data_ready()"") fixed one NULL pointer
similarly due to no protection of saved_data_ready. Here is another
different caller causing the same issue because of the same reason. So
we should protect it with sk_callback_lock read lock because the writer
side in the sk_psock_drop() uses ""write_lock_bh(&sk->sk_callback_lock);"".

To avoid errors that could happen in future, I move those two pairs of
lock into the sk_psock_data_ready(), which is suggested by John Fastabend.",Linux,Linux,"604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c, 604326b41a6fb9b4a78b6179335decee0365cd8c"
479,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46857,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/mlx5: Fix bridge mode operations when there are no VFs

Currently, trying to set the bridge mode attribute when numvfs=0 leads to a
crash:

bridge link set dev eth2 hwmode vepa

[  168.967392] BUG: kernel NULL pointer dereference, address: 0000000000000030
[...]
[  168.969989] RIP: 0010:mlx5_add_flow_rules+0x1f/0x300 [mlx5_core]
[...]
[  168.976037] Call Trace:
[  168.976188]  <TASK>
[  168.978620]  _mlx5_eswitch_set_vepa_locked+0x113/0x230 [mlx5_core]
[  168.979074]  mlx5_eswitch_set_vepa+0x7f/0xa0 [mlx5_core]
[  168.979471]  rtnl_bridge_setlink+0xe9/0x1f0
[  168.979714]  rtnetlink_rcv_msg+0x159/0x400
[  168.980451]  netlink_rcv_skb+0x54/0x100
[  168.980675]  netlink_unicast+0x241/0x360
[  168.980918]  netlink_sendmsg+0x1f6/0x430
[  168.981162]  ____sys_sendmsg+0x3bb/0x3f0
[  168.982155]  ___sys_sendmsg+0x88/0xd0
[  168.985036]  __sys_sendmsg+0x59/0xa0
[  168.985477]  do_syscall_64+0x79/0x150
[  168.987273]  entry_SYSCALL_64_after_hwframe+0x76/0x7e
[  168.987773] RIP: 0033:0x7f8f7950f917

(esw->fdb_table.legacy.vepa_fdb is null)

The bridge mode is only relevant when there are multiple functions per
port. Therefore, prevent setting and getting this setting when there are no
VFs.

Note that after this change, there are no settings to change on the PF
interface using `bridge link` when there are no VFs, so the interface no
longer appears in the `bridge link` output.",Linux,Linux,"4b89251de024fb85329e4cbd8fbea551ae6c665c, 4b89251de024fb85329e4cbd8fbea551ae6c665c, 4b89251de024fb85329e4cbd8fbea551ae6c665c, 4b89251de024fb85329e4cbd8fbea551ae6c665c"
478,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49889,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: avoid use-after-free in ext4_ext_show_leaf()

In ext4_find_extent(), path may be freed by error or be reallocated, so
using a previously saved *ppath may have been freed and thus may trigger
use-after-free, as follows:

ext4_split_extent
  path = *ppath;
  ext4_split_extent_at(ppath)
  path = ext4_find_extent(ppath)
  ext4_split_extent_at(ppath)
    // ext4_find_extent fails to free path
    // but zeroout succeeds
  ext4_ext_show_leaf(inode, path)
    eh = path[depth].p_hdr
    // path use-after-free !!!

Similar to ext4_split_extent_at(), we use *ppath directly as an input to
ext4_ext_show_leaf(). Fix a spelling error by the way.

Same problem in ext4_ext_handle_unwritten_extents(). Since 'path' is only
used in ext4_ext_show_leaf(), remove 'path' and use *ppath directly.

This issue is triggered only when EXT_DEBUG is defined and therefore does
not affect functionality.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
477,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44978,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe: Free job before xe_exec_queue_put

Free job depends on job->vm being valid, the last xe_exec_queue_put can
destroy the VM. Prevent UAF by freeing job before xe_exec_queue_put.

(cherry picked from commit 32a42c93b74c8ca6d0915ea3eba21bceff53042f)",Linux,Linux,"dd08ebf6c3525a7ea2186e636df064ea47281987, dd08ebf6c3525a7ea2186e636df064ea47281987"
476,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44962,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: btnxpuart: Shutdown timer and prevent rearming when driver unloading

When unload the btnxpuart driver, its associated timer will be deleted.
If the timer happens to be modified at this moment, it leads to the
kernel call this timer even after the driver unloaded, resulting in
kernel panic.
Use timer_shutdown_sync() instead of del_timer_sync() to prevent rearming.

panic log:
  Internal error: Oops: 0000000086000007 [#1] PREEMPT SMP
  Modules linked in: algif_hash algif_skcipher af_alg moal(O) mlan(O) crct10dif_ce polyval_ce polyval_generic   snd_soc_imx_card snd_soc_fsl_asoc_card snd_soc_imx_audmux mxc_jpeg_encdec v4l2_jpeg snd_soc_wm8962 snd_soc_fsl_micfil   snd_soc_fsl_sai flexcan snd_soc_fsl_utils ap130x rpmsg_ctrl imx_pcm_dma can_dev rpmsg_char pwm_fan fuse [last unloaded:   btnxpuart]
  CPU: 5 PID: 723 Comm: memtester Tainted: G           O       6.6.23-lts-next-06207-g4aef2658ac28 #1
  Hardware name: NXP i.MX95 19X19 board (DT)
  pstate: 20400009 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
  pc : 0xffff80007a2cf464
  lr : call_timer_fn.isra.0+0x24/0x80
...
  Call trace:
   0xffff80007a2cf464
   __run_timers+0x234/0x280
   run_timer_softirq+0x20/0x40
   __do_softirq+0x100/0x26c
   ____do_softirq+0x10/0x1c
   call_on_irq_stack+0x24/0x4c
   do_softirq_own_stack+0x1c/0x2c
   irq_exit_rcu+0xc0/0xdc
   el0_interrupt+0x54/0xd8
   __el0_irq_handler_common+0x18/0x24
   el0t_64_irq_handler+0x10/0x1c
   el0t_64_irq+0x190/0x194
  Code: ???????? ???????? ???????? ???????? (????????)
  ---[ end trace 0000000000000000 ]---
  Kernel panic - not syncing: Oops: Fatal exception in interrupt
  SMP: stopping secondary CPUs
  Kernel Offset: disabled
  CPU features: 0x0,c0000000,40028143,1000721b
  Memory Limit: none
  ---[ end Kernel panic - not syncing: Oops: Fatal exception in interrupt ]---",Linux,Linux,"ab3a769b4dccec2cf60f0a0700b140991bf9afc8, ab3a769b4dccec2cf60f0a0700b140991bf9afc8, ab3a769b4dccec2cf60f0a0700b140991bf9afc8"
475,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44960,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: core: Check for unset descriptor

Make sure the descriptor has been set before looking at maxpacket.
This fixes a null pointer panic in this case.

This may happen if the gadget doesn't properly set up the endpoint
for the current speed, or the gadget descriptors are malformed and
the descriptor for the speed/endpoint are not found.

No current gadget driver is known to have this problem, but this
may cause a hard-to-find bug during development of new gadgets.",Linux,Linux,"d1c188d330ca33cc35d1590441ba276f31144299, 54f83b8c8ea9b22082a496deadf90447a326954e, 54f83b8c8ea9b22082a496deadf90447a326954e, 54f83b8c8ea9b22082a496deadf90447a326954e, 54f83b8c8ea9b22082a496deadf90447a326954e, 54f83b8c8ea9b22082a496deadf90447a326954e, 54f83b8c8ea9b22082a496deadf90447a326954e, 54f83b8c8ea9b22082a496deadf90447a326954e"
647,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47749,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/cxgb4: Added NULL check for lookup_atid

The lookup_atid() function can return NULL if the ATID is
invalid or does not exist in the identifier table, which
could lead to dereferencing a null pointer without a
check in the `act_establish()` and `act_open_rpl()` functions.
Add a NULL check to prevent null pointer dereferencing.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57, cfdda9d764362ab77b11a410bb928400e6520d57"
492,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49962,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ACPICA: check null return of ACPI_ALLOCATE_ZEROED() in acpi_db_convert_to_package()

ACPICA commit 4d4547cf13cca820ff7e0f859ba83e1a610b9fd0

ACPI_ALLOCATE_ZEROED() may fail, elements might be NULL and will cause
NULL pointer dereference later.

[ rjw: Subject and changelog edits ]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
494,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52751,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

smb: client: fix use-after-free in smb2_query_info_compound()

The following UAF was triggered when running fstests generic/072 with
KASAN enabled against Windows Server 2022 and mount options
'multichannel,max_channels=2,vers=3.1.1,mfsymlinks,noperm'

  BUG: KASAN: slab-use-after-free in smb2_query_info_compound+0x423/0x6d0 [cifs]
  Read of size 8 at addr ffff888014941048 by task xfs_io/27534

  CPU: 0 PID: 27534 Comm: xfs_io Not tainted 6.6.0-rc7 #1
  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS
  rel-1.16.2-3-gd478f380-rebuilt.opensuse.org 04/01/2014
  Call Trace:
   dump_stack_lvl+0x4a/0x80
   print_report+0xcf/0x650
   ? srso_alias_return_thunk+0x5/0x7f
   ? srso_alias_return_thunk+0x5/0x7f
   ? __phys_addr+0x46/0x90
   kasan_report+0xda/0x110
   ? smb2_query_info_compound+0x423/0x6d0 [cifs]
   ? smb2_query_info_compound+0x423/0x6d0 [cifs]
   smb2_query_info_compound+0x423/0x6d0 [cifs]
   ? __pfx_smb2_query_info_compound+0x10/0x10 [cifs]
   ? srso_alias_return_thunk+0x5/0x7f
   ? __stack_depot_save+0x39/0x480
   ? kasan_save_stack+0x33/0x60
   ? kasan_set_track+0x25/0x30
   ? ____kasan_slab_free+0x126/0x170
   smb2_queryfs+0xc2/0x2c0 [cifs]
   ? __pfx_smb2_queryfs+0x10/0x10 [cifs]
   ? __pfx___lock_acquire+0x10/0x10
   smb311_queryfs+0x210/0x220 [cifs]
   ? __pfx_smb311_queryfs+0x10/0x10 [cifs]
   ? srso_alias_return_thunk+0x5/0x7f
   ? __lock_acquire+0x480/0x26c0
   ? lock_release+0x1ed/0x640
   ? srso_alias_return_thunk+0x5/0x7f
   ? do_raw_spin_unlock+0x9b/0x100
   cifs_statfs+0x18c/0x4b0 [cifs]
   statfs_by_dentry+0x9b/0xf0
   fd_statfs+0x4e/0xb0
   __do_sys_fstatfs+0x7f/0xe0
   ? __pfx___do_sys_fstatfs+0x10/0x10
   ? srso_alias_return_thunk+0x5/0x7f
   ? lockdep_hardirqs_on_prepare+0x136/0x200
   ? srso_alias_return_thunk+0x5/0x7f
   do_syscall_64+0x3f/0x90
   entry_SYSCALL_64_after_hwframe+0x6e/0xd8

  Allocated by task 27534:
   kasan_save_stack+0x33/0x60
   kasan_set_track+0x25/0x30
   __kasan_kmalloc+0x8f/0xa0
   open_cached_dir+0x71b/0x1240 [cifs]
   smb2_query_info_compound+0x5c3/0x6d0 [cifs]
   smb2_queryfs+0xc2/0x2c0 [cifs]
   smb311_queryfs+0x210/0x220 [cifs]
   cifs_statfs+0x18c/0x4b0 [cifs]
   statfs_by_dentry+0x9b/0xf0
   fd_statfs+0x4e/0xb0
   __do_sys_fstatfs+0x7f/0xe0
   do_syscall_64+0x3f/0x90
   entry_SYSCALL_64_after_hwframe+0x6e/0xd8

  Freed by task 27534:
   kasan_save_stack+0x33/0x60
   kasan_set_track+0x25/0x30
   kasan_save_free_info+0x2b/0x50
   ____kasan_slab_free+0x126/0x170
   slab_free_freelist_hook+0xd0/0x1e0
   __kmem_cache_free+0x9d/0x1b0
   open_cached_dir+0xff5/0x1240 [cifs]
   smb2_query_info_compound+0x5c3/0x6d0 [cifs]
   smb2_queryfs+0xc2/0x2c0 [cifs]

This is a race between open_cached_dir() and cached_dir_lease_break()
where the cache entry for the open directory handle receives a lease
break while creating it.  And before returning from open_cached_dir(),
we put the last reference of the new @cfid because of
!@cfid->has_lease.

Besides the UAF, while running xfstests a lot of missed lease breaks
have been noticed in tests that run several concurrent statfs(2) calls
on those cached fids

  CIFS: VFS: \\w22-root1.gandalf.test No task to wake, unknown frame...
  CIFS: VFS: \\w22-root1.gandalf.test Cmd: 18 Err: 0x0 Flags: 0x1...
  CIFS: VFS: \\w22-root1.gandalf.test smb buf 00000000715bfe83 len 108
  CIFS: VFS: Dump pending requests:
  CIFS: VFS: \\w22-root1.gandalf.test No task to wake, unknown frame...
  CIFS: VFS: \\w22-root1.gandalf.test Cmd: 18 Err: 0x0 Flags: 0x1...
  CIFS: VFS: \\w22-root1.gandalf.test smb buf 000000005aa7316e len 108
  ...

To fix both, in open_cached_dir() ensure that @cfid->has_lease is set
right before sending out compounded request so that any potential
lease break will be get processed by demultiplex thread while we're
still caching @cfid.  And, if open failed for some reason, re-check
@cfid->has_lease to decide whether or not put lease reference.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
514,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50006,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ext4: fix i_data_sem unlock order in ext4_ind_migrate()

Fuzzing reports a possible deadlock in jbd2_log_wait_commit.

This issue is triggered when an EXT4_IOC_MIGRATE ioctl is set to require
synchronous updates because the file descriptor is opened with O_SYNC.
This can lead to the jbd2_journal_stop() function calling
jbd2_might_wait_for_commit(), potentially causing a deadlock if the
EXT4_IOC_MIGRATE call races with a write(2) system call.

This problem only arises when CONFIG_PROVE_LOCKING is enabled. In this
case, the jbd2_might_wait_for_commit macro locks jbd2_handle in the
jbd2_journal_stop function while i_data_sem is locked. This triggers
lockdep because the jbd2_journal_start function might also lock the same
jbd2_handle simultaneously.

Found by Linux Verification Center (linuxtesting.org) with syzkaller.

Rule: add",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
505,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46767,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: phy: Fix missing of_node_put() for leds

The call of of_get_child_by_name() will cause refcount incremented
for leds, if it succeeds, it should call of_node_put() to decrease
it, fix it.",Linux,Linux,"01e5b728e9e43ae444e0369695a5f72209906464, 01e5b728e9e43ae444e0369695a5f72209906464, 01e5b728e9e43ae444e0369695a5f72209906464"
513,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43831,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: mediatek: vcodec: Handle invalid decoder vsi

Handle an invalid decoder vsi in vpu_dec_init to ensure the decoder vsi
is valid for future use.",Linux,Linux,"590577a4e5257ac3ed72999a94666ad6ba8f24bc, 590577a4e5257ac3ed72999a94666ad6ba8f24bc, 590577a4e5257ac3ed72999a94666ad6ba8f24bc"
512,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52918,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

media: pci: cx23885: check cx23885_vdev_init() return

cx23885_vdev_init() can return a NULL pointer, but that pointer
is used in the next line without a check.

Add a NULL pointer check and go to the error unwind if it is NULL.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
511,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44959,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tracefs: Use generic inode RCU for synchronizing freeing

With structure layout randomization enabled for 'struct inode' we need to
avoid overlapping any of the RCU-used / initialized-only-once members,
e.g. i_lru or i_sb_list to not corrupt related list traversals when making
use of the rcu_head.

For an unlucky structure layout of 'struct inode' we may end up with the
following splat when running the ftrace selftests:

[<...>] list_del corruption, ffff888103ee2cb0->next (tracefs_inode_cache+0x0/0x4e0 [slab object]) is NULL (prev is tracefs_inode_cache+0x78/0x4e0 [slab object])
[<...>] ------------[ cut here ]------------
[<...>] kernel BUG at lib/list_debug.c:54!
[<...>] invalid opcode: 0000 [#1] PREEMPT SMP KASAN
[<...>] CPU: 3 PID: 2550 Comm: mount Tainted: G                 N  6.8.12-grsec+ #122 ed2f536ca62f28b087b90e3cc906a8d25b3ddc65
[<...>] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014
[<...>] RIP: 0010:[<ffffffff84656018>] __list_del_entry_valid_or_report+0x138/0x3e0
[<...>] Code: 48 b8 99 fb 65 f2 ff ff ff ff e9 03 5c d9 fc cc 48 b8 99 fb 65 f2 ff ff ff ff e9 33 5a d9 fc cc 48 b8 99 fb 65 f2 ff ff ff ff <0f> 0b 4c 89 e9 48 89 ea 48 89 ee 48 c7 c7 60 8f dd 89 31 c0 e8 2f
[<...>] RSP: 0018:fffffe80416afaf0 EFLAGS: 00010283
[<...>] RAX: 0000000000000098 RBX: ffff888103ee2cb0 RCX: 0000000000000000
[<...>] RDX: ffffffff84655fe8 RSI: ffffffff89dd8b60 RDI: 0000000000000001
[<...>] RBP: ffff888103ee2cb0 R08: 0000000000000001 R09: fffffbd0082d5f25
[<...>] R10: fffffe80416af92f R11: 0000000000000001 R12: fdf99c16731d9b6d
[<...>] R13: 0000000000000000 R14: ffff88819ad4b8b8 R15: 0000000000000000
[<...>] RBX: tracefs_inode_cache+0x0/0x4e0 [slab object]
[<...>] RDX: __list_del_entry_valid_or_report+0x108/0x3e0
[<...>] RSI: __func__.47+0x4340/0x4400
[<...>] RBP: tracefs_inode_cache+0x0/0x4e0 [slab object]
[<...>] RSP: process kstack fffffe80416afaf0+0x7af0/0x8000 [mount 2550 2550]
[<...>] R09: kasan shadow of process kstack fffffe80416af928+0x7928/0x8000 [mount 2550 2550]
[<...>] R10: process kstack fffffe80416af92f+0x792f/0x8000 [mount 2550 2550]
[<...>] R14: tracefs_inode_cache+0x78/0x4e0 [slab object]
[<...>] FS:  00006dcb380c1840(0000) GS:ffff8881e0600000(0000) knlGS:0000000000000000
[<...>] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[<...>] CR2: 000076ab72b30e84 CR3: 000000000b088004 CR4: 0000000000360ef0 shadow CR4: 0000000000360ef0
[<...>] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[<...>] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[<...>] ASID: 0003
[<...>] Stack:
[<...>]  ffffffff818a2315 00000000f5c856ee ffffffff896f1840 ffff888103ee2cb0
[<...>]  ffff88812b6b9750 0000000079d714b6 fffffbfff1e9280b ffffffff8f49405f
[<...>]  0000000000000001 0000000000000000 ffff888104457280 ffffffff8248b392
[<...>] Call Trace:
[<...>]  <TASK>
[<...>]  [<ffffffff818a2315>] ? lock_release+0x175/0x380 fffffe80416afaf0
[<...>]  [<ffffffff8248b392>] list_lru_del+0x152/0x740 fffffe80416afb48
[<...>]  [<ffffffff8248ba93>] list_lru_del_obj+0x113/0x280 fffffe80416afb88
[<...>]  [<ffffffff8940fd19>] ? _atomic_dec_and_lock+0x119/0x200 fffffe80416afb90
[<...>]  [<ffffffff8295b244>] iput_final+0x1c4/0x9a0 fffffe80416afbb8
[<...>]  [<ffffffff8293a52b>] dentry_unlink_inode+0x44b/0xaa0 fffffe80416afbf8
[<...>]  [<ffffffff8293fefc>] __dentry_kill+0x23c/0xf00 fffffe80416afc40
[<...>]  [<ffffffff8953a85f>] ? __this_cpu_preempt_check+0x1f/0xa0 fffffe80416afc48
[<...>]  [<ffffffff82949ce5>] ? shrink_dentry_list+0x1c5/0x760 fffffe80416afc70
[<...>]  [<ffffffff82949b71>] ? shrink_dentry_list+0x51/0x760 fffffe80416afc78
[<...>]  [<ffffffff82949da8>] shrink_dentry_list+0x288/0x760 fffffe80416afc80
[<...>]  [<ffffffff8294ae75>] shrink_dcache_sb+0x155/0x420 fffffe80416afcc8
[<...>]  [<ffffffff8953a7c3>] ? debug_smp_processor_id+0x23/0xa0 fffffe80416afce0
[<...>]  [<ffffffff8294ad20>] ? do_one_tre
---truncated---",Linux,Linux,"5f91fc82794d4a6e41cdcd02d00baa377d94ca78, baa23a8d4360d981a49913841a726edede5cdd54, baa23a8d4360d981a49913841a726edede5cdd54"
510,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42258,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mm: huge_memory: use !CONFIG_64BIT to relax huge page alignment on 32 bit machines

Yves-Alexis Perez reported commit 4ef9ad19e176 (""mm: huge_memory: don't
force huge page alignment on 32 bit"") didn't work for x86_32 [1].  It is
because x86_32 uses CONFIG_X86_32 instead of CONFIG_32BIT.

!CONFIG_64BIT should cover all 32 bit machines.

[1] https://lore.kernel.org/linux-mm/CAHbLzkr1LwH3pcTgM+aGQ31ip2bKqiqEQ8=FQB+t2c3dhNKNHA@mail.gmail.com/",Linux,Linux,"87632bc9ecff5ded93433bc0fca428019bdd1cfe, 6ea9aa8d97e6563676094cb35755884173269555, 4ef9ad19e17676b9ef071309bc62020e2373705d, 4ef9ad19e17676b9ef071309bc62020e2373705d"
509,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50095,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

RDMA/mad: Improve handling of timed out WRs of mad agent

Current timeout handler of mad agent acquires/releases mad_agent_priv
lock for every timed out WRs. This causes heavy locking contention
when higher no. of WRs are to be handled inside timeout handler.

This leads to softlockup with below trace in some use cases where
rdma-cm path is used to establish connection between peer nodes

Trace:
-----
 BUG: soft lockup - CPU#4 stuck for 26s! [kworker/u128:3:19767]
 CPU: 4 PID: 19767 Comm: kworker/u128:3 Kdump: loaded Tainted: G OE
     -------  ---  5.14.0-427.13.1.el9_4.x86_64 #1
 Hardware name: Dell Inc. PowerEdge R740/01YM03, BIOS 2.4.8 11/26/2019
 Workqueue: ib_mad1 timeout_sends [ib_core]
 RIP: 0010:__do_softirq+0x78/0x2ac
 RSP: 0018:ffffb253449e4f98 EFLAGS: 00000246
 RAX: 00000000ffffffff RBX: 0000000000000000 RCX: 000000000000001f
 RDX: 000000000000001d RSI: 000000003d1879ab RDI: fff363b66fd3a86b
 RBP: ffffb253604cbcd8 R08: 0000009065635f3b R09: 0000000000000000
 R10: 0000000000000040 R11: ffffb253449e4ff8 R12: 0000000000000000
 R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000040
 FS:  0000000000000000(0000) GS:ffff8caa1fc80000(0000) knlGS:0000000000000000
 CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 00007fd9ec9db900 CR3: 0000000891934006 CR4: 00000000007706e0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
 PKRU: 55555554
 Call Trace:
  <IRQ>
  ? show_trace_log_lvl+0x1c4/0x2df
  ? show_trace_log_lvl+0x1c4/0x2df
  ? __irq_exit_rcu+0xa1/0xc0
  ? watchdog_timer_fn+0x1b2/0x210
  ? __pfx_watchdog_timer_fn+0x10/0x10
  ? __hrtimer_run_queues+0x127/0x2c0
  ? hrtimer_interrupt+0xfc/0x210
  ? __sysvec_apic_timer_interrupt+0x5c/0x110
  ? sysvec_apic_timer_interrupt+0x37/0x90
  ? asm_sysvec_apic_timer_interrupt+0x16/0x20
  ? __do_softirq+0x78/0x2ac
  ? __do_softirq+0x60/0x2ac
  __irq_exit_rcu+0xa1/0xc0
  sysvec_call_function_single+0x72/0x90
  </IRQ>
  <TASK>
  asm_sysvec_call_function_single+0x16/0x20
 RIP: 0010:_raw_spin_unlock_irq+0x14/0x30
 RSP: 0018:ffffb253604cbd88 EFLAGS: 00000247
 RAX: 000000000001960d RBX: 0000000000000002 RCX: ffff8cad2a064800
 RDX: 000000008020001b RSI: 0000000000000001 RDI: ffff8cad5d39f66c
 RBP: ffff8cad5d39f600 R08: 0000000000000001 R09: 0000000000000000
 R10: ffff8caa443e0c00 R11: ffffb253604cbcd8 R12: ffff8cacb8682538
 R13: 0000000000000005 R14: ffffb253604cbd90 R15: ffff8cad5d39f66c
  cm_process_send_error+0x122/0x1d0 [ib_cm]
  timeout_sends+0x1dd/0x270 [ib_core]
  process_one_work+0x1e2/0x3b0
  ? __pfx_worker_thread+0x10/0x10
  worker_thread+0x50/0x3a0
  ? __pfx_worker_thread+0x10/0x10
  kthread+0xdd/0x100
  ? __pfx_kthread+0x10/0x10
  ret_from_fork+0x29/0x50
  </TASK>

Simplified timeout handler by creating local list of timed out WRs
and invoke send handler post creating the list. The new method acquires/
releases lock once to fetch the list and hence helps to reduce locking
contetiong when processing higher no. of WRs",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
508,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43893,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

serial: core: check uartclk for zero to avoid divide by zero

Calling ioctl TIOCSSERIAL with an invalid baud_base can
result in uartclk being zero, which will result in a
divide by zero error in uart_get_divisor(). The check for
uartclk being zero in uart_set_info() needs to be done
before other settings are made as subsequent calls to
ioctl TIOCSSERIAL for the same port would be impacted if
the uartclk check was done where uartclk gets set.

Oops: divide error: 0000  PREEMPT SMP KASAN PTI
RIP: 0010:uart_get_divisor (drivers/tty/serial/serial_core.c:580)
Call Trace:
 <TASK>
serial8250_get_divisor (drivers/tty/serial/8250/8250_port.c:2576
    drivers/tty/serial/8250/8250_port.c:2589)
serial8250_do_set_termios (drivers/tty/serial/8250/8250_port.c:502
    drivers/tty/serial/8250/8250_port.c:2741)
serial8250_set_termios (drivers/tty/serial/8250/8250_port.c:2862)
uart_change_line_settings (./include/linux/spinlock.h:376
    ./include/linux/serial_core.h:608 drivers/tty/serial/serial_core.c:222)
uart_port_startup (drivers/tty/serial/serial_core.c:342)
uart_startup (drivers/tty/serial/serial_core.c:368)
uart_set_info (drivers/tty/serial/serial_core.c:1034)
uart_set_info_user (drivers/tty/serial/serial_core.c:1059)
tty_set_serial (drivers/tty/tty_io.c:2637)
tty_ioctl (drivers/tty/tty_io.c:2647 drivers/tty/tty_io.c:2791)
__x64_sys_ioctl (fs/ioctl.c:52 fs/ioctl.c:907
    fs/ioctl.c:893 fs/ioctl.c:893)
do_syscall_64 (arch/x86/entry/common.c:52
    (discriminator 1) arch/x86/entry/common.c:83 (discriminator 1))
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Rule: add",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
507,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44944,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

netfilter: ctnetlink: use helper function to calculate expect ID

Delete expectation path is missing a call to the nf_expect_get_id()
helper function to calculate the expectation ID, otherwise LSB of the
expectation object address is leaked to userspace.",Linux,Linux,"7b115755fb9d3aff0ddcd18a5c4d83381362acce, 3c79107631db1f7fd32cf3f7368e4672004a3010, 3c79107631db1f7fd32cf3f7368e4672004a3010, 3c79107631db1f7fd32cf3f7368e4672004a3010, 3c79107631db1f7fd32cf3f7368e4672004a3010, 3c79107631db1f7fd32cf3f7368e4672004a3010, 3c79107631db1f7fd32cf3f7368e4672004a3010, 3c79107631db1f7fd32cf3f7368e4672004a3010"
506,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52889,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

apparmor: Fix null pointer deref when receiving skb during sock creation

The panic below is observed when receiving ICMP packets with secmark set
while an ICMP raw socket is being created. SK_CTX(sk)->label is updated
in apparmor_socket_post_create(), but the packet is delivered to the
socket before that, causing the null pointer dereference.
Drop the packet if label context is not set.

    BUG: kernel NULL pointer dereference, address: 000000000000004c
    #PF: supervisor read access in kernel mode
    #PF: error_code(0x0000) - not-present page
    PGD 0 P4D 0
    Oops: 0000 [#1] PREEMPT SMP NOPTI
    CPU: 0 PID: 407 Comm: a.out Not tainted 6.4.12-arch1-1 #1 3e6fa2753a2d75925c34ecb78e22e85a65d083df
    Hardware name: VMware, Inc. VMware Virtual Platform/440BX Desktop Reference Platform, BIOS 6.00 05/28/2020
    RIP: 0010:aa_label_next_confined+0xb/0x40
    Code: 00 00 48 89 ef e8 d5 25 0c 00 e9 66 ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 66 0f 1f 00 0f 1f 44 00 00 89 f0 <8b> 77 4c 39 c6 7e 1f 48 63 d0 48 8d 14 d7 eb 0b 83 c0 01 48 83 c2
    RSP: 0018:ffffa92940003b08 EFLAGS: 00010246
    RAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000000000000e
    RDX: ffffa92940003be8 RSI: 0000000000000000 RDI: 0000000000000000
    RBP: ffff8b57471e7800 R08: ffff8b574c642400 R09: 0000000000000002
    R10: ffffffffbd820eeb R11: ffffffffbeb7ff00 R12: ffff8b574c642400
    R13: 0000000000000001 R14: 0000000000000001 R15: 0000000000000000
    FS:  00007fb092ea7640(0000) GS:ffff8b577bc00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 000000000000004c CR3: 00000001020f2005 CR4: 00000000007706f0
    PKRU: 55555554
    Call Trace:
     <IRQ>
     ? __die+0x23/0x70
     ? page_fault_oops+0x171/0x4e0
     ? exc_page_fault+0x7f/0x180
     ? asm_exc_page_fault+0x26/0x30
     ? aa_label_next_confined+0xb/0x40
     apparmor_secmark_check+0xec/0x330
     security_sock_rcv_skb+0x35/0x50
     sk_filter_trim_cap+0x47/0x250
     sock_queue_rcv_skb_reason+0x20/0x60
     raw_rcv+0x13c/0x210
     raw_local_deliver+0x1f3/0x250
     ip_protocol_deliver_rcu+0x4f/0x2f0
     ip_local_deliver_finish+0x76/0xa0
     __netif_receive_skb_one_core+0x89/0xa0
     netif_receive_skb+0x119/0x170
     ? __netdev_alloc_skb+0x3d/0x140
     vmxnet3_rq_rx_complete+0xb23/0x1010 [vmxnet3 56a84f9c97178c57a43a24ec073b45a9d6f01f3a]
     vmxnet3_poll_rx_only+0x36/0xb0 [vmxnet3 56a84f9c97178c57a43a24ec073b45a9d6f01f3a]
     __napi_poll+0x28/0x1b0
     net_rx_action+0x2a4/0x380
     __do_softirq+0xd1/0x2c8
     __irq_exit_rcu+0xbb/0xf0
     common_interrupt+0x86/0xa0
     </IRQ>
     <TASK>
     asm_common_interrupt+0x26/0x40
    RIP: 0010:apparmor_socket_post_create+0xb/0x200
    Code: 08 48 85 ff 75 a1 eb b1 0f 1f 80 00 00 00 00 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 f3 0f 1e fa 0f 1f 44 00 00 41 54 <55> 48 89 fd 53 45 85 c0 0f 84 b2 00 00 00 48 8b 1d 80 56 3f 02 48
    RSP: 0018:ffffa92940ce7e50 EFLAGS: 00000286
    RAX: ffffffffbc756440 RBX: 0000000000000000 RCX: 0000000000000001
    RDX: 0000000000000003 RSI: 0000000000000002 RDI: ffff8b574eaab740
    RBP: 0000000000000001 R08: 0000000000000000 R09: 0000000000000000
    R10: ffff8b57444cec70 R11: 0000000000000000 R12: 0000000000000003
    R13: 0000000000000002 R14: ffff8b574eaab740 R15: ffffffffbd8e4748
     ? __pfx_apparmor_socket_post_create+0x10/0x10
     security_socket_post_create+0x4b/0x80
     __sock_create+0x176/0x1f0
     __sys_socket+0x89/0x100
     __x64_sys_socket+0x17/0x20
     do_syscall_64+0x5d/0x90
     ? do_syscall_64+0x6c/0x90
     ? do_syscall_64+0x6c/0x90
     ? do_syscall_64+0x6c/0x90
     entry_SYSCALL_64_after_hwframe+0x72/0xdc",Linux,Linux,"ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f, ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f, ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f, ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f, ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f, ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f, ab9f2115081ab7ba63b77a759e0f3eb5d6463d7f"
504,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49955,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ACPI: battery: Fix possible crash when unregistering a battery hook

When a battery hook returns an error when adding a new battery, then
the battery hook is automatically unregistered.
However the battery hook provider cannot know that, so it will later
call battery_hook_unregister() on the already unregistered battery
hook, resulting in a crash.

Fix this by using the list head to mark already unregistered battery
hooks as already being unregistered so that they can be ignored by
battery_hook_unregister().",Linux,Linux,"fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3, fa93854f7a7ed63d054405bf3779247d5300edd3"
495,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46731,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/pm: fix the Out-of-bounds read warning

using index i - 1U may beyond element index
for mc_data[] when i = 0.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
503,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47723,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: fix out-of-bounds in dbNextAG() and diAlloc()

In dbNextAG() , there is no check for the case where bmp->db_numag is
greater or same than MAXAG due to a polluted image, which causes an
out-of-bounds. Therefore, a bounds check should be added in dbMount().

And in dbNextAG(), a check for the case where agpref is greater than
bmp->db_numag should be added, so an out-of-bounds exception should be
prevented.

Additionally, a check for the case where agno is greater or same than
MAXAG should be added in diAlloc() to prevent out-of-bounds.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
502,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43912,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: nl80211: disallow setting special AP channel widths

Setting the AP channel width is meant for use with the normal
20/40/... MHz channel width progression, and switching around
in S1G or narrow channels isn't supported. Disallow that.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
501,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43887,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net/tcp: Disable TCP-AO static key after RCU grace period

The lifetime of TCP-AO static_key is the same as the last
tcp_ao_info. On the socket destruction tcp_ao_info ceases to be
with RCU grace period, while tcp-ao static branch is currently deferred
destructed. The static key definition is
: DEFINE_STATIC_KEY_DEFERRED_FALSE(tcp_ao_needed, HZ);

which means that if RCU grace period is delayed by more than a second
and tcp_ao_needed is in the process of disablement, other CPUs may
yet see tcp_ao_info which atent dead, but soon-to-be.
And that breaks the assumption of static_key_fast_inc_not_disabled().

See the comment near the definition:
> * The caller must make sure that the static key can't get disabled while
> * in this function. It doesn't patch jump labels, only adds a user to
> * an already enabled static key.

Originally it was introduced in commit eb8c507296f6 (""jump_label:
Prevent key->enabled int overflow""), which is needed for the atomic
contexts, one of which would be the creation of a full socket from a
request socket. In that atomic context, it's known by the presence
of the key (md5/ao) that the static branch is already enabled.
So, the ref counter for that static branch is just incremented
instead of holding the proper mutex.
static_key_fast_inc_not_disabled() is just a helper for such usage
case. But it must not be used if the static branch could get disabled
in parallel as it's not protected by jump_label_mutex and as a result,
races with jump_label_update() implementation details.

Happened on netdev test-bot[1], so not a theoretical issue:

[] jump_label: Fatal kernel bug, unexpected op at tcp_inbound_hash+0x1a7/0x870 [ffffffffa8c4e9b7] (eb 50 0f 1f 44 != 66 90 0f 1f 00)) size:2 type:1
[] ------------[ cut here ]------------
[] kernel BUG at arch/x86/kernel/jump_label.c:73!
[] Oops: invalid opcode: 0000 [#1] PREEMPT SMP KASAN NOPTI
[] CPU: 3 PID: 243 Comm: kworker/3:3 Not tainted 6.10.0-virtme #1
[] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/2014
[] Workqueue: events jump_label_update_timeout
[] RIP: 0010:__jump_label_patch+0x2f6/0x350
...
[] Call Trace:
[]  <TASK>
[]  arch_jump_label_transform_queue+0x6c/0x110
[]  __jump_label_update+0xef/0x350
[]  __static_key_slow_dec_cpuslocked.part.0+0x3c/0x60
[]  jump_label_update_timeout+0x2c/0x40
[]  process_one_work+0xe3b/0x1670
[]  worker_thread+0x587/0xce0
[]  kthread+0x28a/0x350
[]  ret_from_fork+0x31/0x70
[]  ret_from_fork_asm+0x1a/0x30
[]  </TASK>
[] Modules linked in: veth
[] ---[ end trace 0000000000000000 ]---
[] RIP: 0010:__jump_label_patch+0x2f6/0x350

[1]: https://netdev-3.bots.linux.dev/vmksft-tcp-ao-dbg/results/696681/5-connect-deny-ipv6/stderr",Linux,Linux,"67fa83f7c86a86913ab9cd5a13b4bebd8d2ebb43, 67fa83f7c86a86913ab9cd5a13b4bebd8d2ebb43"
500,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46845,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tracing/timerlat: Only clear timer if a kthread exists

The timerlat tracer can use user space threads to check for osnoise and
timer latency. If the program using this is killed via a SIGTERM, the
threads are shutdown one at a time and another tracing instance can start
up resetting the threads before they are fully closed. That causes the
hrtimer assigned to the kthread to be shutdown and freed twice when the
dying thread finally closes the file descriptors, causing a use-after-free
bug.

Only cancel the hrtimer if the associated thread is still around. Also add
the interface_lock around the resetting of the tlat_var->kthread.

Note, this is just a quick fix that can be backported to stable. A real
fix is to have a better synchronization between the shutdown of old
threads and the starting of new ones.",Linux,Linux,"e88ed227f639ebcb31ed4e5b88756b47d904584b, e88ed227f639ebcb31ed4e5b88756b47d904584b, e88ed227f639ebcb31ed4e5b88756b47d904584b"
499,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49958,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ocfs2: reserve space for inline xattr before attaching reflink tree

One of our customers reported a crash and a corrupted ocfs2 filesystem. 
The crash was due to the detection of corruption.  Upon troubleshooting,
the fsck -fn output showed the below corruption

[EXTENT_LIST_FREE] Extent list in owner 33080590 claims 230 as the next free chain record,
but fsck believes the largest valid value is 227.  Clamp the next record value? n

The stat output from the debugfs.ocfs2 showed the following corruption
where the ""Next Free Rec:"" had overshot the ""Count:"" in the root metadata
block.

        Inode: 33080590   Mode: 0640   Generation: 2619713622 (0x9c25a856)
        FS Generation: 904309833 (0x35e6ac49)
        CRC32: 00000000   ECC: 0000
        Type: Regular   Attr: 0x0   Flags: Valid
        Dynamic Features: (0x16) HasXattr InlineXattr Refcounted
        Extended Attributes Block: 0  Extended Attributes Inline Size: 256
        User: 0 (root)   Group: 0 (root)   Size: 281320357888
        Links: 1   Clusters: 141738
        ctime: 0x66911b56 0x316edcb8 -- Fri Jul 12 06:02:30.829349048 2024
        atime: 0x66911d6b 0x7f7a28d -- Fri Jul 12 06:11:23.133669517 2024
        mtime: 0x66911b56 0x12ed75d7 -- Fri Jul 12 06:02:30.317552087 2024
        dtime: 0x0 -- Wed Dec 31 17:00:00 1969
        Refcount Block: 2777346
        Last Extblk: 2886943   Orphan Slot: 0
        Sub Alloc Slot: 0   Sub Alloc Bit: 14
        Tree Depth: 1   Count: 227   Next Free Rec: 230
        ## Offset        Clusters       Block#
        0  0             2310           2776351
        1  2310          2139           2777375
        2  4449          1221           2778399
        3  5670          731            2779423
        4  6401          566            2780447
        .......          ....           .......
        .......          ....           .......

The issue was in the reflink workfow while reserving space for inline
xattr.  The problematic function is ocfs2_reflink_xattr_inline().  By the
time this function is called the reflink tree is already recreated at the
destination inode from the source inode.  At this point, this function
reserves space for inline xattrs at the destination inode without even
checking if there is space at the root metadata block.  It simply reduces
the l_count from 243 to 227 thereby making space of 256 bytes for inline
xattr whereas the inode already has extents beyond this index (in this
case up to 230), thereby causing corruption.

The fix for this is to reserve space for inline metadata at the destination
inode before the reflink tree gets recreated. The customer has verified the
fix.",Linux,Linux,"ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf, ef962df057aaafd714f5c22ba3de1be459571fdf"
498,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43827,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add null check before access structs

In enable_phantom_plane, we should better check null pointer before
accessing various structs.",Linux,Linux,"09a4ec5da92c84952db117f0d576fdd8368c873a, 09a4ec5da92c84952db117f0d576fdd8368c873a"
497,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42287,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qla2xxx: Complete command early within lock

A crash was observed while performing NPIV and FW reset,

 BUG: kernel NULL pointer dereference, address: 000000000000001c
 #PF: supervisor read access in kernel mode
 #PF: error_code(0x0000) - not-present page
 PGD 0 P4D 0
 Oops: 0000 1 PREEMPT_RT SMP NOPTI
 RIP: 0010:dma_direct_unmap_sg+0x51/0x1e0
 RSP: 0018:ffffc90026f47b88 EFLAGS: 00010246
 RAX: 0000000000000000 RBX: 0000000000000021 RCX: 0000000000000002
 RDX: 0000000000000021 RSI: 0000000000000000 RDI: ffff8881041130d0
 RBP: ffff8881041130d0 R08: 0000000000000000 R09: 0000000000000034
 R10: ffffc90026f47c48 R11: 0000000000000031 R12: 0000000000000000
 R13: 0000000000000000 R14: ffff8881565e4a20 R15: 0000000000000000
 FS: 00007f4c69ed3d00(0000) GS:ffff889faac80000(0000) knlGS:0000000000000000
 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033
 CR2: 000000000000001c CR3: 0000000288a50002 CR4: 00000000007706e0
 DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
 DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
 PKRU: 55555554
 Call Trace:
 <TASK>
 ? __die_body+0x1a/0x60
 ? page_fault_oops+0x16f/0x4a0
 ? do_user_addr_fault+0x174/0x7f0
 ? exc_page_fault+0x69/0x1a0
 ? asm_exc_page_fault+0x22/0x30
 ? dma_direct_unmap_sg+0x51/0x1e0
 ? preempt_count_sub+0x96/0xe0
 qla2xxx_qpair_sp_free_dma+0x29f/0x3b0 [qla2xxx]
 qla2xxx_qpair_sp_compl+0x60/0x80 [qla2xxx]
 __qla2x00_abort_all_cmds+0xa2/0x450 [qla2xxx]

The command completion was done early while aborting the commands in driver
unload path but outside lock to avoid the WARN_ON condition of performing
dma_free_attr within the lock. However this caused race condition while
command completion via multiple paths causing system crash.

Hence complete the command early in unload path but within the lock to
avoid race condition.",Linux,Linux,"9189f20b4c5307c0998682bb522e481b4567a8b8, 231cfa78ec5badd84a1a2b09465bfad1a926aba1, d6f7377528d2abf338e504126e44439541be8f7d, cd0a1804ac5bab2545ac700c8d0fe9ae9284c567, 0367076b0817d5c75dfb83001ce7ce5c64d803a9, 0367076b0817d5c75dfb83001ce7ce5c64d803a9, 0367076b0817d5c75dfb83001ce7ce5c64d803a9"
496,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46859,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

platform/x86: panasonic-laptop: Fix SINF array out of bounds accesses

The panasonic laptop code in various places uses the SINF array with index
values of 0 - SINF_CUR_BRIGHT(0x0d) without checking that the SINF array
is big enough.

Not all panasonic laptops have this many SINF array entries, for example
the Toughbook CF-18 model only has 10 SINF array entries. So it only
supports the AC+DC brightness entries and mute.

Check that the SINF array has a minimum size which covers all AC+DC
brightness entries and refuse to load if the SINF array is smaller.

For higher SINF indexes hide the sysfs attributes when the SINF array
does not contain an entry for that attribute, avoiding show()/store()
accessing the array out of bounds and add bounds checking to the probe()
and resume() code accessing these.",Linux,Linux,"e424fb8cc4e6634c10f8159b1ff5618cf7bab9c6, e424fb8cc4e6634c10f8159b1ff5618cf7bab9c6, e424fb8cc4e6634c10f8159b1ff5618cf7bab9c6, e424fb8cc4e6634c10f8159b1ff5618cf7bab9c6, e424fb8cc4e6634c10f8159b1ff5618cf7bab9c6"
559,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-39472,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xfs: fix log recovery buffer allocation for the legacy h_size fixup

Commit a70f9fe52daa (""xfs: detect and handle invalid iclog size set by
mkfs"") added a fixup for incorrect h_size values used for the initial
umount record in old xfsprogs versions.  Later commit 0c771b99d6c9
(""xfs: clean up calculation of LR header blocks"") cleaned up the log
reover buffer calculation, but stoped using the fixed up h_size value
to size the log recovery buffer, which can lead to an out of bounds
access when the incorrect h_size does not come from the old mkfs
tool, but a fuzzer.

Fix this by open coding xlog_logrec_hblks and taking the fixed h_size
into account for this calculation.",Linux,Linux,"0c771b99d6c9a0552fea5cc43669b726dad8f659, 0c771b99d6c9a0552fea5cc43669b726dad8f659, 0c771b99d6c9a0552fea5cc43669b726dad8f659, 0c771b99d6c9a0552fea5cc43669b726dad8f659"
537,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46824,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

iommufd: Require drivers to supply the cache_invalidate_user ops

If drivers don't do this then iommufd will oops invalidation ioctls with
something like:

  Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
  Mem abort info:
    ESR = 0x0000000086000004
    EC = 0x21: IABT (current EL), IL = 32 bits
    SET = 0, FnV = 0
    EA = 0, S1PTW = 0
    FSC = 0x04: level 0 translation fault
  user pgtable: 4k pages, 48-bit VAs, pgdp=0000000101059000
  [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
  Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP
  Modules linked in:
  CPU: 2 PID: 371 Comm: qemu-system-aar Not tainted 6.8.0-rc7-gde77230ac23a #9
  Hardware name: linux,dummy-virt (DT)
  pstate: 81400809 (Nzcv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=-c)
  pc : 0x0
  lr : iommufd_hwpt_invalidate+0xa4/0x204
  sp : ffff800080f3bcc0
  x29: ffff800080f3bcf0 x28: ffff0000c369b300 x27: 0000000000000000
  x26: 0000000000000000 x25: 0000000000000000 x24: 0000000000000000
  x23: 0000000000000000 x22: 00000000c1e334a0 x21: ffff0000c1e334a0
  x20: ffff800080f3bd38 x19: ffff800080f3bd58 x18: 0000000000000000
  x17: 0000000000000000 x16: 0000000000000000 x15: 0000ffff8240d6d8
  x14: 0000000000000000 x13: 0000000000000000 x12: 0000000000000000
  x11: 0000000000000000 x10: 0000000000000000 x9 : 0000000000000000
  x8 : 0000001000000002 x7 : 0000fffeac1ec950 x6 : 0000000000000000
  x5 : ffff800080f3bd78 x4 : 0000000000000003 x3 : 0000000000000002
  x2 : 0000000000000000 x1 : ffff800080f3bcc8 x0 : ffff0000c6034d80
  Call trace:
   0x0
   iommufd_fops_ioctl+0x154/0x274
   __arm64_sys_ioctl+0xac/0xf0
   invoke_syscall+0x48/0x110
   el0_svc_common.constprop.0+0x40/0xe0
   do_el0_svc+0x1c/0x28
   el0_svc+0x34/0xb4
   el0t_64_sync_handler+0x120/0x12c
   el0t_64_sync+0x190/0x194

All existing drivers implement this op for nesting, this is mostly a
bisection aid.",Linux,Linux,"8c6eabae3807e048b9f17733af5e20500fbf858c, 8c6eabae3807e048b9f17733af5e20500fbf858c"
561,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47739,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

padata: use integer wrap around to prevent deadlock on seq_nr overflow

When submitting more than 2^32 padata objects to padata_do_serial, the
current sorting implementation incorrectly sorts padata objects with
overflowed seq_nr, causing them to be placed before existing objects in
the reorder list. This leads to a deadlock in the serialization process
as padata_find_next cannot match padata->seq_nr and pd->processed
because the padata instance with overflowed seq_nr will be selected
next.

To fix this, we use an unsigned integer wrap around to correctly sort
padata objects in scenarios with integer overflow.",Linux,Linux,"bfde23ce200e6d33291d29b9b8b60cc2f30f0805, bfde23ce200e6d33291d29b9b8b60cc2f30f0805, bfde23ce200e6d33291d29b9b8b60cc2f30f0805, bfde23ce200e6d33291d29b9b8b60cc2f30f0805, bfde23ce200e6d33291d29b9b8b60cc2f30f0805, bfde23ce200e6d33291d29b9b8b60cc2f30f0805, bfde23ce200e6d33291d29b9b8b60cc2f30f0805"
604,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47669,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix state management in error path of log writing function

After commit a694291a6211 (""nilfs2: separate wait function from
nilfs_segctor_write"") was applied, the log writing function
nilfs_segctor_do_construct() was able to issue I/O requests continuously
even if user data blocks were split into multiple logs across segments,
but two potential flaws were introduced in its error handling.

First, if nilfs_segctor_begin_construction() fails while creating the
second or subsequent logs, the log writing function returns without
calling nilfs_segctor_abort_construction(), so the writeback flag set on
pages/folios will remain uncleared.  This causes page cache operations to
hang waiting for the writeback flag.  For example,
truncate_inode_pages_final(), which is called via nilfs_evict_inode() when
an inode is evicted from memory, will hang.

Second, the NILFS_I_COLLECTED flag set on normal inodes remain uncleared. 
As a result, if the next log write involves checkpoint creation, that's
fine, but if a partial log write is performed that does not, inodes with
NILFS_I_COLLECTED set are erroneously removed from the ""sc_dirty_files""
list, and their data and b-tree blocks may not be written to the device,
corrupting the block mapping.

Fix these issues by uniformly calling nilfs_segctor_abort_construction()
on failure of each step in the loop in nilfs_segctor_do_construct(),
having it clean up logs and segment usages according to progress, and
correcting the conditions for calling nilfs_redirty_inodes() to ensure
that the NILFS_I_COLLECTED flag is cleared.",Linux,Linux,"a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e, a694291a6211537189c6080f77f63cdabfc9b63e"
624,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44953,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: ufs: core: Fix deadlock during RTC update

There is a deadlock when runtime suspend waits for the flush of RTC work,
and the RTC work calls ufshcd_rpm_get_sync() to wait for runtime resume.

Here is deadlock backtrace:

kworker/0:1     D 4892.876354 10 10971 4859 0x4208060 0x8 10 0 120 670730152367
ptr            f0ffff80c2e40000 0 1 0x00000001 0x000000ff 0x000000ff 0x000000ff
<ffffffee5e71ddb0> __switch_to+0x1a8/0x2d4
<ffffffee5e71e604> __schedule+0x684/0xa98
<ffffffee5e71ea60> schedule+0x48/0xc8
<ffffffee5e725f78> schedule_timeout+0x48/0x170
<ffffffee5e71fb74> do_wait_for_common+0x108/0x1b0
<ffffffee5e71efe0> wait_for_completion+0x44/0x60
<ffffffee5d6de968> __flush_work+0x39c/0x424
<ffffffee5d6decc0> __cancel_work_sync+0xd8/0x208
<ffffffee5d6dee2c> cancel_delayed_work_sync+0x14/0x28
<ffffffee5e2551b8> __ufshcd_wl_suspend+0x19c/0x480
<ffffffee5e255fb8> ufshcd_wl_runtime_suspend+0x3c/0x1d4
<ffffffee5dffd80c> scsi_runtime_suspend+0x78/0xc8
<ffffffee5df93580> __rpm_callback+0x94/0x3e0
<ffffffee5df90b0c> rpm_suspend+0x2d4/0x65c
<ffffffee5df91448> __pm_runtime_suspend+0x80/0x114
<ffffffee5dffd95c> scsi_runtime_idle+0x38/0x6c
<ffffffee5df912f4> rpm_idle+0x264/0x338
<ffffffee5df90f14> __pm_runtime_idle+0x80/0x110
<ffffffee5e24ce44> ufshcd_rtc_work+0x128/0x1e4
<ffffffee5d6e3a40> process_one_work+0x26c/0x650
<ffffffee5d6e65c8> worker_thread+0x260/0x3d8
<ffffffee5d6edec8> kthread+0x110/0x134
<ffffffee5d616b18> ret_from_fork+0x10/0x20

Skip updating RTC if RPM state is not RPM_ACTIVE.",Linux,Linux,"6bf999e0eb41850d5c857102535d5c53b2ede224, 6bf999e0eb41850d5c857102535d5c53b2ede224"
623,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44942,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: fix to do sanity check on F2FS_INLINE_DATA flag in inode during GC

syzbot reports a f2fs bug as below:

------------[ cut here ]------------
kernel BUG at fs/f2fs/inline.c:258!
CPU: 1 PID: 34 Comm: kworker/u8:2 Not tainted 6.9.0-rc6-syzkaller-00012-g9e4bc4bcae01 #0
RIP: 0010:f2fs_write_inline_data+0x781/0x790 fs/f2fs/inline.c:258
Call Trace:
 f2fs_write_single_data_page+0xb65/0x1d60 fs/f2fs/data.c:2834
 f2fs_write_cache_pages fs/f2fs/data.c:3133 [inline]
 __f2fs_write_data_pages fs/f2fs/data.c:3288 [inline]
 f2fs_write_data_pages+0x1efe/0x3a90 fs/f2fs/data.c:3315
 do_writepages+0x35b/0x870 mm/page-writeback.c:2612
 __writeback_single_inode+0x165/0x10b0 fs/fs-writeback.c:1650
 writeback_sb_inodes+0x905/0x1260 fs/fs-writeback.c:1941
 wb_writeback+0x457/0xce0 fs/fs-writeback.c:2117
 wb_do_writeback fs/fs-writeback.c:2264 [inline]
 wb_workfn+0x410/0x1090 fs/fs-writeback.c:2304
 process_one_work kernel/workqueue.c:3254 [inline]
 process_scheduled_works+0xa12/0x17c0 kernel/workqueue.c:3335
 worker_thread+0x86d/0xd70 kernel/workqueue.c:3416
 kthread+0x2f2/0x390 kernel/kthread.c:388
 ret_from_fork+0x4d/0x80 arch/x86/kernel/process.c:147
 ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:244

The root cause is: inline_data inode can be fuzzed, so that there may
be valid blkaddr in its direct node, once f2fs triggers background GC
to migrate the block, it will hit f2fs_bug_on() during dirty page
writeback.

Let's add sanity check on F2FS_INLINE_DATA flag in inode during GC,
so that, it can forbid migrating inline_data inode's data block for
fixing.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
622,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43890,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tracing: Fix overflow in get_free_elt()

""tracing_map->next_elt"" in get_free_elt() is at risk of overflowing.

Once it overflows, new elements can still be inserted into the tracing_map
even though the maximum number of elements (`max_elts`) has been reached.
Continuing to insert elements after the overflow could result in the
tracing_map containing ""tracing_map->max_size"" elements, leaving no empty
entries.
If any attempt is made to insert an element into a full tracing_map using
`__tracing_map_insert()`, it will cause an infinite loop with preemption
disabled, leading to a CPU hang problem.

Fix this by preventing any further increments to ""tracing_map->next_elt""
once it reaches ""tracing_map->max_elt"".",Linux,Linux,"08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e, 08d43a5fa063e03c860f2f391a30c388bcbc948e"
621,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50033,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

slip: make slhc_remember() more robust against malicious packets

syzbot found that slhc_remember() was missing checks against
malicious packets [1].

slhc_remember() only checked the size of the packet was at least 20,
which is not good enough.

We need to make sure the packet includes the IPv4 and TCP header
that are supposed to be carried.

Add iph and th pointers to make the code more readable.

[1]

BUG: KMSAN: uninit-value in slhc_remember+0x2e8/0x7b0 drivers/net/slip/slhc.c:666
  slhc_remember+0x2e8/0x7b0 drivers/net/slip/slhc.c:666
  ppp_receive_nonmp_frame+0xe45/0x35e0 drivers/net/ppp/ppp_generic.c:2455
  ppp_receive_frame drivers/net/ppp/ppp_generic.c:2372 [inline]
  ppp_do_recv+0x65f/0x40d0 drivers/net/ppp/ppp_generic.c:2212
  ppp_input+0x7dc/0xe60 drivers/net/ppp/ppp_generic.c:2327
  pppoe_rcv_core+0x1d3/0x720 drivers/net/ppp/pppoe.c:379
  sk_backlog_rcv+0x13b/0x420 include/net/sock.h:1113
  __release_sock+0x1da/0x330 net/core/sock.c:3072
  release_sock+0x6b/0x250 net/core/sock.c:3626
  pppoe_sendmsg+0x2b8/0xb90 drivers/net/ppp/pppoe.c:903
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
  slab_post_alloc_hook mm/slub.c:4091 [inline]
  slab_alloc_node mm/slub.c:4134 [inline]
  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4186
  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:587
  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:678
  alloc_skb include/linux/skbuff.h:1322 [inline]
  sock_wmalloc+0xfe/0x1a0 net/core/sock.c:2732
  pppoe_sendmsg+0x3a7/0xb90 drivers/net/ppp/pppoe.c:867
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

CPU: 0 UID: 0 PID: 5460 Comm: syz.2.33 Not tainted 6.12.0-rc2-syzkaller-00006-g87d6aab2389e #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024",Linux,Linux,"b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff, b5451d783ade99308dfccdf5ca284ed07affa4ff"
620,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43908,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix the null pointer dereference to ras_manager

Check ras_manager before using it",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
619,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46695,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

selinux,smack: don't bypass permissions check in inode_setsecctx hook

Marek Gresko reports that the root user on an NFS client is able to
change the security labels on files on an NFS filesystem that is
exported with root squashing enabled.

The end of the kerneldoc comment for __vfs_setxattr_noperm() states:

 *  This function requires the caller to lock the inode's i_mutex before it
 *  is executed. It also assumes that the caller will make the appropriate
 *  permission checks.

nfsd_setattr() does do permissions checking via fh_verify() and
nfsd_permission(), but those don't do all the same permissions checks
that are done by security_inode_setxattr() and its related LSM hooks do.

Since nfsd_setattr() is the only consumer of security_inode_setsecctx(),
simplest solution appears to be to replace the call to
__vfs_setxattr_noperm() with a call to __vfs_setxattr_locked().  This
fixes the above issue and has the added benefit of causing nfsd to
recall conflicting delegations on a file when a client tries to change
its security label.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
618,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44954,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ALSA: line6: Fix racy access to midibuf

There can be concurrent accesses to line6 midibuf from both the URB
completion callback and the rawmidi API access.  This could be a cause
of KMSAN warning triggered by syzkaller below (so put as reported-by
here).

This patch protects the midibuf call of the former code path with a
spinlock for avoiding the possible races.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
617,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46867,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe/client: fix deadlock in show_meminfo()

There is a real deadlock as well as sleeping in atomic() bug in here, if
the bo put happens to be the last ref, since bo destruction wants to
grab the same spinlock and sleeping locks.  Fix that by dropping the ref
using xe_bo_put_deferred(), and moving the final commit outside of the
lock. Dropping the lock around the put is tricky since the bo can go
out of scope and delete itself from the list, making it difficult to
navigate to the next list entry.

(cherry picked from commit 0083b8e6f11d7662283a267d4ce7c966812ffd8a)",Linux,Linux,"0845233388f8a26d00acf9bf230cfd4f36aa4c30, 0845233388f8a26d00acf9bf230cfd4f36aa4c30"
616,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26607,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/bridge: sii902x: Fix probing race issue

A null pointer dereference crash has been observed rarely on TI
platforms using sii9022 bridge:

[   53.271356]  sii902x_get_edid+0x34/0x70 [sii902x]
[   53.276066]  sii902x_bridge_get_edid+0x14/0x20 [sii902x]
[   53.281381]  drm_bridge_get_edid+0x20/0x34 [drm]
[   53.286305]  drm_bridge_connector_get_modes+0x8c/0xcc [drm_kms_helper]
[   53.292955]  drm_helper_probe_single_connector_modes+0x190/0x538 [drm_kms_helper]
[   53.300510]  drm_client_modeset_probe+0x1f0/0xbd4 [drm]
[   53.305958]  __drm_fb_helper_initial_config_and_unlock+0x50/0x510 [drm_kms_helper]
[   53.313611]  drm_fb_helper_initial_config+0x48/0x58 [drm_kms_helper]
[   53.320039]  drm_fbdev_dma_client_hotplug+0x84/0xd4 [drm_dma_helper]
[   53.326401]  drm_client_register+0x5c/0xa0 [drm]
[   53.331216]  drm_fbdev_dma_setup+0xc8/0x13c [drm_dma_helper]
[   53.336881]  tidss_probe+0x128/0x264 [tidss]
[   53.341174]  platform_probe+0x68/0xc4
[   53.344841]  really_probe+0x188/0x3c4
[   53.348501]  __driver_probe_device+0x7c/0x16c
[   53.352854]  driver_probe_device+0x3c/0x10c
[   53.357033]  __device_attach_driver+0xbc/0x158
[   53.361472]  bus_for_each_drv+0x88/0xe8
[   53.365303]  __device_attach+0xa0/0x1b4
[   53.369135]  device_initial_probe+0x14/0x20
[   53.373314]  bus_probe_device+0xb0/0xb4
[   53.377145]  deferred_probe_work_func+0xcc/0x124
[   53.381757]  process_one_work+0x1f0/0x518
[   53.385770]  worker_thread+0x1e8/0x3dc
[   53.389519]  kthread+0x11c/0x120
[   53.392750]  ret_from_fork+0x10/0x20

The issue here is as follows:

- tidss probes, but is deferred as sii902x is still missing.
- sii902x starts probing and enters sii902x_init().
- sii902x calls drm_bridge_add(). Now the sii902x bridge is ready from
  DRM's perspective.
- sii902x calls sii902x_audio_codec_init() and
  platform_device_register_data()
- The registration of the audio platform device causes probing of the
  deferred devices.
- tidss probes, which eventually causes sii902x_bridge_get_edid() to be
  called.
- sii902x_bridge_get_edid() tries to use the i2c to read the edid.
  However, the sii902x driver has not set up the i2c part yet, leading
  to the crash.

Fix this by moving the drm_bridge_add() to the end of the
sii902x_init(), which is also at the very end of sii902x_probe().",Linux,Linux,"21d808405fe49028036932dd969920f4fee4f481, 21d808405fe49028036932dd969920f4fee4f481, 21d808405fe49028036932dd969920f4fee4f481, 21d808405fe49028036932dd969920f4fee4f481"
615,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42290,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

irqchip/imx-irqsteer: Handle runtime power management correctly

The power domain is automatically activated from clk_prepare(). However, on
certain platforms like i.MX8QM and i.MX8QXP, the power-on handling invokes
sleeping functions, which triggers the 'scheduling while atomic' bug in the
context switch path during device probing:

 BUG: scheduling while atomic: kworker/u13:1/48/0x00000002
 Call trace:
  __schedule_bug+0x54/0x6c
  __schedule+0x7f0/0xa94
  schedule+0x5c/0xc4
  schedule_preempt_disabled+0x24/0x40
  __mutex_lock.constprop.0+0x2c0/0x540
  __mutex_lock_slowpath+0x14/0x20
  mutex_lock+0x48/0x54
  clk_prepare_lock+0x44/0xa0
  clk_prepare+0x20/0x44
  imx_irqsteer_resume+0x28/0xe0
  pm_generic_runtime_resume+0x2c/0x44
  __genpd_runtime_resume+0x30/0x80
  genpd_runtime_resume+0xc8/0x2c0
  __rpm_callback+0x48/0x1d8
  rpm_callback+0x6c/0x78
  rpm_resume+0x490/0x6b4
  __pm_runtime_resume+0x50/0x94
  irq_chip_pm_get+0x2c/0xa0
  __irq_do_set_handler+0x178/0x24c
  irq_set_chained_handler_and_data+0x60/0xa4
  mxc_gpio_probe+0x160/0x4b0

Cure this by implementing the irq_bus_lock/sync_unlock() interrupt chip
callbacks and handle power management in them as they are invoked from
non-atomic context.

[ tglx: Rewrote change log, added Fixes tag ]",Linux,Linux,"0136afa08967f6e160b9b4e85a7a70e4180a8333, 0136afa08967f6e160b9b4e85a7a70e4180a8333, 0136afa08967f6e160b9b4e85a7a70e4180a8333, 0136afa08967f6e160b9b4e85a7a70e4180a8333, 0136afa08967f6e160b9b4e85a7a70e4180a8333, 0136afa08967f6e160b9b4e85a7a70e4180a8333, 0136afa08967f6e160b9b4e85a7a70e4180a8333"
614,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-40912,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mac80211: Fix deadlock in ieee80211_sta_ps_deliver_wakeup()

The ieee80211_sta_ps_deliver_wakeup() function takes sta->ps_lock to
synchronizes with ieee80211_tx_h_unicast_ps_buf() which is called from
softirq context. However using only spin_lock() to get sta->ps_lock in
ieee80211_sta_ps_deliver_wakeup() does not prevent softirq to execute
on this same CPU, to run ieee80211_tx_h_unicast_ps_buf() and try to
take this same lock ending in deadlock. Below is an example of rcu stall
that arises in such situation.

 rcu: INFO: rcu_sched self-detected stall on CPU
 rcu:    2-....: (42413413 ticks this GP) idle=b154/1/0x4000000000000000 softirq=1763/1765 fqs=21206996
 rcu:    (t=42586894 jiffies g=2057 q=362405 ncpus=4)
 CPU: 2 PID: 719 Comm: wpa_supplicant Tainted: G        W          6.4.0-02158-g1b062f552873 #742
 Hardware name: RPT (r1) (DT)
 pstate: 00000005 (nzcv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
 pc : queued_spin_lock_slowpath+0x58/0x2d0
 lr : invoke_tx_handlers_early+0x5b4/0x5c0
 sp : ffff00001ef64660
 x29: ffff00001ef64660 x28: ffff000009bc1070 x27: ffff000009bc0ad8
 x26: ffff000009bc0900 x25: ffff00001ef647a8 x24: 0000000000000000
 x23: ffff000009bc0900 x22: ffff000009bc0900 x21: ffff00000ac0e000
 x20: ffff00000a279e00 x19: ffff00001ef646e8 x18: 0000000000000000
 x17: ffff800016468000 x16: ffff00001ef608c0 x15: 0010533c93f64f80
 x14: 0010395c9faa3946 x13: 0000000000000000 x12: 00000000fa83b2da
 x11: 000000012edeceea x10: ffff0000010fbe00 x9 : 0000000000895440
 x8 : 000000000010533c x7 : ffff00000ad8b740 x6 : ffff00000c350880
 x5 : 0000000000000007 x4 : 0000000000000001 x3 : 0000000000000000
 x2 : 0000000000000000 x1 : 0000000000000001 x0 : ffff00000ac0e0e8
 Call trace:
  queued_spin_lock_slowpath+0x58/0x2d0
  ieee80211_tx+0x80/0x12c
  ieee80211_tx_pending+0x110/0x278
  tasklet_action_common.constprop.0+0x10c/0x144
  tasklet_action+0x20/0x28
  _stext+0x11c/0x284
  ____do_softirq+0xc/0x14
  call_on_irq_stack+0x24/0x34
  do_softirq_own_stack+0x18/0x20
  do_softirq+0x74/0x7c
  __local_bh_enable_ip+0xa0/0xa4
  _ieee80211_wake_txqs+0x3b0/0x4b8
  __ieee80211_wake_queue+0x12c/0x168
  ieee80211_add_pending_skbs+0xec/0x138
  ieee80211_sta_ps_deliver_wakeup+0x2a4/0x480
  ieee80211_mps_sta_status_update.part.0+0xd8/0x11c
  ieee80211_mps_sta_status_update+0x18/0x24
  sta_apply_parameters+0x3bc/0x4c0
  ieee80211_change_station+0x1b8/0x2dc
  nl80211_set_station+0x444/0x49c
  genl_family_rcv_msg_doit.isra.0+0xa4/0xfc
  genl_rcv_msg+0x1b0/0x244
  netlink_rcv_skb+0x38/0x10c
  genl_rcv+0x34/0x48
  netlink_unicast+0x254/0x2bc
  netlink_sendmsg+0x190/0x3b4
  ____sys_sendmsg+0x1e8/0x218
  ___sys_sendmsg+0x68/0x8c
  __sys_sendmsg+0x44/0x84
  __arm64_sys_sendmsg+0x20/0x28
  do_el0_svc+0x6c/0xe8
  el0_svc+0x14/0x48
  el0t_64_sync_handler+0xb0/0xb4
  el0t_64_sync+0x14c/0x150

Using spin_lock_bh()/spin_unlock_bh() instead prevents softirq to raise
on the same CPU that is holding the lock.",Linux,Linux,"1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba, 1d147bfa64293b2723c4fec50922168658e613ba"
613,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46829,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

rtmutex: Drop rt_mutex::wait_lock before scheduling

rt_mutex_handle_deadlock() is called with rt_mutex::wait_lock held.  In the
good case it returns with the lock held and in the deadlock case it emits a
warning and goes into an endless scheduling loop with the lock held, which
triggers the 'scheduling in atomic' warning.

Unlock rt_mutex::wait_lock in the dead lock case before issuing the warning
and dropping into the schedule for ever loop.

[ tglx: Moved unlock before the WARN(), removed the pointless comment,
  	massaged changelog, added Fixes tag ]",Linux,Linux,"3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c, 3d5c9340d1949733eb37616abd15db36aef9a57c"
612,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42318,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

landlock: Don't lose track of restrictions on cred_transfer

When a process' cred struct is replaced, this _almost_ always invokes
the cred_prepare LSM hook; but in one special case (when
KEYCTL_SESSION_TO_PARENT updates the parent's credentials), the
cred_transfer LSM hook is used instead.  Landlock only implements the
cred_prepare hook, not cred_transfer, so KEYCTL_SESSION_TO_PARENT causes
all information on Landlock restrictions to be lost.

This basically means that a process with the ability to use the fork()
and keyctl() syscalls can get rid of all Landlock restrictions on
itself.

Fix it by adding a cred_transfer hook that does the same thing as the
existing cred_prepare hook. (Implemented by having hook_cred_prepare()
call hook_cred_transfer() so that the two functions are less likely to
accidentally diverge in the future.)",Linux,Linux,"385975dca53eb41031d0cbd1de318eb1bc5d6bb9, 385975dca53eb41031d0cbd1de318eb1bc5d6bb9, 385975dca53eb41031d0cbd1de318eb1bc5d6bb9, 385975dca53eb41031d0cbd1de318eb1bc5d6bb9, 385975dca53eb41031d0cbd1de318eb1bc5d6bb9"
611,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46725,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Fix out-of-bounds write warning

Check the ring type value to fix the out-of-bounds
write warning",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
610,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43840,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bpf, arm64: Fix trampoline for BPF_TRAMP_F_CALL_ORIG

When BPF_TRAMP_F_CALL_ORIG is set, the trampoline calls
__bpf_tramp_enter() and __bpf_tramp_exit() functions, passing them
the struct bpf_tramp_image *im pointer as an argument in R0.

The trampoline generation code uses emit_addr_mov_i64() to emit
instructions for moving the bpf_tramp_image address into R0, but
emit_addr_mov_i64() assumes the address to be in the vmalloc() space
and uses only 48 bits. Because bpf_tramp_image is allocated using
kzalloc(), its address can use more than 48-bits, in this case the
trampoline will pass an invalid address to __bpf_tramp_enter/exit()
causing a kernel crash.

Fix this by using emit_a64_mov_i64() in place of emit_addr_mov_i64()
as it can work with addresses that are greater than 48-bits.",Linux,Linux,"efc9909fdce00a827a37609628223cd45bf95d0b, efc9909fdce00a827a37609628223cd45bf95d0b"
609,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45006,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

xhci: Fix Panther point NULL pointer deref at full-speed re-enumeration

re-enumerating full-speed devices after a failed address device command
can trigger a NULL pointer dereference.

Full-speed devices may need to reconfigure the endpoint 0 Max Packet Size
value during enumeration. Usb core calls usb_ep0_reinit() in this case,
which ends up calling xhci_configure_endpoint().

On Panther point xHC the xhci_configure_endpoint() function will
additionally check and reserve bandwidth in software. Other hosts do
this in hardware

If xHC address device command fails then a new xhci_virt_device structure
is allocated as part of re-enabling the slot, but the bandwidth table
pointers are not set up properly here.
This triggers the NULL pointer dereference the next time usb_ep0_reinit()
is called and xhci_configure_endpoint() tries to check and reserve
bandwidth

[46710.713538] usb 3-1: new full-speed USB device number 5 using xhci_hcd
[46710.713699] usb 3-1: Device not responding to setup address.
[46710.917684] usb 3-1: Device not responding to setup address.
[46711.125536] usb 3-1: device not accepting address 5, error -71
[46711.125594] BUG: kernel NULL pointer dereference, address: 0000000000000008
[46711.125600] #PF: supervisor read access in kernel mode
[46711.125603] #PF: error_code(0x0000) - not-present page
[46711.125606] PGD 0 P4D 0
[46711.125610] Oops: Oops: 0000 [#1] PREEMPT SMP PTI
[46711.125615] CPU: 1 PID: 25760 Comm: kworker/1:2 Not tainted 6.10.3_2 #1
[46711.125620] Hardware name: Gigabyte Technology Co., Ltd.
[46711.125623] Workqueue: usb_hub_wq hub_event [usbcore]
[46711.125668] RIP: 0010:xhci_reserve_bandwidth (drivers/usb/host/xhci.c

Fix this by making sure bandwidth table pointers are set up correctly
after a failed address device command, and additionally by avoiding
checking for bandwidth in cases like this where no actual endpoints are
added or removed, i.e. only context for default control endpoint 0 is
evaluated.",Linux,Linux,"651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312, 651aaf36a7d7b36a58980e70133f9437d4f6d312"
608,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46709,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/vmwgfx: Fix prime with external buffers

Make sure that for external buffers mapping goes through the dma_buf
interface instead of trying to access pages directly.

External buffers might not provide direct access to readable/writable
pages so to make sure the bo's created from external dma_bufs can be
read dma_buf interface has to be used.

Fixes crashes in IGT's kms_prime with vgem. Regular desktop usage won't
trigger this due to the fact that virtual machines will not have
multiple GPUs but it enables better test coverage in IGT.",Linux,Linux,"65674218b43f2dd54587ab2b06560e17c30d8b41, b32233accefff1338806f064fb9b62cf5bc0609f, b32233accefff1338806f064fb9b62cf5bc0609f"
607,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-35847,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

irqchip/gic-v3-its: Prevent double free on error

The error handling path in its_vpe_irq_domain_alloc() causes a double free
when its_vpe_init() fails after successfully allocating at least one
interrupt. This happens because its_vpe_irq_domain_free() frees the
interrupts along with the area bitmap and the vprop_page and
its_vpe_irq_domain_alloc() subsequently frees the area bitmap and the
vprop_page again.

Fix this by unconditionally invoking its_vpe_irq_domain_free() which
handles all cases correctly and by removing the bitmap/vprop_page freeing
from its_vpe_irq_domain_alloc().

[ tglx: Massaged change log ]",Linux,Linux,"7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e, 7d75bbb4bc1ad90386776459d37e4ddfe605671e"
606,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50008,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: mwifiex: Fix memcpy() field-spanning write warning in mwifiex_cmd_802_11_scan_ext()

Replace one-element array with a flexible-array member in
`struct host_cmd_ds_802_11_scan_ext`.

With this, fix the following warning:

elo 16 17:51:58 surfacebook kernel: ------------[ cut here ]------------
elo 16 17:51:58 surfacebook kernel: memcpy: detected field-spanning write (size 243) of single field ""ext_scan->tlv_buffer"" at drivers/net/wireless/marvell/mwifiex/scan.c:2239 (size 1)
elo 16 17:51:58 surfacebook kernel: WARNING: CPU: 0 PID: 498 at drivers/net/wireless/marvell/mwifiex/scan.c:2239 mwifiex_cmd_802_11_scan_ext+0x83/0x90 [mwifiex]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
625,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46778,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check UnboundedRequestEnabled's value

CalculateSwathAndDETConfiguration_params_st's UnboundedRequestEnabled
is a pointer (i.e. dml_bool_t *UnboundedRequestEnabled), and thus
if (p->UnboundedRequestEnabled) checks its address, not bool value.

This fixes 1 REVERSE_INULL issue reported by Coverity.",Linux,Linux,"7966f319c66d9468623c6a6a017ecbc0dd79be75, 7966f319c66d9468623c6a6a017ecbc0dd79be75"
562,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46749,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: btnxpuart: Fix Null pointer dereference in btnxpuart_flush()

This adds a check before freeing the rx->skb in flush and close
functions to handle the kernel crash seen while removing driver after FW
download fails or before FW download completes.

dmesg log:
[   54.634586] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000080
[   54.643398] Mem abort info:
[   54.646204]   ESR = 0x0000000096000004
[   54.649964]   EC = 0x25: DABT (current EL), IL = 32 bits
[   54.655286]   SET = 0, FnV = 0
[   54.658348]   EA = 0, S1PTW = 0
[   54.661498]   FSC = 0x04: level 0 translation fault
[   54.666391] Data abort info:
[   54.669273]   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000
[   54.674768]   CM = 0, WnR = 0, TnD = 0, TagAccess = 0
[   54.674771]   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0
[   54.674775] user pgtable: 4k pages, 48-bit VAs, pgdp=0000000048860000
[   54.674780] [0000000000000080] pgd=0000000000000000, p4d=0000000000000000
[   54.703880] Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP
[   54.710152] Modules linked in: btnxpuart(-) overlay fsl_jr_uio caam_jr caamkeyblob_desc caamhash_desc caamalg_desc crypto_engine authenc libdes crct10dif_ce polyval_ce polyval_generic snd_soc_imx_spdif snd_soc_imx_card snd_soc_ak5558 snd_soc_ak4458 caam secvio error snd_soc_fsl_micfil snd_soc_fsl_spdif snd_soc_fsl_sai snd_soc_fsl_utils imx_pcm_dma gpio_ir_recv rc_core sch_fq_codel fuse
[   54.744357] CPU: 3 PID: 72 Comm: kworker/u9:0 Not tainted 6.6.3-otbr-g128004619037 #2
[   54.744364] Hardware name: FSL i.MX8MM EVK board (DT)
[   54.744368] Workqueue: hci0 hci_power_on
[   54.757244] pstate: 60000005 (nZCv daif -PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[   54.757249] pc : kfree_skb_reason+0x18/0xb0
[   54.772299] lr : btnxpuart_flush+0x40/0x58 [btnxpuart]
[   54.782921] sp : ffff8000805ebca0
[   54.782923] x29: ffff8000805ebca0 x28: ffffa5c6cf1869c0 x27: ffffa5c6cf186000
[   54.782931] x26: ffff377b84852400 x25: ffff377b848523c0 x24: ffff377b845e7230
[   54.782938] x23: ffffa5c6ce8dbe08 x22: ffffa5c6ceb65410 x21: 00000000ffffff92
[   54.782945] x20: ffffa5c6ce8dbe98 x19: ffffffffffffffac x18: ffffffffffffffff
[   54.807651] x17: 0000000000000000 x16: ffffa5c6ce2824ec x15: ffff8001005eb857
[   54.821917] x14: 0000000000000000 x13: ffffa5c6cf1a02e0 x12: 0000000000000642
[   54.821924] x11: 0000000000000040 x10: ffffa5c6cf19d690 x9 : ffffa5c6cf19d688
[   54.821931] x8 : ffff377b86000028 x7 : 0000000000000000 x6 : 0000000000000000
[   54.821938] x5 : ffff377b86000000 x4 : 0000000000000000 x3 : 0000000000000000
[   54.843331] x2 : 0000000000000000 x1 : 0000000000000002 x0 : ffffffffffffffac
[   54.857599] Call trace:
[   54.857601]  kfree_skb_reason+0x18/0xb0
[   54.863878]  btnxpuart_flush+0x40/0x58 [btnxpuart]
[   54.863888]  hci_dev_open_sync+0x3a8/0xa04
[   54.872773]  hci_power_on+0x54/0x2e4
[   54.881832]  process_one_work+0x138/0x260
[   54.881842]  worker_thread+0x32c/0x438
[   54.881847]  kthread+0x118/0x11c
[   54.881853]  ret_from_fork+0x10/0x20
[   54.896406] Code: a9be7bfd 910003fd f9000bf3 aa0003f3 (b940d400)
[   54.896410] ---[ end trace 0000000000000000 ]---",Linux,Linux,"ab3a769b4dccec2cf60f0a0700b140991bf9afc8, ab3a769b4dccec2cf60f0a0700b140991bf9afc8, ab3a769b4dccec2cf60f0a0700b140991bf9afc8"
627,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41090,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tap: add missing verification for short frame

The cited commit missed to check against the validity of the frame length
in the tap_get_user_xdp() path, which could cause a corrupted skb to be
sent downstack. Even before the skb is transmitted, the
tap_get_user_xdp()-->skb_set_network_header() may assume the size is more
than ETH_HLEN. Once transmitted, this could either cause out-of-bound
access beyond the actual length, or confuse the underlayer with incorrect
or inconsistent header length in the skb metadata.

In the alternative path, tap_get_user() already prohibits short frame which
has the length less than Ethernet header size from being transmitted.

This is to drop any frame shorter than the Ethernet header size just like
how tap_get_user() does.

CVE: CVE-2024-41090",Linux,Linux,"0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12, 0efac27791ee068075d80f07c55a229b1335ce12"
638,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44972,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

btrfs: do not clear page dirty inside extent_write_locked_range()

[BUG]
For subpage + zoned case, the following workload can lead to rsv data
leak at unmount time:

  # mkfs.btrfs -f -s 4k $dev
  # mount $dev $mnt
  # fsstress -w -n 8 -d $mnt -s 1709539240
  0/0: fiemap - no filename
  0/1: copyrange read - no filename
  0/2: write - no filename
  0/3: rename - no source filename
  0/4: creat f0 x:0 0 0
  0/4: creat add id=0,parent=-1
  0/5: writev f0[259 1 0 0 0 0] [778052,113,965] 0
  0/6: ioctl(FIEMAP) f0[259 1 0 0 224 887097] [1294220,2291618343991484791,0x10000] -1
  0/7: dwrite - xfsctl(XFS_IOC_DIOINFO) f0[259 1 0 0 224 887097] return 25, fallback to stat()
  0/7: dwrite f0[259 1 0 0 224 887097] [696320,102400] 0
  # umount $mnt

The dmesg includes the following rsv leak detection warning (all call
trace skipped):

  ------------[ cut here ]------------
  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8653 btrfs_destroy_inode+0x1e0/0x200 [btrfs]
  ---[ end trace 0000000000000000 ]---
  ------------[ cut here ]------------
  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8654 btrfs_destroy_inode+0x1a8/0x200 [btrfs]
  ---[ end trace 0000000000000000 ]---
  ------------[ cut here ]------------
  WARNING: CPU: 2 PID: 4528 at fs/btrfs/inode.c:8660 btrfs_destroy_inode+0x1a0/0x200 [btrfs]
  ---[ end trace 0000000000000000 ]---
  BTRFS info (device sda): last unmount of filesystem 1b4abba9-de34-4f07-9e7f-157cf12a18d6
  ------------[ cut here ]------------
  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]
  ---[ end trace 0000000000000000 ]---
  BTRFS info (device sda): space_info DATA has 268218368 free, is not full
  BTRFS info (device sda): space_info total=268435456, used=204800, pinned=0, reserved=0, may_use=12288, readonly=0 zone_unusable=0
  BTRFS info (device sda): global_block_rsv: size 0 reserved 0
  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0
  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0
  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0
  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0
  ------------[ cut here ]------------
  WARNING: CPU: 3 PID: 4528 at fs/btrfs/block-group.c:4434 btrfs_free_block_groups+0x338/0x500 [btrfs]
  ---[ end trace 0000000000000000 ]---
  BTRFS info (device sda): space_info METADATA has 267796480 free, is not full
  BTRFS info (device sda): space_info total=268435456, used=131072, pinned=0, reserved=0, may_use=262144, readonly=0 zone_unusable=245760
  BTRFS info (device sda): global_block_rsv: size 0 reserved 0
  BTRFS info (device sda): trans_block_rsv: size 0 reserved 0
  BTRFS info (device sda): chunk_block_rsv: size 0 reserved 0
  BTRFS info (device sda): delayed_block_rsv: size 0 reserved 0
  BTRFS info (device sda): delayed_refs_rsv: size 0 reserved 0

Above $dev is a tcmu-runner emulated zoned HDD, which has a max zone
append size of 64K, and the system has 64K page size.

[CAUSE]
I have added several trace_printk() to show the events (header skipped):

  > btrfs_dirty_pages: r/i=5/259 dirty start=774144 len=114688
  > btrfs_dirty_pages: r/i=5/259 dirty part of page=720896 off_in_page=53248 len_in_page=12288
  > btrfs_dirty_pages: r/i=5/259 dirty part of page=786432 off_in_page=0 len_in_page=65536
  > btrfs_dirty_pages: r/i=5/259 dirty part of page=851968 off_in_page=0 len_in_page=36864

The above lines show our buffered write has dirtied 3 pages of inode
259 of root 5:

  704K             768K              832K              896K
  I           |////I/////////////////I///////////|     I
              756K                               868K

  |///| is the dirtied range using subpage bitmaps. and 'I' is the page
  boundary.

  Meanwhile all three pages (704K, 768K, 832K) have their PageDirty
  flag set.

  > btrfs_direct_write: r/i=5/259 start dio filepos=696320 len=102400

Then direct IO writ
---truncated---",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
646,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46786,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fscache: delete fscache_cookie_lru_timer when fscache exits to avoid UAF

The fscache_cookie_lru_timer is initialized when the fscache module
is inserted, but is not deleted when the fscache module is removed.
If timer_reduce() is called before removing the fscache module,
the fscache_cookie_lru_timer will be added to the timer list of
the current cpu. Afterwards, a use-after-free will be triggered
in the softIRQ after removing the fscache module, as follows:

==================================================================
BUG: unable to handle page fault for address: fffffbfff803c9e9
 PF: supervisor read access in kernel mode
 PF: error_code(0x0000) - not-present page
PGD 21ffea067 P4D 21ffea067 PUD 21ffe6067 PMD 110a7c067 PTE 0
Oops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI
CPU: 1 UID: 0 PID: 0 Comm: swapper/1 Tainted: G W 6.11.0-rc3 #855
Tainted: [W]=WARN
RIP: 0010:__run_timer_base.part.0+0x254/0x8a0
Call Trace:
 <IRQ>
 tmigr_handle_remote_up+0x627/0x810
 __walk_groups.isra.0+0x47/0x140
 tmigr_handle_remote+0x1fa/0x2f0
 handle_softirqs+0x180/0x590
 irq_exit_rcu+0x84/0xb0
 sysvec_apic_timer_interrupt+0x6e/0x90
 </IRQ>
 <TASK>
 asm_sysvec_apic_timer_interrupt+0x1a/0x20
RIP: 0010:default_idle+0xf/0x20
 default_idle_call+0x38/0x60
 do_idle+0x2b5/0x300
 cpu_startup_entry+0x54/0x60
 start_secondary+0x20d/0x280
 common_startup_64+0x13e/0x148
 </TASK>
Modules linked in: [last unloaded: netfs]
==================================================================

Therefore delete fscache_cookie_lru_timer when removing the fscahe module.",Linux,Linux,"12bb21a29c19aae50cfad4e2bb5c943108f34a7d, 12bb21a29c19aae50cfad4e2bb5c943108f34a7d, 12bb21a29c19aae50cfad4e2bb5c943108f34a7d"
645,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49944,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sctp: set sk_state back to CLOSED if autobind fails in sctp_listen_start

In sctp_listen_start() invoked by sctp_inet_listen(), it should set the
sk_state back to CLOSED if sctp_autobind() fails due to whatever reason.

Otherwise, next time when calling sctp_inet_listen(), if sctp_sk(sk)->reuse
is already set via setsockopt(SCTP_REUSE_PORT), sctp_sk(sk)->bind_hash will
be dereferenced as sk_state is LISTENING, which causes a crash as bind_hash
is NULL.

  KASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]
  RIP: 0010:sctp_inet_listen+0x7f0/0xa20 net/sctp/socket.c:8617
  Call Trace:
   <TASK>
   __sys_listen_socket net/socket.c:1883 [inline]
   __sys_listen+0x1b7/0x230 net/socket.c:1894
   __do_sys_listen net/socket.c:1902 [inline]",Linux,Linux,"5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863, 5e8f3f703ae4e4af65e2695e486b3cd198328863"
644,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46743,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

of/irq: Prevent device address out-of-bounds read in interrupt map walk

When of_irq_parse_raw() is invoked with a device address smaller than
the interrupt parent node (from #address-cells property), KASAN detects
the following out-of-bounds read when populating the initial match table
(dyndbg=""func of_irq_parse_* +p""):

  OF: of_irq_parse_one: dev=/soc@0/picasso/watchdog, index=0
  OF:  parent=/soc@0/pci@878000000000/gpio0@17,0, intsize=2
  OF:  intspec=4
  OF: of_irq_parse_raw: ipar=/soc@0/pci@878000000000/gpio0@17,0, size=2
  OF:  -> addrsize=3
  ==================================================================
  BUG: KASAN: slab-out-of-bounds in of_irq_parse_raw+0x2b8/0x8d0
  Read of size 4 at addr ffffff81beca5608 by task bash/764

  CPU: 1 PID: 764 Comm: bash Tainted: G           O       6.1.67-484c613561-nokia_sm_arm64 #1
  Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.01-12.24.03-dirty 01/01/2023
  Call trace:
   dump_backtrace+0xdc/0x130
   show_stack+0x1c/0x30
   dump_stack_lvl+0x6c/0x84
   print_report+0x150/0x448
   kasan_report+0x98/0x140
   __asan_load4+0x78/0xa0
   of_irq_parse_raw+0x2b8/0x8d0
   of_irq_parse_one+0x24c/0x270
   parse_interrupts+0xc0/0x120
   of_fwnode_add_links+0x100/0x2d0
   fw_devlink_parse_fwtree+0x64/0xc0
   device_add+0xb38/0xc30
   of_device_add+0x64/0x90
   of_platform_device_create_pdata+0xd0/0x170
   of_platform_bus_create+0x244/0x600
   of_platform_notify+0x1b0/0x254
   blocking_notifier_call_chain+0x9c/0xd0
   __of_changeset_entry_notify+0x1b8/0x230
   __of_changeset_apply_notify+0x54/0xe4
   of_overlay_fdt_apply+0xc04/0xd94
   ...

  The buggy address belongs to the object at ffffff81beca5600
   which belongs to the cache kmalloc-128 of size 128
  The buggy address is located 8 bytes inside of
   128-byte region [ffffff81beca5600, ffffff81beca5680)

  The buggy address belongs to the physical page:
  page:00000000230d3d03 refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1beca4
  head:00000000230d3d03 order:1 compound_mapcount:0 compound_pincount:0
  flags: 0x8000000000010200(slab|head|zone=2)
  raw: 8000000000010200 0000000000000000 dead000000000122 ffffff810000c300
  raw: 0000000000000000 0000000000200020 00000001ffffffff 0000000000000000
  page dumped because: kasan: bad access detected

  Memory state around the buggy address:
   ffffff81beca5500: 04 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
   ffffff81beca5580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
  >ffffff81beca5600: 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                        ^
   ffffff81beca5680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
   ffffff81beca5700: 00 00 00 00 00 00 fc fc fc fc fc fc fc fc fc fc
  ==================================================================
  OF:  -> got it !

Prevent the out-of-bounds read by copying the device address into a
buffer of sufficient size.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
643,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46797,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

powerpc/qspinlock: Fix deadlock in MCS queue

If an interrupt occurs in queued_spin_lock_slowpath() after we increment
qnodesp->count and before node->lock is initialized, another CPU might
see stale lock values in get_tail_qnode(). If the stale lock value happens
to match the lock on that CPU, then we write to the ""next"" pointer of
the wrong qnode. This causes a deadlock as the former CPU, once it becomes
the head of the MCS queue, will spin indefinitely until it's ""next"" pointer
is set by its successor in the queue.

Running stress-ng on a 16 core (16EC/16VP) shared LPAR, results in
occasional lockups similar to the following:

   $ stress-ng --all 128 --vm-bytes 80% --aggressive \
               --maximize --oomable --verify  --syslog \
               --metrics  --times  --timeout 5m

   watchdog: CPU 15 Hard LOCKUP
   ......
   NIP [c0000000000b78f4] queued_spin_lock_slowpath+0x1184/0x1490
   LR [c000000001037c5c] _raw_spin_lock+0x6c/0x90
   Call Trace:
    0xc000002cfffa3bf0 (unreliable)
    _raw_spin_lock+0x6c/0x90
    raw_spin_rq_lock_nested.part.135+0x4c/0xd0
    sched_ttwu_pending+0x60/0x1f0
    __flush_smp_call_function_queue+0x1dc/0x670
    smp_ipi_demux_relaxed+0xa4/0x100
    xive_muxed_ipi_action+0x20/0x40
    __handle_irq_event_percpu+0x80/0x240
    handle_irq_event_percpu+0x2c/0x80
    handle_percpu_irq+0x84/0xd0
    generic_handle_irq+0x54/0x80
    __do_irq+0xac/0x210
    __do_IRQ+0x74/0xd0
    0x0
    do_IRQ+0x8c/0x170
    hardware_interrupt_common_virt+0x29c/0x2a0
   --- interrupt: 500 at queued_spin_lock_slowpath+0x4b8/0x1490
   ......
   NIP [c0000000000b6c28] queued_spin_lock_slowpath+0x4b8/0x1490
   LR [c000000001037c5c] _raw_spin_lock+0x6c/0x90
   --- interrupt: 500
    0xc0000029c1a41d00 (unreliable)
    _raw_spin_lock+0x6c/0x90
    futex_wake+0x100/0x260
    do_futex+0x21c/0x2a0
    sys_futex+0x98/0x270
    system_call_exception+0x14c/0x2f0
    system_call_vectored_common+0x15c/0x2ec

The following code flow illustrates how the deadlock occurs.
For the sake of brevity, assume that both locks (A and B) are
contended and we call the queued_spin_lock_slowpath() function.

        CPU0                                   CPU1
        ----                                   ----
  spin_lock_irqsave(A)                          |
  spin_unlock_irqrestore(A)                     |
    spin_lock(B)                                |
         |                                      |
         ▼                                      |
   id = qnodesp->count++;                       |
  (Note that nodes[0].lock == A)                |
         |                                      |
         ▼                                      |
      Interrupt                                 |
  (happens before ""nodes[0].lock = B"")          |
         |                                      |
         ▼                                      |
  spin_lock_irqsave(A)                          |
         |                                      |
         ▼                                      |
   id = qnodesp->count++                        |
   nodes[1].lock = A                            |
         |                                      |
         ▼                                      |
  Tail of MCS queue                             |
         |                             spin_lock_irqsave(A)
         ▼                                      |
  Head of MCS queue                             ▼
         |                             CPU0 is previous tail
         ▼                                      |
   Spin indefinitely                            ▼
  (until ""nodes[1].next != NULL"")      prev = get_tail_qnode(A, CPU0)
                                                |
                                                ▼
                                       prev == &qnodes[CPU0].nodes[0]
                                     (as qnodes
---truncated---",Linux,Linux,"84990b169557428c318df87b7836cd15f65b62dc, 84990b169557428c318df87b7836cd15f65b62dc, 84990b169557428c318df87b7836cd15f65b62dc"
642,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42312,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

sysctl: always initialize i_uid/i_gid

Always initialize i_uid/i_gid inside the sysfs core so set_ownership()
can safely skip setting them.

Commit 5ec27ec735ba (""fs/proc/proc_sysctl.c: fix the default values of
i_uid/i_gid on /proc/sys inodes."") added defaults for i_uid/i_gid when
set_ownership() was not implemented. It also missed adjusting
net_ctl_set_ownership() to use the same default values in case the
computation of a better value failed.",Linux,Linux,"5ec27ec735ba0477d48c80561cc5e856f0c5dfaf, 5ec27ec735ba0477d48c80561cc5e856f0c5dfaf, 5ec27ec735ba0477d48c80561cc5e856f0c5dfaf, 5ec27ec735ba0477d48c80561cc5e856f0c5dfaf, 5ec27ec735ba0477d48c80561cc5e856f0c5dfaf, 5ec27ec735ba0477d48c80561cc5e856f0c5dfaf"
641,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50046,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

NFSv4: Prevent NULL-pointer dereference in nfs42_complete_copies()

On the node of an NFS client, some files saved in the mountpoint of the
NFS server were copied to another location of the same NFS server.
Accidentally, the nfs42_complete_copies() got a NULL-pointer dereference
crash with the following syslog:

[232064.838881] NFSv4: state recovery failed for open file nfs/pvc-12b5200d-cd0f-46a3-b9f0-af8f4fe0ef64.qcow2, error = -116
[232064.839360] NFSv4: state recovery failed for open file nfs/pvc-12b5200d-cd0f-46a3-b9f0-af8f4fe0ef64.qcow2, error = -116
[232066.588183] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000058
[232066.588586] Mem abort info:
[232066.588701]   ESR = 0x0000000096000007
[232066.588862]   EC = 0x25: DABT (current EL), IL = 32 bits
[232066.589084]   SET = 0, FnV = 0
[232066.589216]   EA = 0, S1PTW = 0
[232066.589340]   FSC = 0x07: level 3 translation fault
[232066.589559] Data abort info:
[232066.589683]   ISV = 0, ISS = 0x00000007
[232066.589842]   CM = 0, WnR = 0
[232066.589967] user pgtable: 64k pages, 48-bit VAs, pgdp=00002000956ff400
[232066.590231] [0000000000000058] pgd=08001100ae100003, p4d=08001100ae100003, pud=08001100ae100003, pmd=08001100b3c00003, pte=0000000000000000
[232066.590757] Internal error: Oops: 96000007 [#1] SMP
[232066.590958] Modules linked in: rpcsec_gss_krb5 auth_rpcgss nfsv4 dns_resolver nfs lockd grace fscache netfs ocfs2_dlmfs ocfs2_stack_o2cb ocfs2_dlm vhost_net vhost vhost_iotlb tap tun ipt_rpfilter xt_multiport ip_set_hash_ip ip_set_hash_net xfrm_interface xfrm6_tunnel tunnel4 tunnel6 esp4 ah4 wireguard libcurve25519_generic veth xt_addrtype xt_set nf_conntrack_netlink ip_set_hash_ipportnet ip_set_hash_ipportip ip_set_bitmap_port ip_set_hash_ipport dummy ip_set ip_vs_sh ip_vs_wrr ip_vs_rr ip_vs iptable_filter sch_ingress nfnetlink_cttimeout vport_gre ip_gre ip_tunnel gre vport_geneve geneve vport_vxlan vxlan ip6_udp_tunnel udp_tunnel openvswitch nf_conncount dm_round_robin dm_service_time dm_multipath xt_nat xt_MASQUERADE nft_chain_nat nf_nat xt_mark xt_conntrack xt_comment nft_compat nft_counter nf_tables nfnetlink ocfs2 ocfs2_nodemanager ocfs2_stackglue iscsi_tcp libiscsi_tcp libiscsi scsi_transport_iscsi ipmi_ssif nbd overlay 8021q garp mrp bonding tls rfkill sunrpc ext4 mbcache jbd2
[232066.591052]  vfat fat cas_cache cas_disk ses enclosure scsi_transport_sas sg acpi_ipmi ipmi_si ipmi_devintf ipmi_msghandler ip_tables vfio_pci vfio_pci_core vfio_virqfd vfio_iommu_type1 vfio dm_mirror dm_region_hash dm_log dm_mod nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 br_netfilter bridge stp llc fuse xfs libcrc32c ast drm_vram_helper qla2xxx drm_kms_helper syscopyarea crct10dif_ce sysfillrect ghash_ce sysimgblt sha2_ce fb_sys_fops cec sha256_arm64 sha1_ce drm_ttm_helper ttm nvme_fc igb sbsa_gwdt nvme_fabrics drm nvme_core i2c_algo_bit i40e scsi_transport_fc megaraid_sas aes_neon_bs
[232066.596953] CPU: 6 PID: 4124696 Comm: 10.253.166.125- Kdump: loaded Not tainted 5.15.131-9.cl9_ocfs2.aarch64 #1
[232066.597356] Hardware name: Great Wall .\x93\x8e...RF6260 V5/GWMSSE2GL1T, BIOS T656FBE_V3.0.18 2024-01-06
[232066.597721] pstate: 20400009 (nzCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[232066.598034] pc : nfs4_reclaim_open_state+0x220/0x800 [nfsv4]
[232066.598327] lr : nfs4_reclaim_open_state+0x12c/0x800 [nfsv4]
[232066.598595] sp : ffff8000f568fc70
[232066.598731] x29: ffff8000f568fc70 x28: 0000000000001000 x27: ffff21003db33000
[232066.599030] x26: ffff800005521ae0 x25: ffff0100f98fa3f0 x24: 0000000000000001
[232066.599319] x23: ffff800009920008 x22: ffff21003db33040 x21: ffff21003db33050
[232066.599628] x20: ffff410172fe9e40 x19: ffff410172fe9e00 x18: 0000000000000000
[232066.599914] x17: 0000000000000000 x16: 0000000000000004 x15: 0000000000000000
[232066.600195] x14: 0000000000000000 x13: ffff800008e685a8 x12: 00000000eac0c6e6
[232066.600498] x11: 00000000000000
---truncated---",Linux,Linux,"0e65a32c8a569db363048e17a708b1a0913adbef, 0e65a32c8a569db363048e17a708b1a0913adbef, 0e65a32c8a569db363048e17a708b1a0913adbef, 0e65a32c8a569db363048e17a708b1a0913adbef, 0e65a32c8a569db363048e17a708b1a0913adbef, 0e65a32c8a569db363048e17a708b1a0913adbef"
640,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46842,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: lpfc: Handle mailbox timeouts in lpfc_get_sfp_info

The MBX_TIMEOUT return code is not handled in lpfc_get_sfp_info and the
routine unconditionally frees submitted mailbox commands regardless of
return status.  The issue is that for MBX_TIMEOUT cases, when firmware
returns SFP information at a later time, that same mailbox memory region
references previously freed memory in its cmpl routine.

Fix by adding checks for the MBX_TIMEOUT return code.  During mailbox
resource cleanup, check the mbox flag to make sure that the wait did not
timeout.  If the MBOX_WAKE flag is not set, then do not free the resources
because it will be freed when firmware completes the mailbox at a later
time in its cmpl routine.

Also, increase the timeout from 30 to 60 seconds to accommodate boot
scripts requiring longer timeouts.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
639,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42286,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qla2xxx: validate nvme_local_port correctly

The driver load failed with error message,

qla2xxx [0000:04:00.0]-ffff:0: register_localport failed: ret=ffffffef

and with a kernel crash,

	BUG: unable to handle kernel NULL pointer dereference at 0000000000000070
	Workqueue: events_unbound qla_register_fcport_fn [qla2xxx]
	RIP: 0010:nvme_fc_register_remoteport+0x16/0x430 [nvme_fc]
	RSP: 0018:ffffaaa040eb3d98 EFLAGS: 00010282
	RAX: 0000000000000000 RBX: ffff9dfb46b78c00 RCX: 0000000000000000
	RDX: ffff9dfb46b78da8 RSI: ffffaaa040eb3e08 RDI: 0000000000000000
	RBP: ffff9dfb612a0a58 R08: ffffffffaf1d6270 R09: 3a34303a30303030
	R10: 34303a303030305b R11: 2078787832616c71 R12: ffff9dfb46b78dd4
	R13: ffff9dfb46b78c24 R14: ffff9dfb41525300 R15: ffff9dfb46b78da8
	FS:  0000000000000000(0000) GS:ffff9dfc67c00000(0000) knlGS:0000000000000000
	CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
	CR2: 0000000000000070 CR3: 000000018da10004 CR4: 00000000000206f0
	Call Trace:
	qla_nvme_register_remote+0xeb/0x1f0 [qla2xxx]
	? qla2x00_dfs_create_rport+0x231/0x270 [qla2xxx]
	qla2x00_update_fcport+0x2a1/0x3c0 [qla2xxx]
	qla_register_fcport_fn+0x54/0xc0 [qla2xxx]

Exit the qla_nvme_register_remote() function when qla_nvme_register_hba()
fails and correctly validate nvme_local_port.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
637,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52509,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ravb: Fix use-after-free issue in ravb_tx_timeout_work()

The ravb_stop() should call cancel_work_sync(). Otherwise,
ravb_tx_timeout_work() is possible to use the freed priv after
ravb_remove() was called like below:

CPU0			CPU1
			ravb_tx_timeout()
ravb_remove()
unregister_netdev()
free_netdev(ndev)
// free priv
			ravb_tx_timeout_work()
			// use priv

unregister_netdev() will call .ndo_stop() so that ravb_stop() is
called. And, after phy_stop() is called, netif_carrier_off()
is also called. So that .ndo_tx_timeout() will not be called
after phy_stop().",Linux,Linux,"c156633f1353264634135dea86ffcae74f2122fc, c156633f1353264634135dea86ffcae74f2122fc, c156633f1353264634135dea86ffcae74f2122fc, c156633f1353264634135dea86ffcae74f2122fc, c156633f1353264634135dea86ffcae74f2122fc, c156633f1353264634135dea86ffcae74f2122fc"
628,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43853,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

cgroup/cpuset: Prevent UAF in proc_cpuset_show()

An UAF can happen when /proc/cpuset is read as reported in [1].

This can be reproduced by the following methods:
1.add an mdelay(1000) before acquiring the cgroup_lock In the
 cgroup_path_ns function.
2.$cat /proc/<pid>/cpuset   repeatly.
3.$mount -t cgroup -o cpuset cpuset /sys/fs/cgroup/cpuset/
$umount /sys/fs/cgroup/cpuset/   repeatly.

The race that cause this bug can be shown as below:

(umount)		|	(cat /proc/<pid>/cpuset)
css_release		|	proc_cpuset_show
css_release_work_fn	|	css = task_get_css(tsk, cpuset_cgrp_id);
css_free_rwork_fn	|	cgroup_path_ns(css->cgroup, ...);
cgroup_destroy_root	|	mutex_lock(&cgroup_mutex);
rebind_subsystems	|
cgroup_free_root 	|
			|	// cgrp was freed, UAF
			|	cgroup_path_ns_locked(cgrp,..);

When the cpuset is initialized, the root node top_cpuset.css.cgrp
will point to &cgrp_dfl_root.cgrp. In cgroup v1, the mount operation will
allocate cgroup_root, and top_cpuset.css.cgrp will point to the allocated
&cgroup_root.cgrp. When the umount operation is executed,
top_cpuset.css.cgrp will be rebound to &cgrp_dfl_root.cgrp.

The problem is that when rebinding to cgrp_dfl_root, there are cases
where the cgroup_root allocated by setting up the root for cgroup v1
is cached. This could lead to a Use-After-Free (UAF) if it is
subsequently freed. The descendant cgroups of cgroup v1 can only be
freed after the css is released. However, the css of the root will never
be released, yet the cgroup_root should be freed when it is unmounted.
This means that obtaining a reference to the css of the root does
not guarantee that css.cgrp->root will not be freed.

Fix this problem by using rcu_read_lock in proc_cpuset_show().
As cgroup_root is kfree_rcu after commit d23b5c577715
(""cgroup: Make operations on the cgroup root_list RCU safe""),
css->cgroup won't be freed during the critical section.
To call cgroup_path_ns_locked, css_set_lock is needed, so it is safe to
replace task_get_css with task_css.

[1] https://syzkaller.appspot.com/bug?extid=9b1ff7be974a403aa4cd",Linux,Linux,"a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07, a79a908fd2b080977b45bf103184b81c9d11ad07"
636,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49949,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: avoid potential underflow in qdisc_pkt_len_init() with UFO

After commit 7c6d2ecbda83 (""net: be more gentle about silly gso
requests coming from user"") virtio_net_hdr_to_skb() had sanity check
to detect malicious attempts from user space to cook a bad GSO packet.

Then commit cf9acc90c80ec (""net: virtio_net_hdr_to_skb: count
transport header in UFO"") while fixing one issue, allowed user space
to cook a GSO packet with the following characteristic :

IPv4 SKB_GSO_UDP, gso_size=3, skb->len = 28.

When this packet arrives in qdisc_pkt_len_init(), we end up
with hdr_len = 28 (IPv4 header + UDP header), matching skb->len

Then the following sets gso_segs to 0 :

gso_segs = DIV_ROUND_UP(skb->len - hdr_len,
                        shinfo->gso_size);

Then later we set qdisc_skb_cb(skb)->pkt_len to back to zero :/

qdisc_skb_cb(skb)->pkt_len += (gso_segs - 1) * hdr_len;

This leads to the following crash in fq_codel [1]

qdisc_pkt_len_init() is best effort, we only want an estimation
of the bytes sent on the wire, not crashing the kernel.

This patch is fixing this particular issue, a following one
adds more sanity checks for another potential bug.

[1]
[   70.724101] BUG: kernel NULL pointer dereference, address: 0000000000000000
[   70.724561] #PF: supervisor read access in kernel mode
[   70.724561] #PF: error_code(0x0000) - not-present page
[   70.724561] PGD 10ac61067 P4D 10ac61067 PUD 107ee2067 PMD 0
[   70.724561] Oops: Oops: 0000 [#1] SMP NOPTI
[   70.724561] CPU: 11 UID: 0 PID: 2163 Comm: b358537762 Not tainted 6.11.0-virtme #991
[   70.724561] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
[   70.724561] RIP: 0010:fq_codel_enqueue (net/sched/sch_fq_codel.c:120 net/sched/sch_fq_codel.c:168 net/sched/sch_fq_codel.c:230) sch_fq_codel
[ 70.724561] Code: 24 08 49 c1 e1 06 44 89 7c 24 18 45 31 ed 45 31 c0 31 ff 89 44 24 14 4c 03 8b 90 01 00 00 eb 04 39 ca 73 37 4d 8b 39 83 c7 01 <49> 8b 17 49 89 11 41 8b 57 28 45 8b 5f 34 49 c7 07 00 00 00 00 49
All code
========
   0:	24 08                	and    $0x8,%al
   2:	49 c1 e1 06          	shl    $0x6,%r9
   6:	44 89 7c 24 18       	mov    %r15d,0x18(%rsp)
   b:	45 31 ed             	xor    %r13d,%r13d
   e:	45 31 c0             	xor    %r8d,%r8d
  11:	31 ff                	xor    %edi,%edi
  13:	89 44 24 14          	mov    %eax,0x14(%rsp)
  17:	4c 03 8b 90 01 00 00 	add    0x190(%rbx),%r9
  1e:	eb 04                	jmp    0x24
  20:	39 ca                	cmp    %ecx,%edx
  22:	73 37                	jae    0x5b
  24:	4d 8b 39             	mov    (%r9),%r15
  27:	83 c7 01             	add    $0x1,%edi
  2a:*	49 8b 17             	mov    (%r15),%rdx		<-- trapping instruction
  2d:	49 89 11             	mov    %rdx,(%r9)
  30:	41 8b 57 28          	mov    0x28(%r15),%edx
  34:	45 8b 5f 34          	mov    0x34(%r15),%r11d
  38:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
  3f:	49                   	rex.WB

Code starting with the faulting instruction
===========================================
   0:	49 8b 17             	mov    (%r15),%rdx
   3:	49 89 11             	mov    %rdx,(%r9)
   6:	41 8b 57 28          	mov    0x28(%r15),%edx
   a:	45 8b 5f 34          	mov    0x34(%r15),%r11d
   e:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
  15:	49                   	rex.WB
[   70.724561] RSP: 0018:ffff95ae85e6fb90 EFLAGS: 00000202
[   70.724561] RAX: 0000000002000000 RBX: ffff95ae841de000 RCX: 0000000000000000
[   70.724561] RDX: 0000000000000000 RSI: 0000000000000001 RDI: 0000000000000001
[   70.724561] RBP: ffff95ae85e6fbf8 R08: 0000000000000000 R09: ffff95b710a30000
[   70.724561] R10: 0000000000000000 R11: bdf289445ce31881 R12: ffff95ae85e6fc58
[   70.724561] R13: 0000000000000000 R14: 0000000000000040 R15: 0000000000000000
[   70.724561] FS:  000000002c5c1380(0000) GS:ffff95bd7fcc0000(0000) knlGS:0000000000000000
[   70.724561] CS:  0010 DS: 0000 ES: 0000 C
---truncated---",Linux,Linux,"960b360ca7463921c1a6b72e7066a706d6406223, fb2dbc124a7f800cd0e4f901a1bbb769a017104c, 8e6bae950da9dc2d2c6c18b1c6b206dc00dc8772, 0f810d06b507aa40fef8d1ac0a88e6d0590dbfc3, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff, cf9acc90c80ecbee00334aa85d92f4e74014bcff"
635,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41098,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ata: libata-core: Fix null pointer dereference on error

If the ata_port_alloc() call in ata_host_alloc() fails,
ata_host_release() will get called.

However, the code in ata_host_release() tries to free ata_port struct
members unconditionally, which can lead to the following:

BUG: unable to handle page fault for address: 0000000000003990
PGD 0 P4D 0
Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI
CPU: 10 PID: 594 Comm: (udev-worker) Not tainted 6.10.0-rc5 #44
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014
RIP: 0010:ata_host_release.cold+0x2f/0x6e [libata]
Code: e4 4d 63 f4 44 89 e2 48 c7 c6 90 ad 32 c0 48 c7 c7 d0 70 33 c0 49 83 c6 0e 41
RSP: 0018:ffffc90000ebb968 EFLAGS: 00010246
RAX: 0000000000000041 RBX: ffff88810fb52e78 RCX: 0000000000000000
RDX: 0000000000000000 RSI: ffff88813b3218c0 RDI: ffff88813b3218c0
RBP: ffff88810fb52e40 R08: 0000000000000000 R09: 6c65725f74736f68
R10: ffffc90000ebb738 R11: 73692033203a746e R12: 0000000000000004
R13: 0000000000000000 R14: 0000000000000011 R15: 0000000000000006
FS:  00007f6cc55b9980(0000) GS:ffff88813b300000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000003990 CR3: 00000001122a2000 CR4: 0000000000750ef0
PKRU: 55555554
Call Trace:
 <TASK>
 ? __die_body.cold+0x19/0x27
 ? page_fault_oops+0x15a/0x2f0
 ? exc_page_fault+0x7e/0x180
 ? asm_exc_page_fault+0x26/0x30
 ? ata_host_release.cold+0x2f/0x6e [libata]
 ? ata_host_release.cold+0x2f/0x6e [libata]
 release_nodes+0x35/0xb0
 devres_release_group+0x113/0x140
 ata_host_alloc+0xed/0x120 [libata]
 ata_host_alloc_pinfo+0x14/0xa0 [libata]
 ahci_init_one+0x6c9/0xd20 [ahci]

Do not access ata_port struct members unconditionally.",Linux,Linux,"633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1, 633273a3ed1cf37ced90475b0f95cf81deab04f1"
634,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41077,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

null_blk: fix validation of block size

Block size should be between 512 and PAGE_SIZE and be a power of 2. The current
check does not validate this, so update the check.

Without this patch, null_blk would Oops due to a null pointer deref when
loaded with bs=1536 [1].


[axboe: remove unnecessary braces and != 0 check]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
633,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-42279,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

spi: microchip-core: ensure TX and RX FIFOs are empty at start of a transfer

While transmitting with rx_len == 0, the RX FIFO is not going to be
emptied in the interrupt handler. A subsequent transfer could then
read crap from the previous transfer out of the RX FIFO into the
start RX buffer. The core provides a register that will empty the RX and
TX FIFOs, so do that before each transfer.",Linux,Linux,"9ac8d17694b66d54b13e9718b25c14ca36dbebbd, 9ac8d17694b66d54b13e9718b25c14ca36dbebbd, 9ac8d17694b66d54b13e9718b25c14ca36dbebbd"
632,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49866,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tracing/timerlat: Fix a race during cpuhp processing

There is another found exception that the ""timerlat/1"" thread was
scheduled on CPU0, and lead to timer corruption finally:

```
ODEBUG: init active (active state 0) object: ffff888237c2e108 object type: hrtimer hint: timerlat_irq+0x0/0x220
WARNING: CPU: 0 PID: 426 at lib/debugobjects.c:518 debug_print_object+0x7d/0xb0
Modules linked in:
CPU: 0 UID: 0 PID: 426 Comm: timerlat/1 Not tainted 6.11.0-rc7+ #45
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
RIP: 0010:debug_print_object+0x7d/0xb0
...
Call Trace:
 <TASK>
 ? __warn+0x7c/0x110
 ? debug_print_object+0x7d/0xb0
 ? report_bug+0xf1/0x1d0
 ? prb_read_valid+0x17/0x20
 ? handle_bug+0x3f/0x70
 ? exc_invalid_op+0x13/0x60
 ? asm_exc_invalid_op+0x16/0x20
 ? debug_print_object+0x7d/0xb0
 ? debug_print_object+0x7d/0xb0
 ? __pfx_timerlat_irq+0x10/0x10
 __debug_object_init+0x110/0x150
 hrtimer_init+0x1d/0x60
 timerlat_main+0xab/0x2d0
 ? __pfx_timerlat_main+0x10/0x10
 kthread+0xb7/0xe0
 ? __pfx_kthread+0x10/0x10
 ret_from_fork+0x2d/0x40
 ? __pfx_kthread+0x10/0x10
 ret_from_fork_asm+0x1a/0x30
 </TASK>
```

After tracing the scheduling event, it was discovered that the migration
of the ""timerlat/1"" thread was performed during thread creation. Further
analysis confirmed that it is because the CPU online processing for
osnoise is implemented through workers, which is asynchronous with the
offline processing. When the worker was scheduled to create a thread, the
CPU may has already been removed from the cpu_online_mask during the offline
process, resulting in the inability to select the right CPU:

T1                       | T2
[CPUHP_ONLINE]           | cpu_device_down()
osnoise_hotplug_workfn() |
                         |     cpus_write_lock()
                         |     takedown_cpu(1)
                         |     cpus_write_unlock()
[CPUHP_OFFLINE]          |
    cpus_read_lock()     |
    start_kthread(1)     |
    cpus_read_unlock()   |

To fix this, skip online processing if the CPU is already offline.",Linux,Linux,"c8895e271f7994a3ecb13b8a280e39aa53879545, c8895e271f7994a3ecb13b8a280e39aa53879545, c8895e271f7994a3ecb13b8a280e39aa53879545, c8895e271f7994a3ecb13b8a280e39aa53879545, c8895e271f7994a3ecb13b8a280e39aa53879545, c8895e271f7994a3ecb13b8a280e39aa53879545"
631,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44977,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amdgpu: Validate TA binary size

Add TA binary size validation to avoid OOB write.

(cherry picked from commit c0a04e3570d72aaf090962156ad085e37c62e442)",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
630,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50180,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fbdev: sisfb: Fix strbuf array overflow

The values of the variables xres and yres are placed in strbuf.
These variables are obtained from strbuf1.
The strbuf1 array contains digit characters
and a space if the array contains non-digit characters.
Then, when executing sprintf(strbuf, ""%ux%ux8"", xres, yres);
more than 16 bytes will be written to strbuf.
It is suggested to increase the size of the strbuf array to 24.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
629,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45001,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: mana: Fix RX buf alloc_size alignment and atomic op panic

The MANA driver's RX buffer alloc_size is passed into napi_build_skb() to
create SKB. skb_shinfo(skb) is located at the end of skb, and its alignment
is affected by the alloc_size passed into napi_build_skb(). The size needs
to be aligned properly for better performance and atomic operations.
Otherwise, on ARM64 CPU, for certain MTU settings like 4000, atomic
operations may panic on the skb_shinfo(skb)->dataref due to alignment fault.

To fix this bug, add proper alignment to the alloc_size calculation.

Sample panic info:
[  253.298819] Unable to handle kernel paging request at virtual address ffff000129ba5cce
[  253.300900] Mem abort info:
[  253.301760]   ESR = 0x0000000096000021
[  253.302825]   EC = 0x25: DABT (current EL), IL = 32 bits
[  253.304268]   SET = 0, FnV = 0
[  253.305172]   EA = 0, S1PTW = 0
[  253.306103]   FSC = 0x21: alignment fault
Call trace:
 __skb_clone+0xfc/0x198
 skb_clone+0x78/0xe0
 raw6_local_deliver+0xfc/0x228
 ip6_protocol_deliver_rcu+0x80/0x500
 ip6_input_finish+0x48/0x80
 ip6_input+0x48/0xc0
 ip6_sublist_rcv_finish+0x50/0x78
 ip6_sublist_rcv+0x1cc/0x2b8
 ipv6_list_rcv+0x100/0x150
 __netif_receive_skb_list_core+0x180/0x220
 netif_receive_skb_list_internal+0x198/0x2a8
 __napi_poll+0x138/0x250
 net_rx_action+0x148/0x330
 handle_softirqs+0x12c/0x3a0",Linux,Linux,"80f6215b450eb8e92d8b1f117abf5ecf867f963e, 80f6215b450eb8e92d8b1f117abf5ecf867f963e, 80f6215b450eb8e92d8b1f117abf5ecf867f963e"
605,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52639,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: s390: vsie: fix race during shadow creation

Right now it is possible to see gmap->private being zero in
kvm_s390_vsie_gmap_notifier resulting in a crash.  This is due to the
fact that we add gmap->private == kvm after creation:

static int acquire_gmap_shadow(struct kvm_vcpu *vcpu,
                               struct vsie_page *vsie_page)
{
[...]
        gmap = gmap_shadow(vcpu->arch.gmap, asce, edat);
        if (IS_ERR(gmap))
                return PTR_ERR(gmap);
        gmap->private = vcpu->kvm;

Let children inherit the private field of the parent.",Linux,Linux,"a3508fbe9dc6dd3bece0c7bf889cc085a011738c, a3508fbe9dc6dd3bece0c7bf889cc085a011738c, a3508fbe9dc6dd3bece0c7bf889cc085a011738c, a3508fbe9dc6dd3bece0c7bf889cc085a011738c"
626,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43839,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

bna: adjust 'name' buf size of bna_tcb and bna_ccb structures

To have enough space to write all possible sprintf() args. Currently
'name' size is 16, but the first '%s' specifier may already need at
least 16 characters, since 'bnad->netdev->name' is used there.

For '%d' specifiers, assume that they require:
 * 1 char for 'tx_id + tx_info->tcb[i]->id' sum, BNAD_MAX_TXQ_PER_TX is 8
 * 2 chars for 'rx_id + rx_info->rx_ctrl[i].ccb->id', BNAD_MAX_RXP_PER_RX
   is 16

And replace sprintf with snprintf.

Detected using the static analysis tool - Svace.",Linux,Linux,"8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6, 8b230ed8ec96c933047dd0625cf95f739e4939a6"
603,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45027,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

usb: xhci: Check for xhci->interrupters being allocated in xhci_mem_clearup()

If xhci_mem_init() fails, it calls into xhci_mem_cleanup() to mop
up the damage. If it fails early enough, before xhci->interrupters
is allocated but after xhci->max_interrupters has been set, which
happens in most (all?) cases, things get uglier, as xhci_mem_cleanup()
unconditionally derefences xhci->interrupters. With prejudice.

Gate the interrupt freeing loop with a check on xhci->interrupters
being non-NULL.

Found while debugging a DMA allocation issue that led the XHCI driver
on this exact path.",Linux,Linux,"c99b38c412343053e9af187e595793c8805bb9b8, c99b38c412343053e9af187e595793c8805bb9b8"
583,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46809,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check BIOS images before it is used

BIOS images may fail to load and null checks are added before they are
used.

This fixes 6 NULL_RETURNS issues reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
581,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46854,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: dpaa: Pad packets to ETH_ZLEN

When sending packets under 60 bytes, up to three bytes of the buffer
following the data may be leaked. Avoid this by extending all packets to
ETH_ZLEN, ensuring nothing is leaked in the padding. This bug can be
reproduced by running

	$ ping -s 11 destination",Linux,Linux,"9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8, 9ad1a37493338cacf04e2c93acf44d151a7adda8"
580,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46866,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/xe/client: add missing bo locking in show_meminfo()

bo_meminfo() wants to inspect bo state like tt and the ttm resource,
however this state can change at any point leading to stuff like NPD and
UAF, if the bo lock is not held. Grab the bo lock when calling
bo_meminfo(), ensuring we drop any spinlocks first. In the case of
object_idr we now also need to hold a ref.

v2 (MattB)
  - Also add xe_bo_assert_held()

(cherry picked from commit 4f63d712fa104c3ebefcb289d1e733e86d8698c7)",Linux,Linux,"0845233388f8a26d00acf9bf230cfd4f36aa4c30, 0845233388f8a26d00acf9bf230cfd4f36aa4c30"
579,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47662,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Remove register from DCN35 DMCUB diagnostic collection

[Why]
These registers should not be read from driver and triggering the
security violation when DMCUB work times out and diagnostics are
collected blocks Z8 entry.

[How]
Remove the register read from DCN35.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
578,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41017,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

jfs: don't walk off the end of ealist

Add a check before visiting the members of ea to
make sure each ea stays within the ealist.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
577,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2021-47082,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

tun: avoid double free in tun_free_netdev

Avoid double free in tun_free_netdev() by moving the
dev->tstats and tun->security allocs to a new ndo_init routine
(tun_net_init()) that will be called by register_netdevice().
ndo_init is paired with the desctructor (tun_free_netdev()),
so if there's an error in register_netdevice() the destructor
will handle the frees.

BUG: KASAN: double-free or invalid-free in selinux_tun_dev_free_security+0x1a/0x20 security/selinux/hooks.c:5605

CPU: 0 PID: 25750 Comm: syz-executor416 Not tainted 5.16.0-rc2-syzk #1
Hardware name: Red Hat KVM, BIOS
Call Trace:
<TASK>
__dump_stack lib/dump_stack.c:88 [inline]
dump_stack_lvl+0x89/0xb5 lib/dump_stack.c:106
print_address_description.constprop.9+0x28/0x160 mm/kasan/report.c:247
kasan_report_invalid_free+0x55/0x80 mm/kasan/report.c:372
____kasan_slab_free mm/kasan/common.c:346 [inline]
__kasan_slab_free+0x107/0x120 mm/kasan/common.c:374
kasan_slab_free include/linux/kasan.h:235 [inline]
slab_free_hook mm/slub.c:1723 [inline]
slab_free_freelist_hook mm/slub.c:1749 [inline]
slab_free mm/slub.c:3513 [inline]
kfree+0xac/0x2d0 mm/slub.c:4561
selinux_tun_dev_free_security+0x1a/0x20 security/selinux/hooks.c:5605
security_tun_dev_free_security+0x4f/0x90 security/security.c:2342
tun_free_netdev+0xe6/0x150 drivers/net/tun.c:2215
netdev_run_todo+0x4df/0x840 net/core/dev.c:10627
rtnl_unlock+0x13/0x20 net/core/rtnetlink.c:112
__tun_chr_ioctl+0x80c/0x2870 drivers/net/tun.c:3302
tun_chr_ioctl+0x2f/0x40 drivers/net/tun.c:3311
vfs_ioctl fs/ioctl.c:51 [inline]
__do_sys_ioctl fs/ioctl.c:874 [inline]
__se_sys_ioctl fs/ioctl.c:860 [inline]
__x64_sys_ioctl+0x19d/0x220 fs/ioctl.c:860
do_syscall_x64 arch/x86/entry/common.c:50 [inline]
do_syscall_64+0x3a/0x80 arch/x86/entry/common.c:80
entry_SYSCALL_64_after_hwframe+0x44/0xae",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
576,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43823,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: keystone: Fix NULL pointer dereference in case of DT error in ks_pcie_setup_rc_app_regs()

If IORESOURCE_MEM is not provided in Device Tree due to
any error, resource_list_first_type() will return NULL and
pci_parse_request_of_pci_ranges() will just emit a warning.

This will cause a NULL pointer dereference. Fix this bug by adding NULL
return check.

Found by Linux Verification Center (linuxtesting.org) with SVACE.",Linux,Linux,"0f71c60ffd26943fa9646aa73ad7889ace116ce2, 0f71c60ffd26943fa9646aa73ad7889ace116ce2, 0f71c60ffd26943fa9646aa73ad7889ace116ce2, 0f71c60ffd26943fa9646aa73ad7889ace116ce2"
575,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41063,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: hci_core: cancel all works upon hci_unregister_dev()

syzbot is reporting that calling hci_release_dev() from hci_error_reset()
due to hci_dev_put() from hci_error_reset() can cause deadlock at
destroy_workqueue(), for hci_error_reset() is called from
hdev->req_workqueue which destroy_workqueue() needs to flush.

We need to make sure that hdev->{rx_work,cmd_work,tx_work} which are
queued into hdev->workqueue and hdev->{power_on,error_reset} which are
queued into hdev->req_workqueue are no longer running by the moment

       destroy_workqueue(hdev->workqueue);
       destroy_workqueue(hdev->req_workqueue);

are called from hci_release_dev().

Call cancel_work_sync() on these work items from hci_unregister_dev()
as soon as hdev->list is removed from hci_dev_list.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
574,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47740,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

f2fs: Require FMODE_WRITE for atomic write ioctls

The F2FS ioctls for starting and committing atomic writes check for
inode_owner_or_capable(), but this does not give LSMs like SELinux or
Landlock an opportunity to deny the write access - if the caller's FSUID
matches the inode's UID, inode_owner_or_capable() immediately returns true.

There are scenarios where LSMs want to deny a process the ability to write
particular files, even files that the FSUID of the process owns; but this
can currently partially be bypassed using atomic write ioctls in two ways:

 - F2FS_IOC_START_ATOMIC_REPLACE + F2FS_IOC_COMMIT_ATOMIC_WRITE can
   truncate an inode to size 0
 - F2FS_IOC_START_ATOMIC_WRITE + F2FS_IOC_ABORT_ATOMIC_WRITE can revert
   changes another process concurrently made to a file

Fix it by requiring FMODE_WRITE for these operations, just like for
F2FS_IOC_MOVE_RANGE. Since any legitimate caller should only be using these
ioctls when intending to write into the file, that seems unlikely to break
anything.",Linux,Linux,"88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d, 88b88a66797159949cec32eaab12b4968f6fae2d"
572,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41073,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nvme: avoid double free special payload

If a discard request needs to be retried, and that retry may fail before
a new special payload is added, a double free will result. Clear the
RQF_SPECIAL_LOAD when the request is cleaned.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
571,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2023-52572,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

cifs: Fix UAF in cifs_demultiplex_thread()

There is a UAF when xfstests on cifs:

  BUG: KASAN: use-after-free in smb2_is_network_name_deleted+0x27/0x160
  Read of size 4 at addr ffff88810103fc08 by task cifsd/923

  CPU: 1 PID: 923 Comm: cifsd Not tainted 6.1.0-rc4+ #45
  ...
  Call Trace:
   <TASK>
   dump_stack_lvl+0x34/0x44
   print_report+0x171/0x472
   kasan_report+0xad/0x130
   kasan_check_range+0x145/0x1a0
   smb2_is_network_name_deleted+0x27/0x160
   cifs_demultiplex_thread.cold+0x172/0x5a4
   kthread+0x165/0x1a0
   ret_from_fork+0x1f/0x30
   </TASK>

  Allocated by task 923:
   kasan_save_stack+0x1e/0x40
   kasan_set_track+0x21/0x30
   __kasan_slab_alloc+0x54/0x60
   kmem_cache_alloc+0x147/0x320
   mempool_alloc+0xe1/0x260
   cifs_small_buf_get+0x24/0x60
   allocate_buffers+0xa1/0x1c0
   cifs_demultiplex_thread+0x199/0x10d0
   kthread+0x165/0x1a0
   ret_from_fork+0x1f/0x30

  Freed by task 921:
   kasan_save_stack+0x1e/0x40
   kasan_set_track+0x21/0x30
   kasan_save_free_info+0x2a/0x40
   ____kasan_slab_free+0x143/0x1b0
   kmem_cache_free+0xe3/0x4d0
   cifs_small_buf_release+0x29/0x90
   SMB2_negotiate+0x8b7/0x1c60
   smb2_negotiate+0x51/0x70
   cifs_negotiate_protocol+0xf0/0x160
   cifs_get_smb_ses+0x5fa/0x13c0
   mount_get_conns+0x7a/0x750
   cifs_mount+0x103/0xd00
   cifs_smb3_do_mount+0x1dd/0xcb0
   smb3_get_tree+0x1d5/0x300
   vfs_get_tree+0x41/0xf0
   path_mount+0x9b3/0xdd0
   __x64_sys_mount+0x190/0x1d0
   do_syscall_64+0x35/0x80
   entry_SYSCALL_64_after_hwframe+0x46/0xb0

The UAF is because:

 mount(pid: 921)               | cifsd(pid: 923)
-------------------------------|-------------------------------
                               | cifs_demultiplex_thread
SMB2_negotiate                 |
 cifs_send_recv                |
  compound_send_recv           |
   smb_send_rqst               |
    wait_for_response          |
     wait_event_state      [1] |
                               |  standard_receive3
                               |   cifs_handle_standard
                               |    handle_mid
                               |     mid->resp_buf = buf;  [2]
                               |     dequeue_mid           [3]
     KILL the process      [4] |
    resp_iov[i].iov_base = buf |
 free_rsp_buf              [5] |
                               |   is_network_name_deleted [6]
                               |   callback

1. After send request to server, wait the response until
    mid->mid_state != SUBMITTED;
2. Receive response from server, and set it to mid;
3. Set the mid state to RECEIVED;
4. Kill the process, the mid state already RECEIVED, get 0;
5. Handle and release the negotiate response;
6. UAF.

It can be easily reproduce with add some delay in [3] - [6].

Only sync call has the problem since async call's callback is
executed in cifsd process.

Add an extra state to mark the mid state to READY before wakeup the
waitter, then it can get the resp safely.",Linux,Linux,"ec637e3ffb6b978143652477c7c5f96c9519b691, ec637e3ffb6b978143652477c7c5f96c9519b691, ec637e3ffb6b978143652477c7c5f96c9519b691"
570,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46727,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Add otg_master NULL check within resource_log_pipe_topology_update

[Why]
Coverity reports NULL_RETURN warning.

[How]
Add otg_master NULL check.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
569,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46773,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/amd/display: Check denominator pbn_div before used

[WHAT & HOW]
A denominator cannot be 0, and is checked before used.

This fixes 1 DIVIDE_BY_ZERO issue reported by Coverity.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
568,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47666,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: pm80xx: Set phy->enable_completion only when we wait for it

pm8001_phy_control() populates the enable_completion pointer with a stack
address, sends a PHY_LINK_RESET / PHY_HARD_RESET, waits 300 ms, and
returns. The problem arises when a phy control response comes late.  After
300 ms the pm8001_phy_control() function returns and the passed
enable_completion stack address is no longer valid. Late phy control
response invokes complete() on a dangling enable_completion pointer which
leads to a kernel crash.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
567,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46830,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: x86: Acquire kvm->srcu when handling KVM_SET_VCPU_EVENTS

Grab kvm->srcu when processing KVM_SET_VCPU_EVENTS, as KVM will forcibly
leave nested VMX/SVM if SMM mode is being toggled, and leaving nested VMX
reads guest memory.

Note, kvm_vcpu_ioctl_x86_set_vcpu_events() can also be called from KVM_RUN
via sync_regs(), which already holds SRCU.  I.e. trying to precisely use
kvm_vcpu_srcu_read_lock() around the problematic SMM code would cause
problems.  Acquiring SRCU isn't all that expensive, so for simplicity,
grab it unconditionally for KVM_SET_VCPU_EVENTS.

 =============================
 WARNING: suspicious RCU usage
 6.10.0-rc7-332d2c1d713e-next-vm #552 Not tainted
 -----------------------------
 include/linux/kvm_host.h:1027 suspicious rcu_dereference_check() usage!

 other info that might help us debug this:

 rcu_scheduler_active = 2, debug_locks = 1
 1 lock held by repro/1071:
  #0: ffff88811e424430 (&vcpu->mutex){+.+.}-{3:3}, at: kvm_vcpu_ioctl+0x7d/0x970 [kvm]

 stack backtrace:
 CPU: 15 PID: 1071 Comm: repro Not tainted 6.10.0-rc7-332d2c1d713e-next-vm #552
 Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015
 Call Trace:
  <TASK>
  dump_stack_lvl+0x7f/0x90
  lockdep_rcu_suspicious+0x13f/0x1a0
  kvm_vcpu_gfn_to_memslot+0x168/0x190 [kvm]
  kvm_vcpu_read_guest+0x3e/0x90 [kvm]
  nested_vmx_load_msr+0x6b/0x1d0 [kvm_intel]
  load_vmcs12_host_state+0x432/0xb40 [kvm_intel]
  vmx_leave_nested+0x30/0x40 [kvm_intel]
  kvm_vcpu_ioctl_x86_set_vcpu_events+0x15d/0x2b0 [kvm]
  kvm_arch_vcpu_ioctl+0x1107/0x1750 [kvm]
  ? mark_held_locks+0x49/0x70
  ? kvm_vcpu_ioctl+0x7d/0x970 [kvm]
  ? kvm_vcpu_ioctl+0x497/0x970 [kvm]
  kvm_vcpu_ioctl+0x497/0x970 [kvm]
  ? lock_acquire+0xba/0x2d0
  ? find_held_lock+0x2b/0x80
  ? do_user_addr_fault+0x40c/0x6f0
  ? lock_release+0xb7/0x270
  __x64_sys_ioctl+0x82/0xb0
  do_syscall_64+0x6c/0x170
  entry_SYSCALL_64_after_hwframe+0x4b/0x53
 RIP: 0033:0x7ff11eb1b539
  </TASK>",Linux,Linux,"f7e570780efc5cec9b2ed1e0472a7da14e864fdb, f7e570780efc5cec9b2ed1e0472a7da14e864fdb, f7e570780efc5cec9b2ed1e0472a7da14e864fdb, f7e570780efc5cec9b2ed1e0472a7da14e864fdb"
566,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47660,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fsnotify: clear PARENT_WATCHED flags lazily

In some setups directories can have many (usually negative) dentries.
Hence __fsnotify_update_child_dentry_flags() function can take a
significant amount of time. Since the bulk of this function happens
under inode->i_lock this causes a significant contention on the lock
when we remove the watch from the directory as the
__fsnotify_update_child_dentry_flags() call from fsnotify_recalc_mask()
races with __fsnotify_update_child_dentry_flags() calls from
__fsnotify_parent() happening on children. This can lead upto softlockup
reports reported by users.

Fix the problem by calling fsnotify_update_children_dentry_flags() to
set PARENT_WATCHED flags only when parent starts watching children.

When parent stops watching children, clear false positive PARENT_WATCHED
flags lazily in __fsnotify_parent() for each accessed child.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
565,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44988,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

net: dsa: mv88e6xxx: Fix out-of-bound access

If an ATU violation was caused by a CPU Load operation, the SPID could
be larger than DSA_MAX_PORTS (the size of mv88e6xxx_chip.ports[] array).",Linux,Linux,"27a2fa0098171199022affa76bdf15d77585457f, 75c05a74e745ae7d663b04d75777af80ada2233c, 75c05a74e745ae7d663b04d75777af80ada2233c, 75c05a74e745ae7d663b04d75777af80ada2233c, 75c05a74e745ae7d663b04d75777af80ada2233c, 75c05a74e745ae7d663b04d75777af80ada2233c, 75c05a74e745ae7d663b04d75777af80ada2233c, 75c05a74e745ae7d663b04d75777af80ada2233c"
564,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-50035,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ppp: fix ppp_async_encode() illegal access

syzbot reported an issue in ppp_async_encode() [1]

In this case, pppoe_sendmsg() is called with a zero size.
Then ppp_async_encode() is called with an empty skb.

BUG: KMSAN: uninit-value in ppp_async_encode drivers/net/ppp/ppp_async.c:545 [inline]
 BUG: KMSAN: uninit-value in ppp_async_push+0xb4f/0x2660 drivers/net/ppp/ppp_async.c:675
  ppp_async_encode drivers/net/ppp/ppp_async.c:545 [inline]
  ppp_async_push+0xb4f/0x2660 drivers/net/ppp/ppp_async.c:675
  ppp_async_send+0x130/0x1b0 drivers/net/ppp/ppp_async.c:634
  ppp_channel_bridge_input drivers/net/ppp/ppp_generic.c:2280 [inline]
  ppp_input+0x1f1/0xe60 drivers/net/ppp/ppp_generic.c:2304
  pppoe_rcv_core+0x1d3/0x720 drivers/net/ppp/pppoe.c:379
  sk_backlog_rcv+0x13b/0x420 include/net/sock.h:1113
  __release_sock+0x1da/0x330 net/core/sock.c:3072
  release_sock+0x6b/0x250 net/core/sock.c:3626
  pppoe_sendmsg+0x2b8/0xb90 drivers/net/ppp/pppoe.c:903
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

Uninit was created at:
  slab_post_alloc_hook mm/slub.c:4092 [inline]
  slab_alloc_node mm/slub.c:4135 [inline]
  kmem_cache_alloc_node_noprof+0x6bf/0xb80 mm/slub.c:4187
  kmalloc_reserve+0x13d/0x4a0 net/core/skbuff.c:587
  __alloc_skb+0x363/0x7b0 net/core/skbuff.c:678
  alloc_skb include/linux/skbuff.h:1322 [inline]
  sock_wmalloc+0xfe/0x1a0 net/core/sock.c:2732
  pppoe_sendmsg+0x3a7/0xb90 drivers/net/ppp/pppoe.c:867
  sock_sendmsg_nosec net/socket.c:729 [inline]
  __sock_sendmsg+0x30f/0x380 net/socket.c:744
  ____sys_sendmsg+0x903/0xb60 net/socket.c:2602
  ___sys_sendmsg+0x28d/0x3c0 net/socket.c:2656
  __sys_sendmmsg+0x3c1/0x960 net/socket.c:2742
  __do_sys_sendmmsg net/socket.c:2771 [inline]
  __se_sys_sendmmsg net/socket.c:2768 [inline]
  __x64_sys_sendmmsg+0xbc/0x120 net/socket.c:2768
  x64_sys_call+0xb6e/0x3ba0 arch/x86/include/generated/asm/syscalls_64.h:308
  do_syscall_x64 arch/x86/entry/common.c:52 [inline]
  do_syscall_64+0xcd/0x1e0 arch/x86/entry/common.c:83
 entry_SYSCALL_64_after_hwframe+0x77/0x7f

CPU: 1 UID: 0 PID: 5411 Comm: syz.1.14 Not tainted 6.12.0-rc1-syzkaller-00165-g360c1f1f24c6 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
602,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44967,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

drm/mgag200: Bind I2C lifetime to DRM device

Managed cleanup with devm_add_action_or_reset() will release the I2C
adapter when the underlying Linux device goes away. But the connector
still refers to it, so this cleanup leaves behind a stale pointer
in struct drm_connector.ddc.

Bind the lifetime of the I2C adapter to the connector's lifetime by
using DRM's managed release. When the DRM device goes away (after
the Linux device) DRM will first clean up the connector and then
clean up the I2C adapter.",Linux,Linux,"b279df242972ae816a75cf1cc732af836f999100, b279df242972ae816a75cf1cc732af836f999100, b279df242972ae816a75cf1cc732af836f999100, b279df242972ae816a75cf1cc732af836f999100"
563,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47705,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

block: fix potential invalid pointer dereference in blk_add_partition

The blk_add_partition() function initially used a single if-condition
(IS_ERR(part)) to check for errors when adding a partition. This was
modified to handle the specific case of -ENXIO separately, allowing the
function to proceed without logging the error in this case. However,
this change unintentionally left a path where md_autodetect_dev()
could be called without confirming that part is a valid pointer.

This commit separates the error handling logic by splitting the
initial if-condition, improving code readability and handling specific
error scenarios explicitly. The function now distinguishes the general
error case from -ENXIO without altering the existing behavior of
md_autodetect_dev() calls.",Linux,Linux,"b72053072c0bbe9f1cdfe2ffa3c201c185da2201, b72053072c0bbe9f1cdfe2ffa3c201c185da2201, b72053072c0bbe9f1cdfe2ffa3c201c185da2201, b72053072c0bbe9f1cdfe2ffa3c201c185da2201, b72053072c0bbe9f1cdfe2ffa3c201c185da2201, b72053072c0bbe9f1cdfe2ffa3c201c185da2201, b72053072c0bbe9f1cdfe2ffa3c201c185da2201"
582,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46681,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

pktgen: use cpus_read_lock() in pg_net_init()

I have seen the WARN_ON(smp_processor_id() != cpu) firing
in pktgen_thread_worker() during tests.

We must use cpus_read_lock()/cpus_read_unlock()
around the for_each_online_cpu(cpu) loop.

While we are at it use WARN_ON_ONCE() to avoid a possible syslog flood.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
573,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2022-36402,6.3,n/a,CWE-118 Incorrect Access of Indexable Resource ('Range Error'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"An integer overflow vulnerability was found in vmwgfx driver in drivers/gpu/vmxgfx/vmxgfx_execbuf.c in GPU component of Linux kernel with device file '/dev/dri/renderD128 (or Dxxx)'. This flaw allows a local attacker with a user account on the system to gain privilege, causing a denial of service(DoS).",Linux,kernel,v4.3-rc1
593,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-45005,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: s390: fix validity interception issue when gisa is switched off

We might run into a SIE validity if gisa has been disabled either via using
kernel parameter ""kvm.use_gisa=0"" or by setting the related sysfs
attribute to N (echo N >/sys/module/kvm/parameters/use_gisa).

The validity is caused by an invalid value in the SIE control block's
gisa designation. That happens because we pass the uninitialized gisa
origin to virt_to_phys() before writing it to the gisa designation.

To fix this we return 0 in kvm_s390_get_gisa_desc() if the origin is 0.
kvm_s390_get_gisa_desc() is used to determine which gisa designation to
set in the SIE control block. A value of 0 in the gisa designation disables
gisa usage.

The issue surfaces in the host kernel with the following kernel message as
soon a new kvm guest start is attemted.

kvm: unhandled validity intercept 0x1011
WARNING: CPU: 0 PID: 781237 at arch/s390/kvm/intercept.c:101 kvm_handle_sie_intercept+0x42e/0x4d0 [kvm]
Modules linked in: vhost_net tap tun xt_CHECKSUM xt_MASQUERADE xt_conntrack ipt_REJECT xt_tcpudp nft_compat x_tables nf_nat_tftp nf_conntrack_tftp vfio_pci_core irqbypass vhost_vsock vmw_vsock_virtio_transport_common vsock vhost vhost_iotlb kvm nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables sunrpc mlx5_ib ib_uverbs ib_core mlx5_core uvdevice s390_trng eadm_sch vfio_ccw zcrypt_cex4 mdev vfio_iommu_type1 vfio sch_fq_codel drm i2c_core loop drm_panel_orientation_quirks configfs nfnetlink lcs ctcm fsm dm_service_time ghash_s390 prng chacha_s390 libchacha aes_s390 des_s390 libdes sha3_512_s390 sha3_256_s390 sha512_s390 sha256_s390 sha1_s390 sha_common dm_mirror dm_region_hash dm_log zfcp scsi_transport_fc scsi_dh_rdac scsi_dh_emc scsi_dh_alua pkey zcrypt dm_multipath rng_core autofs4 [last unloaded: vfio_pci]
CPU: 0 PID: 781237 Comm: CPU 0/KVM Not tainted 6.10.0-08682-gcad9f11498ea #6
Hardware name: IBM 3931 A01 701 (LPAR)
Krnl PSW : 0704c00180000000 000003d93deb0122 (kvm_handle_sie_intercept+0x432/0x4d0 [kvm])
           R:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:0 PM:0 RI:0 EA:3
Krnl GPRS: 000003d900000027 000003d900000023 0000000000000028 000002cd00000000
           000002d063a00900 00000359c6daf708 00000000000bebb5 0000000000001eff
           000002cfd82e9000 000002cfd80bc000 0000000000001011 000003d93deda412
           000003ff8962df98 000003d93de77ce0 000003d93deb011e 00000359c6daf960
Krnl Code: 000003d93deb0112: c020fffe7259	larl	%r2,000003d93de7e5c4
           000003d93deb0118: c0e53fa8beac	brasl	%r14,000003d9bd3c7e70
          #000003d93deb011e: af000000		mc	0,0
          >000003d93deb0122: a728ffea		lhi	%r2,-22
           000003d93deb0126: a7f4fe24		brc	15,000003d93deafd6e
           000003d93deb012a: 9101f0b0		tm	176(%r15),1
           000003d93deb012e: a774fe48		brc	7,000003d93deafdbe
           000003d93deb0132: 40a0f0ae		sth	%r10,174(%r15)
Call Trace:
 [<000003d93deb0122>] kvm_handle_sie_intercept+0x432/0x4d0 [kvm]
([<000003d93deb011e>] kvm_handle_sie_intercept+0x42e/0x4d0 [kvm])
 [<000003d93deacc10>] vcpu_post_run+0x1d0/0x3b0 [kvm]
 [<000003d93deaceda>] __vcpu_run+0xea/0x2d0 [kvm]
 [<000003d93dead9da>] kvm_arch_vcpu_ioctl_run+0x16a/0x430 [kvm]
 [<000003d93de93ee0>] kvm_vcpu_ioctl+0x190/0x7c0 [kvm]
 [<000003d9bd728b4e>] vfs_ioctl+0x2e/0x70
 [<000003d9bd72a092>] __s390x_sys_ioctl+0xc2/0xd0
 [<000003d9be0e9222>] __do_syscall+0x1f2/0x2e0
 [<000003d9be0f9a90>] system_call+0x70/0x98
Last Breaking-Event-Address:
 [<000003d9bd3c7f58>] __warn_printk+0xe8/0xf0",Linux,Linux,"fe0ef00304639cae82df7c9ad6a15286bd5f876e, fe0ef00304639cae82df7c9ad6a15286bd5f876e, fe0ef00304639cae82df7c9ad6a15286bd5f876e"
592,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-41012,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

filelock: Remove locks reliably when fcntl/close race is detected

When fcntl_setlk() races with close(), it removes the created lock with
do_lock_file_wait().
However, LSMs can allow the first do_lock_file_wait() that created the lock
while denying the second do_lock_file_wait() that tries to remove the lock.
Separately, posix_lock_file() could also fail to
remove a lock due to GFP_KERNEL allocation failure (when splitting a range
in the middle).

After the bug has been triggered, use-after-free reads will occur in
lock_get_status() when userspace reads /proc/locks. This can likely be used
to read arbitrary kernel memory, but can't corrupt kernel memory.

Fix it by calling locks_remove_posix() instead, which is designed to
reliably get rid of POSIX locks associated with the given file and
files_struct and is also used by filp_flush().",Linux,Linux,"c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d, c293621bbf678a3d85e3ed721c3921c8a670610d"
598,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46756,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,n/a,n/a,n/a,
597,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-44974,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

mptcp: pm: avoid possible UaF when selecting endp

select_local_address() and select_signal_address() both select an
endpoint entry from the list inside an RCU protected section, but return
a reference to it, to be read later on. If the entry is dereferenced
after the RCU unlock, reading info could cause a Use-after-Free.

A simple solution is to copy the required info while inside the RCU
protected section to avoid any risk of UaF later. The address ID might
need to be modified later to handle the ID0 case later, so a copy seems
OK to deal with.",Linux,Linux,"01cacb00b35cb62b139f07d5f84bcf0eeda8eff6, 01cacb00b35cb62b139f07d5f84bcf0eeda8eff6, 01cacb00b35cb62b139f07d5f84bcf0eeda8eff6, 01cacb00b35cb62b139f07d5f84bcf0eeda8eff6, 01cacb00b35cb62b139f07d5f84bcf0eeda8eff6, 01cacb00b35cb62b139f07d5f84bcf0eeda8eff6"
596,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47667,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: keystone: Add workaround for Errata #i2037 (AM65x SR 1.0)

Errata #i2037 in AM65x/DRA80xM Processors Silicon Revision 1.0
(SPRZ452D_July 2018_Revised December 2019 [1]) mentions when an
inbound PCIe TLP spans more than two internal AXI 128-byte bursts,
the bus may corrupt the packet payload and the corrupt data may
cause associated applications or the processor to hang.

The workaround for Errata #i2037 is to limit the maximum read
request size and maximum payload size to 128 bytes. Add workaround
for Errata #i2037 here.

The errata and workaround is applicable only to AM65x SR 1.0 and
later versions of the silicon will have this fixed.

[1] -> https://www.ti.com/lit/er/sprz452i/sprz452i.pdf",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
584,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43856,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

dma: fix call order in dmam_free_coherent

dmam_free_coherent() frees a DMA allocation, which makes the
freed vaddr available for reuse, then calls devres_destroy()
to remove and free the data structure used to track the DMA
allocation. Between the two calls, it is possible for a
concurrent task to make an allocation with the same vaddr
and add it to the devres list.

If this happens, there will be two entries in the devres list
with the same vaddr and devres_destroy() can free the wrong
entry, triggering the WARN_ON() in dmam_match.

Fix by destroying the devres entry before freeing the DMA
allocation.

  kokonut //net/encryption
    http://sponge2/b9145fe6-0f72-4325-ac2f-a84d81075b03",Linux,Linux,"9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759, 9ac7849e35f705830f7b016ff272b0ff1f7ff759"
595,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46746,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

HID: amd_sfh: free driver_data after destroying hid device

HID driver callbacks aren't called anymore once hid_destroy_device() has
been called. Hence, hid driver_data should be freed only after the
hid_destroy_device() function returned as driver_data is used in several
callbacks.

I observed a crash with kernel 6.10.0 on my T14s Gen 3, after enabling
KASAN to debug memory allocation, I got this output:

  [   13.050438] ==================================================================
  [   13.054060] BUG: KASAN: slab-use-after-free in amd_sfh_get_report+0x3ec/0x530 [amd_sfh]
  [   13.054809] psmouse serio1: trackpoint: Synaptics TrackPoint firmware: 0x02, buttons: 3/3
  [   13.056432] Read of size 8 at addr ffff88813152f408 by task (udev-worker)/479

  [   13.060970] CPU: 5 PID: 479 Comm: (udev-worker) Not tainted 6.10.0-arch1-2 #1 893bb55d7f0073f25c46adbb49eb3785fefd74b0
  [   13.063978] Hardware name: LENOVO 21CQCTO1WW/21CQCTO1WW, BIOS R22ET70W (1.40 ) 03/21/2024
  [   13.067860] Call Trace:
  [   13.069383] input: TPPS/2 Synaptics TrackPoint as /devices/platform/i8042/serio1/input/input8
  [   13.071486]  <TASK>
  [   13.071492]  dump_stack_lvl+0x5d/0x80
  [   13.074870] snd_hda_intel 0000:33:00.6: enabling device (0000 -> 0002)
  [   13.078296]  ? amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]
  [   13.082199]  print_report+0x174/0x505
  [   13.085776]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
  [   13.089367]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.093255]  ? amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]
  [   13.097464]  kasan_report+0xc8/0x150
  [   13.101461]  ? amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]
  [   13.105802]  amd_sfh_get_report+0x3ec/0x530 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]
  [   13.110303]  amdtp_hid_request+0xb8/0x110 [amd_sfh 05f43221435b5205f734cd9da29399130f398a38]
  [   13.114879]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.119450]  sensor_hub_get_feature+0x1d3/0x540 [hid_sensor_hub 3f13be3016ff415bea03008d45d99da837ee3082]
  [   13.124097]  hid_sensor_parse_common_attributes+0x4d0/0xad0 [hid_sensor_iio_common c3a5cbe93969c28b122609768bbe23efe52eb8f5]
  [   13.127404]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.131925]  ? __pfx_hid_sensor_parse_common_attributes+0x10/0x10 [hid_sensor_iio_common c3a5cbe93969c28b122609768bbe23efe52eb8f5]
  [   13.136455]  ? _raw_spin_lock_irqsave+0x96/0xf0
  [   13.140197]  ? __pfx__raw_spin_lock_irqsave+0x10/0x10
  [   13.143602]  ? devm_iio_device_alloc+0x34/0x50 [industrialio 3d261d5e5765625d2b052be40e526d62b1d2123b]
  [   13.147234]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.150446]  ? __devm_add_action+0x167/0x1d0
  [   13.155061]  hid_gyro_3d_probe+0x120/0x7f0 [hid_sensor_gyro_3d 63da36a143b775846ab2dbb86c343b401b5e3172]
  [   13.158581]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.161814]  platform_probe+0xa2/0x150
  [   13.165029]  really_probe+0x1e3/0x8a0
  [   13.168243]  __driver_probe_device+0x18c/0x370
  [   13.171500]  driver_probe_device+0x4a/0x120
  [   13.175000]  __driver_attach+0x190/0x4a0
  [   13.178521]  ? __pfx___driver_attach+0x10/0x10
  [   13.181771]  bus_for_each_dev+0x106/0x180
  [   13.185033]  ? __pfx__raw_spin_lock+0x10/0x10
  [   13.188229]  ? __pfx_bus_for_each_dev+0x10/0x10
  [   13.191446]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.194382]  bus_add_driver+0x29e/0x4d0
  [   13.197328]  driver_register+0x1a5/0x360
  [   13.200283]  ? __pfx_hid_gyro_3d_platform_driver_init+0x10/0x10 [hid_sensor_gyro_3d 63da36a143b775846ab2dbb86c343b401b5e3172]
  [   13.203362]  do_one_initcall+0xa7/0x380
  [   13.206432]  ? __pfx_do_one_initcall+0x10/0x10
  [   13.210175]  ? srso_alias_return_thunk+0x5/0xfbef5
  [   13.213211]  ? kasan_unpoison+0x44/0x70
  [   13.216688]  do_init_module+0x238/0x750
  [   13.2196
---truncated---",Linux,Linux,"4f567b9f8141a86c7d878fadf136e5d1408e3e61, 4f567b9f8141a86c7d878fadf136e5d1408e3e61, 4f567b9f8141a86c7d878fadf136e5d1408e3e61, 4f567b9f8141a86c7d878fadf136e5d1408e3e61, 4f567b9f8141a86c7d878fadf136e5d1408e3e61"
594,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47756,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

PCI: keystone: Fix if-statement expression in ks_pcie_quirk()

This code accidentally uses && where || was intended.  It potentially
results in a NULL dereference.

Thus, fix the if-statement expression to use the correct condition.

[kwilczynski: commit log]",Linux,Linux,"cfb006e185f64edbbdf7869eac352442bc76b8f6, ebbdbbc580c1695dec283d0ba6448729dc993246, 135843c351c08df72bdd4b4ebea53c8052a76881, af218c803fe298ddf00abef331aa526b20d7ea61, 576d0fb6f8d4bd4695e70eee173a1b9c7bae9572, dd47051c76c8acd8cb983f01b4d1265da29cb66a, 86f271f22bbb6391410a07e08d6ca3757fda01fa, 86f271f22bbb6391410a07e08d6ca3757fda01fa"
600,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49954,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

static_call: Replace pointless WARN_ON() in static_call_module_notify()

static_call_module_notify() triggers a WARN_ON(), when memory allocation
fails in __static_call_add_module().

That's not really justified, because the failure case must be correctly
handled by the well known call chain and the error code is passed
through to the initiating userspace application.

A memory allocation fail is not a fatal problem, but the WARN_ON() takes
the machine out when panic_on_warn is set.

Replace it with a pr_warn().",Linux,Linux,"9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08, 9183c3f9ed710a8edf1a61e8a96d497258d26e08"
601,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46739,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

uio_hv_generic: Fix kernel NULL pointer dereference in hv_uio_rescind

For primary VM Bus channels, primary_channel pointer is always NULL. This
pointer is valid only for the secondary channels. Also, rescind callback
is meant for primary channels only.

Fix NULL pointer dereference by retrieving the device_obj from the parent
for the primary channel.",Linux,Linux,"ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3, ca3cda6fcf1e922213a0cc58e708ffb999151db3"
591,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2020-12352,n/a,n/a,information disclosure,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,Improper access control in BlueZ may allow an unauthenticated user to potentially enable information disclosure via adjacent access.,n/a,BlueZ,See references
590,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49938,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

wifi: ath9k_htc: Use __skb_set_length() for resetting urb before resubmit

Syzbot points out that skb_trim() has a sanity check on the existing length of
the skb, which can be uninitialised in some error paths. The intent here is
clearly just to reset the length to zero before resubmitting, so switch to
calling __skb_set_length(skb, 0) directly. In addition, __skb_set_length()
already contains a call to skb_reset_tail_pointer(), so remove the redundant
call.

The syzbot report came from ath9k_hif_usb_reg_in_cb(), but there's a similar
usage of skb_trim() in ath9k_hif_usb_rx_cb(), change both while we're at it.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
589,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-26947,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

ARM: 9359/1: flush: check if the folio is reserved for no-mapping addresses

Since commit a4d5613c4dc6 (""arm: extend pfn_valid to take into account
freed memory map alignment"") changes the semantics of pfn_valid() to check
presence of the memory map for a PFN. A valid page for an address which
is reserved but not mapped by the kernel[1], the system crashed during
some uio test with the following memory layout:

 node   0: [mem 0x00000000c0a00000-0x00000000cc8fffff]
 node   0: [mem 0x00000000d0000000-0x00000000da1fffff]
 the uio layout is：0xc0900000, 0x100000

the crash backtrace like:

  Unable to handle kernel paging request at virtual address bff00000
  [...]
  CPU: 1 PID: 465 Comm: startapp.bin Tainted: G           O      5.10.0 #1
  Hardware name: Generic DT based system
  PC is at b15_flush_kern_dcache_area+0x24/0x3c
  LR is at __sync_icache_dcache+0x6c/0x98
  [...]
   (b15_flush_kern_dcache_area) from (__sync_icache_dcache+0x6c/0x98)
   (__sync_icache_dcache) from (set_pte_at+0x28/0x54)
   (set_pte_at) from (remap_pfn_range+0x1a0/0x274)
   (remap_pfn_range) from (uio_mmap+0x184/0x1b8 [uio])
   (uio_mmap [uio]) from (__mmap_region+0x264/0x5f4)
   (__mmap_region) from (__do_mmap_mm+0x3ec/0x440)
   (__do_mmap_mm) from (do_mmap+0x50/0x58)
   (do_mmap) from (vm_mmap_pgoff+0xfc/0x188)
   (vm_mmap_pgoff) from (ksys_mmap_pgoff+0xac/0xc4)
   (ksys_mmap_pgoff) from (ret_fast_syscall+0x0/0x5c)
  Code: e0801001 e2423001 e1c00003 f57ff04f (ee070f3e)
  ---[ end trace 09cf0734c3805d52 ]---
  Kernel panic - not syncing: Fatal exception

So check if PG_reserved was set to solve this issue.

[1]: https://lore.kernel.org/lkml/Zbtdue57RO0QScJM@linux.ibm.com/",Linux,Linux,"a4d5613c4dc6d413e0733e37db9d116a2a36b9f3, a4d5613c4dc6d413e0733e37db9d116a2a36b9f3, a4d5613c4dc6d413e0733e37db9d116a2a36b9f3, a4d5613c4dc6d413e0733e37db9d116a2a36b9f3"
588,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46768,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

hwmon: (hp-wmi-sensors) Check if WMI event data exists

The BIOS can choose to return no event data in response to a
WMI event, so the ACPI object passed to the WMI notify handler
can be NULL.

Check for such a situation and ignore the event in such a case.",Linux,Linux,"23902f98f8d4811ab84dde6419569a5b374f8122, 23902f98f8d4811ab84dde6419569a5b374f8122, 23902f98f8d4811ab84dde6419569a5b374f8122"
587,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-43913,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nvme: apple: fix device reference counting

Drivers must call nvme_uninit_ctrl after a successful nvme_init_ctrl.
Split the allocation side out to make the error handling boundary easier
to navigate. The apple driver had been doing this wrong, leaking the
controller device memory on a tagset failure.",Linux,Linux,"5bd2927aceba181b84286e00aa2f56e117e699c3, 5bd2927aceba181b84286e00aa2f56e117e699c3, 5bd2927aceba181b84286e00aa2f56e117e699c3"
586,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-46758,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,n/a,n/a,n/a,
585,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-49924,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

fbdev: pxafb: Fix possible use after free in pxafb_task()

In the pxafb_probe function, it calls the pxafb_init_fbinfo function,
after which &fbi->task is associated with pxafb_task. Moreover,
within this pxafb_init_fbinfo function, the pxafb_blank function
within the &pxafb_ops struct is capable of scheduling work.

If we remove the module which will call pxafb_remove to make cleanup,
it will call unregister_framebuffer function which can call
do_unregister_framebuffer to free fbi->fb through
put_fb_info(fb_info), while the work mentioned above will be used.
The sequence of operations that may lead to a UAF bug is as follows:

CPU0                                                CPU1

                                   | pxafb_task
pxafb_remove                       |
unregister_framebuffer(info)       |
do_unregister_framebuffer(fb_info) |
put_fb_info(fb_info)               |
// free fbi->fb                    | set_ctrlr_state(fbi, state)
                                   | __pxafb_lcd_power(fbi, 0)
                                   | fbi->lcd_power(on, &fbi->fb.var)
                                   | //use fbi->fb

Fix it by ensuring that the work is canceled before proceeding
with the cleanup in pxafb_remove.

Note that only root user can remove the driver at runtime.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
599,Multiples vulnérabilités dans le noyau Linux d'Ubuntu ,Avis,2025-01-10,CVE-2024-47737,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0022/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: call cache_put if xdr_reserve_space returns NULL

If not enough buffer space available, but idmap_lookup has triggered
lookup_fn which calls cache_get and returns successfully. Then we
missed to call cache_put here which pairs with cache_get.

Reviwed-by: Jeff Layton <jlayton@kernel.org>",Linux,Linux,"ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd, ddd1ea56367202f6c99135cd59de7a97af4c4ffd"
56,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-50868,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the ""NSEC3"" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",n/a,n/a,n/a
69,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-42131,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

mm: avoid overflows in dirty throttling logic

The dirty throttling logic is interspersed with assumptions that dirty
limits in PAGE_SIZE units fit into 32-bit (so that various multiplications
fit into 64-bits).  If limits end up being larger, we will hit overflows,
possible divisions by 0 etc.  Fix these problems by never allowing so
large dirty limits as they have dubious practical value anyway.  For
dirty_bytes / dirty_background_bytes interfaces we can just refuse to set
so large limits.  For dirty_ratio / dirty_background_ratio it isn't so
simple as the dirty limit is computed from the amount of available memory
which can change due to memory hotplug etc.  So when converting dirty
limits from ratios to numbers of pages, we just don't allow the result to
exceed UINT_MAX.

This is root-only triggerable problem which occurs when the operator
sets dirty limits to >16 TB.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
57,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-45492,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,An issue was discovered in libexpat before 2.6.3. nextScaffoldPart in xmlparse.c can have an integer overflow for m_groupSize on 32-bit platforms (where UINT_MAX equals SIZE_MAX).,n/a,n/a,n/a
54,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-3019,n/a,n/a,Use After Free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A DMA reentrancy issue leading to a use-after-free error was found in the e1000e NIC emulation code in QEMU. This issue could allow a privileged guest user to crash the QEMU process on the host, resulting in a denial of service.",Red Hat,Red Hat Enterprise Linux 8,8090020231206155326.a75119d5
55,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2022-24805,6.5,n/a,CWE-120 Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"net-snmp provides various tools relating to the Simple Network Management Protocol. Prior to version 5.9.2, a buffer overflow in the handling of the `INDEX` of             `NET-SNMP-VACM-MIB` can cause an out-of-bounds memory access. A user with read-only credentials can exploit the issue. Version 5.9.2 contains a patch. Users should use strong SNMPv3 credentials and avoid sharing the credentials. Those who must use SNMPv1 or SNMPv2c should use a complex community string and enhance the protection by restricting access to a given IP address range.
",net-snmp,net-snmp,0
51,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2022-24809,6.5,n/a,CWE-476 NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"net-snmp provides various tools relating to the Simple Network Management Protocol. Prior to version 5.9.2, a user with read-only credentials can use a malformed OID in a `GET-NEXT` to the `nsVacmAccessTable` to cause a NULL pointer dereference. Version 5.9.2 contains a patch. Users should use strong SNMPv3 credentials and avoid sharing the credentials. Those who must use SNMPv1 or SNMPv2c should use a complex community string and enhance the protection by restricting access to a given IP address range.
",net-snmp,net-snmp,0
53,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-35791,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

KVM: SVM: Flush pages under kvm->lock to fix UAF in svm_register_enc_region()

Do the cache flush of converted pages in svm_register_enc_region() before
dropping kvm->lock to fix use-after-free issues where region and/or its
array of pages could be freed by a different task, e.g. if userspace has
__unregister_enc_region_locked() already queued up for the region.

Note, the ""obvious"" alternative of using local variables doesn't fully
resolve the bug, as region->pages is also dynamically allocated.  I.e. the
region structure itself would be fine, but region->pages could be freed.

Flushing multiple pages under kvm->lock is unfortunate, but the entire
flow is a rare slow path, and the manual flush is only needed on CPUs that
lack coherency for encrypted memory.",Linux,Linux,"4f627ecde7329e476a077bb0590db8f27bb8f912, 19a23da53932bc8011220bd8c410cb76012de004, 19a23da53932bc8011220bd8c410cb76012de004, 19a23da53932bc8011220bd8c410cb76012de004, 19a23da53932bc8011220bd8c410cb76012de004, 19a23da53932bc8011220bd8c410cb76012de004"
52,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21599,7.5,Élevée,CWE-401 Missing Release of Memory after Effective Lifetime,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A Missing Release of Memory after Effective Lifetime vulnerability in the Juniper Tunnel Driver (jtd) of Juniper Networks Junos OS Evolved allows an unauthenticated network-based attacker to cause Denial of Service. 

Receipt of specifically malformed IPv6 packets, destined to the device, causes kernel memory to not be freed, resulting in memory exhaustion leading to a system crash and Denial of Service (DoS). Continuous receipt and processing of these packets will continue to exhaust kernel memory, creating a sustained Denial of Service (DoS) condition.
This issue only affects systems configured with IPv6.

This issue affects Junos OS Evolved: 



  *  from 22.4-EVO before 22.4R3-S5-EVO, 
  *  from 23.2-EVO before 23.2R2-S2-EVO, 
  *  from 23.4-EVO before 23.4R2-S2-EVO, 
  *  from 24.2-EVO before 24.2R1-S2-EVO, 24.2R2-EVO.




This issue does not affect Juniper Networks Junos OS Evolved versions prior to 22.4R1-EVO.",Juniper Networks,Junos OS Evolved,"22.4-EVO, 23.2-EVO, 23.4-EVO, 24.2-EVO"
59,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-3255,n/a,n/a,Loop with Unreachable Exit Condition ('Infinite Loop'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,A flaw was found in the QEMU built-in VNC server while processing ClientCutText messages. A wrong exit condition may lead to an infinite loop when inflating an attacker controlled zlib buffer in the `inflate_buffer` function. This could allow a remote authenticated client who is able to send a clipboard to the VNC server to trigger a denial of service.,Red Hat,Red Hat Enterprise Linux 8,8100020240314161907.e155f54d
50,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21592,5.5,Moyenne,CWE-200 Exposure of Sensitive Information to an Unauthorized Actor,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"An Exposure of Sensitive Information to an Unauthorized Actor vulnerability in the command-line interface (CLI) of Juniper Networks Junos OS on SRX Series devices allows a local, low-privileged user with access to the Junos CLI to view the contents of sensitive files on the file system.

Through the execution of either 'show services advanced-anti-malware' or 'show services security-intelligence' command, a user with limited permissions (e.g., a low privilege login class user) can access protected files that should not be accessible to the user. These files may contain sensitive information that can be used to cause further impact to the system.


This issue affects Junos OS SRX Series:



  *  All versions before 21.4R3-S8,

  *  from 22.2 before 22.2R3-S5,

  *  from 22.3 before 22.3R3-S3,
  *  from 22.4 before 22.4R3-S2,

  *  from 23.2 before 23.2R2-S1,

  *  from 23.4 before 23.4R2.",Juniper Networks,Junos OS,"0, 22.2, 22.3, 22.4, 23.2, 23.4"
58,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-36883,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

net: fix out-of-bounds access in ops_init

net_alloc_generic is called by net_alloc, which is called without any
locking. It reads max_gen_ptrs, which is changed under pernet_ops_rwsem. It
is read twice, first to allocate an array, then to set s.len, which is
later used to limit the bounds of the array access.

It is possible that the array is allocated and another thread is
registering a new pernet ops, increments max_gen_ptrs, which is then used
to set s.len with a larger than allocated length for the variable array.

Fix it by reading max_gen_ptrs only once in net_alloc_generic. If
max_gen_ptrs is later incremented, it will be caught in net_assign_generic.",Linux,Linux,"073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672, 073862ba5d249c20bd5c49fc6d904ff0e1f6a672"
67,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-6240,n/a,n/a,Observable Discrepancy,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A Marvin vulnerability side-channel leakage was found in the RSA decryption operation in the Linux Kernel. This issue may allow a network attacker to decrypt ciphertexts or forge signatures, limiting the services that use that private key.",Red Hat,Red Hat Enterprise Linux 8,0:4.18.0-553.5.1.rt7.346.el8_10
60,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-26946,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

kprobes/x86: Use copy_from_kernel_nofault() to read from unsafe address

Read from an unsafe address with copy_from_kernel_nofault() in
arch_adjust_kprobe_addr() because this function is used before checking
the address is in text or not. Syzcaller bot found a bug and reported
the case if user specifies inaccessible data area,
arch_adjust_kprobe_addr() will cause a kernel panic.

[ mingo: Clarified the comment. ]",Linux,Linux,"cc66bb91457827f62e2b6cb2518666820f0a6c48, cc66bb91457827f62e2b6cb2518666820f0a6c48, cc66bb91457827f62e2b6cb2518666820f0a6c48, cc66bb91457827f62e2b6cb2518666820f0a6c48, cc66bb91457827f62e2b6cb2518666820f0a6c48"
61,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-26720,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,n/a,n/a,n/a,
62,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-4408,7.5,Élevée,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"The DNS message parsing code in `named` includes a section whose computational complexity is overly high. It does not cause problems for typical DNS traffic, but crafted queries and responses may cause excessive CPU load on the affected `named` instance by exploiting this flaw. This issue affects both authoritative servers and recursive resolvers.
This issue affects BIND 9 versions 9.0.0 through 9.16.45, 9.18.0 through 9.18.21, 9.19.0 through 9.19.19, 9.9.3-S1 through 9.11.37-S1, 9.16.8-S1 through 9.16.45-S1, and 9.18.11-S1 through 9.18.21-S1.",ISC,BIND 9,"9.0.0, 9.18.0, 9.19.0, 9.9.3-S1, 9.16.8-S1, 9.18.11-S1"
63,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-45490,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,An issue was discovered in libexpat before 2.6.3. xmlparse.c does not reject a negative length for XML_ParseBuffer.,n/a,n/a,n/a
64,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-45491,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,An issue was discovered in libexpat before 2.6.3. dtdCopy in xmlparse.c can have an integer overflow for nDefaultAtts on 32-bit platforms (where UINT_MAX equals SIZE_MAX).,n/a,n/a,n/a
65,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2022-24807,6.5,n/a,CWE-120 Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"net-snmp provides various tools relating to the Simple Network Management Protocol. Prior to version 5.9.2, a malformed OID in a SET request to `SNMP-VIEW-BASED-ACM-MIB::vacmAccessTable` can cause an out-of-bounds memory access. A user with read-write credentials can exploit the issue. Version 5.9.2 contains a patch. Users should use strong SNMPv3 credentials and avoid sharing the credentials. Those who must use SNMPv1 or SNMPv2c should use a complex community string and enhance the protection by restricting access to a given IP address range.
",net-snmp,net-snmp,0
66,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-39894,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"OpenSSH 9.5 through 9.7 before 9.8 sometimes allows timing attacks against echo-off password entry (e.g., for su and Sudo) because of an ObscureKeystrokeTiming logic error. Similarly, other timing attacks against keystroke entry could occur.",n/a,n/a,n/a
68,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-6683,n/a,n/a,NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A flaw was found in the QEMU built-in VNC server while processing ClientCutText messages. The qemu_clipboard_request() function can be reached before vnc_server_cut_text_caps() was called and had the chance to initialize the clipboard peer, leading to a NULL pointer dereference. This could allow a malicious authenticated VNC client to crash QEMU and trigger a denial of service.",Red Hat,Red Hat Enterprise Linux 8,8100020240314161907.e155f54d
70,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-1488,n/a,n/a,External Control of System or Configuration Setting,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A vulnerability was found in Unbound due to incorrect default permissions, allowing any process outside the unbound group to modify the unbound runtime configuration. If a process can connect over localhost to port 8953, it can alter the configuration of unbound.service. This flaw allows an unprivileged attacker to manipulate a running instance, potentially altering forwarders, allowing them to track all queries forwarded by the local resolver, and, in some cases, disrupting resolving altogether.",n/a,n/a,1.16.2
48,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-28834,n/a,n/a,Use of a Broken or Risky Cryptographic Algorithm,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",n/a,n/a,3.7.6-23
49,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-26629,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

nfsd: fix RELEASE_LOCKOWNER

The test on so_count in nfsd4_release_lockowner() is nonsense and
harmful.  Revert to using check_for_locks(), changing that to not sleep.

First: harmful.
As is documented in the kdoc comment for nfsd4_release_lockowner(), the
test on so_count can transiently return a false positive resulting in a
return of NFS4ERR_LOCKS_HELD when in fact no locks are held.  This is
clearly a protocol violation and with the Linux NFS client it can cause
incorrect behaviour.

If RELEASE_LOCKOWNER is sent while some other thread is still
processing a LOCK request which failed because, at the time that request
was received, the given owner held a conflicting lock, then the nfsd
thread processing that LOCK request can hold a reference (conflock) to
the lock owner that causes nfsd4_release_lockowner() to return an
incorrect error.

The Linux NFS client ignores that NFS4ERR_LOCKS_HELD error because it
never sends NFS4_RELEASE_LOCKOWNER without first releasing any locks, so
it knows that the error is impossible.  It assumes the lock owner was in
fact released so it feels free to use the same lock owner identifier in
some later locking request.

When it does reuse a lock owner identifier for which a previous RELEASE
failed, it will naturally use a lock_seqid of zero.  However the server,
which didn't release the lock owner, will expect a larger lock_seqid and
so will respond with NFS4ERR_BAD_SEQID.

So clearly it is harmful to allow a false positive, which testing
so_count allows.

The test is nonsense because ... well... it doesn't mean anything.

so_count is the sum of three different counts.
1/ the set of states listed on so_stateids
2/ the set of active vfs locks owned by any of those states
3/ various transient counts such as for conflicting locks.

When it is tested against '2' it is clear that one of these is the
transient reference obtained by find_lockowner_str_locked().  It is not
clear what the other one is expected to be.

In practice, the count is often 2 because there is precisely one state
on so_stateids.  If there were more, this would fail.

In my testing I see two circumstances when RELEASE_LOCKOWNER is called.
In one case, CLOSE is called before RELEASE_LOCKOWNER.  That results in
all the lock states being removed, and so the lockowner being discarded
(it is removed when there are no more references which usually happens
when the lock state is discarded).  When nfsd4_release_lockowner() finds
that the lock owner doesn't exist, it returns success.

The other case shows an so_count of '2' and precisely one state listed
in so_stateid.  It appears that the Linux client uses a separate lock
owner for each file resulting in one lock state per lock owner, so this
test on '2' is safe.  For another client it might not be safe.

So this patch changes check_for_locks() to use the (newish)
find_any_file_locked() so that it doesn't take a reference on the
nfs4_file and so never calls nfsd_file_put(), and so never sleeps.  With
this check is it safe to restore the use of check_for_locks() rather
than testing so_count against the mysterious '2'.",Linux,Linux,"3097f38e91266c7132c3fdb7e778fac858c00670, e2fc17fcc503cfca57b5d1dd3b646ca7eebead97, ce3c4ad7f4ce5db7b4f08a1e237d8dd94b39180b, ce3c4ad7f4ce5db7b4f08a1e237d8dd94b39180b, ce3c4ad7f4ce5db7b4f08a1e237d8dd94b39180b, ce3c4ad7f4ce5db7b4f08a1e237d8dd94b39180b"
28,Multiples vulnérabilités dans GitLab ,Avis,2025-01-09,CVE-2024-6324,4.3,Moyenne,CWE-407: Inefficient Algorithmic Complexity,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0015/,"An issue was discovered in GitLab CE/EE affecting all versions starting from 15.7 prior to 17.5.5, starting from 17.6 prior to 17.6.3, and starting from 17.7 prior to 17.7.1. It was possible to trigger a DoS by creating cyclic references between epics.",GitLab,GitLab,"17.7, 17.6, 15.7"
47,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-52801,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

iommufd: Fix missing update of domains_itree after splitting iopt_area

In iopt_area_split(), if the original iopt_area has filled a domain and is
linked to domains_itree, pages_nodes have to be properly
reinserted. Otherwise the domains_itree becomes corrupted and we will UAF.",Linux,Linux,"51fe6141f0f64ae0bbc096a41a07572273e8c0ef, 51fe6141f0f64ae0bbc096a41a07572273e8c0ef, 51fe6141f0f64ae0bbc096a41a07572273e8c0ef"
46,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-26886,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

Bluetooth: af_bluetooth: Fix deadlock

Attemting to do sock_lock on .recvmsg may cause a deadlock as shown
bellow, so instead of using sock_sock this uses sk_receive_queue.lock
on bt_sock_ioctl to avoid the UAF:

INFO: task kworker/u9:1:121 blocked for more than 30 seconds.
      Not tainted 6.7.6-lemon #183
Workqueue: hci0 hci_rx_work
Call Trace:
 <TASK>
 __schedule+0x37d/0xa00
 schedule+0x32/0xe0
 __lock_sock+0x68/0xa0
 ? __pfx_autoremove_wake_function+0x10/0x10
 lock_sock_nested+0x43/0x50
 l2cap_sock_recv_cb+0x21/0xa0
 l2cap_recv_frame+0x55b/0x30a0
 ? psi_task_switch+0xeb/0x270
 ? finish_task_switch.isra.0+0x93/0x2a0
 hci_rx_work+0x33a/0x3f0
 process_one_work+0x13a/0x2f0
 worker_thread+0x2f0/0x410
 ? __pfx_worker_thread+0x10/0x10
 kthread+0xe0/0x110
 ? __pfx_kthread+0x10/0x10
 ret_from_fork+0x2c/0x50
 ? __pfx_kthread+0x10/0x10
 ret_from_fork_asm+0x1b/0x30
 </TASK>",Linux,Linux,"37f71e2c9f515834841826f4eb68ec33cfb2a1ff, 37f71e2c9f515834841826f4eb68ec33cfb2a1ff, 1d576c3a5af850bf11fbd103f9ba11aa6d6061fb, 2e07e8348ea454615e268222ae3fc240421be768, 2e07e8348ea454615e268222ae3fc240421be768, 2e07e8348ea454615e268222ae3fc240421be768"
1722,[MàJ] Vulnérabilité dans les produits Ivanti ,Alerte,2025-01-09,CVE-2025-0282,9,Critique,CWE-121: Stack-based Buffer Overflow,0.15325,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2025-ALE-001/,"A stack-based buffer overflow in Ivanti Connect Secure before version 22.7R2.5, Ivanti Policy Secure before version 22.7R1.2, and Ivanti Neurons for ZTA gateways before version 22.7R2.3 allows a remote unauthenticated attacker to achieve remote code execution.",Ivanti,Connect Secure,"22.7R2, 22.7R2.5"
72,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-26630,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

mm: cachestat: fix folio read-after-free in cache walk

In cachestat, we access the folio from the page cache's xarray to compute
its page offset, and check for its dirty and writeback flags.  However, we
do not hold a reference to the folio before performing these actions,
which means the folio can concurrently be released and reused as another
folio/page/slab.

Get around this altogether by just using xarray's existing machinery for
the folio page offsets and dirty/writeback states.

This changes behavior for tmpfs files to now always report zeroes in their
dirty and writeback counters.  This is okay as tmpfs doesn't follow
conventional writeback cache behavior: its pages get ""cleaned"" during
swapout, after which they're no longer resident etc.",Linux,Linux,"cf264e1329fb0307e044f7675849f9f38b44c11a, cf264e1329fb0307e044f7675849f9f38b44c11a, cf264e1329fb0307e044f7675849f9f38b44c11a"
26,Multiples vulnérabilités dans les produits Ivanti ,Avis,2025-01-09,CVE-2025-0282,9,Critique,CWE-121: Stack-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0014/,"A stack-based buffer overflow in Ivanti Connect Secure before version 22.7R2.5, Ivanti Policy Secure before version 22.7R1.2, and Ivanti Neurons for ZTA gateways before version 22.7R2.3 allows a remote unauthenticated attacker to achieve remote code execution.",Ivanti,Connect Secure,"22.7R2, 22.7R2.5"
27,Multiples vulnérabilités dans les produits Ivanti ,Avis,2025-01-09,CVE-2025-0283,7,Élevée,CWE-121: Stack-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0014/,"A stack-based buffer overflow in Ivanti Connect Secure before version 22.7R2.5, Ivanti Policy Secure before version 22.7R1.2, and Ivanti Neurons for ZTA gateways before version 22.7R2.3 allows a local authenticated attacker to escalate their privileges.",Ivanti,Connect Secure,22.7R2.5
29,Multiples vulnérabilités dans GitLab ,Avis,2025-01-09,CVE-2024-12431,4.3,Moyenne,CWE-862: Missing Authorization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0015/,"An issue was discovered in GitLab CE/EE affecting all versions starting from 15.5 before 17.5.5, 17.6 before 17.6.3, and 17.7 before 17.7.1, in which unauthorized users could manipulate the status of issues in public projects.",GitLab,GitLab,"15.5, 17.6, 17.7"
30,Multiples vulnérabilités dans GitLab ,Avis,2025-01-09,CVE-2024-13041,4.2,Moyenne,CWE-286: Incorrect User Management,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0015/,"An issue was discovered in GitLab CE/EE affecting all versions starting from 16.4 prior to 17.5.5, starting from 17.6 prior to 17.6.3, and starting from 17.7 prior to 17.7.1. When a user is created via the SAML provider, the external groups setting overrides the external provider configuration. As a result, the user may not be marked as external thereby giving those users access to internal projects or groups.",GitLab,GitLab,"16.4, 17.6, 17.7"
31,Multiples vulnérabilités dans GitLab ,Avis,2025-01-09,CVE-2025-0194,6.5,n/a,CWE-538: Insertion of Sensitive Information into Externally-Accessible File or Directory,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0015/,"An issue was discovered in GitLab CE/EE affecting all versions starting from 17.4 prior to 17.5.5, starting from 17.6 prior to 17.6.3, and starting from 17.7 prior to 17.7.1. Under certain conditions, access tokens may have been logged when API requests were made in a specific manner.",GitLab,GitLab,"17.4, 17.6, 17.7"
32,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2025-0107,n/a,n/a,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,"An OS command injection vulnerability in Palo Alto Networks Expedition enables an unauthenticated attacker to run arbitrary OS commands as the www-data user in Expedition, which results in the disclosure of usernames, cleartext passwords, device configurations, and device API keys for firewalls running PAN-OS software.",Palo Alto Networks,Cloud NGFW,All
33,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2024-12381,n/a,n/a,Type Confusion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,Type Confusion in V8 in Google Chrome prior to 131.0.6778.139 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.139
34,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2024-12382,n/a,n/a,Use after free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,Use after free in Translate in Google Chrome prior to 131.0.6778.139 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.139
35,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2025-0104,n/a,n/a,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,A reflected cross-site scripting (XSS) vulnerability in Palo Alto Networks Expedition enables attackers to execute malicious JavaScript code in the context of an authenticated Expedition user’s browser if that authenticated user clicks a malicious link that allows phishing attacks and could lead to Expedition browser-session theft.,Palo Alto Networks,Cloud NGFW,All
36,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2024-12692,n/a,n/a,Type Confusion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,Type Confusion in V8 in Google Chrome prior to 131.0.6778.204 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.204
37,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2025-0105,n/a,n/a,CWE-73 External Control of File Name or Path,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,An arbitrary file deletion vulnerability in Palo Alto Networks Expedition enables an unauthenticated attacker to delete arbitrary files accessible to the www-data user on the host filesystem.,Palo Alto Networks,Cloud NGFW,All
38,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2024-12695,n/a,n/a,Out of bounds write,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,Out of bounds write in V8 in Google Chrome prior to 131.0.6778.204 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.204
39,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2024-12694,n/a,n/a,Use after free,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,Use after free in Compositing in Google Chrome prior to 131.0.6778.204 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.204
40,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2024-12693,n/a,n/a,Out of bounds memory access,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,Out of bounds memory access in V8 in Google Chrome prior to 131.0.6778.204 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.204
41,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2025-0106,n/a,n/a,CWE-155 Improper Neutralization of Wildcards or Matching Symbols,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,A wildcard expansion vulnerability in Palo Alto Networks Expedition allows an unauthenticated attacker to enumerate files on the host filesystem.,Palo Alto Networks,Cloud NGFW,All
42,Multiples vulnérabilités dans les produits Palo Alto Networks ,Avis,2025-01-09,CVE-2025-0103,n/a,n/a,CWE-89 Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0016/,"An SQL injection vulnerability in Palo Alto Networks Expedition enables an authenticated attacker to reveal Expedition database contents, such as password hashes, usernames, device configurations, and device API keys. This vulnerability also enables attackers to create and read arbitrary files on the Expedition system.",Palo Alto Networks,Cloud NGFW,All
43,Vulnérabilité dans les produits HPE Aruba Networking ,Avis,2025-01-09,CVE-2024-54010,3.4,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0017/,"A vulnerability in the firewall component of HPE Aruba Networking CX 10000 Series Switches  exists. It could allow an unauthenticated adjacent attacker to conduct a packet  forwarding attack against the ICMP and UDP protocol. For this attack to be successful an attacker requires a switch configuration that allows packets routing (at layer 3). Configurations that do not allow network traffic routing are not impacted. Successful exploitation could allow an attacker to bypass security policies, potentially leading to unauthorized data exposure.",Hewlett Packard Enterprise (HPE),AOS-CX,"Version 10.10.0000: 10.10.1140 and below, Version 10.13.0000: 10.13.1060 and below, Version 10.14.0000: 10.14.1020 and below, Version 10.15.0000: 10.15.0005 and below"
44,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-35875,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

x86/coco: Require seeding RNG with RDRAND on CoCo systems

There are few uses of CoCo that don't rely on working cryptography and
hence a working RNG. Unfortunately, the CoCo threat model means that the
VM host cannot be trusted and may actively work against guests to
extract secrets or manipulate computation. Since a malicious host can
modify or observe nearly all inputs to guests, the only remaining source
of entropy for CoCo guests is RDRAND.

If RDRAND is broken -- due to CPU hardware fault -- the RNG as a whole
is meant to gracefully continue on gathering entropy from other sources,
but since there aren't other sources on CoCo, this is catastrophic.
This is mostly a concern at boot time when initially seeding the RNG, as
after that the consequences of a broken RDRAND are much more
theoretical.

So, try at boot to seed the RNG using 256 bits of RDRAND output. If this
fails, panic(). This will also trigger if the system is booted without
RDRAND, as RDRAND is essential for a safe CoCo boot.

Add this deliberately to be ""just a CoCo x86 driver feature"" and not
part of the RNG itself. Many device drivers and platforms have some
desire to contribute something to the RNG, and add_device_randomness()
is specifically meant for this purpose.

Any driver can call it with seed data of any quality, or even garbage
quality, and it can only possibly make the quality of the RNG better or
have no effect, but can never make it worse.

Rather than trying to build something into the core of the RNG, consider
the particular CoCo issue just a CoCo issue, and therefore separate it
all out into driver (well, arch/platform) code.

  [ bp: Massage commit message. ]",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
45,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-35797,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

mm: cachestat: fix two shmem bugs

When cachestat on shmem races with swapping and invalidation, there
are two possible bugs:

1) A swapin error can have resulted in a poisoned swap entry in the
   shmem inode's xarray. Calling get_shadow_from_swap_cache() on it
   will result in an out-of-bounds access to swapper_spaces[].

   Validate the entry with non_swap_entry() before going further.

2) When we find a valid swap entry in the shmem's inode, the shadow
   entry in the swapcache might not exist yet: swap IO is still in
   progress and we're before __remove_mapping; swapin, invalidation,
   or swapoff have removed the shadow from swapcache after we saw the
   shmem swap entry.

   This will send a NULL to workingset_test_recent(). The latter
   purely operates on pointer bits, so it won't crash - node 0, memcg
   ID 0, eviction timestamp 0, etc. are all valid inputs - but it's a
   bogus test. In theory that could result in a false ""recently
   evicted"" count.

   Such a false positive wouldn't be the end of the world. But for
   code clarity and (future) robustness, be explicit about this case.

   Bail on get_shadow_from_swap_cache() returning NULL.",Linux,Linux,"cf264e1329fb0307e044f7675849f9f38b44c11a, cf264e1329fb0307e044f7675849f9f38b44c11a, cf264e1329fb0307e044f7675849f9f38b44c11a, cf264e1329fb0307e044f7675849f9f38b44c11a"
71,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2022-24810,6.5,n/a,CWE-476 NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"net-snmp provides various tools relating to the Simple Network Management Protocol. Prior to version 5.9.2, a user with read-write credentials can use a malformed OID in a SET to the nsVacmAccessTable to cause a NULL pointer dereference. Version 5.9.2 contains a patch. Users should use strong SNMPv3 credentials and avoid sharing the credentials. Those who must use SNMPv1 or SNMPv2c should use a complex community string and enhance the protection by restricting access to a given IP address range.
",net-snmp,net-snmp,0
112,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0242,n/a,n/a,"Memory safety bugs fixed in Firefox 134, Thunderbird 134, Firefox ESR 115.19, Firefox ESR 128.6, Thunderbird 115.19, and Thunderbird 128.6",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"Memory safety bugs present in Firefox 133, Thunderbird 133, Firefox ESR 115.18, Firefox ESR 128.5, Thunderbird 115.18, and Thunderbird 128.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Firefox ESR < 115.19, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
73,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-5517,7.5,Élevée,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A flaw in query-handling code can cause `named` to exit prematurely with an assertion failure when:

  - `nxdomain-redirect <domain>;` is configured, and
  - the resolver receives a PTR query for an RFC 1918 address that would normally result in an authoritative NXDOMAIN response.
This issue affects BIND 9 versions 9.12.0 through 9.16.45, 9.18.0 through 9.18.21, 9.19.0 through 9.19.19, 9.16.8-S1 through 9.16.45-S1, and 9.18.11-S1 through 9.18.21-S1.",ISC,BIND 9,"9.12.0, 9.18.0, 9.19.0, 9.16.8-S1, 9.18.11-S1"
97,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2006-5051,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"Signal handler race condition in OpenSSH before 4.4 allows remote attackers to cause a denial of service (crash), and possibly execute arbitrary code if GSSAPI authentication is enabled, via unspecified vectors that lead to a double-free.",n/a,n/a,n/a
99,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-6516,7.5,Élevée,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"To keep its cache database efficient, `named` running as a recursive resolver occasionally attempts to clean up the database. It uses several methods, including some that are asynchronous: a small chunk of memory pointing to the cache element that can be cleaned up is first allocated and then queued for later processing. It was discovered that if the resolver is continuously processing query patterns triggering this type of cache-database maintenance, `named` may not be able to handle the cleanup events in a timely manner. This in turn enables the list of queued cleanup events to grow infinitely large over time, allowing the configured `max-cache-size` limit to be significantly exceeded.
This issue affects BIND 9 versions 9.16.0 through 9.16.45 and 9.16.8-S1 through 9.16.45-S1.",ISC,BIND 9,"9.16.0, 9.16.8-S1"
100,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-28835,n/a,n/a,Uncaught Exception,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A flaw has been discovered in GnuTLS where an application crash can be induced when attempting to verify a specially crafted .pem bundle using the ""certtool --verify-chain"" command.",n/a,n/a,3.8.3
101,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-41044,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

ppp: reject claimed-as-LCP but actually malformed packets

Since 'ppp_async_encode()' assumes valid LCP packets (with code
from 1 to 7 inclusive), add 'ppp_check_packet()' to ensure that
LCP packet has an actual body beyond PPP_LCP header bytes, and
reject claimed-as-LCP but actually malformed data otherwise.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
103,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-6387,n/a,n/a,Signal Handler Race Condition,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A security regression (CVE-2006-5051) was discovered in OpenSSH's server (sshd). There is a race condition which can lead sshd to handle some signals in an unsafe manner. An unauthenticated, remote attacker may be able to trigger it by failing to authenticate within a set time period.",n/a,n/a,8.5p1
104,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2022-24806,6.5,n/a,CWE-20 Improper Input Validation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"net-snmp provides various tools relating to the Simple Network Management Protocol. Prior to version 5.9.2, a user with read-write credentials can exploit an Improper Input Validation vulnerability when SETing malformed OIDs in master agent and subagent simultaneously. Version 5.9.2 contains a patch. Users should use strong SNMPv3 credentials and avoid sharing the credentials. Those who must use SNMPv1 or SNMPv2c should use a complex community string and enhance the protection by restricting access to a given IP address range.
",net-snmp,net-snmp,0
105,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-36979,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

net: bridge: mst: fix vlan use-after-free

syzbot reported a suspicious rcu usage[1] in bridge's mst code. While
fixing it I noticed that nothing prevents a vlan to be freed while
walking the list from the same path (br forward delay timer). Fix the rcu
usage and also make sure we are not accessing freed memory by making
br_mst_vlan_set_state use rcu read lock.

[1]
 WARNING: suspicious RCU usage
 6.9.0-rc6-syzkaller #0 Not tainted
 -----------------------------
 net/bridge/br_private.h:1599 suspicious rcu_dereference_protected() usage!
 ...
 stack backtrace:
 CPU: 1 PID: 8017 Comm: syz-executor.1 Not tainted 6.9.0-rc6-syzkaller #0
 Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
 Call Trace:
  <IRQ>
  __dump_stack lib/dump_stack.c:88 [inline]
  dump_stack_lvl+0x241/0x360 lib/dump_stack.c:114
  lockdep_rcu_suspicious+0x221/0x340 kernel/locking/lockdep.c:6712
  nbp_vlan_group net/bridge/br_private.h:1599 [inline]
  br_mst_set_state+0x1ea/0x650 net/bridge/br_mst.c:105
  br_set_state+0x28a/0x7b0 net/bridge/br_stp.c:47
  br_forward_delay_timer_expired+0x176/0x440 net/bridge/br_stp_timer.c:88
  call_timer_fn+0x18e/0x650 kernel/time/timer.c:1793
  expire_timers kernel/time/timer.c:1844 [inline]
  __run_timers kernel/time/timer.c:2418 [inline]
  __run_timer_base+0x66a/0x8e0 kernel/time/timer.c:2429
  run_timer_base kernel/time/timer.c:2438 [inline]
  run_timer_softirq+0xb7/0x170 kernel/time/timer.c:2448
  __do_softirq+0x2c6/0x980 kernel/softirq.c:554
  invoke_softirq kernel/softirq.c:428 [inline]
  __irq_exit_rcu+0xf2/0x1c0 kernel/softirq.c:633
  irq_exit_rcu+0x9/0x30 kernel/softirq.c:645
  instr_sysvec_apic_timer_interrupt arch/x86/kernel/apic/apic.c:1043 [inline]
  sysvec_apic_timer_interrupt+0xa6/0xc0 arch/x86/kernel/apic/apic.c:1043
  </IRQ>
  <TASK>
 asm_sysvec_apic_timer_interrupt+0x1a/0x20 arch/x86/include/asm/idtentry.h:702
 RIP: 0010:lock_acquire+0x264/0x550 kernel/locking/lockdep.c:5758
 Code: 2b 00 74 08 4c 89 f7 e8 ba d1 84 00 f6 44 24 61 02 0f 85 85 01 00 00 41 f7 c7 00 02 00 00 74 01 fb 48 c7 44 24 40 0e 36 e0 45 <4b> c7 44 25 00 00 00 00 00 43 c7 44 25 09 00 00 00 00 43 c7 44 25
 RSP: 0018:ffffc90013657100 EFLAGS: 00000206
 RAX: 0000000000000001 RBX: 1ffff920026cae2c RCX: 0000000000000001
 RDX: dffffc0000000000 RSI: ffffffff8bcaca00 RDI: ffffffff8c1eaa60
 RBP: ffffc90013657260 R08: ffffffff92efe507 R09: 1ffffffff25dfca0
 R10: dffffc0000000000 R11: fffffbfff25dfca1 R12: 1ffff920026cae28
 R13: dffffc0000000000 R14: ffffc90013657160 R15: 0000000000000246",Linux,Linux,"ec7328b59176227216c461601c6bd0e922232a9b, ec7328b59176227216c461601c6bd0e922232a9b, ec7328b59176227216c461601c6bd0e922232a9b, ec7328b59176227216c461601c6bd0e922232a9b, ec7328b59176227216c461601c6bd0e922232a9b"
106,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-52463,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

efivarfs: force RO when remounting if SetVariable is not supported

If SetVariable at runtime is not supported by the firmware we never assign
a callback for that function. At the same time mount the efivarfs as
RO so no one can call that.  However, we never check the permission flags
when someone remounts the filesystem as RW. As a result this leads to a
crash looking like this:

$ mount -o remount,rw /sys/firmware/efi/efivars
$ efi-updatevar -f PK.auth PK

[  303.279166] Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000
[  303.280482] Mem abort info:
[  303.280854]   ESR = 0x0000000086000004
[  303.281338]   EC = 0x21: IABT (current EL), IL = 32 bits
[  303.282016]   SET = 0, FnV = 0
[  303.282414]   EA = 0, S1PTW = 0
[  303.282821]   FSC = 0x04: level 0 translation fault
[  303.283771] user pgtable: 4k pages, 48-bit VAs, pgdp=000000004258c000
[  303.284913] [0000000000000000] pgd=0000000000000000, p4d=0000000000000000
[  303.286076] Internal error: Oops: 0000000086000004 [#1] PREEMPT SMP
[  303.286936] Modules linked in: qrtr tpm_tis tpm_tis_core crct10dif_ce arm_smccc_trng rng_core drm fuse ip_tables x_tables ipv6
[  303.288586] CPU: 1 PID: 755 Comm: efi-updatevar Not tainted 6.3.0-rc1-00108-gc7d0c4695c68 #1
[  303.289748] Hardware name: Unknown Unknown Product/Unknown Product, BIOS 2023.04-00627-g88336918701d 04/01/2023
[  303.291150] pstate: 60400005 (nZCv daif +PAN -UAO -TCO -DIT -SSBS BTYPE=--)
[  303.292123] pc : 0x0
[  303.292443] lr : efivar_set_variable_locked+0x74/0xec
[  303.293156] sp : ffff800008673c10
[  303.293619] x29: ffff800008673c10 x28: ffff0000037e8000 x27: 0000000000000000
[  303.294592] x26: 0000000000000800 x25: ffff000002467400 x24: 0000000000000027
[  303.295572] x23: ffffd49ea9832000 x22: ffff0000020c9800 x21: ffff000002467000
[  303.296566] x20: 0000000000000001 x19: 00000000000007fc x18: 0000000000000000
[  303.297531] x17: 0000000000000000 x16: 0000000000000000 x15: 0000aaaac807ab54
[  303.298495] x14: ed37489f673633c0 x13: 71c45c606de13f80 x12: 47464259e219acf4
[  303.299453] x11: ffff000002af7b01 x10: 0000000000000003 x9 : 0000000000000002
[  303.300431] x8 : 0000000000000010 x7 : ffffd49ea8973230 x6 : 0000000000a85201
[  303.301412] x5 : 0000000000000000 x4 : ffff0000020c9800 x3 : 00000000000007fc
[  303.302370] x2 : 0000000000000027 x1 : ffff000002467400 x0 : ffff000002467000
[  303.303341] Call trace:
[  303.303679]  0x0
[  303.303938]  efivar_entry_set_get_size+0x98/0x16c
[  303.304585]  efivarfs_file_write+0xd0/0x1a4
[  303.305148]  vfs_write+0xc4/0x2e4
[  303.305601]  ksys_write+0x70/0x104
[  303.306073]  __arm64_sys_write+0x1c/0x28
[  303.306622]  invoke_syscall+0x48/0x114
[  303.307156]  el0_svc_common.constprop.0+0x44/0xec
[  303.307803]  do_el0_svc+0x38/0x98
[  303.308268]  el0_svc+0x2c/0x84
[  303.308702]  el0t_64_sync_handler+0xf4/0x120
[  303.309293]  el0t_64_sync+0x190/0x194
[  303.309794] Code: ???????? ???????? ???????? ???????? (????????)
[  303.310612] ---[ end trace 0000000000000000 ]---

Fix this by adding a .reconfigure() function to the fs operations which
we can use to check the requested flags and deny anything that's not RO
if the firmware doesn't implement SetVariable at runtime.",Linux,Linux,"f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed, f88814cc2578c121e6edef686365036db72af0ed"
107,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-36000,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

mm/hugetlb: fix missing hugetlb_lock for resv uncharge

There is a recent report on UFFDIO_COPY over hugetlb:

https://lore.kernel.org/all/000000000000ee06de0616177560@google.com/

350:	lockdep_assert_held(&hugetlb_lock);

Should be an issue in hugetlb but triggered in an userfault context, where
it goes into the unlikely path where two threads modifying the resv map
together.  Mike has a fix in that path for resv uncharge but it looks like
the locking criteria was overlooked: hugetlb_cgroup_uncharge_folio_rsvd()
will update the cgroup pointer, so it requires to be called with the lock
held.",Linux,Linux,"79aa925bf239c234be8586780e482872dc4690dd, 79aa925bf239c234be8586780e482872dc4690dd, 79aa925bf239c234be8586780e482872dc4690dd, 79aa925bf239c234be8586780e482872dc4690dd"
108,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-5679,7.5,Élevée,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A bad interaction between DNS64 and serve-stale may cause `named` to crash with an assertion failure during recursive resolution, when both of these features are enabled.
This issue affects BIND 9 versions 9.16.12 through 9.16.45, 9.18.0 through 9.18.21, 9.19.0 through 9.19.19, 9.16.12-S1 through 9.16.45-S1, and 9.18.11-S1 through 9.18.21-S1.",ISC,BIND 9,"9.16.12, 9.18.0, 9.19.0, 9.16.12-S1, 9.18.11-S1"
109,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-5088,n/a,n/a,Incorrect Synchronization,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A bug in QEMU could cause a guest I/O operation otherwise addressed to an arbitrary disk offset to be targeted to offset 0 instead (potentially overwriting the VM's boot code). This could be used, for example, by L2 guests with a virtual disk (vdiskL2) stored on a virtual disk of an L1 (vdiskL1) hypervisor to read and/or write data to LBA 0 of vdiskL1, potentially gaining control of L1 at its next reboot.",Red Hat,Red Hat Enterprise Linux 8,8100020240314161907.e155f54d
110,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-42467,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,QEMU through 8.0.0 could trigger a division by zero in scsi_disk_reset in hw/scsi/scsi-disk.c because scsi_disk_emulate_mode_select does not prevent s->qdev.blocksize from being 256. This stops QEMU and the guest immediately.,n/a,n/a,n/a
111,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2022-24808,6.5,n/a,CWE-476 NULL Pointer Dereference,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"net-snmp provides various tools relating to the Simple Network Management Protocol. Prior to version 5.9.2, a user with read-write credentials can use a malformed OID in a `SET` request to `NET-SNMP-AGENT-MIB::nsLogTable` to cause a NULL pointer dereference. Version 5.9.2 contains a patch. Users should use strong SNMPv3 credentials and avoid sharing the credentials. Those who must use SNMPv1 or SNMPv2c should use a complex community string and enhance the protection by restricting access to a given IP address range.
",net-snmp,net-snmp,0
113,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0241,n/a,n/a,Memory corruption when using JavaScript Text Segmentation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"When segmenting specially crafted text, segmentation would corrupt memory leading to a potentially exploitable crash. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
114,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0237,n/a,n/a,WebChannel APIs susceptible to confused deputy attack,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"The WebChannel API, which is used to transport various information across processes, did not check the sending principal but rather accepted the principal being sent. This could have led to privilege escalation attacks. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
115,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0247,n/a,n/a,Memory safety bugs fixed in Firefox 134 and Thunderbird 134,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,Memory safety bugs present in Firefox 133 and Thunderbird 133. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 134 and Thunderbird < 134.,Mozilla,Firefox,unspecified
116,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0239,n/a,n/a,Alt-Svc ALPN validation failure when redirected,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"When using Alt-Svc, ALPN did not properly validate certificates when the original server is redirecting to an insecure site. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
117,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0243,n/a,n/a,"Memory safety bugs fixed in Firefox 134, Thunderbird 134, Firefox ESR 128.6, and Thunderbird 128.6",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"Memory safety bugs present in Firefox 133, Thunderbird 133, Firefox ESR 128.5, and Thunderbird 128.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
118,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2024-50336,n/a,n/a,CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,matrix-js-sdk is a Matrix messaging protocol Client-Server SDK for JavaScript. matrix-js-sdk before 34.11.0 is vulnerable to client-side path traversal via crafted MXC URIs. A malicious room member can trigger clients based on the matrix-js-sdk to issue arbitrary authenticated GET requests to the client's homeserver. Fixed in matrix-js-sdk 34.11.1.,matrix-org,matrix-js-sdk,< 34.11.1
119,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0238,n/a,n/a,Use-after-free when breaking lines in text,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"Assuming a controlled failed memory allocation, an attacker could have caused a use-after-free, leading to a potentially exploitable crash. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Firefox ESR < 115.19, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
120,Multiples vulnérabilités dans Mozilla Thunderbird ,Avis,2025-01-09,CVE-2025-0240,n/a,n/a,Compartment mismatch when parsing JavaScript JSON module,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0019/,"Parsing a JavaScript module as JSON could under some circumstances cause cross-compartment access, which may result in a use-after-free. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
74,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-41073,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

nvme: avoid double free special payload

If a discard request needs to be retried, and that retry may fail before
a new special payload is added, a double free will result. Clear the
RQF_SPECIAL_LOAD when the request is cleaned.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
98,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-41096,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

PCI/MSI: Fix UAF in msi_capability_init

KFENCE reports the following UAF:

 BUG: KFENCE: use-after-free read in __pci_enable_msi_range+0x2c0/0x488

 Use-after-free read at 0x0000000024629571 (in kfence-#12):
  __pci_enable_msi_range+0x2c0/0x488
  pci_alloc_irq_vectors_affinity+0xec/0x14c
  pci_alloc_irq_vectors+0x18/0x28

 kfence-#12: 0x0000000008614900-0x00000000e06c228d, size=104, cache=kmalloc-128

 allocated by task 81 on cpu 7 at 10.808142s:
  __kmem_cache_alloc_node+0x1f0/0x2bc
  kmalloc_trace+0x44/0x138
  msi_alloc_desc+0x3c/0x9c
  msi_domain_insert_msi_desc+0x30/0x78
  msi_setup_msi_desc+0x13c/0x184
  __pci_enable_msi_range+0x258/0x488
  pci_alloc_irq_vectors_affinity+0xec/0x14c
  pci_alloc_irq_vectors+0x18/0x28

 freed by task 81 on cpu 7 at 10.811436s:
  msi_domain_free_descs+0xd4/0x10c
  msi_domain_free_locked.part.0+0xc0/0x1d8
  msi_domain_alloc_irqs_all_locked+0xb4/0xbc
  pci_msi_setup_msi_irqs+0x30/0x4c
  __pci_enable_msi_range+0x2a8/0x488
  pci_alloc_irq_vectors_affinity+0xec/0x14c
  pci_alloc_irq_vectors+0x18/0x28

Descriptor allocation done in:
__pci_enable_msi_range
    msi_capability_init
        msi_setup_msi_desc
            msi_insert_msi_desc
                msi_domain_insert_msi_desc
                    msi_alloc_desc
                        ...

Freed in case of failure in __msi_domain_alloc_locked()
__pci_enable_msi_range
    msi_capability_init
        pci_msi_setup_msi_irqs
            msi_domain_alloc_irqs_all_locked
                msi_domain_alloc_locked
                    __msi_domain_alloc_locked => fails
                    msi_domain_free_locked
                        ...

That failure propagates back to pci_msi_setup_msi_irqs() in
msi_capability_init() which accesses the descriptor for unmasking in the
error exit path.

Cure it by copying the descriptor and using the copy for the error exit path
unmask operation.

[ tglx: Massaged change log ]",Linux,Linux,"bf6e054e0e3fbc9614355b760e18c8a14f952a4e, bf6e054e0e3fbc9614355b760e18c8a14f952a4e, bf6e054e0e3fbc9614355b760e18c8a14f952a4e, bf6e054e0e3fbc9614355b760e18c8a14f952a4e"
102,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-38559,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

scsi: qedf: Ensure the copied buf is NUL terminated

Currently, we allocate a count-sized kernel buffer and copy count from
userspace to that buffer. Later, we use kstrtouint on this buffer but we
don't ensure that the string is terminated inside the buffer, this can
lead to OOB read when using kstrtouint. Fix this issue by using
memdup_user_nul instead of memdup_user.",Linux,Linux,"61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd, 61d8658b4a435eac729966cc94cdda077a8df5cd"
96,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-40936,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

cxl/region: Fix memregion leaks in devm_cxl_add_region()

Move the mode verification to __create_region() before allocating the
memregion to avoid the memregion leaks.",Linux,Linux,"6e099264185d05f50400ea494f5029264a4fe995, 6e099264185d05f50400ea494f5029264a4fe995, 6e099264185d05f50400ea494f5029264a4fe995"
85,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21593,6.5,n/a,CWE-664 Improper Control of a Resource Through its Lifetime,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"An Improper Control of a Resource Through its Lifetime vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS and Junos OS Evolved allows an unauthenticated network-based attacker to cause a Denial-of-Service (DoS).

On devices with SRv6 (Segment Routing over IPv6) enabled, an attacker can send a malformed BGP UPDATE packet which will cause the rpd to crash and restart. Continued receipt of these UPDATE packets will cause a sustained DoS condition. 

This issue affects iBGP and eBGP, and both IPv4 and IPv6 are affected by this vulnerability.This issue affects Junos OS: 



  *  All versions before 21.2R3-S9, 
  *  from 21.4 before 21.4R3-S10, 
  *  from 22.2 before 22.2R3-S5, 
  *  from 22.3 before 22.3R3-S4, 
  *  from 22.4 before 22.4R3-S3, 
  *  from 23.2 before 23.2R2-S2, 
  *  from 23.4 before 23.4R2;



and Junos OS Evolved: 



  *  All versions before 21.2R3-S9-EVO, 
  *  from 21.4-EVO before 21.4R3-S10-EVO, 
  *  from 22.2-EVO before 22.2R3-S5-EVO, 
  *  from 22.3-EVO before 22.3R3-S4-EVO, 
  *  from 22.4-EVO before 22.4R3-S3-EVO,
  *  from 23.2-EVO before 23.2R2-S2-EVO, 
  *  from 23.4-EVO before 23.4R2-EVO.",Juniper Networks,Junos OS,"0, 21.4, 22.2, 22.3, 22.4, 23.2, 23.4"
75,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21600,6.5,n/a,CWE-125 Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"An Out-of-Bounds Read vulnerability in

the routing protocol daemon (rpd) of 

 Juniper Networks Junos OS and Junos OS Evolved allows an unauthenticated, logically adjacent BGP peer sending a specifically malformed BGP packet to cause rpd to crash and restart, resulting in a Denial of Service (DoS). Continued receipt and processing of this packet will create a sustained Denial of Service (DoS) condition.



This issue only affects systems configured in
      either of two ways:

    
    
        *  systems with BGP traceoptions enabled

        *  systems with BGP family traffic-engineering (BGP-LS)
          configured


 and can be exploited from a directly connected and configured BGP peer. 

This issue affects iBGP and eBGP 

with 

any address family

 configured, and both IPv4 and IPv6 are affected by this vulnerability.

This issue affects:

Junos OS: 



  *  All versions before 21.4R3-S9, 
  *  from 22.2 before 22.2R3-S5, 
  *  from 22.3 before 22.3R3-S4, 
  *  from 22.4 before 22.4R3-S5, 
  *  from 23.2 before 23.2R2-S3, 
  *  from 23.4 before 23.4R2-S3, 
  *  from 24.2 before 24.2R1-S2, 24.2R2; 




Junos OS Evolved: 



  *  All versions before 21.4R3-S9-EVO, 
  *  from 22.2 before 22.2R3-S5-EVO, 
  *  from 22.3 before 22.3R3-S4-EVO, 
  *  from 22.4 before 22.4R3-S5-EVO, 
  *  from 23.2 before 23.2R2-S3-EVO, 
  *  from 23.4 before 23.4R2-S2-EVO, 
  *  from 24.2 before 24.2R1-S2-EVO, 24.2R2-EVO.



This is a similar, but different vulnerability than the issue reported as CVE-2024-39516.",Juniper Networks,Junos OS,"0, 22.2, 22.3, 22.4, 23.2, 23.4, 24.2"
76,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-42082,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

xdp: Remove WARN() from __xdp_reg_mem_model()

syzkaller reports a warning in __xdp_reg_mem_model().

The warning occurs only if __mem_id_init_hash_table() returns an error. It
returns the error in two cases:

  1. memory allocation fails;
  2. rhashtable_init() fails when some fields of rhashtable_params
     struct are not initialized properly.

The second case cannot happen since there is a static const rhashtable_params
struct with valid fields. So, warning is only triggered when there is a
problem with memory allocation.

Thus, there is no sense in using WARN() to handle this error and it can be
safely removed.

WARNING: CPU: 0 PID: 5065 at net/core/xdp.c:299 __xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299

CPU: 0 PID: 5065 Comm: syz-executor883 Not tainted 6.8.0-syzkaller-05271-gf99c5f563c17 #0
Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 03/27/2024
RIP: 0010:__xdp_reg_mem_model+0x2d9/0x650 net/core/xdp.c:299

Call Trace:
 xdp_reg_mem_model+0x22/0x40 net/core/xdp.c:344
 xdp_test_run_setup net/bpf/test_run.c:188 [inline]
 bpf_test_run_xdp_live+0x365/0x1e90 net/bpf/test_run.c:377
 bpf_prog_test_run_xdp+0x813/0x11b0 net/bpf/test_run.c:1267
 bpf_prog_test_run+0x33a/0x3b0 kernel/bpf/syscall.c:4240
 __sys_bpf+0x48d/0x810 kernel/bpf/syscall.c:5649
 __do_sys_bpf kernel/bpf/syscall.c:5738 [inline]
 __se_sys_bpf kernel/bpf/syscall.c:5736 [inline]
 __x64_sys_bpf+0x7c/0x90 kernel/bpf/syscall.c:5736
 do_syscall_64+0xfb/0x240
 entry_SYSCALL_64_after_hwframe+0x6d/0x75

Found by Linux Verification Center (linuxtesting.org) with syzkaller.",Linux,Linux,"8d5d88527587516bd58ff0f3810f07c38e65e2be, 8d5d88527587516bd58ff0f3810f07c38e65e2be, 8d5d88527587516bd58ff0f3810f07c38e65e2be, 8d5d88527587516bd58ff0f3810f07c38e65e2be, 8d5d88527587516bd58ff0f3810f07c38e65e2be, 8d5d88527587516bd58ff0f3810f07c38e65e2be"
77,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21596,5.5,Moyenne,CWE-755 Improper Handling of Exceptional Conditions,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"An Improper Handling of Exceptional Conditions vulnerability in the command-line processing of Juniper Networks Junos OS on SRX1500, SRX4100, and SRX4200 devices allows a local, low-privileged authenticated attacker executing the 'show chassis environment pem' command to cause the chassis daemon (chassisd) to crash and restart, resulting in a temporary Denial of Service (DoS). However, repeated execution of this command will eventually cause the chassisd process to fail to restart, impacting packet processing on the system.

This issue affects Junos OS on SRX1500, SRX4100, SRX4200: 



  *  All versions before 21.4R3-S9, 
  *  from 22.2 before 22.2R3-S5, 
  *  from 22.3 before 22.3R3-S4, 
  *  from 22.4 before 22.4R3-S4, 
  *  from 23.2 before 23.2R2-S3, 
  *  from 23.4 before 23.4R2-S1.",Juniper Networks,Junos OS,"0, 22.2, 22.3, 22.4, 23.2, 23.4"
78,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-32462,8.4,n/a,CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. in versions before 1.10.9, 1.12.9, 1.14.6, and 1.15.8, a malicious or compromised Flatpak app could execute arbitrary code outside its sandbox. Normally, the `--command` argument of `flatpak run` expects to be given a command to run in the specified Flatpak app, optionally along with some arguments. However it is possible to instead pass `bwrap` arguments to `--command=`, such as `--bind`. It's possible to pass an arbitrary `commandline` to the portal interface `org.freedesktop.portal.Background.RequestBackground` from within a Flatpak app. When this is converted into a `--command` and arguments, it achieves the same effect of passing arguments directly to `bwrap`, and thus can be used for a sandbox escape. The solution is to pass the `--` argument to `bwrap`, which makes it stop processing options. This has been supported since bubblewrap 0.3.0. All supported versions of Flatpak require at least that version of bubblewrap. xdg-desktop-portal version 1.18.4 will mitigate this vulnerability by only allowing Flatpak apps to create .desktop files for commands that do not start with --. The vulnerability is patched in 1.15.8, 1.10.9, 1.12.9, and 1.14.6.",flatpak,flatpak,"< 1.10.9, >= 1.12.0, < 1.12.9, >= 1.14.0, < 1.14.6, >= 1.15.0, < 1.15.8"
79,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2016-2183,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"The DES and Triple DES ciphers, as used in the TLS, SSH, and IPSec protocols and other protocols and products, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, as demonstrated by an HTTPS session using Triple DES in CBC mode, aka a ""Sweet32"" attack.",n/a,n/a,n/a
95,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21598,7.5,Élevée,CWE-125 Out-of-bounds Read,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"An Out-of-bounds Read vulnerability in Juniper Networks Junos OS and Junos OS Evolved's routing protocol daemon (rpd) allows an unauthenticated, network-based attacker to send malformed BGP packets to a device configured with packet receive trace options enabled to crash rpd.
This issue affects:

Junos OS: 



  *  from 21.2R3-S8 before 21.2R3-S9, 
  *  from 21.4R3-S7 before 21.4R3-S9, 
  *  from 22.2R3-S4 before 22.2R3-S5, 
  *  from 22.3R3-S2 before 22.3R3-S4, 
  *  from 22.4R3 before 22.4R3-S5, 
  *  from 23.2R2 before 23.2R2-S2, 
  *  from 23.4R1 before 23.4R2-S1, 
  *  from 24.2R1 before 24.2R1-S1, 24.2R2.


Junos OS Evolved:
  *  from 21.4R3-S7-EVO before 21.4R3-S9-EVO, 
  *  from 22.2R3-S4-EVO before 22.2R3-S5-EVO, 
  *  from 22.3R3-S2-EVO before 22.3R3-S4-EVO, 
  *  from 22.4R3-EVO before 22.4R3-S5-EVO, 
  *  from 23.2R2-EVO before 23.2R2-S2-EVO, 
  *  from 23.4R1-EVO before 23.4R2-S1-EVO, 
  *  from 24.2R1-EVO before 24.2R1-S2-EVO, 24.2R2-EVO.


This issue requires a BGP session to be established.

This issue can propagate and multiply through multiple ASes until reaching vulnerable devices.

This issue affects iBGP and eBGP.

This issue affects IPv4 and IPv6.

An indicator of compromise may be the presence of malformed update messages in a neighboring AS which is unaffected by this issue:

For example, by issuing the command on the neighboring device:
 show log messages

Reviewing for similar messages from devices within proximity to each other may indicate this malformed packet is propagating:
  rpd[<pid>]: Received malformed update from <IP address> (External AS <AS#>)
and
  rpd[<pid>]: Malformed Attribute",Juniper Networks,Junos OS,"21.2R3-S8, 21.4R3-S7, 22.2R3-S4, 22.3R3-S2, 22.4R3, 23.2R2, 23.4R1, 24.2R1"
81,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-25742,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel before 6.9, an untrusted hypervisor can inject virtual interrupt 29 (#VC) at any point in time and can trigger its handler. This affects AMD SEV-SNP and AMD SEV-ES.",n/a,n/a,n/a
82,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-25743,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel through 6.9, an untrusted hypervisor can inject virtual interrupts 0 and 14 at any point in time and can trigger the SIGFPE signal handler in userspace applications. This affects AMD SEV-SNP and AMD SEV-ES.",n/a,n/a,n/a
83,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-42096,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

x86: stop playing stack games in profile_pc()

The 'profile_pc()' function is used for timer-based profiling, which
isn't really all that relevant any more to begin with, but it also ends
up making assumptions based on the stack layout that aren't necessarily
valid.

Basically, the code tries to account the time spent in spinlocks to the
caller rather than the spinlock, and while I support that as a concept,
it's not worth the code complexity or the KASAN warnings when no serious
profiling is done using timers anyway these days.

And the code really does depend on stack layout that is only true in the
simplest of cases.  We've lost the comment at some point (I think when
the 32-bit and 64-bit code was unified), but it used to say:

	Assume the lock function has either no stack frame or a copy
	of eflags from PUSHF.

which explains why it just blindly loads a word or two straight off the
stack pointer and then takes a minimal look at the values to just check
if they might be eflags or the return pc:

	Eflags always has bits 22 and up cleared unlike kernel addresses

but that basic stack layout assumption assumes that there isn't any lock
debugging etc going on that would complicate the code and cause a stack
frame.

It causes KASAN unhappiness reported for years by syzkaller [1] and
others [2].

With no real practical reason for this any more, just remove the code.

Just for historical interest, here's some background commits relating to
this code from 2006:

  0cb91a229364 (""i386: Account spinlocks to the caller during profiling for !FP kernels"")
  31679f38d886 (""Simplify profile_pc on x86-64"")

and a code unification from 2009:

  ef4512882dbe (""x86: time_32/64.c unify profile_pc"")

but the basics of this thing actually goes back to before the git tree.",Linux,Linux,"1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2, 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2"
84,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-38619,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

usb-storage: alauda: Check whether the media is initialized

The member ""uzonesize"" of struct alauda_info will remain 0
if alauda_init_media() fails, potentially causing divide errors
in alauda_read_data() and alauda_write_lba().
- Add a member ""media_initialized"" to struct alauda_info.
- Change a condition in alauda_check_media() to ensure the
  first initialization.
- Add an error check for the return value of alauda_init_media().",Linux,Linux,"e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f, e80b0fade09ef1ee67b0898d480d4c588f124d5f"
80,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2025-21602,6.5,n/a,CWE-755 Improper Handling of Exceptional Conditions,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"An Improper Handling of Exceptional Conditions vulnerability in the routing protocol daemon (rpd) of Juniper Networks Junos OS and Junos OS Evolved allows an unauthenticated adjacent attacker sending a specific BGP update packet to cause rpd to crash and restart, resulting in a Denial of Service (DoS). 

Continuous receipt and processing of this packet will create a sustained Denial of Service (DoS) condition.

This issue affects iBGP and eBGP, and both IPv4 and IPv6 are affected by this vulnerability.

This issue affects Junos OS: 



  *  from 21.4 before 21.4R3-S9, 
  *  from 22.2 before 22.2R3-S5, 
  *  from 22.3 before 22.3R3-S4,
  *  from 22.4 before 22.4R3-S5, 
  *  from 23.2 before 23.2R2-S3, 
  *  from 23.4 before 23.4R2-S3, 
  *  from 24.2 before 24.2R1-S2, 24.2R2; 


This issue does not affect versions prior to 21.1R1.





Junos OS Evolved: 



  *  from 21.4 before 21.4R3-S9-EVO, 
  *  from 22.2 before 22.2R3-S5-EVO, 
  *  from 22.3 before 22.3R3-S4-EVO,
  *  from 22.4 before 22.4R3-S5-EVO, 
  *  from 23.2 before 23.2R2-S3-EVO, 
  *  from 23.4 before 23.4R2-S3-EVO, 
  *  from 24.2 before 24.2R1-S2-EVO, 24.2R2-EVO.


This issue does not affect versions prior to 21.1R1-EVO",Juniper Networks,Junos OS,"21.4, 22.2, 22.3, 22.4, 23.2, 23.4, 24.2, 0"
86,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-6119,n/a,n/a,CWE-843 Access of Resource Using Incompatible Type ('Type Confusion'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"Issue summary: Applications performing certificate name checks (e.g., TLS
clients checking server certificates) may attempt to read an invalid memory
address resulting in abnormal termination of the application process.

Impact summary: Abnormal termination of an application can a cause a denial of
service.

Applications performing certificate name checks (e.g., TLS clients checking
server certificates) may attempt to read an invalid memory address when
comparing the expected name with an `otherName` subject alternative name of an
X.509 certificate. This may result in an exception that terminates the
application program.

Note that basic certificate chain validation (signatures, dates, ...) is not
affected, the denial of service can occur only when the application also
specifies an expected DNS name, Email address or IP address.

TLS servers rarely solicit client certificates, and even when they do, they
generally don't perform a name check against a reference identifier (expected
identity), but rather extract the presented identity after checking the
certificate chain.  So TLS servers are generally not affected and the severity
of the issue is Moderate.

The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",OpenSSL,OpenSSL,"3.3.0, 3.2.0, 3.1.0, 3.0.0"
91,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-40927,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

xhci: Handle TD clearing for multiple streams case

When multiple streams are in use, multiple TDs might be in flight when
an endpoint is stopped. We need to issue a Set TR Dequeue Pointer for
each, to ensure everything is reset properly and the caches cleared.
Change the logic so that any N>1 TDs found active for different streams
are deferred until after the first one is processed, calling
xhci_invalidate_cancelled_tds() again from xhci_handle_cmd_set_deq() to
queue another command until we are done with all of them. Also change
the error/""should never happen"" paths to ensure we at least clear any
affected TDs, even if we can't issue a command to clear the hardware
cache, and complain loudly with an xhci_warn() if this ever happens.

This problem case dates back to commit e9df17eb1408 (""USB: xhci: Correct
assumptions about number of rings per endpoint."") early on in the XHCI
driver's life, when stream support was first added.
It was then identified but not fixed nor made into a warning in commit
674f8438c121 (""xhci: split handling halted endpoints into two steps""),
which added a FIXME comment for the problem case (without materially
changing the behavior as far as I can tell, though the new logic made
the problem more obvious).

Then later, in commit 94f339147fc3 (""xhci: Fix failure to give back some
cached cancelled URBs.""), it was acknowledged again.

[Mathias: commit 94f339147fc3 (""xhci: Fix failure to give back some cached
cancelled URBs."") was a targeted regression fix to the previously mentioned
patch. Users reported issues with usb stuck after unmounting/disconnecting
UAS devices. This rolled back the TD clearing of multiple streams to its
original state.]

Apparently the commit author was aware of the problem (yet still chose
to submit it): It was still mentioned as a FIXME, an xhci_dbg() was
added to log the problem condition, and the remaining issue was mentioned
in the commit description. The choice of making the log type xhci_dbg()
for what is, at this point, a completely unhandled and known broken
condition is puzzling and unfortunate, as it guarantees that no actual
users would see the log in production, thereby making it nigh
undebuggable (indeed, even if you turn on DEBUG, the message doesn't
really hint at there being a problem at all).

It took me *months* of random xHC crashes to finally find a reliable
repro and be able to do a deep dive debug session, which could all have
been avoided had this unhandled, broken condition been actually reported
with a warning, as it should have been as a bug intentionally left in
unfixed (never mind that it shouldn't have been left in at all).

> Another fix to solve clearing the caches of all stream rings with
> cancelled TDs is needed, but not as urgent.

3 years after that statement and 14 years after the original bug was
introduced, I think it's finally time to fix it. And maybe next time
let's not leave bugs unfixed (that are actually worse than the original
bug), and let's actually get people to review kernel commits please.

Fixes xHC crashes and IOMMU faults with UAS devices when handling
errors/faults. Easiest repro is to use `hdparm` to mark an early sector
(e.g. 1024) on a disk as bad, then `cat /dev/sdX > /dev/null` in a loop.
At least in the case of JMicron controllers, the read errors end up
having to cancel two TDs (for two queued requests to different streams)
and the one that didn't get cleared properly ends up faulting the xHC
entirely when it tries to access DMA pages that have since been unmapped,
referred to by the stale TDs. This normally happens quickly (after two
or three loops). After this fix, I left the `cat` in a loop running
overnight and experienced no xHC failures, with all read errors
recovered properly. Repro'd and tested on an Apple M1 Mac Mini
(dwc3 host).

On systems without an IOMMU, this bug would instead silently corrupt
freed memory, making this a
---truncated---",Linux,Linux,"e9df17eb1408cfafa3d1844bfc7f22c7237b31b8, e9df17eb1408cfafa3d1844bfc7f22c7237b31b8, e9df17eb1408cfafa3d1844bfc7f22c7237b31b8, e9df17eb1408cfafa3d1844bfc7f22c7237b31b8, e9df17eb1408cfafa3d1844bfc7f22c7237b31b8"
87,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-36019,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

regmap: maple: Fix cache corruption in regcache_maple_drop()

When keeping the upper end of a cache block entry, the entry[] array
must be indexed by the offset from the base register of the block,
i.e. max - mas.index.

The code was indexing entry[] by only the register address, leading
to an out-of-bounds access that copied some part of the kernel
memory over the cache contents.

This bug was not detected by the regmap KUnit test because it only
tests with a block of registers starting at 0, so mas.index == 0.",Linux,Linux,"f033c26de5a5734625d2dd1dc196745fae186f1b, f033c26de5a5734625d2dd1dc196745fae186f1b, f033c26de5a5734625d2dd1dc196745fae186f1b"
93,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-50387,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the ""KeyTrap"" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",n/a,n/a,n/a
92,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-41055,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

mm: prevent derefencing NULL ptr in pfn_section_valid()

Commit 5ec8e8ea8b77 (""mm/sparsemem: fix race in accessing
memory_section->usage"") changed pfn_section_valid() to add a READ_ONCE()
call around ""ms->usage"" to fix a race with section_deactivate() where
ms->usage can be cleared.  The READ_ONCE() call, by itself, is not enough
to prevent NULL pointer dereference.  We need to check its value before
dereferencing it.",Linux,Linux,"90ad17575d26874287271127d43ef3c2af876cea, b448de2459b6d62a53892487ab18b7d823ff0529, 68ed9e33324021e9d6b798e9db00ca3093d2012a, 70064241f2229f7ba7b9599a98f68d9142e81a97, 5ec8e8ea8b7783fab150cf86404fc38cb4db8800, 5ec8e8ea8b7783fab150cf86404fc38cb4db8800"
94,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-42102,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

Revert ""mm/writeback: fix possible divide-by-zero in wb_dirty_limits(), again""

Patch series ""mm: Avoid possible overflows in dirty throttling"".

Dirty throttling logic assumes dirty limits in page units fit into
32-bits.  This patch series makes sure this is true (see patch 2/2 for
more details).


This patch (of 2):

This reverts commit 9319b647902cbd5cc884ac08a8a6d54ce111fc78.

The commit is broken in several ways.  Firstly, the removed (u64) cast
from the multiplication will introduce a multiplication overflow on 32-bit
archs if wb_thresh * bg_thresh >= 1<<32 (which is actually common - the
default settings with 4GB of RAM will trigger this).  Secondly, the
div64_u64() is unnecessarily expensive on 32-bit archs.  We have
div64_ul() in case we want to be safe & cheap.  Thirdly, if dirty
thresholds are larger than 1<<32 pages, then dirty balancing is going to
blow up in many other spectacular ways anyway so trying to fix one
possible overflow is just moot.",Linux,Linux,"c593d26fb5d577ef31b6e49a31e08ae3ebc1bc1e, 1f12e4b3284d6c863f272eb2de0d4248ed211cf4, 81e7d2530d458548b90a5c5e76b77ad5e5d1c0df, 5099871b370335809c0fd1abad74d9c7c205d43f, 16b1025eaa8fc223ab4273ece20d1c3a4211a95d, ec18ec230301583395576915d274b407743d8f6c, 9319b647902cbd5cc884ac08a8a6d54ce111fc78, 9319b647902cbd5cc884ac08a8a6d54ce111fc78"
90,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2023-7008,n/a,n/a,Channel Accessible by Non-Endpoint,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",Red Hat,Red Hat Enterprise Linux 8,0:239-82.el8
89,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2020-11022,6.9,n/a,CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.",jquery,jQuery,">= 1.2, < 3.5.0"
88,Multiples vulnérabilités dans les produits Juniper Networks ,Avis,2025-01-09,CVE-2024-41040,n/a,n/a,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0018/,"In the Linux kernel, the following vulnerability has been resolved:

net/sched: Fix UAF when resolving a clash

KASAN reports the following UAF:

 BUG: KASAN: slab-use-after-free in tcf_ct_flow_table_process_conn+0x12b/0x380 [act_ct]
 Read of size 1 at addr ffff888c07603600 by task handler130/6469

 Call Trace:
  <IRQ>
  dump_stack_lvl+0x48/0x70
  print_address_description.constprop.0+0x33/0x3d0
  print_report+0xc0/0x2b0
  kasan_report+0xd0/0x120
  __asan_load1+0x6c/0x80
  tcf_ct_flow_table_process_conn+0x12b/0x380 [act_ct]
  tcf_ct_act+0x886/0x1350 [act_ct]
  tcf_action_exec+0xf8/0x1f0
  fl_classify+0x355/0x360 [cls_flower]
  __tcf_classify+0x1fd/0x330
  tcf_classify+0x21c/0x3c0
  sch_handle_ingress.constprop.0+0x2c5/0x500
  __netif_receive_skb_core.constprop.0+0xb25/0x1510
  __netif_receive_skb_list_core+0x220/0x4c0
  netif_receive_skb_list_internal+0x446/0x620
  napi_complete_done+0x157/0x3d0
  gro_cell_poll+0xcf/0x100
  __napi_poll+0x65/0x310
  net_rx_action+0x30c/0x5c0
  __do_softirq+0x14f/0x491
  __irq_exit_rcu+0x82/0xc0
  irq_exit_rcu+0xe/0x20
  common_interrupt+0xa1/0xb0
  </IRQ>
  <TASK>
  asm_common_interrupt+0x27/0x40

 Allocated by task 6469:
  kasan_save_stack+0x38/0x70
  kasan_set_track+0x25/0x40
  kasan_save_alloc_info+0x1e/0x40
  __kasan_krealloc+0x133/0x190
  krealloc+0xaa/0x130
  nf_ct_ext_add+0xed/0x230 [nf_conntrack]
  tcf_ct_act+0x1095/0x1350 [act_ct]
  tcf_action_exec+0xf8/0x1f0
  fl_classify+0x355/0x360 [cls_flower]
  __tcf_classify+0x1fd/0x330
  tcf_classify+0x21c/0x3c0
  sch_handle_ingress.constprop.0+0x2c5/0x500
  __netif_receive_skb_core.constprop.0+0xb25/0x1510
  __netif_receive_skb_list_core+0x220/0x4c0
  netif_receive_skb_list_internal+0x446/0x620
  napi_complete_done+0x157/0x3d0
  gro_cell_poll+0xcf/0x100
  __napi_poll+0x65/0x310
  net_rx_action+0x30c/0x5c0
  __do_softirq+0x14f/0x491

 Freed by task 6469:
  kasan_save_stack+0x38/0x70
  kasan_set_track+0x25/0x40
  kasan_save_free_info+0x2b/0x60
  ____kasan_slab_free+0x180/0x1f0
  __kasan_slab_free+0x12/0x30
  slab_free_freelist_hook+0xd2/0x1a0
  __kmem_cache_free+0x1a2/0x2f0
  kfree+0x78/0x120
  nf_conntrack_free+0x74/0x130 [nf_conntrack]
  nf_ct_destroy+0xb2/0x140 [nf_conntrack]
  __nf_ct_resolve_clash+0x529/0x5d0 [nf_conntrack]
  nf_ct_resolve_clash+0xf6/0x490 [nf_conntrack]
  __nf_conntrack_confirm+0x2c6/0x770 [nf_conntrack]
  tcf_ct_act+0x12ad/0x1350 [act_ct]
  tcf_action_exec+0xf8/0x1f0
  fl_classify+0x355/0x360 [cls_flower]
  __tcf_classify+0x1fd/0x330
  tcf_classify+0x21c/0x3c0
  sch_handle_ingress.constprop.0+0x2c5/0x500
  __netif_receive_skb_core.constprop.0+0xb25/0x1510
  __netif_receive_skb_list_core+0x220/0x4c0
  netif_receive_skb_list_internal+0x446/0x620
  napi_complete_done+0x157/0x3d0
  gro_cell_poll+0xcf/0x100
  __napi_poll+0x65/0x310
  net_rx_action+0x30c/0x5c0
  __do_softirq+0x14f/0x491

The ct may be dropped if a clash has been resolved but is still passed to
the tcf_ct_flow_table_process_conn function for further usage. This issue
can be fixed by retrieving ct from skb again after confirming conntrack.",Linux,Linux,"f07c548314776231f0d47d73ec6caa5b17e876e8, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33, 0cc254e5aa37cf05f65bcdcdc0ac5c58010feb33"
12,Multiples vulnérabilités dans les produits Splunk ,Avis,2025-01-08,CVE-2020-14340,n/a,n/a,CWE-400,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0010/,A vulnerability was discovered in XNIO where file descriptor leak caused by growing amounts of NIO Selector file handles between garbage collection cycles. It may allow the attacker to cause a denial of service. It affects XNIO versions 3.6.0.Beta1 through 3.8.1.Final.,n/a,XNIO,"xnio 3.7.9.Final, xnio 3.8.2.Final, xnio 3.9.0.Final"
1,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0241,n/a,n/a,Memory corruption when using JavaScript Text Segmentation,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"When segmenting specially crafted text, segmentation would corrupt memory leading to a potentially exploitable crash. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
2,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0244,n/a,n/a,Address bar spoofing using an invalid protocol scheme on Firefox for Android,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"When redirecting to an invalid protocol scheme, an attacker could spoof the address bar. 
*Note: This issue only affected Android operating systems. Other operating systems are unaffected.* This vulnerability affects Firefox < 134.",Mozilla,Firefox,unspecified
3,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0237,n/a,n/a,WebChannel APIs susceptible to confused deputy attack,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"The WebChannel API, which is used to transport various information across processes, did not check the sending principal but rather accepted the principal being sent. This could have led to privilege escalation attacks. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
4,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0247,n/a,n/a,Memory safety bugs fixed in Firefox 134 and Thunderbird 134,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,Memory safety bugs present in Firefox 133 and Thunderbird 133. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 134 and Thunderbird < 134.,Mozilla,Firefox,unspecified
5,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0239,n/a,n/a,Alt-Svc ALPN validation failure when redirected,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"When using Alt-Svc, ALPN did not properly validate certificates when the original server is redirecting to an insecure site. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
6,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0243,n/a,n/a,"Memory safety bugs fixed in Firefox 134, Thunderbird 134, Firefox ESR 128.6, and Thunderbird 128.6",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"Memory safety bugs present in Firefox 133, Thunderbird 133, Firefox ESR 128.5, and Thunderbird 128.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
7,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0246,n/a,n/a,Address bar spoofing using an invalid protocol scheme on Firefox for Android,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"When using an invalid protocol scheme, an attacker could spoof the address bar. 
*Note: This issue only affected Android operating systems. Other operating systems are unaffected.*
*Note: This issue is a different issue from CVE-2025-0244. This vulnerability affects Firefox < 134.",Mozilla,Firefox,unspecified
8,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0238,n/a,n/a,Use-after-free when breaking lines in text,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"Assuming a controlled failed memory allocation, an attacker could have caused a use-after-free, leading to a potentially exploitable crash. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Firefox ESR < 115.19, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
9,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0240,n/a,n/a,Compartment mismatch when parsing JavaScript JSON module,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"Parsing a JavaScript module as JSON could under some circumstances cause cross-compartment access, which may result in a use-after-free. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
10,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0245,n/a,n/a,Lock screen setting bypass in Firefox Focus for Android,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"Under certain circumstances, a user opt-in setting that Focus should require authentication before use could have been be bypassed. This vulnerability affects Firefox < 134.",Mozilla,Firefox,unspecified
11,Multiples vulnérabilités dans les produits Splunk ,Avis,2025-01-08,CVE-2020-35510,n/a,n/a,CWE-400,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0010/,"A flaw was found in jboss-remoting in versions before 5.0.20.SP1-redhat-00001. A malicious attacker could cause threads to hold up forever in the EJB server by writing a sequence of bytes corresponding to the expected messages of a successful EJB client request, but omitting the ACK messages, or just tamper with jboss-remoting code, deleting the lines that send the ACK message from the EJB client code resulting in a denial of service. The highest threat from this vulnerability is to system availability.",n/a,jboss-remoting,jboss-remoting 5.0.20.SP1-redhat-00001
0,Multiples vulnérabilités dans les produits Mozilla ,Avis,2025-01-08,CVE-2025-0242,n/a,n/a,"Memory safety bugs fixed in Firefox 134, Thunderbird 134, Firefox ESR 115.19, Firefox ESR 128.6, Thunderbird 115.19, and Thunderbird 128.6",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0009/,"Memory safety bugs present in Firefox 133, Thunderbird 133, Firefox ESR 115.18, Firefox ESR 128.5, Thunderbird 115.18, and Thunderbird 128.5. Some of these bugs showed evidence of memory corruption and we presume that with enough effort some of these could have been exploited to run arbitrary code. This vulnerability affects Firefox < 134, Firefox ESR < 128.6, Firefox ESR < 115.19, Thunderbird < 134, and Thunderbird < 128.6.",Mozilla,Firefox,unspecified
13,Multiples vulnérabilités dans les produits Splunk ,Avis,2025-01-08,CVE-2025-22621,6.4,n/a,"The software does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0010/,"In versions 1.0.67 and lower of the Splunk App for SOAR, the Splunk documentation for that app recommended adding the `admin_all_objects` capability to the `splunk_app_soar` role. This addition could lead to improper access control for a low-privileged user that does not hold the ""admin""  Splunk roles.",Splunk,Splunk App for SOAR,1.0
20,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-12803,n/a,n/a,CWE-121 Stack-based Buffer Overflow,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,A post-authentication stack-based buffer overflow vulnerability in SonicOS management allows a remote attacker to crash a firewall and potentially leads to code execution.,SonicWall,SonicOS,"6.5.4.15-117n and older versions, 7.0.1-5161 and older version, 7.1.2-7019, 8.0.0-8035"
25,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-40765,n/a,n/a,CWE-190 Integer Overflow or Wraparound,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,An Integer-based buffer overflow vulnerability in the SonicOS via IPSec allows a remote attacker in specific conditions to cause Denial of Service (DoS) and potentially execute arbitrary code by sending a specially crafted IKEv2 payload.,SonicWall,SonicOS,"6.5.4.4-44v-21-2395 and older versions, 7.0.1-5151 and older versions, 7.1.1-7051 and older versions"
24,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-53706,n/a,n/a,CWE-269 Improper Privilege Management,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,"A vulnerability in the Gen7 SonicOS Cloud platform NSv, allows a remote authenticated local low-privileged attacker to elevate privileges to `root` and potentially lead to code execution.",SonicWall,SonicOS,"7.1.1-7058 and older versions, 7.1.2-7019"
23,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-12802,n/a,n/a,CWE-305 Authentication Bypass by Primary Weakness,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,"SSL-VPN MFA Bypass in SonicWALL SSL-VPN can arise in specific cases due to the separate handling of UPN (User Principal Name) and SAM (Security Account Manager) account names when integrated with Microsoft Active Directory, allowing MFA to be configured independently for each login method and potentially enabling attackers to bypass MFA by exploiting the alternative account name.",SonicWall,SonicOS,"6.5.4.4-44v-21-2457 and older versions, 6.5.4.15-117n and older versions, 7.0.1-5161 and older versions, 7.1.1-7058 and older versions, 7.1.2-7019, 8.0.0-8035"
22,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-53705,n/a,n/a,CWE-918 Server-Side Request Forgery (SSRF),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,A Server-Side Request Forgery vulnerability in the SonicOS SSH management interface allows a remote attacker to establish a TCP connection to an IP address on any port when the user is logged in to the firewall.,SonicWall,SonicOS,"6.5.4.15-117n and older versions, 7.0.1-5161 and older versions, 7.1.1-7058 and older versions, 7.1.2-7019, 8.0.0-8035"
21,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-53704,n/a,n/a,CWE-287 Improper Authentication,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,An Improper Authentication vulnerability in the SSLVPN authentication mechanism allows a remote attacker to bypass authentication.,SonicWall,SonicOS,"7.1.1-7058 and older versions, 7.1.2-7019, 8.0.0-8035"
14,Multiples vulnérabilités dans les produits Splunk ,Avis,2025-01-08,CVE-2023-5685,n/a,n/a,Uncontrolled Resource Consumption,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0010/,A flaw was found in XNIO. The XNIO NotifierState that can cause a Stack Overflow Exception when the chain of notifier states becomes problematically large can lead to uncontrolled resource management and a possible denial of service (DoS).,Red Hat,EAP 7.4.14,
19,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-12805,n/a,n/a,CWE-134 Use of Externally-Controlled Format String,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,A post-authentication format string vulnerability in SonicOS management allows a remote attacker to crash a firewall and potentially leads to code execution.,SonicWall,SonicOS,"6.5.4.15-117n and older versions, 7.0.1-5161 and older version, 7.1.2-7019, 8.0.0-8035"
17,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-40762,n/a,n/a,CWE-338 Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG),n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,"Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG) in the SonicOS SSLVPN authentication token generator that, in certain cases, can be predicted by an attacker potentially resulting in authentication bypass.",SonicWall,SonicOS,"7.1.1-7058 and older versions, 7.1.2-7019, 8.0.0-8035"
16,Vulnérabilité dans Google Chrome ,Avis,2025-01-08,CVE-2025-0291,n/a,n/a,Type Confusion,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0012/,Type Confusion in V8 in Google Chrome prior to 131.0.6778.264 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page. (Chromium security severity: High),Google,Chrome,131.0.6778.264
15,Vulnérabilité dans VMware Aria automation et Cloud Fondation ,Avis,2025-01-08,CVE-2025-22215,4.3,Moyenne,n/a,n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0011/,"VMware Aria Automation contains a server-side request forgery (SSRF) vulnerability. A malicious actor with ""Organization Member"" access to Aria Automation may exploit this vulnerability enumerate internal services running on the host/network.",VMware,VMware Aria Automation,8.x
18,Multiples vulnérabilités dans les produits SonicWall ,Avis,2025-01-08,CVE-2024-12806,n/a,n/a,CWE-37 Path Traversal: '/absolute/pathname/here',n/a,https://www.cert.ssi.gouv.fr/avis/CERTFR-2025-AVI-0013/,A post-authentication absolute path traversal vulnerability in SonicOS management allows a remote attacker to read an arbitrary file.,SonicWall,SonicOS,"6.5.4.15-117n and older versions, 7.0.1-5161 and older version, 7.1.2-7019, 8.0.0-8035"
1720,[MàJ] Multiples vulnérabilités sur l'interface d'administration des équipements Palo Alto Networks ,Alerte,2024-11-15,CVE-2024-9474,n/a,n/a,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),0.9749,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-015/,"A privilege escalation vulnerability in Palo Alto Networks PAN-OS software allows a PAN-OS administrator with access to the management web interface to perform actions on the firewall with root privileges.

Cloud NGFW and Prisma Access are not impacted by this vulnerability.",Palo Alto Networks,Cloud NGFW,All
1721,[MàJ] Multiples vulnérabilités sur l'interface d'administration des équipements Palo Alto Networks ,Alerte,2024-11-15,CVE-2024-0012,n/a,n/a,CWE-306 Missing Authentication for Critical Function,0.97042,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-015/,"An authentication bypass in Palo Alto Networks PAN-OS software enables an unauthenticated attacker with network access to the management web interface to gain PAN-OS administrator privileges to perform administrative actions, tamper with the configuration, or exploit other authenticated privilege escalation vulnerabilities like  CVE-2024-9474 https://security.paloaltonetworks.com/CVE-2024-9474 .

The risk of this issue is greatly reduced if you secure access to the management web interface by restricting access to only trusted internal IP addresses according to our recommended  best practice deployment guidelines https://live.paloaltonetworks.com/t5/community-blogs/tips-amp-tricks-how-to-secure-the-management-access-of-your-palo/ba-p/464431 .

This issue is applicable only to PAN-OS 10.2, PAN-OS 11.0, PAN-OS 11.1, and PAN-OS 11.2 software.

Cloud NGFW and Prisma Access are not impacted by this vulnerability.",Palo Alto Networks,Cloud NGFW,All
1719,[MàJ] Multiples vulnérabilités dans Fortinet FortiManager ,Alerte,2024-10-23,CVE-2024-47575,9.8,Critique,Execute unauthorized code or commands,0.87146,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-014/,"A missing authentication for critical function in FortiManager 7.6.0, FortiManager 7.4.0 through 7.4.4, FortiManager 7.2.0 through 7.2.7, FortiManager 7.0.0 through 7.0.12, FortiManager 6.4.0 through 6.4.14, FortiManager 6.2.0 through 6.2.12, Fortinet FortiManager Cloud 7.4.1 through 7.4.4, FortiManager Cloud 7.2.1 through 7.2.7, FortiManager Cloud 7.0.1 through 7.0.12, FortiManager Cloud 6.4.1 through 6.4.7 allows attacker to execute arbitrary code or commands via specially crafted requests.",Fortinet,FortiManager,"7.6.0, 7.4.0, 7.2.0, 7.0.0, 6.4.0, 6.2.0"
1718,[MàJ] Multiples vulnérabilités dans Fortinet FortiManager ,Alerte,2024-10-23,CVE-2024-50566,7.2,Élevée,Execute unauthorized code or commands,0.00043,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-014/,"A improper neutralization of special elements used in an os command ('os command injection') in Fortinet FortiManager versions 7.6.0 through 7.6.1, versions 7.4.5 through 7.4.0, and versions 7.2.1 through 7.2.8, FortiManager Cloud versions 7.6.0 through 7.6.1, versions 7.4.0 through 7.4.4, and versions 7.2.2 through 7.2.7 may allow an authenticated remote attacker to execute unauthorized code via FGFM crafted requests.",Fortinet,FortiManager,"7.6.0, 7.4.0, 7.2.1"
1716,Exploitations de vulnérabilités dans Ivanti Cloud Services Appliance  ,Alerte,2024-10-22,CVE-2024-8963,9.4,Critique,CWE-22 Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),0.96799,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-013/,Path Traversal in the Ivanti CSA before 4.6 Patch 519 allows a remote unauthenticated attacker to access restricted functionality.,Ivanti,CSA (Cloud Services Appliance),"4.6 Patch 519, 5.0"
1715,Exploitations de vulnérabilités dans Ivanti Cloud Services Appliance  ,Alerte,2024-10-22,CVE-2024-9380,7.2,Élevée,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),0.04272,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-013/,An OS command injection vulnerability in the admin web console of Ivanti CSA before version 5.0.2 allows a remote authenticated attacker with admin privileges to obtain remote code execution.,Ivanti,CSA (Cloud Services Appliance),5.0.2
1717,Exploitations de vulnérabilités dans Ivanti Cloud Services Appliance  ,Alerte,2024-10-22,CVE-2024-8190,7.2,Élevée,CWE-78 Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),0.11331,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-013/,An OS command injection vulnerability in Ivanti Cloud Services Appliance versions 4.6 Patch 518 and before allows a remote authenticated attacker to obtain remote code execution. The attacker must have admin level privileges to exploit this vulnerability.,Ivanti,CSA (Cloud Services Appliance),"4.6 Patch 519, 5.0"
1714,[MàJ] Vulnérabilités affectant OpenPrinting CUPS ,Alerte,2024-09-27,CVE-2024-47175,8.6,n/a,CWE-20: Improper Input Validation,0.00045,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-012/,"CUPS is a standards-based, open-source printing system, and `libppd` can be used for legacy PPD file support. The `libppd` function `ppdCreatePPDFromIPP2` does not sanitize IPP attributes when creating the PPD buffer. When used in combination with other functions such as `cfGetPrinterAttributes5`, can result in user controlled input and ultimately code execution via Foomatic. This vulnerability can be part of an exploit chain leading to remote code execution (RCE), as described in CVE-2024-47176.",OpenPrinting,libppd,<= 2.1b1
1713,[MàJ] Vulnérabilités affectant OpenPrinting CUPS ,Alerte,2024-09-27,CVE-2024-47176,5.3,Moyenne,CWE-1327: Binding to an Unrestricted IP Address,0.00063,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-012/,"CUPS is a standards-based, open-source printing system, and `cups-browsed` contains network printing functionality including, but not limited to, auto-discovering print services and shared printers. `cups-browsed` binds to `INADDR_ANY:631`, causing it to trust any packet from any source, and can cause the `Get-Printer-Attributes` IPP request to an attacker controlled URL. When combined with other vulnerabilities, such as CVE-2024-47076, CVE-2024-47175, and CVE-2024-47177, an attacker can execute arbitrary commands remotely on the target machine without authentication when a malicious printer is printed to.",OpenPrinting,cups-browsed,<= 2.0.1
1712,[MàJ] Vulnérabilités affectant OpenPrinting CUPS ,Alerte,2024-09-27,CVE-2024-47177,9.1,Critique,CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection'),0.00044,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-012/,"CUPS is a standards-based, open-source printing system, and cups-filters provides backends, filters, and other software for CUPS 2.x to use on non-Mac OS systems. Any value passed to `FoomaticRIPCommandLine` via a PPD file will be executed as a user controlled command. When combined with other logic bugs as described in CVE_2024-47176, this can lead to remote command execution.",OpenPrinting,cups-filters,<= 2.0.1
1711,[MàJ] Vulnérabilités affectant OpenPrinting CUPS ,Alerte,2024-09-27,CVE-2024-47076,8.6,n/a,CWE-20: Improper Input Validation,0.00045,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-012/,"CUPS is a standards-based, open-source printing system, and `libcupsfilters` contains the code of the filters of the former `cups-filters` package as library functions to be used for the data format conversion tasks needed in Printer Applications. The `cfGetPrinterAttributes5` function in `libcupsfilters` does not sanitize IPP attributes returned from an IPP server. When these IPP attributes are used, for instance, to generate a PPD file, this can lead to attacker controlled data to be provided to the rest of the CUPS system.",OpenPrinting,libcupsfilters,<= 2.1b1
1710,Vulnérabilité dans SonicWall ,Alerte,2024-09-10,CVE-2024-40766,n/a,n/a,CWE-284 Improper Access Control,0.00819,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-011/,"An improper access control vulnerability has been identified in the SonicWall SonicOS management access, potentially leading to unauthorized resource access and in specific conditions, causing the firewall to crash. This issue affects SonicWall Firewall Gen 5 and Gen 6 devices, as well as Gen 7 devices running SonicOS 7.0.1-5035 and older versions.",SonicWall,SonicOS,"5.9.2.14-12o and older versions, 6.5.4.14-109n and older versions, 7.0.1-5035 and older versions"
1707,Multiples vulnérabilités dans Roundcube ,Alerte,2024-08-09,CVE-2024-42009,n/a,n/a,n/a,0.0081,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-010/,A Cross-Site Scripting vulnerability in Roundcube through 1.5.7 and 1.6.x through 1.6.7 allows a remote attacker to steal and send emails of a victim via a crafted e-mail message that abuses a Desanitization issue in message_body() in program/actions/mail/show.php.,n/a,n/a,n/a
1708,Multiples vulnérabilités dans Roundcube ,Alerte,2024-08-09,CVE-2024-42008,n/a,n/a,n/a,0.0081,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-010/,A Cross-Site Scripting vulnerability in rcmail_action_mail_get->run() in Roundcube through 1.5.7 and 1.6.x through 1.6.7 allows a remote attacker to steal and send emails of a victim via a malicious e-mail attachment served with a dangerous Content-Type header.,n/a,n/a,n/a
1709,Multiples vulnérabilités dans Roundcube ,Alerte,2024-08-09,CVE-2024-42010,n/a,n/a,n/a,0.00045,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-010/,"mod_css_styles in Roundcube through 1.5.7 and 1.6.x through 1.6.7 insufficiently filters Cascading Style Sheets (CSS) token sequences in rendered e-mail messages, allowing a remote attacker to obtain sensitive information.",n/a,n/a,n/a
1706,Vulnérabilité dans OpenSSH ,Alerte,2024-07-01,CVE-2024-6387,n/a,n/a,Signal Handler Race Condition,0.00261,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-009/,"A security regression (CVE-2006-5051) was discovered in OpenSSH's server (sshd). There is a race condition which can lead sshd to handle some signals in an unsafe manner. An unauthenticated, remote attacker may be able to trigger it by failing to authenticate within a set time period.",n/a,n/a,8.5p1
1705,[MàJ] Vulnérabilité dans les produits Check Point  ,Alerte,2024-05-30,CVE-2024-24919,8.6,n/a,CWE-200: Exposure of Sensitive Information to an Unauthorized Actor,0.95818,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-008/,Potentially allowing an attacker to read certain information on Check Point Security Gateways once connected to the internet and enabled with remote Access VPN or Mobile Access Software Blades. A Security fix that mitigates this vulnerability is available.,checkpoint,"Check Point Quantum Gateway, Spark Gateway and CloudGuard Network","Check Point Quantum Gateway and CloudGuard Network versions R81.20, R81.10, R81, R80.40 and Check Point Spark versions R81.10, R80.20."
1704,Multiples vulnérabilités dans les produits Cisco ,Alerte,2024-04-25,CVE-2024-20359,6,Moyenne,Improper Control of Generation of Code ('Code Injection'),0.00128,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-007/,"A vulnerability in a legacy capability that allowed for the preloading of VPN clients and plug-ins and that has been available in Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an authenticated, local attacker to execute arbitrary code with root-level privileges. Administrator-level privileges are required to exploit this vulnerability.
 This vulnerability is due to improper validation of a file when it is read from system flash memory. An attacker could exploit this vulnerability by copying a crafted file to the disk0: file system of an affected device. A successful exploit could allow the attacker to execute arbitrary code on the affected device after the next reload of the device, which could alter system behavior. Because the injected code could persist across device reboots, Cisco has raised the Security Impact Rating (SIR) of this advisory from Medium to High.",Cisco,Cisco Adaptive Security Appliance (ASA) Software,"9.8.1, 9.8.1.5, 9.8.1.7, 9.8.2, 9.8.2.8, 9.8.2.14, 9.8.2.15, 9.8.2.17, 9.8.2.20, 9.8.2.24, 9.8.2.26, 9.8.2.28, 9.8.2.33, 9.8.2.35, 9.8.2.38, 9.8.3.8, 9.8.3.11, 9.8.3.14, 9.8.3.16, 9.8.3.18, 9.8.3.21, 9.8.3, 9.8.3.26, 9.8.3.29, 9.8.4, 9.8.4.3, 9.8.4.7, 9.8.4.8, 9.8.4.10, 9.8.4.12, 9.8.4.15, 9.8.4.17, 9.8.4.25, 9.8.4.20, 9.8.4.22, 9.8.4.26, 9.8.4.29, 9.8.4.32, 9.8.4.33, 9.8.4.34, 9.8.4.35, 9.8.4.39, 9.8.4.40, 9.8.4.41, 9.8.4.43, 9.8.4.44, 9.8.4.45, 9.8.4.46, 9.8.4.48, 9.12.1, 9.12.1.2, 9.12.1.3, 9.12.2, 9.12.2.4, 9.12.2.5, 9.12.2.9, 9.12.3, 9.12.3.2, 9.12.3.7, 9.12.4, 9.12.3.12, 9.12.3.9, 9.12.2.1, 9.12.4.2, 9.12.4.4, 9.12.4.7, 9.12.4.10, 9.12.4.13, 9.12.4.8, 9.12.4.18, 9.12.4.24, 9.12.4.26, 9.12.4.29, 9.12.4.30, 9.12.4.35, 9.12.4.37, 9.12.4.38, 9.12.4.39, 9.12.4.40, 9.12.4.41, 9.12.4.47, 9.12.4.48, 9.12.4.50, 9.12.4.52, 9.12.4.54, 9.12.4.55, 9.12.4.56, 9.12.4.58, 9.12.4.62, 9.12.4.65, 9.14.1, 9.14.1.10, 9.14.1.6, 9.14.1.15, 9.14.1.19, 9.14.1.30, 9.14.2, 9.14.2.4, 9.14.2.8, 9.14.2.13, 9.14.2.15, 9.14.3, 9.14.3.1, 9.14.3.9, 9.14.3.11, 9.14.3.13, 9.14.3.18, 9.14.3.15, 9.14.4, 9.14.4.6, 9.14.4.7, 9.14.4.12, 9.14.4.13, 9.14.4.14, 9.14.4.15, 9.14.4.17, 9.14.4.22, 9.14.4.23, 9.15.1, 9.15.1.7, 9.15.1.10, 9.15.1.15, 9.15.1.16, 9.15.1.17, 9.15.1.1, 9.15.1.21, 9.16.1, 9.16.1.28, 9.16.2, 9.16.2.3, 9.16.2.7, 9.16.2.11, 9.16.2.13, 9.16.2.14, 9.16.3, 9.16.3.3, 9.16.3.14, 9.16.3.15, 9.16.3.19, 9.16.3.23, 9.16.4, 9.16.4.9, 9.16.4.14, 9.16.4.18, 9.16.4.19, 9.16.4.27, 9.16.4.38, 9.16.4.39, 9.16.4.42, 9.16.4.48, 9.16.4.55, 9.17.1, 9.17.1.7, 9.17.1.9, 9.17.1.10, 9.17.1.11, 9.17.1.13, 9.17.1.15, 9.17.1.20, 9.17.1.30, 9.17.1.33, 9.18.1, 9.18.1.3, 9.18.2, 9.18.2.5, 9.18.2.7, 9.18.2.8, 9.18.3, 9.18.3.39, 9.18.3.46, 9.18.3.53, 9.18.3.55, 9.18.3.56, 9.18.4, 9.18.4.5, 9.18.4.8, 9.19.1, 9.19.1.5, 9.19.1.9, 9.19.1.12, 9.19.1.18, 9.19.1.22, 9.19.1.24, 9.19.1.27, 9.20.1, 9.20.1.5, 9.20.2"
1703,Multiples vulnérabilités dans les produits Cisco ,Alerte,2024-04-25,CVE-2024-20353,8.6,n/a,Loop with Unreachable Exit Condition ('Infinite Loop'),0.00175,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-007/,"A vulnerability in the management and VPN web servers for Cisco Adaptive Security Appliance (ASA) Software and Cisco Firepower Threat Defense (FTD) Software could allow an unauthenticated, remote attacker to cause the device to reload unexpectedly, resulting in a denial of service (DoS) condition.
 This vulnerability is due to incomplete error checking when parsing an HTTP header. An attacker could exploit this vulnerability by sending a crafted HTTP request to a targeted web server on a device. A successful exploit could allow the attacker to cause a DoS condition when the device reloads.",Cisco,Cisco Adaptive Security Appliance (ASA) Software,"9.8.1, 9.8.1.5, 9.8.1.7, 9.8.2, 9.8.2.8, 9.8.2.14, 9.8.2.15, 9.8.2.17, 9.8.2.20, 9.8.2.24, 9.8.2.26, 9.8.2.28, 9.8.2.33, 9.8.2.35, 9.8.2.38, 9.8.3.8, 9.8.3.11, 9.8.3.14, 9.8.3.16, 9.8.3.18, 9.8.3.21, 9.8.3, 9.8.3.26, 9.8.3.29, 9.8.4, 9.8.4.3, 9.8.4.7, 9.8.4.8, 9.8.4.10, 9.8.4.12, 9.8.4.15, 9.8.4.17, 9.8.4.25, 9.8.4.20, 9.8.4.22, 9.8.4.26, 9.8.4.29, 9.8.4.32, 9.8.4.33, 9.8.4.34, 9.8.4.35, 9.8.4.39, 9.8.4.40, 9.8.4.41, 9.8.4.43, 9.8.4.44, 9.8.4.45, 9.8.4.46, 9.8.4.48, 9.12.1, 9.12.1.2, 9.12.1.3, 9.12.2, 9.12.2.4, 9.12.2.5, 9.12.2.9, 9.12.3, 9.12.3.2, 9.12.3.7, 9.12.4, 9.12.3.12, 9.12.3.9, 9.12.2.1, 9.12.4.2, 9.12.4.4, 9.12.4.7, 9.12.4.10, 9.12.4.13, 9.12.4.8, 9.12.4.18, 9.12.4.24, 9.12.4.26, 9.12.4.29, 9.12.4.30, 9.12.4.35, 9.12.4.37, 9.12.4.38, 9.12.4.39, 9.12.4.40, 9.12.4.41, 9.12.4.47, 9.12.4.48, 9.12.4.50, 9.12.4.52, 9.12.4.54, 9.12.4.55, 9.12.4.56, 9.12.4.58, 9.12.4.62, 9.12.4.65, 9.14.1, 9.14.1.10, 9.14.1.6, 9.14.1.15, 9.14.1.19, 9.14.1.30, 9.14.2, 9.14.2.4, 9.14.2.8, 9.14.2.13, 9.14.2.15, 9.14.3, 9.14.3.1, 9.14.3.9, 9.14.3.11, 9.14.3.13, 9.14.3.18, 9.14.3.15, 9.14.4, 9.14.4.6, 9.14.4.7, 9.14.4.12, 9.14.4.13, 9.14.4.14, 9.14.4.15, 9.14.4.17, 9.14.4.22, 9.14.4.23, 9.15.1, 9.15.1.7, 9.15.1.10, 9.15.1.15, 9.15.1.16, 9.15.1.17, 9.15.1.1, 9.15.1.21, 9.16.1, 9.16.1.28, 9.16.2, 9.16.2.3, 9.16.2.7, 9.16.2.11, 9.16.2.13, 9.16.2.14, 9.16.3, 9.16.3.3, 9.16.3.14, 9.16.3.15, 9.16.3.19, 9.16.3.23, 9.16.4, 9.16.4.9, 9.16.4.14, 9.16.4.18, 9.16.4.19, 9.16.4.27, 9.16.4.38, 9.16.4.39, 9.16.4.42, 9.16.4.48, 9.16.4.55, 9.17.1, 9.17.1.7, 9.17.1.9, 9.17.1.10, 9.17.1.11, 9.17.1.13, 9.17.1.15, 9.17.1.20, 9.17.1.30, 9.17.1.33, 9.18.1, 9.18.1.3, 9.18.2, 9.18.2.5, 9.18.2.7, 9.18.2.8, 9.18.3, 9.18.3.39, 9.18.3.46, 9.18.3.53, 9.18.3.55, 9.18.3.56, 9.18.4, 9.18.4.5, 9.18.4.8, 9.19.1, 9.19.1.5, 9.19.1.9, 9.19.1.12, 9.19.1.18, 9.19.1.22, 9.19.1.24, 9.19.1.27, 9.20.1, 9.20.1.5, 9.20.2"
1702,[MàJ] Vulnérabilité dans Palo Alto Networks GlobalProtect ,Alerte,2024-04-12,CVE-2024-3400,10,Critique,CWE-77 Improper Neutralization of Special Elements used in a Command ('Command Injection'),0.96392,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-006/,"A command injection as a result of arbitrary file creation vulnerability in the GlobalProtect feature of Palo Alto Networks PAN-OS software for specific PAN-OS versions and distinct feature configurations may enable an unauthenticated attacker to execute arbitrary code with root privileges on the firewall.

Cloud NGFW, Panorama appliances, and Prisma Access are not impacted by this vulnerability.",Palo Alto Networks,PAN-OS,"9.0.0, 9.1.0, 10.0.0, 10.1.0, 10.2.0, 11.0.0, 11.1.0"
1701,[MàJ] Vulnérabilité dans Microsoft Outlook ,Alerte,2024-02-15,CVE-2024-21413,9.8,Critique,CWE-20: Improper Input Validation,0.00063,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-005/,Microsoft Outlook Remote Code Execution Vulnerability,Microsoft,Microsoft Office 2019,19.0.0
1700,[MàJ] Vulnérabilité dans Fortinet FortiOS ,Alerte,2024-02-09,CVE-2024-21762,9.6,Critique,Execute unauthorized code or commands,0.02071,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-004/,"A out-of-bounds write in Fortinet FortiOS versions 7.4.0 through 7.4.2, 7.2.0 through 7.2.6, 7.0.0 through 7.0.13, 6.4.0 through 6.4.14, 6.2.0 through 6.2.15, 6.0.0 through 6.0.17, FortiProxy versions 7.4.0 through 7.4.2, 7.2.0 through 7.2.8, 7.0.0 through 7.0.14, 2.0.0 through 2.0.13, 1.2.0 through 1.2.13, 1.1.0 through 1.1.6, 1.0.0 through 1.0.7 allows attacker to execute unauthorized code or commands via specifically crafted requests",Fortinet,FortiProxy,"7.4.0, 7.2.0, 7.0.0, 2.0.0, 1.2.0, 1.1.0, 1.0.0"
1699,[MàJ] Multiples Vulnérabilités dans GitLab ,Alerte,2024-01-12,CVE-2023-7028,10,Critique,CWE-640: Weak Password Recovery Mechanism for Forgotten Password,0.93357,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-002/,"An issue has been discovered in GitLab CE/EE affecting all versions from 16.1 prior to 16.1.6, 16.2 prior to 16.2.9, 16.3 prior to 16.3.7, 16.4 prior to 16.4.5, 16.5 prior to 16.5.6, 16.6 prior to 16.6.4, and 16.7 prior to 16.7.2 in which user account password reset emails could be delivered to an unverified email address.",GitLab,GitLab,"16.1, 16.2, 16.3, 16.4, 16.5, 16.6, 16.7"
1698,[MàJ] Multiples Vulnérabilités dans GitLab ,Alerte,2024-01-12,CVE-2024-0402,9.9,Critique,CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),0.00082,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-002/,"An issue has been discovered in GitLab CE/EE affecting all versions from 16.0 prior to 16.6.6, 16.7 prior to 16.7.4, and 16.8 prior to 16.8.1 which allows an authenticated user to write files to arbitrary locations on the GitLab server while creating a workspace.",GitLab,GitLab,"16.0, 16.6, 16.7, 16.8"
1693,[MàJ] Multiples vulnérabilités dans Ivanti Connect Secure et Policy Secure Gateways ,Alerte,2024-01-11,CVE-2023-46805,n/a,n/a,n/a,0.96665,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-001/,"An authentication bypass vulnerability in the web component of Ivanti ICS 9.x, 22.x and Ivanti Policy Secure allows a remote attacker to access restricted resources by bypassing control checks.",Ivanti,ICS,"9.1R18, 22.6R2"
1694,[MàJ] Multiples vulnérabilités dans Ivanti Connect Secure et Policy Secure Gateways ,Alerte,2024-01-11,CVE-2024-21887,n/a,n/a,n/a,0.97258,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-001/,"A command injection vulnerability in web components of Ivanti Connect Secure (9.x, 22.x) and Ivanti Policy Secure (9.x, 22.x)  allows an authenticated administrator to send specially crafted requests and execute arbitrary commands on the appliance.",Ivanti,ICS,"9.1R18, 22.6R2"
1695,[MàJ] Multiples vulnérabilités dans Ivanti Connect Secure et Policy Secure Gateways ,Alerte,2024-01-11,CVE-2024-21893,n/a,n/a,n/a,0.95981,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-001/,"A server-side request forgery vulnerability in the SAML component of Ivanti Connect Secure (9.x, 22.x) and Ivanti Policy Secure (9.x, 22.x) and Ivanti Neurons for ZTA allows an attacker to access certain restricted resources without authentication.",Ivanti,ICS,"9.1R18, 22.6R2"
1696,[MàJ] Multiples vulnérabilités dans Ivanti Connect Secure et Policy Secure Gateways ,Alerte,2024-01-11,CVE-2024-21888,n/a,n/a,n/a,0.00058,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-001/,"A privilege escalation vulnerability in web component of Ivanti Connect Secure (9.x, 22.x) and Ivanti Policy Secure (9.x, 22.x) allows a user to elevate privileges to that of an administrator. ",Ivanti,ICS,"9.1R18, 22.6R2"
1697,[MàJ] Multiples vulnérabilités dans Ivanti Connect Secure et Policy Secure Gateways ,Alerte,2024-01-11,CVE-2024-22024,n/a,n/a,n/a,0.01484,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2024-ALE-001/,"An XML external entity or XXE vulnerability in the SAML component of Ivanti Connect Secure (9.x, 22.x), Ivanti Policy Secure (9.x, 22.x) and ZTA gateways which allows an attacker to access certain restricted resources without authentication.",Ivanti,ICS,"9.1R14.5, 9.1R17.3, 9.1R18.4, 22.1R6.1, 9.1R14.4, 9.1R15.2, 9.1R16.2, 9.1R17.2, 9.1R18.3, 22.1R6.1, 22.2R4.1, 22.3R1.1, 22.4R1.1, 22.5R1.2, 22.6R1.1, 22.4R2.3, 22.5R2.3, 22.6R2.2, 22.2R4.1, 22.3R1, 22.4R1.1, 22.5R1.1, 22.6R1.1, 22.4R2.2, 22.5R2.2, 22.6R2.2"
1692,Vulnérabilité dans Apache Struts 2 ,Alerte,2023-12-13,CVE-2023-50164,n/a,n/a,CWE-552 Files or Directories Accessible to External Parties,0.51452,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-013/,"An attacker can manipulate file upload params to enable paths traversal and under some circumstances this can lead to uploading a malicious file which can be used to perform Remote Code Execution.
Users are recommended to upgrade to versions Struts 2.5.33 or Struts 6.3.0.2 or greater to fix this issue.
",Apache Software Foundation,Apache Struts,"2.0.0, 6.0.0"
1691,[MàJ] Vulnérabilité dans Citrix NetScaler ADC et NetScaler Gateway ,Alerte,2023-10-23,CVE-2023-4966,9.4,Critique,CWE-119 Improper Restriction of Operations within the Bounds of a Memory Buffer,0.9529,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-012/,"Sensitive information disclosure in NetScaler ADC and NetScaler Gateway when configured as a Gateway (VPN virtual server, ICA Proxy, CVPN, RDP Proxy) or AAA  virtual server. 



",Citrix,NetScaler ADC ,"14.1, 13.1, 13.0, 13.1-FIPS, 12.1-FIPS, 12.1-NDcPP"
1689,[MàJ] Multiples vulnérabilités dans Cisco IOS XE ,Alerte,2023-10-17,CVE-2023-20198,10,Critique,Unprotected Alternate Channel,0.88344,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-011/,"Cisco is providing an update for the ongoing investigation into observed exploitation of the web UI feature in Cisco IOS XE Software. We are updating the list of fixed releases and adding the Software Checker. Our investigation has determined that the actors exploited two previously unknown issues. The attacker first exploited CVE-2023-20198 to gain initial access and issued a privilege 15 command to create a local user and password combination. This allowed the user to log in with normal user access. The attacker then exploited another component of the web UI feature, leveraging the new local user to elevate privilege to root and write the implant to the file system. Cisco has assigned CVE-2023-20273 to this issue. CVE-2023-20198 has been assigned a CVSS Score of 10.0. CVE-2023-20273 has been assigned a CVSS Score of 7.2. Both of these CVEs are being tracked by CSCwh87343.",Cisco,Cisco IOS XE Software,"16.1.1, 16.1.2, 16.1.3, 16.2.1, 16.2.2, 16.3.1, 16.3.2, 16.3.3, 16.3.1a, 16.3.4, 16.3.5, 16.3.5b, 16.3.6, 16.3.7, 16.3.8, 16.3.9, 16.3.10, 16.3.11, 16.4.1, 16.4.2, 16.4.3, 16.5.1, 16.5.1a, 16.5.1b, 16.5.2, 16.5.3, 16.6.1, 16.6.2, 16.6.3, 16.6.4, 16.6.5, 16.6.4a, 16.6.5a, 16.6.6, 16.6.7, 16.6.8, 16.6.9, 16.6.10, 16.7.1, 16.7.1a, 16.7.1b, 16.7.2, 16.7.3, 16.7.4, 16.8.1, 16.8.1a, 16.8.1b, 16.8.1s, 16.8.1c, 16.8.1d, 16.8.2, 16.8.1e, 16.8.3, 16.9.1, 16.9.2, 16.9.1a, 16.9.1b, 16.9.1s, 16.9.3, 16.9.4, 16.9.3a, 16.9.5, 16.9.5f, 16.9.6, 16.9.7, 16.9.8, 16.10.1, 16.10.1a, 16.10.1b, 16.10.1s, 16.10.1c, 16.10.1e, 16.10.1d, 16.10.2, 16.10.1f, 16.10.1g, 16.10.3, 16.11.1, 16.11.1a, 16.11.1b, 16.11.2, 16.11.1s, 16.12.1, 16.12.1s, 16.12.1a, 16.12.1c, 16.12.1w, 16.12.2, 16.12.1y, 16.12.2a, 16.12.3, 16.12.8, 16.12.2s, 16.12.1x, 16.12.1t, 16.12.4, 16.12.3s, 16.12.3a, 16.12.4a, 16.12.5, 16.12.6, 16.12.1z1, 16.12.5a, 16.12.5b, 16.12.1z2, 16.12.6a, 16.12.7, 16.12.9, 16.12.10, 17.1.1, 17.1.1a, 17.1.1s, 17.1.1t, 17.1.3, 17.2.1, 17.2.1r, 17.2.1a, 17.2.1v, 17.2.2, 17.2.3, 17.3.1, 17.3.2, 17.3.3, 17.3.1a, 17.3.1w, 17.3.2a, 17.3.1x, 17.3.1z, 17.3.4, 17.3.5, 17.3.4a, 17.3.6, 17.3.4b, 17.3.4c, 17.3.5a, 17.3.5b, 17.3.7, 17.3.8, 17.4.1, 17.4.2, 17.4.1a, 17.4.1b, 17.4.2a, 17.5.1, 17.5.1a, 17.5.1b, 17.5.1c, 17.6.1, 17.6.2, 17.6.1w, 17.6.1a, 17.6.1x, 17.6.3, 17.6.1y, 17.6.1z, 17.6.3a, 17.6.4, 17.6.1z1, 17.6.5, 17.6.6, 17.7.1, 17.7.1a, 17.7.1b, 17.7.2, 17.10.1, 17.10.1a, 17.10.1b, 17.8.1, 17.8.1a, 17.9.1, 17.9.1w, 17.9.2, 17.9.1a, 17.9.1x, 17.9.1y, 17.9.3, 17.9.2a, 17.9.1x1, 17.9.3a, 17.9.4, 17.9.1y1, 17.11.1, 17.11.1a, 17.12.1, 17.12.1a, 17.11.99SW"
1690,[MàJ] Multiples vulnérabilités dans Cisco IOS XE ,Alerte,2023-10-17,CVE-2023-20273,7.2,Élevée,Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),0.05724,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-011/,"A vulnerability in the web UI feature of Cisco IOS XE Software could allow an authenticated, remote attacker to inject commands with the privileges of root. This vulnerability is due to insufficient input validation. An attacker could exploit this vulnerability by sending crafted input to the web UI. A successful exploit could allow the attacker to inject commands to the underlying operating system with root privileges.",Cisco,Cisco IOS XE Software,"16.1.1, 16.1.2, 16.1.3, 16.2.1, 16.2.2, 16.3.1, 16.3.2, 16.3.3, 16.3.1a, 16.3.4, 16.3.5, 16.3.5b, 16.3.6, 16.3.7, 16.3.8, 16.3.9, 16.3.10, 16.3.11, 16.4.1, 16.4.2, 16.4.3, 16.5.1, 16.5.1a, 16.5.1b, 16.5.2, 16.5.3, 16.6.1, 16.6.2, 16.6.3, 16.6.4, 16.6.5, 16.6.4a, 16.6.5a, 16.6.6, 16.6.7, 16.6.8, 16.6.9, 16.6.10, 16.7.1, 16.7.1a, 16.7.1b, 16.7.2, 16.7.3, 16.7.4, 16.8.1, 16.8.1a, 16.8.1b, 16.8.1s, 16.8.1c, 16.8.1d, 16.8.2, 16.8.1e, 16.8.3, 16.9.1, 16.9.2, 16.9.1a, 16.9.1b, 16.9.1s, 16.9.3, 16.9.4, 16.9.3a, 16.9.5, 16.9.5f, 16.9.6, 16.9.7, 16.9.8, 16.10.1, 16.10.1a, 16.10.1b, 16.10.1s, 16.10.1c, 16.10.1e, 16.10.1d, 16.10.2, 16.10.1f, 16.10.1g, 16.10.3, 16.11.1, 16.11.1a, 16.11.1b, 16.11.2, 16.11.1s, 16.12.1, 16.12.1s, 16.12.1a, 16.12.1c, 16.12.1w, 16.12.2, 16.12.1y, 16.12.2a, 16.12.3, 16.12.8, 16.12.2s, 16.12.1x, 16.12.1t, 16.12.4, 16.12.3s, 16.12.3a, 16.12.4a, 16.12.5, 16.12.6, 16.12.1z1, 16.12.5a, 16.12.5b, 16.12.1z2, 16.12.6a, 16.12.7, 16.12.9, 16.12.10, 17.1.1, 17.1.1a, 17.1.1s, 17.1.1t, 17.1.3, 17.2.1, 17.2.1r, 17.2.1a, 17.2.1v, 17.2.2, 17.2.3, 17.3.1, 17.3.2, 17.3.3, 17.3.1a, 17.3.1w, 17.3.2a, 17.3.1x, 17.3.1z, 17.3.4, 17.3.5, 17.3.4a, 17.3.6, 17.3.4b, 17.3.4c, 17.3.5a, 17.3.5b, 17.3.7, 17.3.8, 17.4.1, 17.4.2, 17.4.1a, 17.4.1b, 17.4.2a, 17.5.1, 17.5.1a, 17.5.1b, 17.5.1c, 17.6.1, 17.6.2, 17.6.1w, 17.6.1a, 17.6.1x, 17.6.3, 17.6.1y, 17.6.1z, 17.6.3a, 17.6.4, 17.6.1z1, 17.6.5, 17.6.6, 17.7.1, 17.7.1a, 17.7.1b, 17.7.2, 17.10.1, 17.10.1a, 17.10.1b, 17.8.1, 17.8.1a, 17.9.1, 17.9.1w, 17.9.2, 17.9.1a, 17.9.1x, 17.9.1y, 17.9.3, 17.9.2a, 17.9.1x1, 17.9.3a, 17.9.4, 17.9.1y1, 17.11.1, 17.11.1a, 17.12.1, 17.12.1a, 17.11.99SW"
1683,Multiples vulnérabilités dans Exim ,Alerte,2023-10-02,CVE-2023-42118,n/a,n/a,CWE-191: Integer Underflow (Wrap or Wraparound),0.00065,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-010/,"Exim libspf2 Integer Underflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of Exim libspf2. Authentication is not required to exploit this vulnerability. 

The specific flaw exists within the parsing of SPF macros. When parsing SPF macros, the process does not properly validate user-supplied data, which can result in an integer underflow before writing to memory. An attacker can leverage this vulnerability to execute code in the context of the service account.
. Was ZDI-CAN-17578.",Exim,libspf2,exim 4.96-RC0-14-24b8ed847-XX
1684,Multiples vulnérabilités dans Exim ,Alerte,2023-10-02,CVE-2023-42116,n/a,n/a,CWE-121: Stack-based Buffer Overflow,0.00065,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-010/,"Exim SMTP Challenge Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Exim. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the handling of NTLM challenge requests. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of the service account.
. Was ZDI-CAN-17515.",Exim,Exim,exim 4.95
1685,Multiples vulnérabilités dans Exim ,Alerte,2023-10-02,CVE-2023-42115,n/a,n/a,CWE-787: Out-of-bounds Write,0.00075,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-010/,"Exim AUTH Out-Of-Bounds Write Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Exim. Authentication is not required to exploit this vulnerability. 

The specific flaw exists within the smtp service, which listens on TCP port 25 by default. The issue results from the lack of proper validation of user-supplied data, which can result in a write past the end of a buffer. An attacker can leverage this vulnerability to execute code in the context of the service account.
. Was ZDI-CAN-17434.",Exim,Exim,exim 4.95
1686,Multiples vulnérabilités dans Exim ,Alerte,2023-10-02,CVE-2023-42117,n/a,n/a,CWE-138: Improper Neutralization of Special Elements,0.00065,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-010/,"Exim Improper Neutralization of Special Elements Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of Exim. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the smtp service, which listens on TCP port 25 by default. The issue results from the lack of proper validation of user-supplied data, which can result in a memory corruption condition. An attacker can leverage this vulnerability to execute code in the context of the current process. Was ZDI-CAN-17554.",Exim,Exim,4.96-RC1-11-315206fbf
1687,Multiples vulnérabilités dans Exim ,Alerte,2023-10-02,CVE-2023-42119,n/a,n/a,CWE-125: Out-of-bounds Read,0.00065,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-010/,"Exim dnsdb Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows network-adjacent attackers to disclose sensitive information on affected installations of Exim. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the smtp service, which listens on TCP port 25 by default. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated buffer. An attacker can leverage this in conjunction with other vulnerabilities to execute arbitrary code in the context of the service account.
. Was ZDI-CAN-17643.",Exim,Exim,exim 4.96-RC0-14-24b8ed847-XX
1688,Multiples vulnérabilités dans Exim ,Alerte,2023-10-02,CVE-2023-42114,n/a,n/a,CWE-125: Out-of-bounds Read,0.00065,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-010/,"Exim NTLM Challenge Out-Of-Bounds Read Information Disclosure Vulnerability. This vulnerability allows remote attackers to disclose sensitive information on affected installations of Exim. Authentication is not required to exploit this vulnerability.

The specific flaw exists within the handling of NTLM challenge requests. The issue results from the lack of proper validation of user-supplied data, which can result in a read past the end of an allocated data structure. An attacker can leverage this vulnerability to disclose information in the context of the service account.
. Was ZDI-CAN-17433.",Exim,Exim,exim 4.95
1682,[MàJ] Multiples vulnérabilités dans Ivanti Endpoint Manager Mobile ,Alerte,2023-07-26,CVE-2023-35078,n/a,n/a,n/a,0.96934,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-009/,An authentication bypass vulnerability in Ivanti EPMM allows unauthorized users to access restricted functionality or resources of the application without proper authentication.,Ivanti,Endpoint Manager Mobile,"11.10, 11.9, 11.8"
1681,[MàJ] Multiples vulnérabilités dans Ivanti Endpoint Manager Mobile ,Alerte,2023-07-26,CVE-2023-35082,n/a,n/a,n/a,0.96039,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-009/,"An authentication bypass vulnerability in Ivanti EPMM 11.10 and older, allows unauthorized users to access restricted functionality or resources of the application without proper authentication. This vulnerability is unique to CVE-2023-35078 announced earlier.",Ivanti,EPMM,11.10
1680,[MàJ] Multiples vulnérabilités dans Ivanti Endpoint Manager Mobile ,Alerte,2023-07-26,CVE-2023-35081,n/a,n/a,n/a,0.77298,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-009/,"A path traversal vulnerability in Ivanti EPMM versions (11.10.x < 11.10.0.3,  11.9.x < 11.9.1.2 and 11.8.x < 11.8.1.2) allows an authenticated administrator to write arbitrary files onto the appliance.",Ivanti,EPMM,11.10.0.3
1679,[MàJ] Vulnérabilité dans Citrix NetScaler ADC et NetScaler Gateway ,Alerte,2023-07-19,CVE-2023-3519,9.8,Critique,CWE-94 Improper Control of Generation of Code ('Code Injection'),0.964,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-008/,"Unauthenticated remote code execution
",Citrix,NetScaler ADC ,"13.1, 13.0, 13.1-FIPS, 12.1-FIPS, 12.1-NDcPP"
1678,[MàJ] Vulnérabilité dans Zimbra Collaboration Suite ,Alerte,2023-07-17,CVE-2023-37580,n/a,n/a,n/a,0.3451,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-007/,Zimbra Collaboration (ZCS) 8 before 8.8.15 Patch 41 allows XSS in the Zimbra Classic Web Client.,n/a,n/a,n/a
1677,Vulnérabilité dans les produits Microsoft ,Alerte,2023-07-12,CVE-2023-36884,7.5,Élevée,CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),0.17844,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-006/,Windows Search Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1676,Synthèse sur l'exploitation d'une vulnérabilité dans MOVEit Transfer ,Alerte,2023-07-05,CVE-2023-35708,n/a,n/a,n/a,0.00476,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-005/,"In Progress MOVEit Transfer before 2021.0.8 (13.0.8), 2021.1.6 (13.1.6), 2022.0.6 (14.0.6), 2022.1.7 (14.1.7), and 2023.0.3 (15.0.3), a SQL injection vulnerability has been identified in the MOVEit Transfer web application that could allow an unauthenticated attacker to gain unauthorized access to MOVEit Transfer's database. An attacker could submit a crafted payload to a MOVEit Transfer application endpoint that could result in modification and disclosure of MOVEit database content. These are fixed versions of the DLL drop-in: 2020.1.10 (12.1.10), 2021.0.8 (13.0.8), 2021.1.6 (13.1.6), 2022.0.6 (14.0.6), 2022.1.7 (14.1.7), and 2023.0.3 (15.0.3).",n/a,n/a,n/a
1675,Synthèse sur l'exploitation d'une vulnérabilité dans MOVEit Transfer ,Alerte,2023-07-05,CVE-2023-35036,n/a,n/a,n/a,0.00189,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-005/,"In Progress MOVEit Transfer before 2021.0.7 (13.0.7), 2021.1.5 (13.1.5), 2022.0.5 (14.0.5), 2022.1.6 (14.1.6), and 2023.0.2 (15.0.2), SQL injection vulnerabilities have been found in the MOVEit Transfer web application that could allow an unauthenticated attacker to gain unauthorized access to MOVEit Transfer's database. An attacker could submit a crafted payload to a MOVEit Transfer application endpoint that could result in modification and disclosure of MOVEit database content.",n/a,n/a,n/a
1674,Synthèse sur l'exploitation d'une vulnérabilité dans MOVEit Transfer ,Alerte,2023-07-05,CVE-2023-34362,n/a,n/a,n/a,0.97131,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-005/,"In Progress MOVEit Transfer before 2021.0.6 (13.0.6), 2021.1.4 (13.1.4), 2022.0.4 (14.0.4), 2022.1.5 (14.1.5), and 2023.0.1 (15.0.1), a SQL injection vulnerability has been found in the MOVEit Transfer web application that could allow an unauthenticated attacker to gain access to MOVEit Transfer's database. Depending on the database engine being used (MySQL, Microsoft SQL Server, or Azure SQL), an attacker may be able to infer information about the structure and contents of the database, and execute SQL statements that alter or delete database elements. NOTE: this is exploited in the wild in May and June 2023; exploitation of unpatched systems can occur via HTTP or HTTPS. All versions (e.g., 2020.0 and 2019x) before the five explicitly mentioned versions are affected, including older unsupported versions.",n/a,n/a,n/a
1673,Vulnérabilité dans les produits Fortinet ,Alerte,2023-06-13,CVE-2023-27997,9.2,Critique,Execute unauthorized code or commands,0.08388,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-004/,"A heap-based buffer overflow vulnerability [CWE-122] in FortiOS version 7.2.4 and below, version 7.0.11 and below, version 6.4.12 and below, version 6.0.16 and below and FortiProxy version 7.2.3 and below, version 7.0.9 and below, version 2.0.12 and below, version 1.2 all versions, version 1.1 all versions SSL-VPN may allow a remote attacker to execute arbitrary code or commands via specifically crafted requests.",Fortinet,FortiOS-6K7K,"7.0.10, 7.0.5, 6.4.12, 6.4.10, 6.4.8, 6.4.6, 6.4.2, 6.2.9, 6.2.6, 6.2.4, 6.0.12, 6.0.10"
1672,[MàJ] Vulnérabilité dans Microsoft Outlook ,Alerte,2023-03-15,CVE-2023-29324,6.5,n/a,CWE-73: External Control of File Name or Path,0.11624,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-002/,Windows MSHTML Platform Security Feature Bypass Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1671,[MàJ] Vulnérabilité dans Microsoft Outlook ,Alerte,2023-03-15,CVE-2023-23397,9.8,Critique,CWE-20: Improper Input Validation,0.8836,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-002/,Microsoft Outlook Elevation of Privilege Vulnerability,Microsoft,Microsoft Office LTSC 2021,16.0.1
1670,Vulnérabilité dans Fortinet FortiOS ,Alerte,2023-03-14,CVE-2022-41328,6.5,n/a,Execute unauthorized code or commands,0.08104,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-001/,"A improper limitation of a pathname to a restricted directory vulnerability ('path traversal') [CWE-22] in Fortinet FortiOS version 7.2.0 through 7.2.3, 7.0.0 through 7.0.9 and before 6.4.11 allows a privileged attacker to read and write files on the underlying Linux system via crafted CLI commands.",Fortinet,FortiOS,"7.2.0, 7.0.0, 6.4.0, 6.2.0, 6.0.0"
1669,[MàJ] Campagne d'exploitation d'une vulnérabilité affectant VMware ESXi ,Alerte,2023-02-03,CVE-2020-3992,n/a,n/a,Remote code execution vulnerability,0.40205,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-015/,"OpenSLP as used in VMware ESXi (7.0 before ESXi_7.0.1-0.0.16850804, 6.7 before ESXi670-202010401-SG, 6.5 before ESXi650-202010401-SG) has a use-after-free issue. A malicious actor residing in the management network who has access to port 427 on an ESXi machine may be able to trigger a use-after-free in the OpenSLP service resulting in remote code execution.",n/a,VMware ESXi,"VMware ESXi (7.0 before ESXi_7.0.1-0.0.16850804, 6.7 before ESXi670-202010401-SG, 6.5 before ESXi650-202010401-SG)"
1668,[MàJ] Campagne d'exploitation d'une vulnérabilité affectant VMware ESXi ,Alerte,2023-02-03,CVE-2021-21974,n/a,n/a,OpenSLP heap-overflow vulnerability,0.90461,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2023-ALE-015/,"OpenSLP as used in ESXi (7.0 before ESXi70U1c-17325551, 6.7 before ESXi670-202102401-SG, 6.5 before ESXi650-202102101-SG) has a heap-overflow vulnerability. A malicious actor residing within the same network segment as ESXi who has access to port 427 may be able to trigger the heap-overflow issue in OpenSLP service resulting in remote code execution.",n/a,VMware ESXi,"7.0 before ESXi70U1c-17325551, 6.7 before ESXi670-202102401-SG, 6.5 before ESXi650-202102101-SG"
1665,Multiples vulnérabilités dans AMI MegaRAC ,Alerte,2022-12-16,CVE-2022-40242,7.5,Élevée,CWE-798 Use of Hard-coded Credentials,0.00201,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-014/,MegaRAC Default Credentials Vulnerability,AMI,MegaRAC SPx12,0
1666,Multiples vulnérabilités dans AMI MegaRAC ,Alerte,2022-12-16,CVE-2022-40259,8.3,n/a,CWE-798 Use of Hard-coded Credentials,0.00261,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-014/,MegaRAC Default Credentials Vulnerability,AMI,MegaRAC SPx12,0
1667,Multiples vulnérabilités dans AMI MegaRAC ,Alerte,2022-12-16,CVE-2022-2827,7.5,Élevée,CWE-200 Exposure of Sensitive Information to an Unauthorized Actor,0.0015,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-014/,AMI MegaRAC User Enumeration Vulnerability,AMI,MegaRAC SPx12,0
1664,[MàJ] Vulnérabilité dans Citrix ADC et Gateway ,Alerte,2022-12-13,CVE-2022-27518,9.8,Critique,CWE-664: Improper Control of a Resource Through its Lifetime ,0.19032,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-013/,"Unauthenticated remote arbitrary code execution
",Citrix,"Citrix Gateway, Citrix ADC ","12.1, 13.0, 12.1 FIPs, NDcPP"
1663,[MàJ] Vulnérabilité dans FortiOS SSL-VPN ,Alerte,2022-12-13,CVE-2022-42475,9.3,Critique,Execute unauthorized code or commands,0.25733,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-012/,"A heap-based buffer overflow vulnerability [CWE-122] in FortiOS SSL-VPN 7.2.0 through 7.2.2, 7.0.0 through 7.0.8, 6.4.0 through 6.4.10, 6.2.0 through 6.2.11, 6.0.15 and earlier  and FortiProxy SSL-VPN 7.2.0 through 7.2.1, 7.0.7 and earlier may allow a remote unauthenticated attacker to execute arbitrary code or commands via specifically crafted requests.",Fortinet,FortiProxy,"7.2.0, 7.0.0, 2.0.0, 1.2.0, 1.1.0, 1.0.0"
1662,Vulnérabilité dans les produits Fortinet ,Alerte,2022-10-14,CVE-2022-40684,9.8,Critique,Execute unauthorized code or commands,0.9728,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-011/,"An authentication bypass using an alternate path or channel [CWE-288] in Fortinet FortiOS version 7.2.0 through 7.2.1 and 7.0.0 through 7.0.6, FortiProxy version 7.2.0 and version 7.0.0 through 7.0.6 and FortiSwitchManager version 7.2.0 and 7.0.0 allows an unauthenticated atttacker to perform operations on the administrative interface via specially crafted HTTP or HTTPS requests.",Fortinet,"Fortinet FortiOS, FortiProxy, FortiSwitchManager","FortiOS 7.2.1, 7.2.0, 7.0.6, 7.0.5, 7.0.4, 7.0.3, 7.0.2, 7.0.1, 7.0.0; FortiProxy 7.2.0, 7.0.6, 7.0.5, 7.0.4, 7.0.3, 7.0.2, 7.0.1, 7.0.0; FortiSwitchManager 7.2.0, 7.0.0"
1661,Multiples vulnérabilités dans GLPI ,Alerte,2022-10-07,CVE-2022-35914,n/a,n/a,n/a,0.97512,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-010/,/vendor/htmlawed/htmlawed/htmLawedTest.php in the htmlawed module for GLPI through 10.0.2 allows PHP code injection.,n/a,n/a,n/a
1660,Multiples vulnérabilités dans GLPI ,Alerte,2022-10-07,CVE-2022-35947,10,Critique,CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),0.0018,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-010/,"GLPI stands for Gestionnaire Libre de Parc Informatique and is a Free Asset and IT Management Software package, that provides ITIL Service Desk features, licenses tracking and software auditing. Affected versions have been found to be vulnerable to a SQL injection attack which an attacker could leverage to simulate an arbitrary user login. Users are advised to upgrade to version 10.0.3. Users unable to upgrade should disable the `Enable login with external token` API configuration.",glpi-project,glpi,">= 9.1, < 10.0.3"
1659,[MaJ] Vulnérabilité dans Zimbra Collaboration ,Alerte,2022-10-07,CVE-2022-41352,n/a,n/a,n/a,0.91028,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-009/,"An issue was discovered in Zimbra Collaboration (ZCS) 8.8.15 and 9.0. An attacker can upload arbitrary files through amavis via a cpio loophole (extraction to /opt/zimbra/jetty/webapps/zimbra/public) that can lead to incorrect access to any other user accounts. Zimbra recommends pax over cpio. Also, pax is in the prerequisites of Zimbra on Ubuntu; however, pax is no longer part of a default Red Hat installation after RHEL 6 (or CentOS 6). Once pax is installed, amavis automatically prefers it over cpio.",n/a,n/a,n/a
1658,[MaJ] Vulnérabilité dans Zimbra Collaboration ,Alerte,2022-10-07,CVE-2022-37393,n/a,n/a,CWE-284 Improper Access Control,0.00203,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-009/,"Zimbra's sudo configuration permits the zimbra user to execute the zmslapd binary as root with arbitrary parameters. As part of its intended functionality, zmslapd can load a user-defined configuration file, which includes plugins in the form of .so files, which also execute as root.",Synacor,Zimbra Server,"9.0.0.p27, 8.8.15.p34"
1657,[MaJ] Multiples vulnérabilités dans Microsoft Exchange ,Alerte,2022-09-30,CVE-2022-41082,8,Élevée,Remote Code Execution,0.06687,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-008/,Microsoft Exchange Server Remote Code Execution Vulnerability,Microsoft,Microsoft Exchange Server 2013 Cumulative Update 23,15.00.0
1656,[MaJ] Multiples vulnérabilités dans Microsoft Exchange ,Alerte,2022-09-30,CVE-2022-41040,8.8,n/a,Elevation of Privilege,0.00378,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-008/,Microsoft Exchange Server Elevation of Privilege Vulnerability,Microsoft,Microsoft Exchange Server 2013 Cumulative Update 23,15.00.0
1655,Multiples vulnérabilités dans Microsoft Windows ,Alerte,2022-09-16,CVE-2022-34722,9.8,Critique,Remote Code Execution,0.00596,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-007/,Windows Internet Key Exchange (IKE) Protocol Extensions Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1654,Multiples vulnérabilités dans Microsoft Windows ,Alerte,2022-09-16,CVE-2022-34721,9.8,Critique,Remote Code Execution,0.00596,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-007/,Windows Internet Key Exchange (IKE) Protocol Extensions Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1653,Multiples vulnérabilités dans Microsoft Windows ,Alerte,2022-09-16,CVE-2022-34718,9.8,Critique,Remote Code Execution,0.00753,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-007/,Windows TCP/IP Remote Code Execution Vulnerability,Microsoft,Windows 10 Version 1809,10.0.17763.0
1652,[MàJ] Vulnérabilité dans Atlassian Confluence ,Alerte,2022-06-03,CVE-2022-26134,n/a,n/a,Remote Code Execution,0.9738,https://www.cert.ssi.gouv.fr/alerte/CERTFR-2022-ALE-006/,"In affected versions of Confluence Server and Data Center, an OGNL injection vulnerability exists that would allow an unauthenticated attacker to execute arbitrary code on a Confluence Server or Data Center instance. The affected versions are from 1.3.0 before 7.4.17, from 7.13.0 before 7.13.7, from 7.14.0 before 7.14.3, from 7.15.0 before 7.15.2, from 7.16.0 before 7.16.4, from 7.17.0 before 7.17.4, and from 7.18.0 before 7.18.1.",Atlassian,Confluence Data Center,"next of 1.3.0, unspecified, 7.13.0, unspecified, 7.14.0, unspecified, 7.15.0, unspecified, 7.16.0, unspecified, 7.17.0, unspecified, 7.18.0, unspecified"
